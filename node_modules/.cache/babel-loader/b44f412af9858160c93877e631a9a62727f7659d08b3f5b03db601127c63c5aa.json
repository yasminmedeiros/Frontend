{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar ContourCarpet = {};\nContourCarpet.attributes = require('./attributes');\nContourCarpet.supplyDefaults = require('./defaults');\nContourCarpet.colorbar = require('../contour/colorbar');\nContourCarpet.calc = require('./calc');\nContourCarpet.plot = require('./plot');\nContourCarpet.style = require('../contour/style');\nContourCarpet.moduleType = 'trace';\nContourCarpet.name = 'contourcarpet';\nContourCarpet.basePlotModule = require('../../plots/cartesian');\nContourCarpet.categories = ['cartesian', 'svg', 'carpet', 'contour', 'symbols', 'showLegend', 'hasLines', 'carpetDependent'];\nContourCarpet.meta = {\n  hrName: 'contour_carpet',\n  description: ['Plots contours on either the first carpet axis or the', 'carpet axis with a matching `carpet` attribute. Data `z`', 'is interpreted as matching that of the corresponding carpet', 'axis.'].join(' ')\n};\nmodule.exports = ContourCarpet;","map":{"version":3,"names":["ContourCarpet","attributes","require","supplyDefaults","colorbar","calc","plot","style","moduleType","name","basePlotModule","categories","meta","hrName","description","join","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/contourcarpet/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar ContourCarpet = {};\n\nContourCarpet.attributes = require('./attributes');\nContourCarpet.supplyDefaults = require('./defaults');\nContourCarpet.colorbar = require('../contour/colorbar');\nContourCarpet.calc = require('./calc');\nContourCarpet.plot = require('./plot');\nContourCarpet.style = require('../contour/style');\n\nContourCarpet.moduleType = 'trace';\nContourCarpet.name = 'contourcarpet';\nContourCarpet.basePlotModule = require('../../plots/cartesian');\nContourCarpet.categories = ['cartesian', 'svg', 'carpet', 'contour', 'symbols', 'showLegend', 'hasLines', 'carpetDependent'];\nContourCarpet.meta = {\n    hrName: 'contour_carpet',\n    description: [\n        'Plots contours on either the first carpet axis or the',\n        'carpet axis with a matching `carpet` attribute. Data `z`',\n        'is interpreted as matching that of the corresponding carpet',\n        'axis.'\n    ].join(' ')\n};\n\nmodule.exports = ContourCarpet;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,aAAa,GAAG,CAAC,CAAC;AAEtBA,aAAa,CAACC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAClDF,aAAa,CAACG,cAAc,GAAGD,OAAO,CAAC,YAAY,CAAC;AACpDF,aAAa,CAACI,QAAQ,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACvDF,aAAa,CAACK,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AACtCF,aAAa,CAACM,IAAI,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AACtCF,aAAa,CAACO,KAAK,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAEjDF,aAAa,CAACQ,UAAU,GAAG,OAAO;AAClCR,aAAa,CAACS,IAAI,GAAG,eAAe;AACpCT,aAAa,CAACU,cAAc,GAAGR,OAAO,CAAC,uBAAuB,CAAC;AAC/DF,aAAa,CAACW,UAAU,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,iBAAiB,CAAC;AAC5HX,aAAa,CAACY,IAAI,GAAG;EACjBC,MAAM,EAAE,gBAAgB;EACxBC,WAAW,EAAE,CACT,uDAAuD,EACvD,0DAA0D,EAC1D,6DAA6D,EAC7D,OAAO,CACV,CAACC,IAAI,CAAC,GAAG;AACd,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGjB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}
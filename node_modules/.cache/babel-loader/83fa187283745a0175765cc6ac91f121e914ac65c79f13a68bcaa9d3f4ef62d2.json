{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar carpetAttrs = require('./attributes');\nvar addOpacity = require('../../components/color').addOpacity;\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar handleTickValueDefaults = require('../../plots/cartesian/tick_value_defaults');\nvar handleTickLabelDefaults = require('../../plots/cartesian/tick_label_defaults');\nvar handleCategoryOrderDefaults = require('../../plots/cartesian/category_order_defaults');\nvar setConvert = require('../../plots/cartesian/set_convert');\nvar autoType = require('../../plots/cartesian/axis_autotype');\n\n/**\n * options: object containing:\n *\n *  letter: 'a' or 'b'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  name: axis object name (ie 'xaxis') if one should be stored\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  data: the plot data to use in choosing auto type\n *  bgColor: the plot background color, to calculate default gridline colors\n */\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, options) {\n  var letter = options.letter;\n  var font = options.font || {};\n  var attributes = carpetAttrs[letter + 'axis'];\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n  }\n  function coerce2(attr, dflt) {\n    return Lib.coerce2(containerIn, containerOut, attributes, attr, dflt);\n  }\n\n  // set up some private properties\n  if (options.name) {\n    containerOut._name = options.name;\n    containerOut._id = options.name;\n  }\n\n  // now figure out type and do some more initialization\n  var axType = coerce('type');\n  if (axType === '-') {\n    if (options.data) setAutoType(containerOut, options.data);\n    if (containerOut.type === '-') {\n      containerOut.type = 'linear';\n    } else {\n      // copy autoType back to input axis\n      // note that if this object didn't exist\n      // in the input layout, we have to put it in\n      // this happens in the main supplyDefaults function\n      axType = containerIn.type = containerOut.type;\n    }\n  }\n  coerce('smoothing');\n  coerce('cheatertype');\n  coerce('showticklabels');\n  coerce('labelprefix', letter + ' = ');\n  coerce('labelsuffix');\n  coerce('showtickprefix');\n  coerce('showticksuffix');\n  coerce('separatethousands');\n  coerce('tickformat');\n  coerce('exponentformat');\n  coerce('showexponent');\n  coerce('categoryorder');\n  coerce('tickmode');\n  coerce('tickvals');\n  coerce('ticktext');\n  coerce('tick0');\n  coerce('dtick');\n  if (containerOut.tickmode === 'array') {\n    coerce('arraytick0');\n    coerce('arraydtick');\n  }\n  coerce('labelpadding');\n  containerOut._hovertitle = letter;\n  if (axType === 'date') {\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n    handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n  }\n\n  // we need some of the other functions setConvert attaches, but for\n  // path finding, override pixel scaling to simple passthrough (identity)\n  setConvert(containerOut, options.fullLayout);\n  containerOut.c2p = Lib.identity;\n  var dfltColor = coerce('color', options.dfltColor);\n  // if axis.color was provided, use it for fonts too; otherwise,\n  // inherit from global font color in case that was provided.\n  var dfltFontColor = dfltColor === containerIn.color ? dfltColor : font.color;\n  var title = coerce('title.text');\n  if (title) {\n    Lib.coerceFont(coerce, 'title.font', {\n      family: font.family,\n      size: Math.round(font.size * 1.2),\n      color: dfltFontColor\n    });\n    coerce('title.offset');\n  }\n  coerce('tickangle');\n  var autoRange = coerce('autorange', !containerOut.isValidRange(containerIn.range));\n  if (autoRange) coerce('rangemode');\n  coerce('range');\n  containerOut.cleanRange();\n  coerce('fixedrange');\n  handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n  handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options);\n  handleCategoryOrderDefaults(containerIn, containerOut, coerce, {\n    data: options.data,\n    dataAttr: letter\n  });\n  var gridColor = coerce2('gridcolor', addOpacity(dfltColor, 0.3));\n  var gridWidth = coerce2('gridwidth');\n  var showGrid = coerce('showgrid');\n  if (!showGrid) {\n    delete containerOut.gridcolor;\n    delete containerOut.gridwidth;\n  }\n  var startLineColor = coerce2('startlinecolor', dfltColor);\n  var startLineWidth = coerce2('startlinewidth', gridWidth);\n  var showStartLine = coerce('startline', containerOut.showgrid || !!startLineColor || !!startLineWidth);\n  if (!showStartLine) {\n    delete containerOut.startlinecolor;\n    delete containerOut.startlinewidth;\n  }\n  var endLineColor = coerce2('endlinecolor', dfltColor);\n  var endLineWidth = coerce2('endlinewidth', gridWidth);\n  var showEndLine = coerce('endline', containerOut.showgrid || !!endLineColor || !!endLineWidth);\n  if (!showEndLine) {\n    delete containerOut.endlinecolor;\n    delete containerOut.endlinewidth;\n  }\n  if (!showGrid) {\n    delete containerOut.gridcolor;\n    delete containerOut.gridWidth;\n  } else {\n    coerce('minorgridcount');\n    coerce('minorgridwidth', gridWidth);\n    coerce('minorgridcolor', addOpacity(gridColor, 0.06));\n    if (!containerOut.minorgridcount) {\n      delete containerOut.minorgridwidth;\n      delete containerOut.minorgridcolor;\n    }\n  }\n  if (containerOut.showticklabels === 'none') {\n    delete containerOut.tickfont;\n    delete containerOut.tickangle;\n    delete containerOut.showexponent;\n    delete containerOut.exponentformat;\n    delete containerOut.tickformat;\n    delete containerOut.showticksuffix;\n    delete containerOut.showtickprefix;\n  }\n  if (!containerOut.showticksuffix) {\n    delete containerOut.ticksuffix;\n  }\n  if (!containerOut.showtickprefix) {\n    delete containerOut.tickprefix;\n  }\n\n  // It needs to be coerced, then something above overrides this deep in the axis code,\n  // but no, we *actually* want to coerce this.\n  coerce('tickmode');\n  return containerOut;\n};\nfunction setAutoType(ax, data) {\n  // new logic: let people specify any type they want,\n  // only autotype if type is '-'\n  if (ax.type !== '-') return;\n  var id = ax._id;\n  var axLetter = id.charAt(0);\n  var calAttr = axLetter + 'calendar';\n  var calendar = ax[calAttr];\n  ax.type = autoType(data, calendar);\n}","map":{"version":3,"names":["carpetAttrs","require","addOpacity","Registry","Lib","handleTickValueDefaults","handleTickLabelDefaults","handleCategoryOrderDefaults","setConvert","autoType","module","exports","handleAxisDefaults","containerIn","containerOut","options","letter","font","attributes","coerce","attr","dflt","coerce2","name","_name","_id","axType","data","setAutoType","type","tickmode","_hovertitle","handleCalendarDefaults","getComponentMethod","calendar","fullLayout","c2p","identity","dfltColor","dfltFontColor","color","title","coerceFont","family","size","Math","round","autoRange","isValidRange","range","cleanRange","dataAttr","gridColor","gridWidth","showGrid","gridcolor","gridwidth","startLineColor","startLineWidth","showStartLine","showgrid","startlinecolor","startlinewidth","endLineColor","endLineWidth","showEndLine","endlinecolor","endlinewidth","minorgridcount","minorgridwidth","minorgridcolor","showticklabels","tickfont","tickangle","showexponent","exponentformat","tickformat","showticksuffix","showtickprefix","ticksuffix","tickprefix","ax","id","axLetter","charAt","calAttr"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/carpet/axis_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar carpetAttrs = require('./attributes');\n\nvar addOpacity = require('../../components/color').addOpacity;\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar handleTickValueDefaults = require('../../plots/cartesian/tick_value_defaults');\nvar handleTickLabelDefaults = require('../../plots/cartesian/tick_label_defaults');\nvar handleCategoryOrderDefaults = require('../../plots/cartesian/category_order_defaults');\nvar setConvert = require('../../plots/cartesian/set_convert');\nvar autoType = require('../../plots/cartesian/axis_autotype');\n\n/**\n * options: object containing:\n *\n *  letter: 'a' or 'b'\n *  title: name of the axis (ie 'Colorbar') to go in default title\n *  name: axis object name (ie 'xaxis') if one should be stored\n *  font: the default font to inherit\n *  outerTicks: boolean, should ticks default to outside?\n *  showGrid: boolean, should gridlines be shown by default?\n *  data: the plot data to use in choosing auto type\n *  bgColor: the plot background color, to calculate default gridline colors\n */\nmodule.exports = function handleAxisDefaults(containerIn, containerOut, options) {\n    var letter = options.letter;\n    var font = options.font || {};\n    var attributes = carpetAttrs[letter + 'axis'];\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(containerIn, containerOut, attributes, attr, dflt);\n    }\n\n    // set up some private properties\n    if(options.name) {\n        containerOut._name = options.name;\n        containerOut._id = options.name;\n    }\n\n    // now figure out type and do some more initialization\n    var axType = coerce('type');\n    if(axType === '-') {\n        if(options.data) setAutoType(containerOut, options.data);\n\n        if(containerOut.type === '-') {\n            containerOut.type = 'linear';\n        }\n        else {\n            // copy autoType back to input axis\n            // note that if this object didn't exist\n            // in the input layout, we have to put it in\n            // this happens in the main supplyDefaults function\n            axType = containerIn.type = containerOut.type;\n        }\n    }\n\n    coerce('smoothing');\n    coerce('cheatertype');\n\n    coerce('showticklabels');\n    coerce('labelprefix', letter + ' = ');\n    coerce('labelsuffix');\n    coerce('showtickprefix');\n    coerce('showticksuffix');\n\n    coerce('separatethousands');\n    coerce('tickformat');\n    coerce('exponentformat');\n    coerce('showexponent');\n    coerce('categoryorder');\n\n    coerce('tickmode');\n    coerce('tickvals');\n    coerce('ticktext');\n    coerce('tick0');\n    coerce('dtick');\n\n    if(containerOut.tickmode === 'array') {\n        coerce('arraytick0');\n        coerce('arraydtick');\n    }\n\n    coerce('labelpadding');\n\n    containerOut._hovertitle = letter;\n\n\n    if(axType === 'date') {\n        var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleDefaults');\n        handleCalendarDefaults(containerIn, containerOut, 'calendar', options.calendar);\n    }\n\n    // we need some of the other functions setConvert attaches, but for\n    // path finding, override pixel scaling to simple passthrough (identity)\n    setConvert(containerOut, options.fullLayout);\n    containerOut.c2p = Lib.identity;\n\n    var dfltColor = coerce('color', options.dfltColor);\n    // if axis.color was provided, use it for fonts too; otherwise,\n    // inherit from global font color in case that was provided.\n    var dfltFontColor = (dfltColor === containerIn.color) ? dfltColor : font.color;\n\n    var title = coerce('title.text');\n    if(title) {\n        Lib.coerceFont(coerce, 'title.font', {\n            family: font.family,\n            size: Math.round(font.size * 1.2),\n            color: dfltFontColor\n        });\n        coerce('title.offset');\n    }\n\n    coerce('tickangle');\n\n    var autoRange = coerce('autorange', !containerOut.isValidRange(containerIn.range));\n\n    if(autoRange) coerce('rangemode');\n\n    coerce('range');\n    containerOut.cleanRange();\n\n    coerce('fixedrange');\n\n    handleTickValueDefaults(containerIn, containerOut, coerce, axType);\n    handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options);\n    handleCategoryOrderDefaults(containerIn, containerOut, coerce, {\n        data: options.data,\n        dataAttr: letter\n    });\n\n    var gridColor = coerce2('gridcolor', addOpacity(dfltColor, 0.3));\n    var gridWidth = coerce2('gridwidth');\n    var showGrid = coerce('showgrid');\n\n    if(!showGrid) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridwidth;\n    }\n\n    var startLineColor = coerce2('startlinecolor', dfltColor);\n    var startLineWidth = coerce2('startlinewidth', gridWidth);\n    var showStartLine = coerce('startline', containerOut.showgrid || !!startLineColor || !!startLineWidth);\n\n    if(!showStartLine) {\n        delete containerOut.startlinecolor;\n        delete containerOut.startlinewidth;\n    }\n\n    var endLineColor = coerce2('endlinecolor', dfltColor);\n    var endLineWidth = coerce2('endlinewidth', gridWidth);\n    var showEndLine = coerce('endline', containerOut.showgrid || !!endLineColor || !!endLineWidth);\n\n    if(!showEndLine) {\n        delete containerOut.endlinecolor;\n        delete containerOut.endlinewidth;\n    }\n\n    if(!showGrid) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridWidth;\n    } else {\n        coerce('minorgridcount');\n        coerce('minorgridwidth', gridWidth);\n        coerce('minorgridcolor', addOpacity(gridColor, 0.06));\n\n        if(!containerOut.minorgridcount) {\n            delete containerOut.minorgridwidth;\n            delete containerOut.minorgridcolor;\n        }\n    }\n\n    if(containerOut.showticklabels === 'none') {\n        delete containerOut.tickfont;\n        delete containerOut.tickangle;\n        delete containerOut.showexponent;\n        delete containerOut.exponentformat;\n        delete containerOut.tickformat;\n        delete containerOut.showticksuffix;\n        delete containerOut.showtickprefix;\n    }\n\n    if(!containerOut.showticksuffix) {\n        delete containerOut.ticksuffix;\n    }\n\n    if(!containerOut.showtickprefix) {\n        delete containerOut.tickprefix;\n    }\n\n    // It needs to be coerced, then something above overrides this deep in the axis code,\n    // but no, we *actually* want to coerce this.\n    coerce('tickmode');\n\n    return containerOut;\n};\n\nfunction setAutoType(ax, data) {\n    // new logic: let people specify any type they want,\n    // only autotype if type is '-'\n    if(ax.type !== '-') return;\n\n    var id = ax._id;\n    var axLetter = id.charAt(0);\n\n    var calAttr = axLetter + 'calendar';\n    var calendar = ax[calAttr];\n\n    ax.type = autoType(data, calendar);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
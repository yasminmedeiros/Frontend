{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar convertTextOpts = require('./convert_text_opts');\nfunction MapboxLayer(mapbox, index) {\n  this.mapbox = mapbox;\n  this.map = mapbox.map;\n  this.uid = mapbox.uid + '-' + 'layer' + index;\n  this.idSource = this.uid + '-source';\n  this.idLayer = this.uid + '-layer';\n\n  // some state variable to check if a remove/add step is needed\n  this.sourceType = null;\n  this.source = null;\n  this.layerType = null;\n  this.below = null;\n\n  // is layer currently visible\n  this.visible = false;\n}\nvar proto = MapboxLayer.prototype;\nproto.update = function update(opts) {\n  if (!this.visible) {\n    // IMPORTANT: must create source before layer to not cause errors\n    this.updateSource(opts);\n    this.updateLayer(opts);\n  } else if (this.needsNewSource(opts)) {\n    // IMPORTANT: must delete layer before source to not cause errors\n    this.removeLayer();\n    this.updateSource(opts);\n    this.updateLayer(opts);\n  } else if (this.needsNewLayer(opts)) {\n    this.updateLayer(opts);\n  } else {\n    this.updateStyle(opts);\n  }\n  this.visible = isVisible(opts);\n};\nproto.needsNewSource = function (opts) {\n  // for some reason changing layer to 'fill' or 'symbol'\n  // w/o changing the source throws an exception in mapbox-gl 0.18 ;\n  // stay safe and make new source on type changes\n  return this.sourceType !== opts.sourcetype || this.source !== opts.source || this.layerType !== opts.type;\n};\nproto.needsNewLayer = function (opts) {\n  return this.layerType !== opts.type || this.below !== opts.below;\n};\nproto.updateSource = function (opts) {\n  var map = this.map;\n  if (map.getSource(this.idSource)) map.removeSource(this.idSource);\n  this.sourceType = opts.sourcetype;\n  this.source = opts.source;\n  if (!isVisible(opts)) return;\n  var sourceOpts = convertSourceOpts(opts);\n  map.addSource(this.idSource, sourceOpts);\n};\nproto.updateLayer = function (opts) {\n  var map = this.map;\n  var convertedOpts = convertOpts(opts);\n  this.removeLayer();\n  this.layerType = opts.type;\n  if (isVisible(opts)) {\n    map.addLayer({\n      id: this.idLayer,\n      source: this.idSource,\n      'source-layer': opts.sourcelayer || '',\n      type: opts.type,\n      layout: convertedOpts.layout,\n      paint: convertedOpts.paint\n    }, opts.below);\n  }\n};\nproto.updateStyle = function (opts) {\n  if (isVisible(opts)) {\n    var convertedOpts = convertOpts(opts);\n    this.mapbox.setOptions(this.idLayer, 'setLayoutProperty', convertedOpts.layout);\n    this.mapbox.setOptions(this.idLayer, 'setPaintProperty', convertedOpts.paint);\n  }\n};\nproto.removeLayer = function () {\n  var map = this.map;\n  if (map.getLayer(this.idLayer)) {\n    map.removeLayer(this.idLayer);\n  }\n};\nproto.dispose = function dispose() {\n  var map = this.map;\n  map.removeLayer(this.idLayer);\n  map.removeSource(this.idSource);\n};\nfunction isVisible(opts) {\n  var source = opts.source;\n  return opts.visible && (Lib.isPlainObject(source) || typeof source === 'string' && source.length > 0);\n}\nfunction convertOpts(opts) {\n  var layout = {};\n  var paint = {};\n  switch (opts.type) {\n    case 'circle':\n      Lib.extendFlat(paint, {\n        'circle-radius': opts.circle.radius,\n        'circle-color': opts.color,\n        'circle-opacity': opts.opacity\n      });\n      break;\n    case 'line':\n      Lib.extendFlat(paint, {\n        'line-width': opts.line.width,\n        'line-color': opts.color,\n        'line-opacity': opts.opacity\n      });\n      break;\n    case 'fill':\n      Lib.extendFlat(paint, {\n        'fill-color': opts.color,\n        'fill-outline-color': opts.fill.outlinecolor,\n        'fill-opacity': opts.opacity\n\n        // no way to pass specify outline width at the moment\n      });\n\n      break;\n    case 'symbol':\n      var symbol = opts.symbol;\n      var textOpts = convertTextOpts(symbol.textposition, symbol.iconsize);\n      Lib.extendFlat(layout, {\n        'icon-image': symbol.icon + '-15',\n        'icon-size': symbol.iconsize / 10,\n        'text-field': symbol.text,\n        'text-size': symbol.textfont.size,\n        'text-anchor': textOpts.anchor,\n        'text-offset': textOpts.offset\n\n        // TODO font family\n        // 'text-font': symbol.textfont.family.split(', '),\n      });\n\n      Lib.extendFlat(paint, {\n        'icon-color': opts.color,\n        'text-color': symbol.textfont.color,\n        'text-opacity': opts.opacity\n      });\n      break;\n  }\n  return {\n    layout: layout,\n    paint: paint\n  };\n}\nfunction convertSourceOpts(opts) {\n  var sourceType = opts.sourcetype;\n  var source = opts.source;\n  var sourceOpts = {\n    type: sourceType\n  };\n  var field;\n  if (sourceType === 'geojson') {\n    field = 'data';\n  } else if (sourceType === 'vector') {\n    field = typeof source === 'string' ? 'url' : 'tiles';\n  }\n  sourceOpts[field] = source;\n  return sourceOpts;\n}\nmodule.exports = function createMapboxLayer(mapbox, index, opts) {\n  var mapboxLayer = new MapboxLayer(mapbox, index);\n  mapboxLayer.update(opts);\n  return mapboxLayer;\n};","map":{"version":3,"names":["Lib","require","convertTextOpts","MapboxLayer","mapbox","index","map","uid","idSource","idLayer","sourceType","source","layerType","below","visible","proto","prototype","update","opts","updateSource","updateLayer","needsNewSource","removeLayer","needsNewLayer","updateStyle","isVisible","sourcetype","type","getSource","removeSource","sourceOpts","convertSourceOpts","addSource","convertedOpts","convertOpts","addLayer","id","sourcelayer","layout","paint","setOptions","getLayer","dispose","isPlainObject","length","extendFlat","circle","radius","color","opacity","line","width","fill","outlinecolor","symbol","textOpts","textposition","iconsize","icon","text","textfont","size","anchor","offset","field","module","exports","createMapboxLayer","mapboxLayer"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/mapbox/layers.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar convertTextOpts = require('./convert_text_opts');\n\nfunction MapboxLayer(mapbox, index) {\n    this.mapbox = mapbox;\n    this.map = mapbox.map;\n\n    this.uid = mapbox.uid + '-' + 'layer' + index;\n\n    this.idSource = this.uid + '-source';\n    this.idLayer = this.uid + '-layer';\n\n    // some state variable to check if a remove/add step is needed\n    this.sourceType = null;\n    this.source = null;\n    this.layerType = null;\n    this.below = null;\n\n    // is layer currently visible\n    this.visible = false;\n}\n\nvar proto = MapboxLayer.prototype;\n\nproto.update = function update(opts) {\n    if(!this.visible) {\n        // IMPORTANT: must create source before layer to not cause errors\n        this.updateSource(opts);\n        this.updateLayer(opts);\n    } else if(this.needsNewSource(opts)) {\n        // IMPORTANT: must delete layer before source to not cause errors\n        this.removeLayer();\n        this.updateSource(opts);\n        this.updateLayer(opts);\n    } else if(this.needsNewLayer(opts)) {\n        this.updateLayer(opts);\n    } else {\n        this.updateStyle(opts);\n    }\n\n    this.visible = isVisible(opts);\n};\n\nproto.needsNewSource = function(opts) {\n    // for some reason changing layer to 'fill' or 'symbol'\n    // w/o changing the source throws an exception in mapbox-gl 0.18 ;\n    // stay safe and make new source on type changes\n    return (\n        this.sourceType !== opts.sourcetype ||\n        this.source !== opts.source ||\n        this.layerType !== opts.type\n    );\n};\n\nproto.needsNewLayer = function(opts) {\n    return (\n        this.layerType !== opts.type ||\n        this.below !== opts.below\n    );\n};\n\nproto.updateSource = function(opts) {\n    var map = this.map;\n\n    if(map.getSource(this.idSource)) map.removeSource(this.idSource);\n\n    this.sourceType = opts.sourcetype;\n    this.source = opts.source;\n\n    if(!isVisible(opts)) return;\n\n    var sourceOpts = convertSourceOpts(opts);\n\n    map.addSource(this.idSource, sourceOpts);\n};\n\nproto.updateLayer = function(opts) {\n    var map = this.map;\n    var convertedOpts = convertOpts(opts);\n\n    this.removeLayer();\n    this.layerType = opts.type;\n\n    if(isVisible(opts)) {\n        map.addLayer({\n            id: this.idLayer,\n            source: this.idSource,\n            'source-layer': opts.sourcelayer || '',\n            type: opts.type,\n            layout: convertedOpts.layout,\n            paint: convertedOpts.paint\n        }, opts.below);\n    }\n};\n\nproto.updateStyle = function(opts) {\n    if(isVisible(opts)) {\n        var convertedOpts = convertOpts(opts);\n        this.mapbox.setOptions(this.idLayer, 'setLayoutProperty', convertedOpts.layout);\n        this.mapbox.setOptions(this.idLayer, 'setPaintProperty', convertedOpts.paint);\n    }\n};\n\nproto.removeLayer = function() {\n    var map = this.map;\n    if(map.getLayer(this.idLayer)) {\n        map.removeLayer(this.idLayer);\n    }\n};\n\nproto.dispose = function dispose() {\n    var map = this.map;\n    map.removeLayer(this.idLayer);\n    map.removeSource(this.idSource);\n};\n\nfunction isVisible(opts) {\n    var source = opts.source;\n\n    return opts.visible && (\n        Lib.isPlainObject(source) ||\n        (typeof source === 'string' && source.length > 0)\n    );\n}\n\nfunction convertOpts(opts) {\n    var layout = {};\n    var paint = {};\n\n    switch(opts.type) {\n\n        case 'circle':\n            Lib.extendFlat(paint, {\n                'circle-radius': opts.circle.radius,\n                'circle-color': opts.color,\n                'circle-opacity': opts.opacity\n            });\n            break;\n\n        case 'line':\n            Lib.extendFlat(paint, {\n                'line-width': opts.line.width,\n                'line-color': opts.color,\n                'line-opacity': opts.opacity\n            });\n            break;\n\n        case 'fill':\n            Lib.extendFlat(paint, {\n                'fill-color': opts.color,\n                'fill-outline-color': opts.fill.outlinecolor,\n                'fill-opacity': opts.opacity\n\n                // no way to pass specify outline width at the moment\n            });\n            break;\n\n        case 'symbol':\n            var symbol = opts.symbol;\n            var textOpts = convertTextOpts(symbol.textposition, symbol.iconsize);\n\n            Lib.extendFlat(layout, {\n                'icon-image': symbol.icon + '-15',\n                'icon-size': symbol.iconsize / 10,\n\n                'text-field': symbol.text,\n                'text-size': symbol.textfont.size,\n                'text-anchor': textOpts.anchor,\n                'text-offset': textOpts.offset\n\n                // TODO font family\n                // 'text-font': symbol.textfont.family.split(', '),\n            });\n\n            Lib.extendFlat(paint, {\n                'icon-color': opts.color,\n                'text-color': symbol.textfont.color,\n                'text-opacity': opts.opacity\n            });\n            break;\n    }\n\n    return { layout: layout, paint: paint };\n}\n\nfunction convertSourceOpts(opts) {\n    var sourceType = opts.sourcetype;\n    var source = opts.source;\n    var sourceOpts = {type: sourceType};\n    var field;\n\n    if(sourceType === 'geojson') {\n        field = 'data';\n    } else if(sourceType === 'vector') {\n        field = typeof source === 'string' ? 'url' : 'tiles';\n    }\n\n    sourceOpts[field] = source;\n    return sourceOpts;\n}\n\nmodule.exports = function createMapboxLayer(mapbox, index, opts) {\n    var mapboxLayer = new MapboxLayer(mapbox, index);\n\n    mapboxLayer.update(opts);\n\n    return mapboxLayer;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar constants = require('../scatter/constants');\nvar subTypes = require('../scatter/subtypes');\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\nvar handleLineDefaults = require('../scatter/line_defaults');\nvar handleLineShapeDefaults = require('../scatter/line_shape_defaults');\nvar handleTextDefaults = require('../scatter/text_defaults');\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\nvar attributes = require('./attributes');\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n  var a = coerce('a');\n  var b = coerce('b');\n  var c = coerce('c');\n  var len;\n\n  // allow any one array to be missing, len is the minimum length of those\n  // present. Note that after coerce data_array's are either Arrays (which\n  // are truthy even if empty) or undefined. As in scatter, an empty array\n  // is different from undefined, because it can signify that this data is\n  // not known yet but expected in the future\n  if (a) {\n    len = a.length;\n    if (b) {\n      len = Math.min(len, b.length);\n      if (c) len = Math.min(len, c.length);\n    } else if (c) len = Math.min(len, c.length);else len = 0;\n  } else if (b && c) {\n    len = Math.min(b.length, c.length);\n  }\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n  traceOut._length = len;\n  coerce('sum');\n  coerce('text');\n  coerce('hovertext');\n  if (traceOut.hoveron !== 'fills') coerce('hovertemplate');\n  var defaultMode = len < constants.PTS_LINESONLY ? 'lines+markers' : 'lines';\n  coerce('mode', defaultMode);\n  if (subTypes.hasLines(traceOut)) {\n    handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n    handleLineShapeDefaults(traceIn, traceOut, coerce);\n    coerce('connectgaps');\n  }\n  if (subTypes.hasMarkers(traceOut)) {\n    handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce, {\n      gradient: true\n    });\n  }\n  if (subTypes.hasText(traceOut)) {\n    handleTextDefaults(traceIn, traceOut, layout, coerce);\n  }\n  var dfltHoverOn = [];\n  if (subTypes.hasMarkers(traceOut) || subTypes.hasText(traceOut)) {\n    coerce('cliponaxis');\n    coerce('marker.maxdisplayed');\n    dfltHoverOn.push('points');\n  }\n  coerce('fill');\n  if (traceOut.fill !== 'none') {\n    handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n    if (!subTypes.hasLines(traceOut)) handleLineShapeDefaults(traceIn, traceOut, coerce);\n  }\n  if (traceOut.fill === 'tonext' || traceOut.fill === 'toself') {\n    dfltHoverOn.push('fills');\n  }\n  coerce('hoveron', dfltHoverOn.join('+') || 'points');\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};","map":{"version":3,"names":["Lib","require","constants","subTypes","handleMarkerDefaults","handleLineDefaults","handleLineShapeDefaults","handleTextDefaults","handleFillColorDefaults","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","a","b","c","len","length","Math","min","visible","_length","hoveron","defaultMode","PTS_LINESONLY","hasLines","hasMarkers","gradient","hasText","dfltHoverOn","push","fill","join","coerceSelectionMarkerOpacity"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatterternary/defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar constants = require('../scatter/constants');\nvar subTypes = require('../scatter/subtypes');\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\nvar handleLineDefaults = require('../scatter/line_defaults');\nvar handleLineShapeDefaults = require('../scatter/line_shape_defaults');\nvar handleTextDefaults = require('../scatter/text_defaults');\nvar handleFillColorDefaults = require('../scatter/fillcolor_defaults');\n\nvar attributes = require('./attributes');\n\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var a = coerce('a');\n    var b = coerce('b');\n    var c = coerce('c');\n    var len;\n\n    // allow any one array to be missing, len is the minimum length of those\n    // present. Note that after coerce data_array's are either Arrays (which\n    // are truthy even if empty) or undefined. As in scatter, an empty array\n    // is different from undefined, because it can signify that this data is\n    // not known yet but expected in the future\n    if(a) {\n        len = a.length;\n        if(b) {\n            len = Math.min(len, b.length);\n            if(c) len = Math.min(len, c.length);\n        }\n        else if(c) len = Math.min(len, c.length);\n        else len = 0;\n    }\n    else if(b && c) {\n        len = Math.min(b.length, c.length);\n    }\n\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    traceOut._length = len;\n\n    coerce('sum');\n\n    coerce('text');\n    coerce('hovertext');\n    if(traceOut.hoveron !== 'fills') coerce('hovertemplate');\n\n    var defaultMode = len < constants.PTS_LINESONLY ? 'lines+markers' : 'lines';\n    coerce('mode', defaultMode);\n\n    if(subTypes.hasLines(traceOut)) {\n        handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n        handleLineShapeDefaults(traceIn, traceOut, coerce);\n        coerce('connectgaps');\n    }\n\n    if(subTypes.hasMarkers(traceOut)) {\n        handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce, {gradient: true});\n    }\n\n    if(subTypes.hasText(traceOut)) {\n        handleTextDefaults(traceIn, traceOut, layout, coerce);\n    }\n\n    var dfltHoverOn = [];\n\n    if(subTypes.hasMarkers(traceOut) || subTypes.hasText(traceOut)) {\n        coerce('cliponaxis');\n        coerce('marker.maxdisplayed');\n        dfltHoverOn.push('points');\n    }\n\n    coerce('fill');\n    if(traceOut.fill !== 'none') {\n        handleFillColorDefaults(traceIn, traceOut, defaultColor, coerce);\n        if(!subTypes.hasLines(traceOut)) handleLineShapeDefaults(traceIn, traceOut, coerce);\n    }\n\n    if(traceOut.fill === 'tonext' || traceOut.fill === 'toself') {\n        dfltHoverOn.push('fills');\n    }\n    coerce('hoveron', dfltHoverOn.join('+') || 'points');\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../registry');\n\n/**\n * localize: translate a string for the current locale\n *\n * @param {object} gd: the graphDiv for context\n *  gd._context.locale determines the language (& optional region/country)\n *  the dictionary for each locale may either be supplied in\n *  gd._context.locales or globally via Plotly.register\n * @param {string} s: the string to translate\n */\nmodule.exports = function localize(gd, s) {\n  var locale = gd._context.locale;\n\n  /*\n   * Priority of lookup:\n   *     contextDicts[locale],\n   *     registeredDicts[locale],\n   *     contextDicts[baseLocale], (if baseLocale is distinct)\n   *     registeredDicts[baseLocale]\n   * Return the first translation we find.\n   * This way if you have a regionalization you are allowed to specify\n   * only what's different from the base locale, everything else will\n   * fall back on the base.\n   */\n  for (var i = 0; i < 2; i++) {\n    var locales = gd._context.locales;\n    for (var j = 0; j < 2; j++) {\n      var dict = (locales[locale] || {}).dictionary;\n      if (dict) {\n        var out = dict[s];\n        if (out) return out;\n      }\n      locales = Registry.localeRegistry;\n    }\n    var baseLocale = locale.split('-')[0];\n    if (baseLocale === locale) break;\n    locale = baseLocale;\n  }\n  return s;\n};","map":{"version":3,"names":["Registry","require","module","exports","localize","gd","s","locale","_context","i","locales","j","dict","dictionary","out","localeRegistry","baseLocale","split"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/lib/localize.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../registry');\n\n/**\n * localize: translate a string for the current locale\n *\n * @param {object} gd: the graphDiv for context\n *  gd._context.locale determines the language (& optional region/country)\n *  the dictionary for each locale may either be supplied in\n *  gd._context.locales or globally via Plotly.register\n * @param {string} s: the string to translate\n */\nmodule.exports = function localize(gd, s) {\n    var locale = gd._context.locale;\n\n    /*\n     * Priority of lookup:\n     *     contextDicts[locale],\n     *     registeredDicts[locale],\n     *     contextDicts[baseLocale], (if baseLocale is distinct)\n     *     registeredDicts[baseLocale]\n     * Return the first translation we find.\n     * This way if you have a regionalization you are allowed to specify\n     * only what's different from the base locale, everything else will\n     * fall back on the base.\n     */\n    for(var i = 0; i < 2; i++) {\n        var locales = gd._context.locales;\n        for(var j = 0; j < 2; j++) {\n            var dict = (locales[locale] || {}).dictionary;\n            if(dict) {\n                var out = dict[s];\n                if(out) return out;\n            }\n            locales = Registry.localeRegistry;\n        }\n\n        var baseLocale = locale.split('-')[0];\n        if(baseLocale === locale) break;\n        locale = baseLocale;\n    }\n\n    return s;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQ,CAACC,EAAE,EAAEC,CAAC,EAAE;EACtC,IAAIC,MAAM,GAAGF,EAAE,CAACG,QAAQ,CAACD,MAAM;;EAE/B;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACvB,IAAIC,OAAO,GAAGL,EAAE,CAACG,QAAQ,CAACE,OAAO;IACjC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvB,IAAIC,IAAI,GAAG,CAACF,OAAO,CAACH,MAAM,CAAC,IAAI,CAAC,CAAC,EAAEM,UAAU;MAC7C,IAAGD,IAAI,EAAE;QACL,IAAIE,GAAG,GAAGF,IAAI,CAACN,CAAC,CAAC;QACjB,IAAGQ,GAAG,EAAE,OAAOA,GAAG;MACtB;MACAJ,OAAO,GAAGV,QAAQ,CAACe,cAAc;IACrC;IAEA,IAAIC,UAAU,GAAGT,MAAM,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,IAAGD,UAAU,KAAKT,MAAM,EAAE;IAC1BA,MAAM,GAAGS,UAAU;EACvB;EAEA,OAAOV,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
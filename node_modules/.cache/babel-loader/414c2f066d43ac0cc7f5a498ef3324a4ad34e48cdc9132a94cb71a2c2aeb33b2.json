{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\nvar constants = require('./constants');\nvar interactConstants = require('../../constants/interactions');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\nvar DBLCLICKDELAY = interactConstants.DBLCLICKDELAY;\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var clipId = 'legend' + fullLayout._uid;\n  if (!fullLayout._infolayer || !gd.calcdata) return;\n  if (!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n  var opts = fullLayout.legend;\n  var legendData = fullLayout.showlegend && getLegendData(gd.calcdata, opts);\n  var hiddenSlices = fullLayout.hiddenlabels || [];\n  if (!fullLayout.showlegend || !legendData.length) {\n    fullLayout._infolayer.selectAll('.legend').remove();\n    fullLayout._topdefs.select('#' + clipId).remove();\n    Plots.autoMargin(gd, 'legend');\n    return;\n  }\n  var maxLength = 0;\n  for (var i = 0; i < legendData.length; i++) {\n    for (var j = 0; j < legendData[i].length; j++) {\n      var item = legendData[i][j][0];\n      var trace = item.trace;\n      var isPie = Registry.traceIs(trace, 'pie');\n      var name = isPie ? item.label : trace.name;\n      maxLength = Math.max(maxLength, name && name.length || 0);\n    }\n  }\n  var firstRender = false;\n  var legend = Lib.ensureSingle(fullLayout._infolayer, 'g', 'legend', function (s) {\n    s.attr('pointer-events', 'all');\n    firstRender = true;\n  });\n  var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function (s) {\n    s.append('rect');\n  });\n  var bg = Lib.ensureSingle(legend, 'rect', 'bg', function (s) {\n    s.attr('shape-rendering', 'crispEdges');\n  });\n  bg.call(Color.stroke, opts.bordercolor).call(Color.fill, opts.bgcolor).style('stroke-width', opts.borderwidth + 'px');\n  var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n  var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function (s) {\n    s.attr({\n      rx: 20,\n      ry: 3,\n      width: 0,\n      height: 0\n    }).call(Color.fill, '#808BA4');\n  });\n  var groups = scrollBox.selectAll('g.groups').data(legendData);\n  groups.enter().append('g').attr('class', 'groups');\n  groups.exit().remove();\n  var traces = groups.selectAll('g.traces').data(Lib.identity);\n  traces.enter().append('g').attr('class', 'traces');\n  traces.exit().remove();\n  traces.style('opacity', function (d) {\n    var trace = d[0].trace;\n    if (Registry.traceIs(trace, 'pie')) {\n      return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n    } else {\n      return trace.visible === 'legendonly' ? 0.5 : 1;\n    }\n  }).each(function () {\n    d3.select(this).call(drawTexts, gd, maxLength).call(setupTraceToggle, gd);\n  }).call(style, gd);\n  Lib.syncOrAsync([Plots.previousPromises, function () {\n    if (firstRender) {\n      computeLegendDimensions(gd, groups, traces);\n      expandMargin(gd);\n    }\n\n    // Position and size the legend\n    var lxMin = 0;\n    var lxMax = fullLayout.width;\n    var lyMin = 0;\n    var lyMax = fullLayout.height;\n    computeLegendDimensions(gd, groups, traces);\n    if (opts._height > lyMax) {\n      // If the legend doesn't fit in the plot area,\n      // do not expand the vertical margins.\n      expandHorizontalMargin(gd);\n    } else {\n      expandMargin(gd);\n    }\n\n    // Scroll section must be executed after repositionLegend.\n    // It requires the legend width, height, x and y to position the scrollbox\n    // and these values are mutated in repositionLegend.\n    var gs = fullLayout._size;\n    var lx = gs.l + gs.w * opts.x;\n    var ly = gs.t + gs.h * (1 - opts.y);\n    if (Lib.isRightAnchor(opts)) {\n      lx -= opts._width;\n    } else if (Lib.isCenterAnchor(opts)) {\n      lx -= opts._width / 2;\n    }\n    if (Lib.isBottomAnchor(opts)) {\n      ly -= opts._height;\n    } else if (Lib.isMiddleAnchor(opts)) {\n      ly -= opts._height / 2;\n    }\n\n    // Make sure the legend left and right sides are visible\n    var legendWidth = opts._width;\n    var legendWidthMax = gs.w;\n    if (legendWidth > legendWidthMax) {\n      lx = gs.l;\n      legendWidth = legendWidthMax;\n    } else {\n      if (lx + legendWidth > lxMax) lx = lxMax - legendWidth;\n      if (lx < lxMin) lx = lxMin;\n      legendWidth = Math.min(lxMax - lx, opts._width);\n    }\n\n    // Make sure the legend top and bottom are visible\n    // (legends with a scroll bar are not allowed to stretch beyond the extended\n    // margins)\n    var legendHeight = opts._height;\n    var legendHeightMax = gs.h;\n    if (legendHeight > legendHeightMax) {\n      ly = gs.t;\n      legendHeight = legendHeightMax;\n    } else {\n      if (ly + legendHeight > lyMax) ly = lyMax - legendHeight;\n      if (ly < lyMin) ly = lyMin;\n      legendHeight = Math.min(lyMax - ly, opts._height);\n    }\n\n    // Set size and position of all the elements that make up a legend:\n    // legend, background and border, scroll box and scroll bar\n    Drawing.setTranslate(legend, lx, ly);\n\n    // to be safe, remove previous listeners\n    scrollBar.on('.drag', null);\n    legend.on('wheel', null);\n    if (opts._height <= legendHeight || gd._context.staticPlot) {\n      // if scrollbar should not be shown.\n      bg.attr({\n        width: legendWidth - opts.borderwidth,\n        height: legendHeight - opts.borderwidth,\n        x: opts.borderwidth / 2,\n        y: opts.borderwidth / 2\n      });\n      Drawing.setTranslate(scrollBox, 0, 0);\n      clipPath.select('rect').attr({\n        width: legendWidth - 2 * opts.borderwidth,\n        height: legendHeight - 2 * opts.borderwidth,\n        x: opts.borderwidth,\n        y: opts.borderwidth\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      Drawing.setRect(scrollBar, 0, 0, 0, 0);\n      delete opts._scrollY;\n    } else {\n      var scrollBarHeight = Math.max(constants.scrollBarMinHeight, legendHeight * legendHeight / opts._height);\n      var scrollBarYMax = legendHeight - scrollBarHeight - 2 * constants.scrollBarMargin;\n      var scrollBoxYMax = opts._height - legendHeight;\n      var scrollRatio = scrollBarYMax / scrollBoxYMax;\n      var scrollBoxY = Math.min(opts._scrollY || 0, scrollBoxYMax);\n\n      // increase the background and clip-path width\n      // by the scrollbar width and margin\n      bg.attr({\n        width: legendWidth - 2 * opts.borderwidth + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendHeight - opts.borderwidth,\n        x: opts.borderwidth / 2,\n        y: opts.borderwidth / 2\n      });\n      clipPath.select('rect').attr({\n        width: legendWidth - 2 * opts.borderwidth + constants.scrollBarWidth + constants.scrollBarMargin,\n        height: legendHeight - 2 * opts.borderwidth,\n        x: opts.borderwidth,\n        y: opts.borderwidth + scrollBoxY\n      });\n      Drawing.setClipUrl(scrollBox, clipId, gd);\n      scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n      legend.on('wheel', function () {\n        scrollBoxY = Lib.constrain(opts._scrollY + d3.event.deltaY / scrollBarYMax * scrollBoxYMax, 0, scrollBoxYMax);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n        if (scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n          d3.event.preventDefault();\n        }\n      });\n      var eventY0, scrollBoxY0;\n      var drag = d3.behavior.drag().on('dragstart', function () {\n        eventY0 = d3.event.sourceEvent.clientY;\n        scrollBoxY0 = scrollBoxY;\n      }).on('drag', function () {\n        var e = d3.event.sourceEvent;\n        if (e.buttons === 2 || e.ctrlKey) return;\n        scrollBoxY = Lib.constrain((e.clientY - eventY0) / scrollRatio + scrollBoxY0, 0, scrollBoxYMax);\n        scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n      });\n      scrollBar.call(drag);\n    }\n    function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n      opts._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n      Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n      Drawing.setRect(scrollBar, legendWidth, constants.scrollBarMargin + scrollBoxY * scrollRatio, constants.scrollBarWidth, scrollBarHeight);\n      clipPath.select('rect').attr({\n        y: opts.borderwidth + scrollBoxY\n      });\n    }\n    if (gd._context.edits.legendPosition) {\n      var xf, yf, x0, y0;\n      legend.classed('cursor-move', true);\n      dragElement.init({\n        element: legend.node(),\n        gd: gd,\n        prepFn: function prepFn() {\n          var transform = Drawing.getTranslate(legend);\n          x0 = transform.x;\n          y0 = transform.y;\n        },\n        moveFn: function moveFn(dx, dy) {\n          var newX = x0 + dx;\n          var newY = y0 + dy;\n          Drawing.setTranslate(legend, newX, newY);\n          xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, opts.xanchor);\n          yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, opts.yanchor);\n        },\n        doneFn: function doneFn() {\n          if (xf !== undefined && yf !== undefined) {\n            Registry.call('_guiRelayout', gd, {\n              'legend.x': xf,\n              'legend.y': yf\n            });\n          }\n        },\n        clickFn: function clickFn(numClicks, e) {\n          var clickedTrace = fullLayout._infolayer.selectAll('g.traces').filter(function () {\n            var bbox = this.getBoundingClientRect();\n            return e.clientX >= bbox.left && e.clientX <= bbox.right && e.clientY >= bbox.top && e.clientY <= bbox.bottom;\n          });\n          if (clickedTrace.size() > 0) {\n            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n          }\n        }\n      });\n    }\n  }], gd);\n};\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n  var trace = legendItem.data()[0][0].trace;\n  var evtData = {\n    event: evt,\n    node: legendItem.node(),\n    curveNumber: trace.index,\n    expandedIndex: trace._expandedIndex,\n    data: gd.data,\n    layout: gd.layout,\n    frames: gd._transitionData._frames,\n    config: gd._context,\n    fullData: gd._fullData,\n    fullLayout: gd._fullLayout\n  };\n  if (trace._group) {\n    evtData.group = trace._group;\n  }\n  if (trace.type === 'pie') {\n    evtData.label = legendItem.datum()[0].label;\n  }\n  var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n  if (clickVal === false) return;\n  if (numClicks === 1) {\n    legend._clickTimeout = setTimeout(function () {\n      handleClick(legendItem, gd, numClicks);\n    }, DBLCLICKDELAY);\n  } else if (numClicks === 2) {\n    if (legend._clickTimeout) clearTimeout(legend._clickTimeout);\n    gd._legendMouseDownTime = 0;\n    var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n    if (dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n  }\n}\nfunction drawTexts(g, gd, maxLength) {\n  var legendItem = g.data()[0][0];\n  var fullLayout = gd._fullLayout;\n  var trace = legendItem.trace;\n  var isPie = Registry.traceIs(trace, 'pie');\n  var traceIndex = trace.index;\n  var name = isPie ? legendItem.label : trace.name;\n  var isEditable = gd._context.edits.legendText && !isPie;\n  var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n  textEl.attr('text-anchor', 'start').classed('user-select-none', true).call(Drawing.font, fullLayout.legend.font).text(isEditable ? ensureLength(name, maxLength) : name);\n  svgTextUtils.positionText(textEl, constants.textOffsetX, 0);\n  function textLayout(s) {\n    svgTextUtils.convertToTspans(s, gd, function () {\n      computeTextDimensions(g, gd);\n    });\n  }\n  if (isEditable) {\n    textEl.call(svgTextUtils.makeEditable, {\n      gd: gd,\n      text: name\n    }).call(textLayout).on('edit', function (newName) {\n      this.text(ensureLength(newName, maxLength)).call(textLayout);\n      var fullInput = legendItem.trace._fullInput || {};\n      var update = {};\n      if (Registry.hasTransform(fullInput, 'groupby')) {\n        var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n        var index = groupbyIndices[groupbyIndices.length - 1];\n        var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n        kcont.set(legendItem.trace._group, newName);\n        update = kcont.constructUpdate();\n      } else {\n        update.name = newName;\n      }\n      return Registry.call('_guiRestyle', gd, update, traceIndex);\n    });\n  } else {\n    textLayout(textEl);\n  }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n  var targetLength = Math.max(4, maxLength);\n  if (str && str.trim().length >= targetLength / 2) return str;\n  str = str || '';\n  for (var i = targetLength - str.length; i > 0; i--) {\n    str += ' ';\n  }\n  return str;\n}\nfunction setupTraceToggle(g, gd) {\n  var newMouseDownTime;\n  var numClicks = 1;\n  var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function (s) {\n    s.style('cursor', 'pointer').attr('pointer-events', 'all').call(Color.fill, 'rgba(0,0,0,0)');\n  });\n  traceToggle.on('mousedown', function () {\n    newMouseDownTime = new Date().getTime();\n    if (newMouseDownTime - gd._legendMouseDownTime < DBLCLICKDELAY) {\n      // in a click train\n      numClicks += 1;\n    } else {\n      // new click train\n      numClicks = 1;\n      gd._legendMouseDownTime = newMouseDownTime;\n    }\n  });\n  traceToggle.on('mouseup', function () {\n    if (gd._dragged || gd._editing) return;\n    var legend = gd._fullLayout.legend;\n    if (new Date().getTime() - gd._legendMouseDownTime > DBLCLICKDELAY) {\n      numClicks = Math.max(numClicks - 1, 1);\n    }\n    clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n  });\n}\nfunction computeTextDimensions(g, gd) {\n  var legendItem = g.data()[0][0];\n  if (!legendItem.trace.showlegend) {\n    g.remove();\n    return;\n  }\n  var mathjaxGroup = g.select('g[class*=math-group]');\n  var mathjaxNode = mathjaxGroup.node();\n  var opts = gd._fullLayout.legend;\n  var lineHeight = opts.font.size * LINE_SPACING;\n  var height, width;\n  if (mathjaxNode) {\n    var mathjaxBB = Drawing.bBox(mathjaxNode);\n    height = mathjaxBB.height;\n    width = mathjaxBB.width;\n    Drawing.setTranslate(mathjaxGroup, 0, height / 4);\n  } else {\n    var text = g.select('.legendtext');\n    var textLines = svgTextUtils.lineCount(text);\n    var textNode = text.node();\n    height = lineHeight * textLines;\n    width = textNode ? Drawing.bBox(textNode).width : 0;\n\n    // approximation to height offset to center the font\n    // to avoid getBoundingClientRect\n    var textY = lineHeight * (0.3 + (1 - textLines) / 2);\n    svgTextUtils.positionText(text, constants.textOffsetX, textY);\n  }\n  legendItem.lineHeight = lineHeight;\n  legendItem.height = Math.max(height, 16) + 3;\n  legendItem.width = width;\n}\nfunction computeLegendDimensions(gd, groups, traces) {\n  var fullLayout = gd._fullLayout;\n  var opts = fullLayout.legend;\n  var borderwidth = opts.borderwidth;\n  var isGrouped = helpers.isGrouped(opts);\n  var extraWidth = 0;\n  opts._width = 0;\n  opts._height = 0;\n  if (helpers.isVertical(opts)) {\n    if (isGrouped) {\n      groups.each(function (d, i) {\n        Drawing.setTranslate(this, 0, i * opts.tracegroupgap);\n      });\n    }\n    traces.each(function (d) {\n      var legendItem = d[0];\n      var textHeight = legendItem.height;\n      var textWidth = legendItem.width;\n      Drawing.setTranslate(this, borderwidth, 5 + borderwidth + opts._height + textHeight / 2);\n      opts._height += textHeight;\n      opts._width = Math.max(opts._width, textWidth);\n    });\n    opts._width += 45 + borderwidth * 2;\n    opts._height += 10 + borderwidth * 2;\n    if (isGrouped) {\n      opts._height += (opts._lgroupsLength - 1) * opts.tracegroupgap;\n    }\n    extraWidth = 40;\n  } else if (isGrouped) {\n    var groupXOffsets = [opts._width];\n    var groupData = groups.data();\n    for (var i = 0, n = groupData.length; i < n; i++) {\n      var textWidths = groupData[i].map(function (legendItemArray) {\n        return legendItemArray[0].width;\n      });\n      var groupWidth = 40 + Math.max.apply(null, textWidths);\n      opts._width += opts.tracegroupgap + groupWidth;\n      groupXOffsets.push(opts._width);\n    }\n    groups.each(function (d, i) {\n      Drawing.setTranslate(this, groupXOffsets[i], 0);\n    });\n    groups.each(function () {\n      var group = d3.select(this);\n      var groupTraces = group.selectAll('g.traces');\n      var groupHeight = 0;\n      groupTraces.each(function (d) {\n        var legendItem = d[0];\n        var textHeight = legendItem.height;\n        Drawing.setTranslate(this, 0, 5 + borderwidth + groupHeight + textHeight / 2);\n        groupHeight += textHeight;\n      });\n      opts._height = Math.max(opts._height, groupHeight);\n    });\n    opts._height += 10 + borderwidth * 2;\n    opts._width += borderwidth * 2;\n  } else {\n    var rowHeight = 0;\n    var maxTraceHeight = 0;\n    var maxTraceWidth = 0;\n    var offsetX = 0;\n    var fullTracesWidth = 0;\n    var traceGap = opts.tracegroupgap || 5;\n\n    // calculate largest width for traces and use for width of all legend items\n    traces.each(function (d) {\n      maxTraceWidth = Math.max(40 + d[0].width, maxTraceWidth);\n      fullTracesWidth += 40 + d[0].width + traceGap;\n    });\n\n    // check if legend fits in one row\n    var oneRowLegend = fullLayout._size.w > borderwidth + fullTracesWidth - traceGap;\n    traces.each(function (d) {\n      var legendItem = d[0];\n      var traceWidth = oneRowLegend ? 40 + d[0].width : maxTraceWidth;\n      if (borderwidth + offsetX + traceGap + traceWidth > fullLayout._size.w) {\n        offsetX = 0;\n        rowHeight += maxTraceHeight;\n        opts._height += maxTraceHeight;\n        // reset for next row\n        maxTraceHeight = 0;\n      }\n      Drawing.setTranslate(this, borderwidth + offsetX, 5 + borderwidth + legendItem.height / 2 + rowHeight);\n      opts._width += traceGap + traceWidth;\n\n      // keep track of tallest trace in group\n      offsetX += traceGap + traceWidth;\n      maxTraceHeight = Math.max(legendItem.height, maxTraceHeight);\n    });\n    if (oneRowLegend) {\n      opts._height = maxTraceHeight;\n    } else {\n      opts._height += maxTraceHeight;\n    }\n    opts._width += borderwidth * 2;\n    opts._height += 10 + borderwidth * 2;\n  }\n\n  // make sure we're only getting full pixels\n  opts._width = Math.ceil(opts._width);\n  opts._height = Math.ceil(opts._height);\n  var isEditable = gd._context.edits.legendText || gd._context.edits.legendPosition;\n  traces.each(function (d) {\n    var legendItem = d[0];\n    var bg = d3.select(this).select('.legendtoggle');\n    Drawing.setRect(bg, 0, -legendItem.height / 2, (isEditable ? 0 : opts._width) + extraWidth, legendItem.height);\n  });\n}\nfunction expandMargin(gd) {\n  var fullLayout = gd._fullLayout;\n  var opts = fullLayout.legend;\n  var xanchor = 'left';\n  if (Lib.isRightAnchor(opts)) {\n    xanchor = 'right';\n  } else if (Lib.isCenterAnchor(opts)) {\n    xanchor = 'center';\n  }\n  var yanchor = 'top';\n  if (Lib.isBottomAnchor(opts)) {\n    yanchor = 'bottom';\n  } else if (Lib.isMiddleAnchor(opts)) {\n    yanchor = 'middle';\n  }\n\n  // lastly check if the margin auto-expand has changed\n  Plots.autoMargin(gd, 'legend', {\n    x: opts.x,\n    y: opts.y,\n    l: opts._width * FROM_TL[xanchor],\n    r: opts._width * FROM_BR[xanchor],\n    b: opts._height * FROM_BR[yanchor],\n    t: opts._height * FROM_TL[yanchor]\n  });\n}\nfunction expandHorizontalMargin(gd) {\n  var fullLayout = gd._fullLayout;\n  var opts = fullLayout.legend;\n  var xanchor = 'left';\n  if (Lib.isRightAnchor(opts)) {\n    xanchor = 'right';\n  } else if (Lib.isCenterAnchor(opts)) {\n    xanchor = 'center';\n  }\n\n  // lastly check if the margin auto-expand has changed\n  Plots.autoMargin(gd, 'legend', {\n    x: opts.x,\n    y: 0.5,\n    l: opts._width * FROM_TL[xanchor],\n    r: opts._width * FROM_BR[xanchor],\n    b: 0,\n    t: 0\n  });\n}","map":{"version":3,"names":["d3","require","Lib","Plots","Registry","Events","dragElement","Drawing","Color","svgTextUtils","handleClick","constants","interactConstants","alignmentConstants","LINE_SPACING","FROM_TL","FROM_BR","getLegendData","style","helpers","DBLCLICKDELAY","module","exports","draw","gd","fullLayout","_fullLayout","clipId","_uid","_infolayer","calcdata","_legendMouseDownTime","opts","legend","legendData","showlegend","hiddenSlices","hiddenlabels","length","selectAll","remove","_topdefs","select","autoMargin","maxLength","i","j","item","trace","isPie","traceIs","name","label","Math","max","firstRender","ensureSingle","s","attr","clipPath","ensureSingleById","append","bg","call","stroke","bordercolor","fill","bgcolor","borderwidth","scrollBox","scrollBar","rx","ry","width","height","groups","data","enter","exit","traces","identity","d","indexOf","visible","each","drawTexts","setupTraceToggle","syncOrAsync","previousPromises","computeLegendDimensions","expandMargin","lxMin","lxMax","lyMin","lyMax","_height","expandHorizontalMargin","gs","_size","lx","l","w","x","ly","t","h","y","isRightAnchor","_width","isCenterAnchor","isBottomAnchor","isMiddleAnchor","legendWidth","legendWidthMax","min","legendHeight","legendHeightMax","setTranslate","on","_context","staticPlot","setClipUrl","setRect","_scrollY","scrollBarHeight","scrollBarMinHeight","scrollBarYMax","scrollBarMargin","scrollBoxYMax","scrollRatio","scrollBoxY","scrollBarWidth","scrollHandler","constrain","event","deltaY","preventDefault","eventY0","scrollBoxY0","drag","behavior","sourceEvent","clientY","e","buttons","ctrlKey","edits","legendPosition","xf","yf","x0","y0","classed","init","element","node","prepFn","transform","getTranslate","moveFn","dx","dy","newX","newY","align","xanchor","yanchor","doneFn","undefined","clickFn","numClicks","clickedTrace","filter","bbox","getBoundingClientRect","clientX","left","right","top","bottom","size","clickOrDoubleClick","legendItem","evt","evtData","curveNumber","index","expandedIndex","_expandedIndex","layout","frames","_transitionData","_frames","config","fullData","_fullData","_group","group","type","datum","clickVal","triggerHandler","_clickTimeout","setTimeout","clearTimeout","dblClickVal","g","traceIndex","isEditable","legendText","textEl","font","text","ensureLength","positionText","textOffsetX","textLayout","convertToTspans","computeTextDimensions","makeEditable","newName","fullInput","_fullInput","update","hasTransform","groupbyIndices","getTransformIndices","kcont","keyedContainer","set","constructUpdate","str","targetLength","trim","newMouseDownTime","traceToggle","Date","getTime","_dragged","_editing","mathjaxGroup","mathjaxNode","lineHeight","mathjaxBB","bBox","textLines","lineCount","textNode","textY","isGrouped","extraWidth","isVertical","tracegroupgap","textHeight","textWidth","_lgroupsLength","groupXOffsets","groupData","n","textWidths","map","legendItemArray","groupWidth","apply","push","groupTraces","groupHeight","rowHeight","maxTraceHeight","maxTraceWidth","offsetX","fullTracesWidth","traceGap","oneRowLegend","traceWidth","ceil","r","b"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/legend/draw.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Events = require('../../lib/events');\nvar dragElement = require('../dragelement');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar handleClick = require('./handle_click');\n\nvar constants = require('./constants');\nvar interactConstants = require('../../constants/interactions');\nvar alignmentConstants = require('../../constants/alignment');\nvar LINE_SPACING = alignmentConstants.LINE_SPACING;\nvar FROM_TL = alignmentConstants.FROM_TL;\nvar FROM_BR = alignmentConstants.FROM_BR;\n\nvar getLegendData = require('./get_legend_data');\nvar style = require('./style');\nvar helpers = require('./helpers');\n\nvar DBLCLICKDELAY = interactConstants.DBLCLICKDELAY;\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var clipId = 'legend' + fullLayout._uid;\n\n    if(!fullLayout._infolayer || !gd.calcdata) return;\n\n    if(!gd._legendMouseDownTime) gd._legendMouseDownTime = 0;\n\n    var opts = fullLayout.legend;\n    var legendData = fullLayout.showlegend && getLegendData(gd.calcdata, opts);\n    var hiddenSlices = fullLayout.hiddenlabels || [];\n\n    if(!fullLayout.showlegend || !legendData.length) {\n        fullLayout._infolayer.selectAll('.legend').remove();\n        fullLayout._topdefs.select('#' + clipId).remove();\n\n        Plots.autoMargin(gd, 'legend');\n        return;\n    }\n\n    var maxLength = 0;\n    for(var i = 0; i < legendData.length; i++) {\n        for(var j = 0; j < legendData[i].length; j++) {\n            var item = legendData[i][j][0];\n            var trace = item.trace;\n            var isPie = Registry.traceIs(trace, 'pie');\n            var name = isPie ? item.label : trace.name;\n            maxLength = Math.max(maxLength, name && name.length || 0);\n        }\n    }\n\n    var firstRender = false;\n    var legend = Lib.ensureSingle(fullLayout._infolayer, 'g', 'legend', function(s) {\n        s.attr('pointer-events', 'all');\n        firstRender = true;\n    });\n\n    var clipPath = Lib.ensureSingleById(fullLayout._topdefs, 'clipPath', clipId, function(s) {\n        s.append('rect');\n    });\n\n    var bg = Lib.ensureSingle(legend, 'rect', 'bg', function(s) {\n        s.attr('shape-rendering', 'crispEdges');\n    });\n\n    bg.call(Color.stroke, opts.bordercolor)\n        .call(Color.fill, opts.bgcolor)\n        .style('stroke-width', opts.borderwidth + 'px');\n\n    var scrollBox = Lib.ensureSingle(legend, 'g', 'scrollbox');\n\n    var scrollBar = Lib.ensureSingle(legend, 'rect', 'scrollbar', function(s) {\n        s.attr({\n            rx: 20,\n            ry: 3,\n            width: 0,\n            height: 0\n        })\n        .call(Color.fill, '#808BA4');\n    });\n\n    var groups = scrollBox.selectAll('g.groups')\n        .data(legendData);\n\n    groups.enter().append('g')\n        .attr('class', 'groups');\n\n    groups.exit().remove();\n\n    var traces = groups.selectAll('g.traces')\n        .data(Lib.identity);\n\n    traces.enter().append('g').attr('class', 'traces');\n    traces.exit().remove();\n\n    traces.style('opacity', function(d) {\n        var trace = d[0].trace;\n        if(Registry.traceIs(trace, 'pie')) {\n            return hiddenSlices.indexOf(d[0].label) !== -1 ? 0.5 : 1;\n        } else {\n            return trace.visible === 'legendonly' ? 0.5 : 1;\n        }\n    })\n    .each(function() {\n        d3.select(this)\n            .call(drawTexts, gd, maxLength)\n            .call(setupTraceToggle, gd);\n    })\n    .call(style, gd);\n\n    Lib.syncOrAsync([Plots.previousPromises,\n        function() {\n            if(firstRender) {\n                computeLegendDimensions(gd, groups, traces);\n                expandMargin(gd);\n            }\n\n            // Position and size the legend\n            var lxMin = 0;\n            var lxMax = fullLayout.width;\n            var lyMin = 0;\n            var lyMax = fullLayout.height;\n\n            computeLegendDimensions(gd, groups, traces);\n\n            if(opts._height > lyMax) {\n                // If the legend doesn't fit in the plot area,\n                // do not expand the vertical margins.\n                expandHorizontalMargin(gd);\n            } else {\n                expandMargin(gd);\n            }\n\n            // Scroll section must be executed after repositionLegend.\n            // It requires the legend width, height, x and y to position the scrollbox\n            // and these values are mutated in repositionLegend.\n            var gs = fullLayout._size;\n            var lx = gs.l + gs.w * opts.x;\n            var ly = gs.t + gs.h * (1 - opts.y);\n\n            if(Lib.isRightAnchor(opts)) {\n                lx -= opts._width;\n            }\n            else if(Lib.isCenterAnchor(opts)) {\n                lx -= opts._width / 2;\n            }\n\n            if(Lib.isBottomAnchor(opts)) {\n                ly -= opts._height;\n            }\n            else if(Lib.isMiddleAnchor(opts)) {\n                ly -= opts._height / 2;\n            }\n\n            // Make sure the legend left and right sides are visible\n            var legendWidth = opts._width;\n            var legendWidthMax = gs.w;\n\n            if(legendWidth > legendWidthMax) {\n                lx = gs.l;\n                legendWidth = legendWidthMax;\n            }\n            else {\n                if(lx + legendWidth > lxMax) lx = lxMax - legendWidth;\n                if(lx < lxMin) lx = lxMin;\n                legendWidth = Math.min(lxMax - lx, opts._width);\n            }\n\n            // Make sure the legend top and bottom are visible\n            // (legends with a scroll bar are not allowed to stretch beyond the extended\n            // margins)\n            var legendHeight = opts._height;\n            var legendHeightMax = gs.h;\n\n            if(legendHeight > legendHeightMax) {\n                ly = gs.t;\n                legendHeight = legendHeightMax;\n            }\n            else {\n                if(ly + legendHeight > lyMax) ly = lyMax - legendHeight;\n                if(ly < lyMin) ly = lyMin;\n                legendHeight = Math.min(lyMax - ly, opts._height);\n            }\n\n            // Set size and position of all the elements that make up a legend:\n            // legend, background and border, scroll box and scroll bar\n            Drawing.setTranslate(legend, lx, ly);\n\n            // to be safe, remove previous listeners\n            scrollBar.on('.drag', null);\n            legend.on('wheel', null);\n\n            if(opts._height <= legendHeight || gd._context.staticPlot) {\n                // if scrollbar should not be shown.\n                bg.attr({\n                    width: legendWidth - opts.borderwidth,\n                    height: legendHeight - opts.borderwidth,\n                    x: opts.borderwidth / 2,\n                    y: opts.borderwidth / 2\n                });\n\n                Drawing.setTranslate(scrollBox, 0, 0);\n\n                clipPath.select('rect').attr({\n                    width: legendWidth - 2 * opts.borderwidth,\n                    height: legendHeight - 2 * opts.borderwidth,\n                    x: opts.borderwidth,\n                    y: opts.borderwidth\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                Drawing.setRect(scrollBar, 0, 0, 0, 0);\n                delete opts._scrollY;\n            }\n            else {\n                var scrollBarHeight = Math.max(constants.scrollBarMinHeight,\n                    legendHeight * legendHeight / opts._height);\n                var scrollBarYMax = legendHeight -\n                    scrollBarHeight -\n                    2 * constants.scrollBarMargin;\n                var scrollBoxYMax = opts._height - legendHeight;\n                var scrollRatio = scrollBarYMax / scrollBoxYMax;\n\n                var scrollBoxY = Math.min(opts._scrollY || 0, scrollBoxYMax);\n\n                // increase the background and clip-path width\n                // by the scrollbar width and margin\n                bg.attr({\n                    width: legendWidth -\n                        2 * opts.borderwidth +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendHeight - opts.borderwidth,\n                    x: opts.borderwidth / 2,\n                    y: opts.borderwidth / 2\n                });\n\n                clipPath.select('rect').attr({\n                    width: legendWidth -\n                        2 * opts.borderwidth +\n                        constants.scrollBarWidth +\n                        constants.scrollBarMargin,\n                    height: legendHeight - 2 * opts.borderwidth,\n                    x: opts.borderwidth,\n                    y: opts.borderwidth + scrollBoxY\n                });\n\n                Drawing.setClipUrl(scrollBox, clipId, gd);\n\n                scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n\n                legend.on('wheel', function() {\n                    scrollBoxY = Lib.constrain(\n                        opts._scrollY +\n                            d3.event.deltaY / scrollBarYMax * scrollBoxYMax,\n                        0, scrollBoxYMax);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                    if(scrollBoxY !== 0 && scrollBoxY !== scrollBoxYMax) {\n                        d3.event.preventDefault();\n                    }\n                });\n\n                var eventY0, scrollBoxY0;\n\n                var drag = d3.behavior.drag()\n                .on('dragstart', function() {\n                    eventY0 = d3.event.sourceEvent.clientY;\n                    scrollBoxY0 = scrollBoxY;\n                })\n                .on('drag', function() {\n                    var e = d3.event.sourceEvent;\n                    if(e.buttons === 2 || e.ctrlKey) return;\n\n                    scrollBoxY = Lib.constrain(\n                        (e.clientY - eventY0) / scrollRatio + scrollBoxY0,\n                        0, scrollBoxYMax);\n                    scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio);\n                });\n\n                scrollBar.call(drag);\n            }\n\n\n            function scrollHandler(scrollBoxY, scrollBarHeight, scrollRatio) {\n                opts._scrollY = gd._fullLayout.legend._scrollY = scrollBoxY;\n                Drawing.setTranslate(scrollBox, 0, -scrollBoxY);\n\n                Drawing.setRect(\n                    scrollBar,\n                    legendWidth,\n                    constants.scrollBarMargin + scrollBoxY * scrollRatio,\n                    constants.scrollBarWidth,\n                    scrollBarHeight\n                );\n                clipPath.select('rect').attr({\n                    y: opts.borderwidth + scrollBoxY\n                });\n            }\n\n            if(gd._context.edits.legendPosition) {\n                var xf, yf, x0, y0;\n\n                legend.classed('cursor-move', true);\n\n                dragElement.init({\n                    element: legend.node(),\n                    gd: gd,\n                    prepFn: function() {\n                        var transform = Drawing.getTranslate(legend);\n\n                        x0 = transform.x;\n                        y0 = transform.y;\n                    },\n                    moveFn: function(dx, dy) {\n                        var newX = x0 + dx;\n                        var newY = y0 + dy;\n\n                        Drawing.setTranslate(legend, newX, newY);\n\n                        xf = dragElement.align(newX, 0, gs.l, gs.l + gs.w, opts.xanchor);\n                        yf = dragElement.align(newY, 0, gs.t + gs.h, gs.t, opts.yanchor);\n                    },\n                    doneFn: function() {\n                        if(xf !== undefined && yf !== undefined) {\n                            Registry.call('_guiRelayout', gd, {'legend.x': xf, 'legend.y': yf});\n                        }\n                    },\n                    clickFn: function(numClicks, e) {\n                        var clickedTrace = fullLayout._infolayer.selectAll('g.traces').filter(function() {\n                            var bbox = this.getBoundingClientRect();\n                            return (\n                                e.clientX >= bbox.left && e.clientX <= bbox.right &&\n                                e.clientY >= bbox.top && e.clientY <= bbox.bottom\n                            );\n                        });\n                        if(clickedTrace.size() > 0) {\n                            clickOrDoubleClick(gd, legend, clickedTrace, numClicks, e);\n                        }\n                    }\n                });\n            }\n        }], gd);\n};\n\nfunction clickOrDoubleClick(gd, legend, legendItem, numClicks, evt) {\n    var trace = legendItem.data()[0][0].trace;\n\n    var evtData = {\n        event: evt,\n        node: legendItem.node(),\n        curveNumber: trace.index,\n        expandedIndex: trace._expandedIndex,\n        data: gd.data,\n        layout: gd.layout,\n        frames: gd._transitionData._frames,\n        config: gd._context,\n        fullData: gd._fullData,\n        fullLayout: gd._fullLayout\n    };\n\n    if(trace._group) {\n        evtData.group = trace._group;\n    }\n    if(trace.type === 'pie') {\n        evtData.label = legendItem.datum()[0].label;\n    }\n\n    var clickVal = Events.triggerHandler(gd, 'plotly_legendclick', evtData);\n    if(clickVal === false) return;\n\n    if(numClicks === 1) {\n        legend._clickTimeout = setTimeout(function() {\n            handleClick(legendItem, gd, numClicks);\n        }, DBLCLICKDELAY);\n    }\n    else if(numClicks === 2) {\n        if(legend._clickTimeout) clearTimeout(legend._clickTimeout);\n        gd._legendMouseDownTime = 0;\n\n        var dblClickVal = Events.triggerHandler(gd, 'plotly_legenddoubleclick', evtData);\n        if(dblClickVal !== false) handleClick(legendItem, gd, numClicks);\n    }\n}\n\nfunction drawTexts(g, gd, maxLength) {\n    var legendItem = g.data()[0][0];\n    var fullLayout = gd._fullLayout;\n    var trace = legendItem.trace;\n    var isPie = Registry.traceIs(trace, 'pie');\n    var traceIndex = trace.index;\n    var name = isPie ? legendItem.label : trace.name;\n    var isEditable = gd._context.edits.legendText && !isPie;\n\n    var textEl = Lib.ensureSingle(g, 'text', 'legendtext');\n\n    textEl.attr('text-anchor', 'start')\n        .classed('user-select-none', true)\n        .call(Drawing.font, fullLayout.legend.font)\n        .text(isEditable ? ensureLength(name, maxLength) : name);\n\n    svgTextUtils.positionText(textEl, constants.textOffsetX, 0);\n\n    function textLayout(s) {\n        svgTextUtils.convertToTspans(s, gd, function() {\n            computeTextDimensions(g, gd);\n        });\n    }\n\n    if(isEditable) {\n        textEl.call(svgTextUtils.makeEditable, {gd: gd, text: name})\n            .call(textLayout)\n            .on('edit', function(newName) {\n                this.text(ensureLength(newName, maxLength))\n                    .call(textLayout);\n\n                var fullInput = legendItem.trace._fullInput || {};\n                var update = {};\n\n                if(Registry.hasTransform(fullInput, 'groupby')) {\n                    var groupbyIndices = Registry.getTransformIndices(fullInput, 'groupby');\n                    var index = groupbyIndices[groupbyIndices.length - 1];\n\n                    var kcont = Lib.keyedContainer(fullInput, 'transforms[' + index + '].styles', 'target', 'value.name');\n\n                    kcont.set(legendItem.trace._group, newName);\n\n                    update = kcont.constructUpdate();\n                } else {\n                    update.name = newName;\n                }\n\n                return Registry.call('_guiRestyle', gd, update, traceIndex);\n            });\n    } else {\n        textLayout(textEl);\n    }\n}\n\n/*\n * Make sure we have a reasonably clickable region.\n * If this string is missing or very short, pad it with spaces out to at least\n * 4 characters, up to the max length of other labels, on the assumption that\n * most characters are wider than spaces so a string of spaces will usually be\n * no wider than the real labels.\n */\nfunction ensureLength(str, maxLength) {\n    var targetLength = Math.max(4, maxLength);\n    if(str && str.trim().length >= targetLength / 2) return str;\n    str = str || '';\n    for(var i = targetLength - str.length; i > 0; i--) str += ' ';\n    return str;\n}\n\nfunction setupTraceToggle(g, gd) {\n    var newMouseDownTime;\n    var numClicks = 1;\n\n    var traceToggle = Lib.ensureSingle(g, 'rect', 'legendtoggle', function(s) {\n        s.style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .call(Color.fill, 'rgba(0,0,0,0)');\n    });\n\n    traceToggle.on('mousedown', function() {\n        newMouseDownTime = (new Date()).getTime();\n        if(newMouseDownTime - gd._legendMouseDownTime < DBLCLICKDELAY) {\n            // in a click train\n            numClicks += 1;\n        }\n        else {\n            // new click train\n            numClicks = 1;\n            gd._legendMouseDownTime = newMouseDownTime;\n        }\n    });\n    traceToggle.on('mouseup', function() {\n        if(gd._dragged || gd._editing) return;\n        var legend = gd._fullLayout.legend;\n\n        if((new Date()).getTime() - gd._legendMouseDownTime > DBLCLICKDELAY) {\n            numClicks = Math.max(numClicks - 1, 1);\n        }\n\n        clickOrDoubleClick(gd, legend, g, numClicks, d3.event);\n    });\n}\n\nfunction computeTextDimensions(g, gd) {\n    var legendItem = g.data()[0][0];\n\n    if(!legendItem.trace.showlegend) {\n        g.remove();\n        return;\n    }\n\n    var mathjaxGroup = g.select('g[class*=math-group]');\n    var mathjaxNode = mathjaxGroup.node();\n    var opts = gd._fullLayout.legend;\n    var lineHeight = opts.font.size * LINE_SPACING;\n    var height, width;\n\n    if(mathjaxNode) {\n        var mathjaxBB = Drawing.bBox(mathjaxNode);\n\n        height = mathjaxBB.height;\n        width = mathjaxBB.width;\n\n        Drawing.setTranslate(mathjaxGroup, 0, (height / 4));\n    } else {\n        var text = g.select('.legendtext');\n        var textLines = svgTextUtils.lineCount(text);\n        var textNode = text.node();\n\n        height = lineHeight * textLines;\n        width = textNode ? Drawing.bBox(textNode).width : 0;\n\n        // approximation to height offset to center the font\n        // to avoid getBoundingClientRect\n        var textY = lineHeight * (0.3 + (1 - textLines) / 2);\n        svgTextUtils.positionText(text, constants.textOffsetX, textY);\n    }\n\n    legendItem.lineHeight = lineHeight;\n    legendItem.height = Math.max(height, 16) + 3;\n    legendItem.width = width;\n}\n\nfunction computeLegendDimensions(gd, groups, traces) {\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n    var borderwidth = opts.borderwidth;\n    var isGrouped = helpers.isGrouped(opts);\n\n    var extraWidth = 0;\n\n    opts._width = 0;\n    opts._height = 0;\n\n    if(helpers.isVertical(opts)) {\n        if(isGrouped) {\n            groups.each(function(d, i) {\n                Drawing.setTranslate(this, 0, i * opts.tracegroupgap);\n            });\n        }\n\n        traces.each(function(d) {\n            var legendItem = d[0];\n            var textHeight = legendItem.height;\n            var textWidth = legendItem.width;\n\n            Drawing.setTranslate(this,\n                borderwidth,\n                (5 + borderwidth + opts._height + textHeight / 2));\n\n            opts._height += textHeight;\n            opts._width = Math.max(opts._width, textWidth);\n        });\n\n        opts._width += 45 + borderwidth * 2;\n        opts._height += 10 + borderwidth * 2;\n\n        if(isGrouped) {\n            opts._height += (opts._lgroupsLength - 1) * opts.tracegroupgap;\n        }\n\n        extraWidth = 40;\n    }\n    else if(isGrouped) {\n        var groupXOffsets = [opts._width];\n        var groupData = groups.data();\n\n        for(var i = 0, n = groupData.length; i < n; i++) {\n            var textWidths = groupData[i].map(function(legendItemArray) {\n                return legendItemArray[0].width;\n            });\n\n            var groupWidth = 40 + Math.max.apply(null, textWidths);\n\n            opts._width += opts.tracegroupgap + groupWidth;\n\n            groupXOffsets.push(opts._width);\n        }\n\n        groups.each(function(d, i) {\n            Drawing.setTranslate(this, groupXOffsets[i], 0);\n        });\n\n        groups.each(function() {\n            var group = d3.select(this);\n            var groupTraces = group.selectAll('g.traces');\n            var groupHeight = 0;\n\n            groupTraces.each(function(d) {\n                var legendItem = d[0];\n                var textHeight = legendItem.height;\n\n                Drawing.setTranslate(this,\n                    0,\n                    (5 + borderwidth + groupHeight + textHeight / 2));\n\n                groupHeight += textHeight;\n            });\n\n            opts._height = Math.max(opts._height, groupHeight);\n        });\n\n        opts._height += 10 + borderwidth * 2;\n        opts._width += borderwidth * 2;\n    }\n    else {\n        var rowHeight = 0;\n        var maxTraceHeight = 0;\n        var maxTraceWidth = 0;\n        var offsetX = 0;\n        var fullTracesWidth = 0;\n        var traceGap = opts.tracegroupgap || 5;\n\n        // calculate largest width for traces and use for width of all legend items\n        traces.each(function(d) {\n            maxTraceWidth = Math.max(40 + d[0].width, maxTraceWidth);\n            fullTracesWidth += 40 + d[0].width + traceGap;\n        });\n\n        // check if legend fits in one row\n        var oneRowLegend = fullLayout._size.w > borderwidth + fullTracesWidth - traceGap;\n\n        traces.each(function(d) {\n            var legendItem = d[0];\n            var traceWidth = oneRowLegend ? 40 + d[0].width : maxTraceWidth;\n\n            if((borderwidth + offsetX + traceGap + traceWidth) > fullLayout._size.w) {\n                offsetX = 0;\n                rowHeight += maxTraceHeight;\n                opts._height += maxTraceHeight;\n                // reset for next row\n                maxTraceHeight = 0;\n            }\n\n            Drawing.setTranslate(this,\n                (borderwidth + offsetX),\n                (5 + borderwidth + legendItem.height / 2) + rowHeight);\n\n            opts._width += traceGap + traceWidth;\n\n            // keep track of tallest trace in group\n            offsetX += traceGap + traceWidth;\n            maxTraceHeight = Math.max(legendItem.height, maxTraceHeight);\n        });\n\n        if(oneRowLegend) {\n            opts._height = maxTraceHeight;\n        } else {\n            opts._height += maxTraceHeight;\n        }\n\n        opts._width += borderwidth * 2;\n        opts._height += 10 + borderwidth * 2;\n    }\n\n    // make sure we're only getting full pixels\n    opts._width = Math.ceil(opts._width);\n    opts._height = Math.ceil(opts._height);\n\n    var isEditable = (\n        gd._context.edits.legendText ||\n        gd._context.edits.legendPosition\n    );\n\n    traces.each(function(d) {\n        var legendItem = d[0];\n        var bg = d3.select(this).select('.legendtoggle');\n\n        Drawing.setRect(bg,\n            0,\n            -legendItem.height / 2,\n            (isEditable ? 0 : opts._width) + extraWidth,\n            legendItem.height\n        );\n    });\n}\n\nfunction expandMargin(gd) {\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n\n    var xanchor = 'left';\n    if(Lib.isRightAnchor(opts)) {\n        xanchor = 'right';\n    }\n    else if(Lib.isCenterAnchor(opts)) {\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(Lib.isBottomAnchor(opts)) {\n        yanchor = 'bottom';\n    }\n    else if(Lib.isMiddleAnchor(opts)) {\n        yanchor = 'middle';\n    }\n\n    // lastly check if the margin auto-expand has changed\n    Plots.autoMargin(gd, 'legend', {\n        x: opts.x,\n        y: opts.y,\n        l: opts._width * (FROM_TL[xanchor]),\n        r: opts._width * (FROM_BR[xanchor]),\n        b: opts._height * (FROM_BR[yanchor]),\n        t: opts._height * (FROM_TL[yanchor])\n    });\n}\n\nfunction expandHorizontalMargin(gd) {\n    var fullLayout = gd._fullLayout;\n    var opts = fullLayout.legend;\n\n    var xanchor = 'left';\n    if(Lib.isRightAnchor(opts)) {\n        xanchor = 'right';\n    }\n    else if(Lib.isCenterAnchor(opts)) {\n        xanchor = 'center';\n    }\n\n    // lastly check if the margin auto-expand has changed\n    Plots.autoMargin(gd, 'legend', {\n        x: opts.x,\n        y: 0.5,\n        l: opts._width * (FROM_TL[xanchor]),\n        r: opts._width * (FROM_BR[xanchor]),\n        b: 0,\n        t: 0\n    });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nmodule.exports = function handleSampleDefaults(traceIn, traceOut, coerce, layout) {\n  var x = coerce('x');\n  var y = coerce('y');\n  var xlen = Lib.minRowLength(x);\n  var ylen = Lib.minRowLength(y);\n\n  // we could try to accept x0 and dx, etc...\n  // but that's a pretty weird use case.\n  // for now require both x and y explicitly specified.\n  if (!xlen || !ylen) {\n    traceOut.visible = false;\n    return;\n  }\n  traceOut._length = Math.min(xlen, ylen);\n  var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n  handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout);\n\n  // if marker.color is an array, we can use it in aggregation instead of z\n  var hasAggregationData = coerce('z') || coerce('marker.color');\n  if (hasAggregationData) coerce('histfunc');\n  coerce('histnorm');\n\n  // Note: bin defaults are now handled in Histogram2D.crossTraceDefaults\n  // autobin(x|y) are only included here to appease Plotly.validate\n  coerce('autobinx');\n  coerce('autobiny');\n};","map":{"version":3,"names":["Registry","require","Lib","module","exports","handleSampleDefaults","traceIn","traceOut","coerce","layout","x","y","xlen","minRowLength","ylen","visible","_length","Math","min","handleCalendarDefaults","getComponentMethod","hasAggregationData"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/histogram2d/sample_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nmodule.exports = function handleSampleDefaults(traceIn, traceOut, coerce, layout) {\n    var x = coerce('x');\n    var y = coerce('y');\n    var xlen = Lib.minRowLength(x);\n    var ylen = Lib.minRowLength(y);\n\n    // we could try to accept x0 and dx, etc...\n    // but that's a pretty weird use case.\n    // for now require both x and y explicitly specified.\n    if(!xlen || !ylen) {\n        traceOut.visible = false;\n        return;\n    }\n\n    traceOut._length = Math.min(xlen, ylen);\n\n    var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n    handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout);\n\n    // if marker.color is an array, we can use it in aggregation instead of z\n    var hasAggregationData = coerce('z') || coerce('marker.color');\n\n    if(hasAggregationData) coerce('histfunc');\n    coerce('histnorm');\n\n    // Note: bin defaults are now handled in Histogram2D.crossTraceDefaults\n    // autobin(x|y) are only included here to appease Plotly.validate\n    coerce('autobinx');\n    coerce('autobiny');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAE9BE,MAAM,CAACC,OAAO,GAAG,SAASC,oBAAoB,CAACC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,MAAM,EAAE;EAC9E,IAAIC,CAAC,GAAGF,MAAM,CAAC,GAAG,CAAC;EACnB,IAAIG,CAAC,GAAGH,MAAM,CAAC,GAAG,CAAC;EACnB,IAAII,IAAI,GAAGV,GAAG,CAACW,YAAY,CAACH,CAAC,CAAC;EAC9B,IAAII,IAAI,GAAGZ,GAAG,CAACW,YAAY,CAACF,CAAC,CAAC;;EAE9B;EACA;EACA;EACA,IAAG,CAACC,IAAI,IAAI,CAACE,IAAI,EAAE;IACfP,QAAQ,CAACQ,OAAO,GAAG,KAAK;IACxB;EACJ;EAEAR,QAAQ,CAACS,OAAO,GAAGC,IAAI,CAACC,GAAG,CAACN,IAAI,EAAEE,IAAI,CAAC;EAEvC,IAAIK,sBAAsB,GAAGnB,QAAQ,CAACoB,kBAAkB,CAAC,WAAW,EAAE,qBAAqB,CAAC;EAC5FD,sBAAsB,CAACb,OAAO,EAAEC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAEE,MAAM,CAAC;;EAE7D;EACA,IAAIY,kBAAkB,GAAGb,MAAM,CAAC,GAAG,CAAC,IAAIA,MAAM,CAAC,cAAc,CAAC;EAE9D,IAAGa,kBAAkB,EAAEb,MAAM,CAAC,UAAU,CAAC;EACzCA,MAAM,CAAC,UAAU,CAAC;;EAElB;EACA;EACAA,MAAM,CAAC,UAAU,CAAC;EAClBA,MAAM,CAAC,UAAU,CAAC;AACtB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
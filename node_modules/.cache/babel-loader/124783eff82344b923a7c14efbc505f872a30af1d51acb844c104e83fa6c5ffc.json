{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../cartesian/axes');\nvar str2RGBArray = require('../../lib/str2rgbarray');\nfunction Axes2DOptions(scene) {\n  this.scene = scene;\n  this.gl = scene.gl;\n  this.pixelRatio = scene.pixelRatio;\n  this.screenBox = [0, 0, 1, 1];\n  this.viewBox = [0, 0, 1, 1];\n  this.dataBox = [-1, -1, 1, 1];\n  this.borderLineEnable = [false, false, false, false];\n  this.borderLineWidth = [1, 1, 1, 1];\n  this.borderLineColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.ticks = [[], []];\n  this.tickEnable = [true, true, false, false];\n  this.tickPad = [15, 15, 15, 15];\n  this.tickAngle = [0, 0, 0, 0];\n  this.tickColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.tickMarkLength = [0, 0, 0, 0];\n  this.tickMarkWidth = [0, 0, 0, 0];\n  this.tickMarkColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.labels = ['x', 'y'];\n  this.labelEnable = [true, true, false, false];\n  this.labelAngle = [0, Math.PI / 2, 0, 3.0 * Math.PI / 2];\n  this.labelPad = [15, 15, 15, 15];\n  this.labelSize = [12, 12];\n  this.labelFont = ['sans-serif', 'sans-serif'];\n  this.labelColor = [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1]];\n  this.title = '';\n  this.titleEnable = true;\n  this.titleCenter = [0, 0, 0, 0];\n  this.titleAngle = 0;\n  this.titleColor = [0, 0, 0, 1];\n  this.titleFont = 'sans-serif';\n  this.titleSize = 18;\n  this.gridLineEnable = [true, true];\n  this.gridLineColor = [[0, 0, 0, 0.5], [0, 0, 0, 0.5]];\n  this.gridLineWidth = [1, 1];\n  this.zeroLineEnable = [true, true];\n  this.zeroLineWidth = [1, 1];\n  this.zeroLineColor = [[0, 0, 0, 1], [0, 0, 0, 1]];\n  this.borderColor = false;\n  this.backgroundColor = [0, 0, 0, 0];\n  this.static = this.scene.staticPlot;\n}\nvar proto = Axes2DOptions.prototype;\nvar AXES = ['xaxis', 'yaxis'];\nproto.merge = function (options) {\n  // titles are rendered in SVG\n  this.titleEnable = false;\n  this.backgroundColor = str2RGBArray(options.plot_bgcolor);\n  var axisName, ax, axTitle, axMirror;\n  var hasAxisInDfltPos, hasAxisInAltrPos, hasSharedAxis, mirrorLines, mirrorTicks;\n  var i, j;\n  for (i = 0; i < 2; ++i) {\n    axisName = AXES[i];\n    var axisLetter = axisName.charAt(0);\n\n    // get options relevant to this subplot,\n    // '_name' is e.g. xaxis, xaxis2, yaxis, yaxis4 ...\n    ax = options[this.scene[axisName]._name];\n    axTitle = ax.title.text === this.scene.fullLayout._dfltTitle[axisLetter] ? '' : ax.title.text;\n    for (j = 0; j <= 2; j += 2) {\n      this.labelEnable[i + j] = false;\n      this.labels[i + j] = axTitle;\n      this.labelColor[i + j] = str2RGBArray(ax.title.font.color);\n      this.labelFont[i + j] = ax.title.font.family;\n      this.labelSize[i + j] = ax.title.font.size;\n      this.labelPad[i + j] = this.getLabelPad(axisName, ax);\n      this.tickEnable[i + j] = false;\n      this.tickColor[i + j] = str2RGBArray((ax.tickfont || {}).color);\n      this.tickAngle[i + j] = ax.tickangle === 'auto' ? 0 : Math.PI * -ax.tickangle / 180;\n      this.tickPad[i + j] = this.getTickPad(ax);\n      this.tickMarkLength[i + j] = 0;\n      this.tickMarkWidth[i + j] = ax.tickwidth || 0;\n      this.tickMarkColor[i + j] = str2RGBArray(ax.tickcolor);\n      this.borderLineEnable[i + j] = false;\n      this.borderLineColor[i + j] = str2RGBArray(ax.linecolor);\n      this.borderLineWidth[i + j] = ax.linewidth || 0;\n    }\n    hasSharedAxis = this.hasSharedAxis(ax);\n    hasAxisInDfltPos = this.hasAxisInDfltPos(axisName, ax) && !hasSharedAxis;\n    hasAxisInAltrPos = this.hasAxisInAltrPos(axisName, ax) && !hasSharedAxis;\n    axMirror = ax.mirror || false;\n    mirrorLines = hasSharedAxis ? String(axMirror).indexOf('all') !== -1 :\n    // 'all' or 'allticks'\n    !!axMirror; // all but false\n    mirrorTicks = hasSharedAxis ? axMirror === 'allticks' : String(axMirror).indexOf('ticks') !== -1; // 'ticks' or 'allticks'\n\n    // Axis titles and tick labels can only appear of one side of the scene\n    //  and are never show on subplots that share existing axes.\n\n    if (hasAxisInDfltPos) this.labelEnable[i] = true;else if (hasAxisInAltrPos) this.labelEnable[i + 2] = true;\n    if (hasAxisInDfltPos) this.tickEnable[i] = ax.showticklabels;else if (hasAxisInAltrPos) this.tickEnable[i + 2] = ax.showticklabels;\n\n    // Grid lines and ticks can appear on both sides of the scene\n    //  and can appear on subplot that share existing axes via `ax.mirror`.\n\n    if (hasAxisInDfltPos || mirrorLines) this.borderLineEnable[i] = ax.showline;\n    if (hasAxisInAltrPos || mirrorLines) this.borderLineEnable[i + 2] = ax.showline;\n    if (hasAxisInDfltPos || mirrorTicks) this.tickMarkLength[i] = this.getTickMarkLength(ax);\n    if (hasAxisInAltrPos || mirrorTicks) this.tickMarkLength[i + 2] = this.getTickMarkLength(ax);\n    this.gridLineEnable[i] = ax.showgrid;\n    this.gridLineColor[i] = str2RGBArray(ax.gridcolor);\n    this.gridLineWidth[i] = ax.gridwidth;\n    this.zeroLineEnable[i] = ax.zeroline;\n    this.zeroLineColor[i] = str2RGBArray(ax.zerolinecolor);\n    this.zeroLineWidth[i] = ax.zerolinewidth;\n  }\n};\n\n// is an axis shared with an already-drawn subplot ?\nproto.hasSharedAxis = function (ax) {\n  var scene = this.scene;\n  var subplotIds = scene.fullLayout._subplots.gl2d;\n  var list = Axes.findSubplotsWithAxis(subplotIds, ax);\n\n  // if index === 0, then the subplot is already drawn as subplots\n  // are drawn in order.\n  return list.indexOf(scene.id) !== 0;\n};\n\n// has an axis in default position (i.e. bottom/left) ?\nproto.hasAxisInDfltPos = function (axisName, ax) {\n  var axSide = ax.side;\n  if (axisName === 'xaxis') return axSide === 'bottom';else if (axisName === 'yaxis') return axSide === 'left';\n};\n\n// has an axis in alternate position (i.e. top/right) ?\nproto.hasAxisInAltrPos = function (axisName, ax) {\n  var axSide = ax.side;\n  if (axisName === 'xaxis') return axSide === 'top';else if (axisName === 'yaxis') return axSide === 'right';\n};\nproto.getLabelPad = function (axisName, ax) {\n  var offsetBase = 1.5;\n  var fontSize = ax.title.font.size;\n  var showticklabels = ax.showticklabels;\n  if (axisName === 'xaxis') {\n    return ax.side === 'top' ? -10 + fontSize * (offsetBase + (showticklabels ? 1 : 0)) : -10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n  } else if (axisName === 'yaxis') {\n    return ax.side === 'right' ? 10 + fontSize * (offsetBase + (showticklabels ? 1 : 0.5)) : 10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n  }\n};\nproto.getTickPad = function (ax) {\n  return ax.ticks === 'outside' ? 10 + ax.ticklen : 15;\n};\nproto.getTickMarkLength = function (ax) {\n  if (!ax.ticks) return 0;\n  var ticklen = ax.ticklen;\n  return ax.ticks === 'inside' ? -ticklen : ticklen;\n};\nfunction createAxes2D(scene) {\n  return new Axes2DOptions(scene);\n}\nmodule.exports = createAxes2D;","map":{"version":3,"names":["Axes","require","str2RGBArray","Axes2DOptions","scene","gl","pixelRatio","screenBox","viewBox","dataBox","borderLineEnable","borderLineWidth","borderLineColor","ticks","tickEnable","tickPad","tickAngle","tickColor","tickMarkLength","tickMarkWidth","tickMarkColor","labels","labelEnable","labelAngle","Math","PI","labelPad","labelSize","labelFont","labelColor","title","titleEnable","titleCenter","titleAngle","titleColor","titleFont","titleSize","gridLineEnable","gridLineColor","gridLineWidth","zeroLineEnable","zeroLineWidth","zeroLineColor","borderColor","backgroundColor","static","staticPlot","proto","prototype","AXES","merge","options","plot_bgcolor","axisName","ax","axTitle","axMirror","hasAxisInDfltPos","hasAxisInAltrPos","hasSharedAxis","mirrorLines","mirrorTicks","i","j","axisLetter","charAt","_name","text","fullLayout","_dfltTitle","font","color","family","size","getLabelPad","tickfont","tickangle","getTickPad","tickwidth","tickcolor","linecolor","linewidth","mirror","String","indexOf","showticklabels","showline","getTickMarkLength","showgrid","gridcolor","gridwidth","zeroline","zerolinecolor","zerolinewidth","subplotIds","_subplots","gl2d","list","findSubplotsWithAxis","id","axSide","side","offsetBase","fontSize","ticklen","createAxes2D","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/gl2d/convert.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Axes = require('../cartesian/axes');\n\nvar str2RGBArray = require('../../lib/str2rgbarray');\n\nfunction Axes2DOptions(scene) {\n    this.scene = scene;\n    this.gl = scene.gl;\n    this.pixelRatio = scene.pixelRatio;\n\n    this.screenBox = [0, 0, 1, 1];\n    this.viewBox = [0, 0, 1, 1];\n    this.dataBox = [-1, -1, 1, 1];\n\n    this.borderLineEnable = [false, false, false, false];\n    this.borderLineWidth = [1, 1, 1, 1];\n    this.borderLineColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.ticks = [[], []];\n    this.tickEnable = [true, true, false, false];\n    this.tickPad = [15, 15, 15, 15];\n    this.tickAngle = [0, 0, 0, 0];\n    this.tickColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n    this.tickMarkLength = [0, 0, 0, 0];\n    this.tickMarkWidth = [0, 0, 0, 0];\n    this.tickMarkColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.labels = ['x', 'y'];\n    this.labelEnable = [true, true, false, false];\n    this.labelAngle = [0, Math.PI / 2, 0, 3.0 * Math.PI / 2];\n    this.labelPad = [15, 15, 15, 15];\n    this.labelSize = [12, 12];\n    this.labelFont = ['sans-serif', 'sans-serif'];\n    this.labelColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.title = '';\n    this.titleEnable = true;\n    this.titleCenter = [0, 0, 0, 0];\n    this.titleAngle = 0;\n    this.titleColor = [0, 0, 0, 1];\n    this.titleFont = 'sans-serif';\n    this.titleSize = 18;\n\n    this.gridLineEnable = [true, true];\n    this.gridLineColor = [\n        [0, 0, 0, 0.5],\n        [0, 0, 0, 0.5]\n    ];\n    this.gridLineWidth = [1, 1];\n\n    this.zeroLineEnable = [true, true];\n    this.zeroLineWidth = [1, 1];\n    this.zeroLineColor = [\n        [0, 0, 0, 1],\n        [0, 0, 0, 1]\n    ];\n\n    this.borderColor = false;\n    this.backgroundColor = [0, 0, 0, 0];\n\n    this.static = this.scene.staticPlot;\n}\n\nvar proto = Axes2DOptions.prototype;\n\nvar AXES = ['xaxis', 'yaxis'];\n\nproto.merge = function(options) {\n\n    // titles are rendered in SVG\n    this.titleEnable = false;\n    this.backgroundColor = str2RGBArray(options.plot_bgcolor);\n\n    var axisName, ax, axTitle, axMirror;\n    var hasAxisInDfltPos, hasAxisInAltrPos, hasSharedAxis, mirrorLines, mirrorTicks;\n    var i, j;\n\n    for(i = 0; i < 2; ++i) {\n        axisName = AXES[i];\n        var axisLetter = axisName.charAt(0);\n\n        // get options relevant to this subplot,\n        // '_name' is e.g. xaxis, xaxis2, yaxis, yaxis4 ...\n        ax = options[this.scene[axisName]._name];\n\n        axTitle = ax.title.text === this.scene.fullLayout._dfltTitle[axisLetter] ? '' : ax.title.text;\n\n        for(j = 0; j <= 2; j += 2) {\n            this.labelEnable[i + j] = false;\n            this.labels[i + j] = axTitle;\n            this.labelColor[i + j] = str2RGBArray(ax.title.font.color);\n            this.labelFont[i + j] = ax.title.font.family;\n            this.labelSize[i + j] = ax.title.font.size;\n            this.labelPad[i + j] = this.getLabelPad(axisName, ax);\n\n            this.tickEnable[i + j] = false;\n            this.tickColor[i + j] = str2RGBArray((ax.tickfont || {}).color);\n            this.tickAngle[i + j] = (ax.tickangle === 'auto') ?\n                0 :\n                Math.PI * -ax.tickangle / 180;\n            this.tickPad[i + j] = this.getTickPad(ax);\n\n            this.tickMarkLength[i + j] = 0;\n            this.tickMarkWidth[i + j] = ax.tickwidth || 0;\n            this.tickMarkColor[i + j] = str2RGBArray(ax.tickcolor);\n\n            this.borderLineEnable[i + j] = false;\n            this.borderLineColor[i + j] = str2RGBArray(ax.linecolor);\n            this.borderLineWidth[i + j] = ax.linewidth || 0;\n        }\n\n        hasSharedAxis = this.hasSharedAxis(ax);\n        hasAxisInDfltPos = this.hasAxisInDfltPos(axisName, ax) && !hasSharedAxis;\n        hasAxisInAltrPos = this.hasAxisInAltrPos(axisName, ax) && !hasSharedAxis;\n\n        axMirror = ax.mirror || false;\n        mirrorLines = hasSharedAxis ?\n            (String(axMirror).indexOf('all') !== -1) :  // 'all' or 'allticks'\n            !!axMirror;                                 // all but false\n        mirrorTicks = hasSharedAxis ?\n            (axMirror === 'allticks') :\n            (String(axMirror).indexOf('ticks') !== -1); // 'ticks' or 'allticks'\n\n        // Axis titles and tick labels can only appear of one side of the scene\n        //  and are never show on subplots that share existing axes.\n\n        if(hasAxisInDfltPos) this.labelEnable[i] = true;\n        else if(hasAxisInAltrPos) this.labelEnable[i + 2] = true;\n\n        if(hasAxisInDfltPos) this.tickEnable[i] = ax.showticklabels;\n        else if(hasAxisInAltrPos) this.tickEnable[i + 2] = ax.showticklabels;\n\n        // Grid lines and ticks can appear on both sides of the scene\n        //  and can appear on subplot that share existing axes via `ax.mirror`.\n\n        if(hasAxisInDfltPos || mirrorLines) this.borderLineEnable[i] = ax.showline;\n        if(hasAxisInAltrPos || mirrorLines) this.borderLineEnable[i + 2] = ax.showline;\n\n        if(hasAxisInDfltPos || mirrorTicks) this.tickMarkLength[i] = this.getTickMarkLength(ax);\n        if(hasAxisInAltrPos || mirrorTicks) this.tickMarkLength[i + 2] = this.getTickMarkLength(ax);\n\n        this.gridLineEnable[i] = ax.showgrid;\n        this.gridLineColor[i] = str2RGBArray(ax.gridcolor);\n        this.gridLineWidth[i] = ax.gridwidth;\n\n        this.zeroLineEnable[i] = ax.zeroline;\n        this.zeroLineColor[i] = str2RGBArray(ax.zerolinecolor);\n        this.zeroLineWidth[i] = ax.zerolinewidth;\n    }\n};\n\n// is an axis shared with an already-drawn subplot ?\nproto.hasSharedAxis = function(ax) {\n    var scene = this.scene;\n    var subplotIds = scene.fullLayout._subplots.gl2d;\n    var list = Axes.findSubplotsWithAxis(subplotIds, ax);\n\n    // if index === 0, then the subplot is already drawn as subplots\n    // are drawn in order.\n    return (list.indexOf(scene.id) !== 0);\n};\n\n// has an axis in default position (i.e. bottom/left) ?\nproto.hasAxisInDfltPos = function(axisName, ax) {\n    var axSide = ax.side;\n\n    if(axisName === 'xaxis') return (axSide === 'bottom');\n    else if(axisName === 'yaxis') return (axSide === 'left');\n};\n\n// has an axis in alternate position (i.e. top/right) ?\nproto.hasAxisInAltrPos = function(axisName, ax) {\n    var axSide = ax.side;\n\n    if(axisName === 'xaxis') return (axSide === 'top');\n    else if(axisName === 'yaxis') return (axSide === 'right');\n};\n\nproto.getLabelPad = function(axisName, ax) {\n    var offsetBase = 1.5;\n    var fontSize = ax.title.font.size;\n    var showticklabels = ax.showticklabels;\n\n    if(axisName === 'xaxis') {\n        return (ax.side === 'top') ?\n            -10 + fontSize * (offsetBase + (showticklabels ? 1 : 0)) :\n            -10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n    }\n    else if(axisName === 'yaxis') {\n        return (ax.side === 'right') ?\n            10 + fontSize * (offsetBase + (showticklabels ? 1 : 0.5)) :\n            10 + fontSize * (offsetBase + (showticklabels ? 0.5 : 0));\n    }\n};\n\nproto.getTickPad = function(ax) {\n    return (ax.ticks === 'outside') ? 10 + ax.ticklen : 15;\n};\n\nproto.getTickMarkLength = function(ax) {\n    if(!ax.ticks) return 0;\n\n    var ticklen = ax.ticklen;\n\n    return (ax.ticks === 'inside') ? -ticklen : ticklen;\n};\n\n\nfunction createAxes2D(scene) {\n    return new Axes2DOptions(scene);\n}\n\nmodule.exports = createAxes2D;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
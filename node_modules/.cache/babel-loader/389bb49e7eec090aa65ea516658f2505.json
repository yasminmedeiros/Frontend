{"ast":null,"code":"import _objectSpread from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _createForOfIteratorHelper from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _slicedToArray from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{useEffect}from\"react\";import{useState}from\"react\";import{Spinner}from'../Spinner';import Chart from'react-apexcharts';import Switch from\"@material-ui/core/Switch\";import'./styles.css';import{NoDataMessage}from\"../NoDataMessage\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export var ChartPerYear=function ChartPerYear(props){var _useState=useState([{name:props.name,color:props.color,data:props.y}]),_useState2=_slicedToArray(_useState,2),series=_useState2[0],setSeries=_useState2[1];var _useState3=useState({chart:{type:props.type,height:450},plotOptions:{bar:{barHeight:'100%',distributed:true,horizontal:true,dataLabels:{position:'bottom'}}},colors:['#E5BEDD','#FFA8B8','#DCD9F8','#F7D8C3','#FFC8C3','#BCCEF4','#B5DCF9','#A9E5E3','#A2EDCE','#A0D995','#C5D084','#D2C797','#FAE187','#E8BA86','#D3BEAD','#8CC2C2'],title:{text:props.title,align:'center',floating:true,margin:20},dataLabels:{enabled:true,textAnchor:'start',style:{colors:['#000']},formatter:function formatter(val,opt){return opt.w.globals.labels[opt.dataPointIndex]+\":  \"+val.toLocaleString('pt-BR',{minimumFractionDigits:0});},offsetX:0,dropShadow:{enabled:false}},stroke:{width:1,colors:['#fff']},yaxis:{labels:{show:false}},xaxis:{categories:props.x,labels:{rotate:-60,rotateAlways:false,style:{fontSize:'10px',colors:[\"#304758\"],fontFamily:'Helvetica, Arial, sans-serif',fontWeight:'bold'}},style:{marginBottom:'50px'}},fill:{opacity:1},legend:{show:false},tooltip:{theme:'dark',x:{show:false},y:{title:{formatter:function formatter(val,opt){return val+':';}},formatter:function formatter(val){return typeof val===\"number\"?val.toFixed(0):val;}}}}),_useState4=_slicedToArray(_useState3,2),options=_useState4[0],setOptions=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),pieSeries=_useState6[0],setPieSeries=_useState6[1];var _useState7=useState({chart:{type:'donut'},responsive:[{breakpoint:480,options:{chart:{width:200},legend:{position:'bottom'}}}],colors:['#E5BEDD','#FFA8B8','#DCD9F8','#F7D8C3','#FFC8C3','#BCCEF4','#B5DCF9','#A9E5E3','#A2EDCE','#A0D995','#C5D084','#D2C797','#FAE187','#E8BA86','#D3BEAD','#8CC2C2'],title:{text:props.title,align:'center',floating:true},labels:props.x,dataLabels:{enabled:true,formatter:function formatter(val){return val.toFixed(2)+\"%\";},textAnchor:'middle',style:{fontSize:'14px',colors:['#000']},offsetX:0,dropShadow:{enabled:false}},tooltip:{enabled:true,style:{fontSize:'12px',colors:['#000']},theme:true},plotOptions:{pie:{customScale:0.9,donut:{labels:{show:true,name:{show:true,fontSize:'15px',colors:[\"#304758\"],fontFamily:'Helvetica, Arial, sans-serif',fontWeight:'bold',color:'#000'},value:{show:true,fontSize:'15px',colors:[\"#304758\"],fontFamily:'Helvetica, Arial, sans-serif',fontWeight:'bold',color:'#000',formatter:function formatter(val,opts){var index=opts.globals.series.indexOf(parseFloat(val));return val+' - '+parseFloat(opts.globals.seriesPercent[index]).toFixed(2)+'%';}}}}}}}),_useState8=_slicedToArray(_useState7,2),pieOptions=_useState8[0],setPieOptions=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),viewPercent=_useState10[0],setViewPercent=_useState10[1];var _useState11=useState(props.options[0]),_useState12=_slicedToArray(_useState11,2),selected=_useState12[0],setSelected=_useState12[1];function handleSelectChange(value){props.onSelect(props.id,value);setSelected(value);}function changeView(){setViewPercent(!viewPercent);}function verifyEmptyData(data){var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;if(item>0||item!=\"0\")return true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;}useEffect(function(){setPieSeries(function(){if(props.y.length>0){if(typeof props.y[0]=='number'){return props.y;}else{return props.y.map(function(item){return parseFloat(item);});}}});setPieOptions(function(prevPieOptions){return _objectSpread(_objectSpread({},prevPieOptions),{},{labels:props.x});});setSeries(function(prevSeries){return[_objectSpread(_objectSpread({},prevSeries[0]),{},{data:props.y})];});setOptions(function(prevOptions){var xaxis=prevOptions.xaxis;return _objectSpread(_objectSpread({},prevOptions),{},{xaxis:_objectSpread(_objectSpread({},xaxis),{},{categories:props.x})});});},[props.y,props.x,viewPercent]);return/*#__PURE__*/_jsx(\"div\",{id:props.id,className:\"container-chart\",children:!props.loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[props.viewPercent?/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(Switch,{\"aria-label\":\"Percentual\",size:\"small\",onChange:changeView,checked:viewPercent,color:\"primary\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Percentual\"})]}):/*#__PURE__*/_jsx(\"div\",{}),/*#__PURE__*/_jsx(\"select\",{className:\"select-year\",onChange:function onChange(e){return handleSelectChange(e.target.value);},value:selected,children:(props.options||[]).map(function(option,index){return/*#__PURE__*/_jsx(\"option\",{children:option},index);})})]}),verifyEmptyData(props.y)?!viewPercent?/*#__PURE__*/_jsx(Chart,{id:props.type,className:props.type,options:options,series:series,type:props.type,height:450}):/*#__PURE__*/_jsx(Chart,{id:\"donut\",className:\"donut\",options:pieOptions,series:pieSeries,type:\"donut\",height:450}):/*#__PURE__*/_jsx(NoDataMessage,{})]}):/*#__PURE__*/_jsx(\"div\",{className:\"box-spinner\",children:/*#__PURE__*/_jsx(Spinner,{})})});};","map":{"version":3,"sources":["/home/yasmin/√Årea de Trabalho/Frontend/src/components/ChartPerYear/ChartPerYear.jsx"],"names":["React","useEffect","useState","Spinner","Chart","Switch","NoDataMessage","ChartPerYear","props","name","color","data","y","series","setSeries","chart","type","height","plotOptions","bar","barHeight","distributed","horizontal","dataLabels","position","colors","title","text","align","floating","margin","enabled","textAnchor","style","formatter","val","opt","w","globals","labels","dataPointIndex","toLocaleString","minimumFractionDigits","offsetX","dropShadow","stroke","width","yaxis","show","xaxis","categories","x","rotate","rotateAlways","fontSize","fontFamily","fontWeight","marginBottom","fill","opacity","legend","tooltip","theme","toFixed","options","setOptions","pieSeries","setPieSeries","responsive","breakpoint","pie","customScale","donut","value","opts","index","indexOf","parseFloat","seriesPercent","pieOptions","setPieOptions","viewPercent","setViewPercent","selected","setSelected","handleSelectChange","onSelect","id","changeView","verifyEmptyData","item","length","map","prevPieOptions","prevSeries","prevOptions","loading","e","target","option"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Spinner } from '../Spinner';\nimport Chart from 'react-apexcharts';\nimport Switch from \"@material-ui/core/Switch\";\n\nimport './styles.css';\nimport { NoDataMessage } from \"../NoDataMessage\";\n\nexport const ChartPerYear = (props) => {\n    const [series, setSeries] = useState([{\n        name: props.name,\n        color: props.color,\n        data: props.y,\n    }]);\n    const [options, setOptions] = useState({\n        chart: {\n            type: props.type,\n            height: 450,\n        },\n        plotOptions: {\n            bar: {\n                barHeight: '100%',\n                distributed: true,\n                horizontal: true,\n                dataLabels: {\n                    position: 'bottom'\n                },\n            }\n        },\n        colors: [\n            '#E5BEDD', '#FFA8B8', '#DCD9F8',\n            '#F7D8C3', '#FFC8C3', '#BCCEF4',\n            '#B5DCF9', '#A9E5E3', '#A2EDCE',\n            '#A0D995', '#C5D084', '#D2C797',\n            '#FAE187', '#E8BA86', '#D3BEAD',\n            '#8CC2C2'\n        ],\n        title: {\n            text: props.title,\n            align: 'center',\n            floating: true,\n            margin: 20,\n        },\n        dataLabels: {\n            enabled: true,\n            textAnchor: 'start',\n            style: {\n                colors: ['#000']\n            },\n            formatter: function (val, opt) {\n                return opt.w.globals.labels[opt.dataPointIndex] + \":  \" + val.toLocaleString('pt-BR', { minimumFractionDigits: 0 })\n            },\n            offsetX: 0,\n            dropShadow: {\n                enabled: false\n            }\n        },\n        stroke: {\n            width: 1,\n            colors: ['#fff']\n        },\n        yaxis: {\n            labels: {\n                show: false,\n            },\n        },\n        xaxis: {\n            categories: props.x,\n            labels: {\n                rotate: -60,\n                rotateAlways: false,\n                style: {\n                    fontSize: '10px',\n                    colors: [\"#304758\"],\n                    fontFamily: 'Helvetica, Arial, sans-serif',\n                    fontWeight: 'bold',\n                },\n            },\n            style: {\n                marginBottom: '50px'\n            },\n        },\n        fill: {\n            opacity: 1\n        },\n        legend: {\n            show: false,\n        },\n        tooltip: {\n            theme: 'dark',\n            x: {\n                show: false,\n            },\n            y: {\n                title: {\n                    formatter: function (val, opt) {\n                        return val + ':';\n                    }\n                },\n                formatter: function (val) {\n                    return typeof val === \"number\" ? val.toFixed(0) : val;\n                },\n            }\n        }\n    });\n\n    const [pieSeries, setPieSeries] = useState([]);\n    const [pieOptions, setPieOptions] = useState({\n        chart: { type: 'donut', },\n        responsive: [{\n            breakpoint: 480,\n            options: {\n                chart: {\n                    width: 200\n                },\n                legend: {\n                    position: 'bottom'\n                }\n            }\n        }],\n        colors: [\n            '#E5BEDD', '#FFA8B8', '#DCD9F8',\n            '#F7D8C3', '#FFC8C3', '#BCCEF4',\n            '#B5DCF9', '#A9E5E3', '#A2EDCE',\n            '#A0D995', '#C5D084', '#D2C797',\n            '#FAE187', '#E8BA86', '#D3BEAD',\n            '#8CC2C2'\n        ],\n        title: {\n            text: props.title,\n            align: 'center',\n            floating: true\n        },\n        labels: props.x,\n        dataLabels: {\n            enabled: true,\n            formatter: function (val) {\n                return val.toFixed(2) + \"%\";\n            },\n            textAnchor: 'middle',\n            style: {\n                fontSize: '14px',\n                colors: ['#000'],\n            },\n            offsetX: 0,\n            dropShadow: {\n                enabled: false\n            },\n        },\n        tooltip: {\n            enabled: true,\n            style: {\n                fontSize: '12px',\n                colors: ['#000'],\n            },\n            theme: true,\n        },\n        plotOptions: {\n            pie: {\n                customScale: 0.9,\n                donut: {\n                    labels: {\n                        show: true,\n                        name: {\n                            show: true,\n                            fontSize: '15px',\n                            colors: [\"#304758\"],\n                            fontFamily: 'Helvetica, Arial, sans-serif',\n                            fontWeight: 'bold',\n                            color: '#000',\n                        },\n                        value: {\n                            show: true,\n                            fontSize: '15px',\n                            colors: [\"#304758\"],\n                            fontFamily: 'Helvetica, Arial, sans-serif',\n                            fontWeight: 'bold',\n                            color: '#000',\n                            formatter: function (val, opts) {\n                                let index = opts.globals.series.indexOf(parseFloat(val));\n                                return val\n                                    + ' - '\n                                    + parseFloat(opts.globals.seriesPercent[index]).toFixed(2)\n                                    + '%';\n                            },\n                        },\n                    },\n\n                }\n            }\n        }\n    });\n\n    const [viewPercent, setViewPercent] = useState(false);\n    const [selected, setSelected] = useState(props.options[0]);\n\n    function handleSelectChange(value) {\n        props.onSelect(props.id, value);\n        setSelected(value);\n    }\n\n    function changeView() {\n        setViewPercent(!viewPercent);\n    }\n\n    function verifyEmptyData(data) {\n        for (const item of data) {\n            if (item > 0 || item != \"0\") return true;\n        }\n\n        return false;\n    }\n\n    useEffect(() => {\n        setPieSeries(() => {\n            if (props.y.length > 0) {\n                if (typeof props.y[0] == 'number') {\n                    return props.y;\n                }\n                else {\n                    return props.y.map(item => parseFloat(item));\n                }\n            }\n        });\n        setPieOptions(prevPieOptions => {\n            return {\n                ...prevPieOptions,\n                labels: props.x,\n            };\n        });\n\n\n        setSeries(prevSeries => {\n            return [{\n                ...prevSeries[0],\n                data: props.y,\n            }];\n        });\n        setOptions(prevOptions => {\n            const xaxis = prevOptions.xaxis;\n\n            return {\n                ...prevOptions,\n                xaxis: {\n                    ...xaxis,\n                    categories: props.x,\n                },\n            }\n        });\n    }, [props.y, props.x, viewPercent]);\n\n    return (\n        <div id={props.id} className=\"container-chart\">\n            {!props.loading ? (\n                <>\n                    <div>\n                        {props.viewPercent ? (\n                            <label>\n                                <Switch\n                                    aria-label=\"Percentual\"\n                                    size=\"small\"\n                                    onChange={changeView}\n                                    checked={viewPercent}\n                                    color=\"primary\"\n                                />\n                                <span>Percentual</span>\n                            </label>\n                        ) : (\n                            <div></div>\n                        )}\n                        <select\n                            className=\"select-year\"\n                            onChange={(e) => handleSelectChange(e.target.value)}\n                            value={selected}\n                        >\n                            {(props.options || []).map((option, index) => {\n                                return (<option key={index}>{option}</option>);\n                            })}\n                        </select>\n                    </div>\n                    {verifyEmptyData(props.y) ? (\n                        !viewPercent ? (\n                            <Chart\n                                id={props.type}\n                                className={props.type}\n                                options={options}\n                                series={series}\n                                type={props.type}\n                                height={450}\n                            />\n                        ) : (\n                            <Chart\n                                id='donut'\n                                className='donut'\n                                options={pieOptions}\n                                series={pieSeries}\n                                type='donut'\n                                height={450}\n                            />\n                        )\n                    ) : (\n                        <NoDataMessage />\n                    )}\n                </>\n            ) : (\n                <div className=\"box-spinner\">\n                    <Spinner />\n                </div>\n            )}\n\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}
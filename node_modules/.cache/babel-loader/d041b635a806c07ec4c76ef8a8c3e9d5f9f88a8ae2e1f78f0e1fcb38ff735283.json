{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n  mode: {\n    valType: 'enumerated',\n    dflt: 'afterall',\n    role: 'info',\n    values: ['immediate', 'next', 'afterall'],\n    description: ['Describes how a new animate call interacts with currently-running', 'animations. If `immediate`, current animations are interrupted and', 'the new animation is started. If `next`, the current frame is allowed', 'to complete, after which the new animation is started. If `afterall`', 'all existing frames are animated to completion before the new animation', 'is started.'].join(' ')\n  },\n  direction: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['forward', 'reverse'],\n    dflt: 'forward',\n    description: ['The direction in which to play the frames triggered by the animation call'].join(' ')\n  },\n  fromcurrent: {\n    valType: 'boolean',\n    dflt: false,\n    role: 'info',\n    description: ['Play frames starting at the current frame instead of the beginning.'].join(' ')\n  },\n  frame: {\n    duration: {\n      valType: 'number',\n      role: 'info',\n      min: 0,\n      dflt: 500,\n      description: ['The duration in milliseconds of each frame. If greater than the frame', 'duration, it will be limited to the frame duration.'].join(' ')\n    },\n    redraw: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      description: ['Redraw the plot at completion of the transition. This is desirable', 'for transitions that include properties that cannot be transitioned,', 'but may significantly slow down updates that do not require a full', 'redraw of the plot'].join(' ')\n    }\n  },\n  transition: {\n    duration: {\n      valType: 'number',\n      role: 'info',\n      min: 0,\n      dflt: 500,\n      editType: 'none',\n      description: ['The duration of the transition, in milliseconds. If equal to zero,', 'updates are synchronous.'].join(' ')\n    },\n    easing: {\n      valType: 'enumerated',\n      dflt: 'cubic-in-out',\n      values: ['linear', 'quad', 'cubic', 'sin', 'exp', 'circle', 'elastic', 'back', 'bounce', 'linear-in', 'quad-in', 'cubic-in', 'sin-in', 'exp-in', 'circle-in', 'elastic-in', 'back-in', 'bounce-in', 'linear-out', 'quad-out', 'cubic-out', 'sin-out', 'exp-out', 'circle-out', 'elastic-out', 'back-out', 'bounce-out', 'linear-in-out', 'quad-in-out', 'cubic-in-out', 'sin-in-out', 'exp-in-out', 'circle-in-out', 'elastic-in-out', 'back-in-out', 'bounce-in-out'],\n      role: 'info',\n      editType: 'none',\n      description: 'The easing function used for the transition'\n    },\n    ordering: {\n      valType: 'enumerated',\n      values: ['layout first', 'traces first'],\n      dflt: 'layout first',\n      role: 'info',\n      editType: 'none',\n      description: ['Determines whether the figure\\'s layout or traces smoothly transitions', 'during updates that make both traces and layout change.'].join(' ')\n    }\n  }\n};","map":{"version":3,"names":["module","exports","mode","valType","dflt","role","values","description","join","direction","fromcurrent","frame","duration","min","redraw","transition","editType","easing","ordering"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/animation_attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n    mode: {\n        valType: 'enumerated',\n        dflt: 'afterall',\n        role: 'info',\n        values: ['immediate', 'next', 'afterall'],\n        description: [\n            'Describes how a new animate call interacts with currently-running',\n            'animations. If `immediate`, current animations are interrupted and',\n            'the new animation is started. If `next`, the current frame is allowed',\n            'to complete, after which the new animation is started. If `afterall`',\n            'all existing frames are animated to completion before the new animation',\n            'is started.'\n        ].join(' ')\n    },\n    direction: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['forward', 'reverse'],\n        dflt: 'forward',\n        description: [\n            'The direction in which to play the frames triggered by the animation call'\n        ].join(' ')\n    },\n    fromcurrent: {\n        valType: 'boolean',\n        dflt: false,\n        role: 'info',\n        description: [\n            'Play frames starting at the current frame instead of the beginning.'\n        ].join(' ')\n    },\n    frame: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 500,\n            description: [\n                'The duration in milliseconds of each frame. If greater than the frame',\n                'duration, it will be limited to the frame duration.'\n            ].join(' ')\n        },\n        redraw: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Redraw the plot at completion of the transition. This is desirable',\n                'for transitions that include properties that cannot be transitioned,',\n                'but may significantly slow down updates that do not require a full',\n                'redraw of the plot'\n            ].join(' ')\n        },\n    },\n    transition: {\n        duration: {\n            valType: 'number',\n            role: 'info',\n            min: 0,\n            dflt: 500,\n            editType: 'none',\n            description: [\n                'The duration of the transition, in milliseconds. If equal to zero,',\n                'updates are synchronous.'\n            ].join(' ')\n        },\n        easing: {\n            valType: 'enumerated',\n            dflt: 'cubic-in-out',\n            values: [\n                'linear',\n                'quad',\n                'cubic',\n                'sin',\n                'exp',\n                'circle',\n                'elastic',\n                'back',\n                'bounce',\n                'linear-in',\n                'quad-in',\n                'cubic-in',\n                'sin-in',\n                'exp-in',\n                'circle-in',\n                'elastic-in',\n                'back-in',\n                'bounce-in',\n                'linear-out',\n                'quad-out',\n                'cubic-out',\n                'sin-out',\n                'exp-out',\n                'circle-out',\n                'elastic-out',\n                'back-out',\n                'bounce-out',\n                'linear-in-out',\n                'quad-in-out',\n                'cubic-in-out',\n                'sin-in-out',\n                'exp-in-out',\n                'circle-in-out',\n                'elastic-in-out',\n                'back-in-out',\n                'bounce-in-out'\n            ],\n            role: 'info',\n            editType: 'none',\n            description: 'The easing function used for the transition'\n        },\n        ordering: {\n            valType: 'enumerated',\n            values: ['layout first', 'traces first'],\n            dflt: 'layout first',\n            role: 'info',\n            editType: 'none',\n            description: [\n                'Determines whether the figure\\'s layout or traces smoothly transitions',\n                'during updates that make both traces and layout change.'\n            ].join(' ')\n        }\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
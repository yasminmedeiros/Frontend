{"ast":null,"code":"import map from \"./map\";\nexport default function () {\n  var keys = [],\n    _sortKeys = [],\n    _sortValues,\n    _rollup,\n    nest;\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (_sortValues != null) array.sort(_sortValues);\n      return _rollup != null ? _rollup(array) : array;\n    }\n    var i = -1,\n      n = array.length,\n      key = keys[depth++],\n      keyValue,\n      value,\n      valuesByKey = map(),\n      values,\n      result = createResult();\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n    valuesByKey.each(function (values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n    return result;\n  }\n  function _entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array,\n      sortKey = _sortKeys[depth - 1];\n    if (_rollup != null && depth >= keys.length) array = map.entries();else array = [], map.each(function (v, k) {\n      array.push({\n        key: k,\n        values: _entries(v, depth)\n      });\n    });\n    return sortKey != null ? array.sort(function (a, b) {\n      return sortKey(a.key, b.key);\n    }) : array;\n  }\n  return nest = {\n    object: function object(array) {\n      return apply(array, 0, createObject, setObject);\n    },\n    map: function map(array) {\n      return apply(array, 0, createMap, setMap);\n    },\n    entries: function entries(array) {\n      return _entries(apply(array, 0, createMap, setMap), 0);\n    },\n    key: function key(d) {\n      keys.push(d);\n      return nest;\n    },\n    sortKeys: function sortKeys(order) {\n      _sortKeys[keys.length - 1] = order;\n      return nest;\n    },\n    sortValues: function sortValues(order) {\n      _sortValues = order;\n      return nest;\n    },\n    rollup: function rollup(f) {\n      _rollup = f;\n      return nest;\n    }\n  };\n}\nfunction createObject() {\n  return {};\n}\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\nfunction createMap() {\n  return map();\n}\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}","map":{"version":3,"names":["map","keys","sortKeys","sortValues","rollup","nest","apply","array","depth","createResult","setResult","length","sort","i","n","key","keyValue","value","valuesByKey","values","result","get","push","set","each","entries","sortKey","v","k","a","b","object","createObject","setObject","createMap","setMap","d","order","f"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/d3-collection/src/nest.js"],"sourcesContent":["import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
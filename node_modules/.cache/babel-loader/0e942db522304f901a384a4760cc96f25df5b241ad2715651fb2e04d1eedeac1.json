{"ast":null,"code":"\"use strict\";\n\nvar pool = require(\"typedarray-pool\");\nvar ops = require(\"ndarray-ops\");\nvar ndarray = require(\"ndarray\");\nvar SUPPORTED_TYPES = [\"uint8\", \"uint8_clamped\", \"uint16\", \"uint32\", \"int8\", \"int16\", \"int32\", \"float32\"];\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl;\n  this.type = type;\n  this.handle = handle;\n  this.length = length;\n  this.usage = usage;\n}\nvar proto = GLBuffer.prototype;\nproto.bind = function () {\n  this.gl.bindBuffer(this.type, this.handle);\n};\nproto.unbind = function () {\n  this.gl.bindBuffer(this.type, null);\n};\nproto.dispose = function () {\n  this.gl.deleteBuffer(this.handle);\n};\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT;\n  if (offset < 0) {\n    gl.bufferData(type, data, usage);\n    return dataLen;\n  }\n  if (dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\");\n  }\n  gl.bufferSubData(type, offset, data);\n  return len;\n}\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype);\n  var n = array.length;\n  for (var i = 0; i < n; ++i) {\n    res[i] = array[i];\n  }\n  return res;\n}\nfunction isPacked(shape, stride) {\n  var n = 1;\n  for (var i = stride.length - 1; i >= 0; --i) {\n    if (stride[i] !== n) {\n      return false;\n    }\n    n *= shape[i];\n  }\n  return true;\n}\nproto.update = function (array, offset) {\n  if (typeof offset !== \"number\") {\n    offset = -1;\n  }\n  this.bind();\n  if (typeof array === \"object\" && typeof array.shape !== \"undefined\") {\n    //ndarray\n    var dtype = array.dtype;\n    if (SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\";\n    }\n    if (this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint');\n      if (ext && dtype !== \"uint16\") {\n        dtype = \"uint32\";\n      } else {\n        dtype = \"uint16\";\n      }\n    }\n    if (dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if (array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset);\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset);\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype);\n      var ndt = ndarray(tmp, array.shape);\n      ops.assign(ndt, array);\n      if (offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset);\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset);\n      }\n      pool.free(tmp);\n    }\n  } else if (Array.isArray(array)) {\n    //Vanilla array\n    var t;\n    if (this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\");\n    } else {\n      t = makeScratchTypeArray(array, \"float32\");\n    }\n    if (offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset);\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset);\n    }\n    pool.free(t);\n  } else if (typeof array === \"object\" && typeof array.length === \"number\") {\n    //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset);\n  } else if (typeof array === \"number\" || array === undefined) {\n    //Number/default\n    if (offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\");\n    }\n    array = array | 0;\n    if (array <= 0) {\n      array = 1;\n    }\n    this.gl.bufferData(this.type, array | 0, this.usage);\n    this.length = array;\n  } else {\n    //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\");\n  }\n};\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER;\n  usage = usage || gl.DYNAMIC_DRAW;\n  if (type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\");\n  }\n  if (usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\");\n  }\n  var handle = gl.createBuffer();\n  var result = new GLBuffer(gl, type, handle, 0, usage);\n  result.update(data);\n  return result;\n}\nmodule.exports = createBuffer;","map":{"version":3,"names":["pool","require","ops","ndarray","SUPPORTED_TYPES","GLBuffer","gl","type","handle","length","usage","proto","prototype","bind","bindBuffer","unbind","dispose","deleteBuffer","updateTypeArray","len","data","offset","dataLen","BYTES_PER_ELEMENT","bufferData","Error","bufferSubData","makeScratchTypeArray","array","dtype","res","malloc","n","i","isPacked","shape","stride","update","indexOf","ELEMENT_ARRAY_BUFFER","ext","getExtension","subarray","tmp","size","ndt","assign","free","Array","isArray","t","undefined","createBuffer","ARRAY_BUFFER","DYNAMIC_DRAW","STATIC_DRAW","STREAM_DRAW","result","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-buffer/buffer.js"],"sourcesContent":["\"use strict\"\n\nvar pool = require(\"typedarray-pool\")\nvar ops = require(\"ndarray-ops\")\nvar ndarray = require(\"ndarray\")\n\nvar SUPPORTED_TYPES = [\n  \"uint8\",\n  \"uint8_clamped\",\n  \"uint16\",\n  \"uint32\",\n  \"int8\",\n  \"int16\",\n  \"int32\",\n  \"float32\" ]\n\nfunction GLBuffer(gl, type, handle, length, usage) {\n  this.gl = gl\n  this.type = type\n  this.handle = handle\n  this.length = length\n  this.usage = usage\n}\n\nvar proto = GLBuffer.prototype\n\nproto.bind = function() {\n  this.gl.bindBuffer(this.type, this.handle)\n}\n\nproto.unbind = function() {\n  this.gl.bindBuffer(this.type, null)\n}\n\nproto.dispose = function() {\n  this.gl.deleteBuffer(this.handle)\n}\n\nfunction updateTypeArray(gl, type, len, usage, data, offset) {\n  var dataLen = data.length * data.BYTES_PER_ELEMENT\n  if(offset < 0) {\n    gl.bufferData(type, data, usage)\n    return dataLen\n  }\n  if(dataLen + offset > len) {\n    throw new Error(\"gl-buffer: If resizing buffer, must not specify offset\")\n  }\n  gl.bufferSubData(type, offset, data)\n  return len\n}\n\nfunction makeScratchTypeArray(array, dtype) {\n  var res = pool.malloc(array.length, dtype)\n  var n = array.length\n  for(var i=0; i<n; ++i) {\n    res[i] = array[i]\n  }\n  return res\n}\n\nfunction isPacked(shape, stride) {\n  var n = 1\n  for(var i=stride.length-1; i>=0; --i) {\n    if(stride[i] !== n) {\n      return false\n    }\n    n *= shape[i]\n  }\n  return true\n}\n\nproto.update = function(array, offset) {\n  if(typeof offset !== \"number\") {\n    offset = -1\n  }\n  this.bind()\n  if(typeof array === \"object\" && typeof array.shape !== \"undefined\") { //ndarray\n    var dtype = array.dtype\n    if(SUPPORTED_TYPES.indexOf(dtype) < 0) {\n      dtype = \"float32\"\n    }\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      var ext = gl.getExtension('OES_element_index_uint')\n      if(ext && dtype !== \"uint16\") {\n        dtype = \"uint32\"\n      } else {\n        dtype = \"uint16\"\n      }\n    }\n    if(dtype === array.dtype && isPacked(array.shape, array.stride)) {\n      if(array.offset === 0 && array.data.length === array.shape[0]) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array.data.subarray(array.offset, array.shape[0]), offset)\n      }\n    } else {\n      var tmp = pool.malloc(array.size, dtype)\n      var ndt = ndarray(tmp, array.shape)\n      ops.assign(ndt, array)\n      if(offset < 0) {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp, offset)\n      } else {\n        this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, tmp.subarray(0, array.size), offset)\n      }\n      pool.free(tmp)\n    }\n  } else if(Array.isArray(array)) { //Vanilla array\n    var t\n    if(this.type === this.gl.ELEMENT_ARRAY_BUFFER) {\n      t = makeScratchTypeArray(array, \"uint16\")\n    } else {\n      t = makeScratchTypeArray(array, \"float32\")\n    }\n    if(offset < 0) {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t, offset)\n    } else {\n      this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, t.subarray(0, array.length), offset)\n    }\n    pool.free(t)\n  } else if(typeof array === \"object\" && typeof array.length === \"number\") { //Typed array\n    this.length = updateTypeArray(this.gl, this.type, this.length, this.usage, array, offset)\n  } else if(typeof array === \"number\" || array === undefined) { //Number/default\n    if(offset >= 0) {\n      throw new Error(\"gl-buffer: Cannot specify offset when resizing buffer\")\n    }\n    array = array | 0\n    if(array <= 0) {\n      array = 1\n    }\n    this.gl.bufferData(this.type, array|0, this.usage)\n    this.length = array\n  } else { //Error, case should not happen\n    throw new Error(\"gl-buffer: Invalid data type\")\n  }\n}\n\nfunction createBuffer(gl, data, type, usage) {\n  type = type || gl.ARRAY_BUFFER\n  usage = usage || gl.DYNAMIC_DRAW\n  if(type !== gl.ARRAY_BUFFER && type !== gl.ELEMENT_ARRAY_BUFFER) {\n    throw new Error(\"gl-buffer: Invalid type for webgl buffer, must be either gl.ARRAY_BUFFER or gl.ELEMENT_ARRAY_BUFFER\")\n  }\n  if(usage !== gl.DYNAMIC_DRAW && usage !== gl.STATIC_DRAW && usage !== gl.STREAM_DRAW) {\n    throw new Error(\"gl-buffer: Invalid usage for buffer, must be either gl.DYNAMIC_DRAW, gl.STATIC_DRAW or gl.STREAM_DRAW\")\n  }\n  var handle = gl.createBuffer()\n  var result = new GLBuffer(gl, type, handle, 0, usage)\n  result.update(data)\n  return result\n}\n\nmodule.exports = createBuffer\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AACrC,IAAIC,GAAG,GAAGD,OAAO,CAAC,aAAa,CAAC;AAChC,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAEhC,IAAIG,eAAe,GAAG,CACpB,OAAO,EACP,eAAe,EACf,QAAQ,EACR,QAAQ,EACR,MAAM,EACN,OAAO,EACP,OAAO,EACP,SAAS,CAAE;AAEb,SAASC,QAAQ,CAACC,EAAE,EAAEC,IAAI,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAE;EACjD,IAAI,CAACJ,EAAE,GAAGA,EAAE;EACZ,IAAI,CAACC,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;AACpB;AAEA,IAAIC,KAAK,GAAGN,QAAQ,CAACO,SAAS;AAE9BD,KAAK,CAACE,IAAI,GAAG,YAAW;EACtB,IAAI,CAACP,EAAE,CAACQ,UAAU,CAAC,IAAI,CAACP,IAAI,EAAE,IAAI,CAACC,MAAM,CAAC;AAC5C,CAAC;AAEDG,KAAK,CAACI,MAAM,GAAG,YAAW;EACxB,IAAI,CAACT,EAAE,CAACQ,UAAU,CAAC,IAAI,CAACP,IAAI,EAAE,IAAI,CAAC;AACrC,CAAC;AAEDI,KAAK,CAACK,OAAO,GAAG,YAAW;EACzB,IAAI,CAACV,EAAE,CAACW,YAAY,CAAC,IAAI,CAACT,MAAM,CAAC;AACnC,CAAC;AAED,SAASU,eAAe,CAACZ,EAAE,EAAEC,IAAI,EAAEY,GAAG,EAAET,KAAK,EAAEU,IAAI,EAAEC,MAAM,EAAE;EAC3D,IAAIC,OAAO,GAAGF,IAAI,CAACX,MAAM,GAAGW,IAAI,CAACG,iBAAiB;EAClD,IAAGF,MAAM,GAAG,CAAC,EAAE;IACbf,EAAE,CAACkB,UAAU,CAACjB,IAAI,EAAEa,IAAI,EAAEV,KAAK,CAAC;IAChC,OAAOY,OAAO;EAChB;EACA,IAAGA,OAAO,GAAGD,MAAM,GAAGF,GAAG,EAAE;IACzB,MAAM,IAAIM,KAAK,CAAC,wDAAwD,CAAC;EAC3E;EACAnB,EAAE,CAACoB,aAAa,CAACnB,IAAI,EAAEc,MAAM,EAAED,IAAI,CAAC;EACpC,OAAOD,GAAG;AACZ;AAEA,SAASQ,oBAAoB,CAACC,KAAK,EAAEC,KAAK,EAAE;EAC1C,IAAIC,GAAG,GAAG9B,IAAI,CAAC+B,MAAM,CAACH,KAAK,CAACnB,MAAM,EAAEoB,KAAK,CAAC;EAC1C,IAAIG,CAAC,GAAGJ,KAAK,CAACnB,MAAM;EACpB,KAAI,IAAIwB,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACD,CAAC,EAAE,EAAEC,CAAC,EAAE;IACrBH,GAAG,CAACG,CAAC,CAAC,GAAGL,KAAK,CAACK,CAAC,CAAC;EACnB;EACA,OAAOH,GAAG;AACZ;AAEA,SAASI,QAAQ,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC/B,IAAIJ,CAAC,GAAG,CAAC;EACT,KAAI,IAAIC,CAAC,GAACG,MAAM,CAAC3B,MAAM,GAAC,CAAC,EAAEwB,CAAC,IAAE,CAAC,EAAE,EAAEA,CAAC,EAAE;IACpC,IAAGG,MAAM,CAACH,CAAC,CAAC,KAAKD,CAAC,EAAE;MAClB,OAAO,KAAK;IACd;IACAA,CAAC,IAAIG,KAAK,CAACF,CAAC,CAAC;EACf;EACA,OAAO,IAAI;AACb;AAEAtB,KAAK,CAAC0B,MAAM,GAAG,UAAST,KAAK,EAAEP,MAAM,EAAE;EACrC,IAAG,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC7BA,MAAM,GAAG,CAAC,CAAC;EACb;EACA,IAAI,CAACR,IAAI,EAAE;EACX,IAAG,OAAOe,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,CAACO,KAAK,KAAK,WAAW,EAAE;IAAE;IACpE,IAAIN,KAAK,GAAGD,KAAK,CAACC,KAAK;IACvB,IAAGzB,eAAe,CAACkC,OAAO,CAACT,KAAK,CAAC,GAAG,CAAC,EAAE;MACrCA,KAAK,GAAG,SAAS;IACnB;IACA,IAAG,IAAI,CAACtB,IAAI,KAAK,IAAI,CAACD,EAAE,CAACiC,oBAAoB,EAAE;MAC7C,IAAIC,GAAG,GAAGlC,EAAE,CAACmC,YAAY,CAAC,wBAAwB,CAAC;MACnD,IAAGD,GAAG,IAAIX,KAAK,KAAK,QAAQ,EAAE;QAC5BA,KAAK,GAAG,QAAQ;MAClB,CAAC,MAAM;QACLA,KAAK,GAAG,QAAQ;MAClB;IACF;IACA,IAAGA,KAAK,KAAKD,KAAK,CAACC,KAAK,IAAIK,QAAQ,CAACN,KAAK,CAACO,KAAK,EAAEP,KAAK,CAACQ,MAAM,CAAC,EAAE;MAC/D,IAAGR,KAAK,CAACP,MAAM,KAAK,CAAC,IAAIO,KAAK,CAACR,IAAI,CAACX,MAAM,KAAKmB,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC,EAAE;QAC7D,IAAI,CAAC1B,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEkB,KAAK,CAACR,IAAI,EAAEC,MAAM,CAAC;MAChG,CAAC,MAAM;QACL,IAAI,CAACZ,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEkB,KAAK,CAACR,IAAI,CAACsB,QAAQ,CAACd,KAAK,CAACP,MAAM,EAAEO,KAAK,CAACO,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEd,MAAM,CAAC;MACvI;IACF,CAAC,MAAM;MACL,IAAIsB,GAAG,GAAG3C,IAAI,CAAC+B,MAAM,CAACH,KAAK,CAACgB,IAAI,EAAEf,KAAK,CAAC;MACxC,IAAIgB,GAAG,GAAG1C,OAAO,CAACwC,GAAG,EAAEf,KAAK,CAACO,KAAK,CAAC;MACnCjC,GAAG,CAAC4C,MAAM,CAACD,GAAG,EAAEjB,KAAK,CAAC;MACtB,IAAGP,MAAM,GAAG,CAAC,EAAE;QACb,IAAI,CAACZ,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEiC,GAAG,EAAEtB,MAAM,CAAC;MACzF,CAAC,MAAM;QACL,IAAI,CAACZ,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEiC,GAAG,CAACD,QAAQ,CAAC,CAAC,EAAEd,KAAK,CAACgB,IAAI,CAAC,EAAEvB,MAAM,CAAC;MACjH;MACArB,IAAI,CAAC+C,IAAI,CAACJ,GAAG,CAAC;IAChB;EACF,CAAC,MAAM,IAAGK,KAAK,CAACC,OAAO,CAACrB,KAAK,CAAC,EAAE;IAAE;IAChC,IAAIsB,CAAC;IACL,IAAG,IAAI,CAAC3C,IAAI,KAAK,IAAI,CAACD,EAAE,CAACiC,oBAAoB,EAAE;MAC7CW,CAAC,GAAGvB,oBAAoB,CAACC,KAAK,EAAE,QAAQ,CAAC;IAC3C,CAAC,MAAM;MACLsB,CAAC,GAAGvB,oBAAoB,CAACC,KAAK,EAAE,SAAS,CAAC;IAC5C;IACA,IAAGP,MAAM,GAAG,CAAC,EAAE;MACb,IAAI,CAACZ,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEwC,CAAC,EAAE7B,MAAM,CAAC;IACvF,CAAC,MAAM;MACL,IAAI,CAACZ,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEwC,CAAC,CAACR,QAAQ,CAAC,CAAC,EAAEd,KAAK,CAACnB,MAAM,CAAC,EAAEY,MAAM,CAAC;IACjH;IACArB,IAAI,CAAC+C,IAAI,CAACG,CAAC,CAAC;EACd,CAAC,MAAM,IAAG,OAAOtB,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,CAACnB,MAAM,KAAK,QAAQ,EAAE;IAAE;IACzE,IAAI,CAACA,MAAM,GAAGS,eAAe,CAAC,IAAI,CAACZ,EAAE,EAAE,IAAI,CAACC,IAAI,EAAE,IAAI,CAACE,MAAM,EAAE,IAAI,CAACC,KAAK,EAAEkB,KAAK,EAAEP,MAAM,CAAC;EAC3F,CAAC,MAAM,IAAG,OAAOO,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAKuB,SAAS,EAAE;IAAE;IAC5D,IAAG9B,MAAM,IAAI,CAAC,EAAE;MACd,MAAM,IAAII,KAAK,CAAC,uDAAuD,CAAC;IAC1E;IACAG,KAAK,GAAGA,KAAK,GAAG,CAAC;IACjB,IAAGA,KAAK,IAAI,CAAC,EAAE;MACbA,KAAK,GAAG,CAAC;IACX;IACA,IAAI,CAACtB,EAAE,CAACkB,UAAU,CAAC,IAAI,CAACjB,IAAI,EAAEqB,KAAK,GAAC,CAAC,EAAE,IAAI,CAAClB,KAAK,CAAC;IAClD,IAAI,CAACD,MAAM,GAAGmB,KAAK;EACrB,CAAC,MAAM;IAAE;IACP,MAAM,IAAIH,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC;AAED,SAAS2B,YAAY,CAAC9C,EAAE,EAAEc,IAAI,EAAEb,IAAI,EAAEG,KAAK,EAAE;EAC3CH,IAAI,GAAGA,IAAI,IAAID,EAAE,CAAC+C,YAAY;EAC9B3C,KAAK,GAAGA,KAAK,IAAIJ,EAAE,CAACgD,YAAY;EAChC,IAAG/C,IAAI,KAAKD,EAAE,CAAC+C,YAAY,IAAI9C,IAAI,KAAKD,EAAE,CAACiC,oBAAoB,EAAE;IAC/D,MAAM,IAAId,KAAK,CAAC,qGAAqG,CAAC;EACxH;EACA,IAAGf,KAAK,KAAKJ,EAAE,CAACgD,YAAY,IAAI5C,KAAK,KAAKJ,EAAE,CAACiD,WAAW,IAAI7C,KAAK,KAAKJ,EAAE,CAACkD,WAAW,EAAE;IACpF,MAAM,IAAI/B,KAAK,CAAC,uGAAuG,CAAC;EAC1H;EACA,IAAIjB,MAAM,GAAGF,EAAE,CAAC8C,YAAY,EAAE;EAC9B,IAAIK,MAAM,GAAG,IAAIpD,QAAQ,CAACC,EAAE,EAAEC,IAAI,EAAEC,MAAM,EAAE,CAAC,EAAEE,KAAK,CAAC;EACrD+C,MAAM,CAACpB,MAAM,CAACjB,IAAI,CAAC;EACnB,OAAOqC,MAAM;AACf;AAEAC,MAAM,CAACC,OAAO,GAAGP,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* http://keith-wood.name/calendars.html\n  Mayan calendar for jQuery v2.0.2.\n  Written by Keith Wood (wood.keith{at}optusnet.com.au) August 2009.\n  Available under the MIT (http://keith-wood.name/licence.html) license. \n  Please attribute the author if you use it. */\n\nvar main = require('../main');\nvar assign = require('object-assign');\n\n/** Implementation of the Mayan Long Count calendar.\n    See also <a href=\"http://en.wikipedia.org/wiki/Mayan_calendar\">http://en.wikipedia.org/wiki/Mayan_calendar</a>.\n    @class MayanCalendar\n    @param [language=''] {string} The language code (default English) for localisation. */\nfunction MayanCalendar(language) {\n  this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\nMayanCalendar.prototype = new main.baseCalendar();\nassign(MayanCalendar.prototype, {\n  /** The calendar name.\n      @memberof MayanCalendar */\n  name: 'Mayan',\n  /** Julian date of start of Mayan epoch: 11 August 3114 BCE.\n      @memberof MayanCalendar */\n  jdEpoch: 584282.5,\n  /** <code>true</code> if has a year zero, <code>false</code> if not.\n      @memberof MayanCalendar */\n  hasYearZero: true,\n  /** The minimum month number.\n      @memberof MayanCalendar */\n  minMonth: 0,\n  /** The first month in the year.\n      @memberof MayanCalendar */\n  firstMonth: 0,\n  /** The minimum day number.\n      @memberof MayanCalendar */\n  minDay: 0,\n  /** Localisations for the plugin.\n      Entries are objects indexed by the language code ('' being the default US/English).\n      Each object has the following attributes.\n      @memberof MayanCalendar\n      @property name {string} The calendar name.\n      @property epochs {string[]} The epoch names.\n      @property monthNames {string[]} The long names of the months of the year.\n      @property monthNamesShort {string[]} The short names of the months of the year.\n      @property dayNames {string[]} The long names of the days of the week.\n      @property dayNamesShort {string[]} The short names of the days of the week.\n      @property dayNamesMin {string[]} The minimal names of the days of the week.\n      @property dateFormat {string} The date format for this calendar.\n              See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\n      @property firstDay {number} The number of the first day of the week, starting at 0.\n      @property isRTL {number} <code>true</code> if this localisation reads right-to-left.\n      @property haabMonths {string[]} The names of the Haab months.\n      @property tzolkinMonths {string[]} The names of the Tzolkin months. */\n  regionalOptions: {\n    // Localisations\n    '': {\n      name: 'Mayan',\n      epochs: ['', ''],\n      monthNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17'],\n      monthNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17'],\n      dayNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n      dayNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n      dayNamesMin: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n      digits: null,\n      dateFormat: 'YYYY.m.d',\n      firstDay: 0,\n      isRTL: false,\n      haabMonths: ['Pop', 'Uo', 'Zip', 'Zotz', 'Tzec', 'Xul', 'Yaxkin', 'Mol', 'Chen', 'Yax', 'Zac', 'Ceh', 'Mac', 'Kankin', 'Muan', 'Pax', 'Kayab', 'Cumku', 'Uayeb'],\n      tzolkinMonths: ['Imix', 'Ik', 'Akbal', 'Kan', 'Chicchan', 'Cimi', 'Manik', 'Lamat', 'Muluc', 'Oc', 'Chuen', 'Eb', 'Ben', 'Ix', 'Men', 'Cib', 'Caban', 'Etznab', 'Cauac', 'Ahau']\n    }\n  },\n  /** Determine whether this date is in a leap year.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\n      @throws Error if an invalid year or a different calendar used. */\n  leapYear: function leapYear(year) {\n    this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n    return false;\n  },\n  /** Format the year, if not a simple sequential number.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to format or the year to format.\n      @return {string} The formatted year.\n      @throws Error if an invalid year or a different calendar used. */\n  formatYear: function formatYear(year) {\n    var date = this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n    year = date.year();\n    var baktun = Math.floor(year / 400);\n    year = year % 400;\n    year += year < 0 ? 400 : 0;\n    var katun = Math.floor(year / 20);\n    return baktun + '.' + katun + '.' + year % 20;\n  },\n  /** Convert from the formatted year back to a single number.\n      @memberof MayanCalendar\n      @param years {string} The year as n.n.n.\n      @return {number} The sequential year.\n      @throws Error if an invalid value is supplied. */\n  forYear: function forYear(years) {\n    years = years.split('.');\n    if (years.length < 3) {\n      throw 'Invalid Mayan year';\n    }\n    var year = 0;\n    for (var i = 0; i < years.length; i++) {\n      var y = parseInt(years[i], 10);\n      if (Math.abs(y) > 19 || i > 0 && y < 0) {\n        throw 'Invalid Mayan year';\n      }\n      year = year * 20 + y;\n    }\n    return year;\n  },\n  /** Retrieve the number of months in a year.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {number} The number of months.\n      @throws Error if an invalid year or a different calendar used. */\n  monthsInYear: function monthsInYear(year) {\n    this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n    return 18;\n  },\n  /** Determine the week of the year for a date.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [month] {number} The month to examine.\n      @param [day] {number} The day to examine.\n      @return {number} The week of the year.\n      @throws Error if an invalid date or a different calendar used. */\n  weekOfYear: function weekOfYear(year, month, day) {\n    this._validate(year, month, day, main.local.invalidDate);\n    return 0;\n  },\n  /** Retrieve the number of days in a year.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {number} The number of days.\n      @throws Error if an invalid year or a different calendar used. */\n  daysInYear: function daysInYear(year) {\n    this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n    return 360;\n  },\n  /** Retrieve the number of days in a month.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year of the month.\n      @param [month] {number} The month.\n      @return {number} The number of days in this month.\n      @throws Error if an invalid month/year or a different calendar used. */\n  daysInMonth: function daysInMonth(year, month) {\n    this._validate(year, month, this.minDay, main.local.invalidMonth);\n    return 20;\n  },\n  /** Retrieve the number of days in a week.\n      @memberof MayanCalendar\n      @return {number} The number of days. */\n  daysInWeek: function daysInWeek() {\n    return 5; // Just for formatting\n  },\n\n  /** Retrieve the day of the week for a date.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [month] {number} The month to examine.\n      @param [day] {number} The day to examine.\n      @return {number} The day of the week: 0 to number of days - 1.\n      @throws Error if an invalid date or a different calendar used. */\n  dayOfWeek: function dayOfWeek(year, month, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n    return date.day();\n  },\n  /** Determine whether this date is a week day.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [month] {number} The month to examine.\n      @param [day] {number} The day to examine.\n      @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\n      @throws Error if an invalid date or a different calendar used. */\n  weekDay: function weekDay(year, month, day) {\n    this._validate(year, month, day, main.local.invalidDate);\n    return true;\n  },\n  /** Retrieve additional information about a date - Haab and Tzolkin equivalents.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [month] {number} The month to examine.\n      @param [day] {number} The day to examine.\n      @return {object} Additional information - contents depends on calendar.\n      @throws Error if an invalid date or a different calendar used. */\n  extraInfo: function extraInfo(year, month, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n    var jd = date.toJD();\n    var haab = this._toHaab(jd);\n    var tzolkin = this._toTzolkin(jd);\n    return {\n      haabMonthName: this.local.haabMonths[haab[0] - 1],\n      haabMonth: haab[0],\n      haabDay: haab[1],\n      tzolkinDayName: this.local.tzolkinMonths[tzolkin[0] - 1],\n      tzolkinDay: tzolkin[0],\n      tzolkinTrecena: tzolkin[1]\n    };\n  },\n  /** Retrieve Haab date from a Julian date.\n      @memberof MayanCalendar\n      @private\n      @param jd  {number} The Julian date.\n      @return {number[]} Corresponding Haab month and day. */\n  _toHaab: function _toHaab(jd) {\n    jd -= this.jdEpoch;\n    var day = mod(jd + 8 + (18 - 1) * 20, 365);\n    return [Math.floor(day / 20) + 1, mod(day, 20)];\n  },\n  /** Retrieve Tzolkin date from a Julian date.\n      @memberof MayanCalendar\n      @private\n      @param jd {number} The Julian date.\n      @return {number[]} Corresponding Tzolkin day and trecena. */\n  _toTzolkin: function _toTzolkin(jd) {\n    jd -= this.jdEpoch;\n    return [amod(jd + 20, 20), amod(jd + 4, 13)];\n  },\n  /** Retrieve the Julian date equivalent for this date,\n      i.e. days since January 1, 4713 BCE Greenwich noon.\n      @memberof MayanCalendar\n      @param year {CDate|number} The date to convert or the year to convert.\n      @param [month] {number} The month to convert.\n      @param [day] {number} The day to convert.\n      @return {number} The equivalent Julian date.\n      @throws Error if an invalid date or a different calendar used. */\n  toJD: function toJD(year, month, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n    return date.day() + date.month() * 20 + date.year() * 360 + this.jdEpoch;\n  },\n  /** Create a new date from a Julian date.\n      @memberof MayanCalendar\n      @param jd {number} The Julian date to convert.\n      @return {CDate} The equivalent date. */\n  fromJD: function fromJD(jd) {\n    jd = Math.floor(jd) + 0.5 - this.jdEpoch;\n    var year = Math.floor(jd / 360);\n    jd = jd % 360;\n    jd += jd < 0 ? 360 : 0;\n    var month = Math.floor(jd / 20);\n    var day = jd % 20;\n    return this.newDate(year, month, day);\n  }\n});\n\n// Modulus function which works for non-integers.\nfunction mod(a, b) {\n  return a - b * Math.floor(a / b);\n}\n\n// Modulus function which returns numerator if modulus is zero.\nfunction amod(a, b) {\n  return mod(a - 1, b) + 1;\n}\n\n// Mayan calendar implementation\nmain.calendars.mayan = MayanCalendar;","map":{"version":3,"names":["main","require","assign","MayanCalendar","language","local","regionalOptions","prototype","baseCalendar","name","jdEpoch","hasYearZero","minMonth","firstMonth","minDay","epochs","monthNames","monthNamesShort","dayNames","dayNamesShort","dayNamesMin","digits","dateFormat","firstDay","isRTL","haabMonths","tzolkinMonths","leapYear","year","_validate","invalidYear","formatYear","date","baktun","Math","floor","katun","forYear","years","split","length","i","y","parseInt","abs","monthsInYear","weekOfYear","month","day","invalidDate","daysInYear","daysInMonth","invalidMonth","daysInWeek","dayOfWeek","weekDay","extraInfo","jd","toJD","haab","_toHaab","tzolkin","_toTzolkin","haabMonthName","haabMonth","haabDay","tzolkinDayName","tzolkinDay","tzolkinTrecena","mod","amod","fromJD","newDate","a","b","calendars","mayan"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/world-calendars/dist/calendars/mayan.js"],"sourcesContent":["/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n﻿/* http://keith-wood.name/calendars.html\n   Mayan calendar for jQuery v2.0.2.\n   Written by Keith Wood (wood.keith{at}optusnet.com.au) August 2009.\n   Available under the MIT (http://keith-wood.name/licence.html) license. \n   Please attribute the author if you use it. */\n\nvar main = require('../main');\nvar assign = require('object-assign');\n\n\n/** Implementation of the Mayan Long Count calendar.\n    See also <a href=\"http://en.wikipedia.org/wiki/Mayan_calendar\">http://en.wikipedia.org/wiki/Mayan_calendar</a>.\n    @class MayanCalendar\n    @param [language=''] {string} The language code (default English) for localisation. */\nfunction MayanCalendar(language) {\n    this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\n\nMayanCalendar.prototype = new main.baseCalendar;\n\nassign(MayanCalendar.prototype, {\n    /** The calendar name.\n        @memberof MayanCalendar */\n    name: 'Mayan',\n    /** Julian date of start of Mayan epoch: 11 August 3114 BCE.\n        @memberof MayanCalendar */\n    jdEpoch: 584282.5,\n    /** <code>true</code> if has a year zero, <code>false</code> if not.\n        @memberof MayanCalendar */\n    hasYearZero: true,\n    /** The minimum month number.\n        @memberof MayanCalendar */\n    minMonth: 0,\n    /** The first month in the year.\n        @memberof MayanCalendar */\n    firstMonth: 0,\n    /** The minimum day number.\n        @memberof MayanCalendar */\n    minDay: 0,\n\n    /** Localisations for the plugin.\n        Entries are objects indexed by the language code ('' being the default US/English).\n        Each object has the following attributes.\n        @memberof MayanCalendar\n        @property name {string} The calendar name.\n        @property epochs {string[]} The epoch names.\n        @property monthNames {string[]} The long names of the months of the year.\n        @property monthNamesShort {string[]} The short names of the months of the year.\n        @property dayNames {string[]} The long names of the days of the week.\n        @property dayNamesShort {string[]} The short names of the days of the week.\n        @property dayNamesMin {string[]} The minimal names of the days of the week.\n        @property dateFormat {string} The date format for this calendar.\n                See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\n        @property firstDay {number} The number of the first day of the week, starting at 0.\n        @property isRTL {number} <code>true</code> if this localisation reads right-to-left.\n        @property haabMonths {string[]} The names of the Haab months.\n        @property tzolkinMonths {string[]} The names of the Tzolkin months. */\n    regionalOptions: { // Localisations\n        '': {\n            name: 'Mayan',\n            epochs: ['', ''],\n            monthNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            '10', '11', '12', '13', '14', '15', '16', '17'],\n            monthNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            '10', '11', '12', '13', '14', '15', '16', '17'],\n            dayNames: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n            dayNamesShort: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n            dayNamesMin: ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19'],\n            digits: null,\n            dateFormat: 'YYYY.m.d',\n            firstDay: 0,\n            isRTL: false,\n            haabMonths: ['Pop', 'Uo', 'Zip', 'Zotz', 'Tzec', 'Xul', 'Yaxkin', 'Mol', 'Chen', 'Yax',\n            'Zac', 'Ceh', 'Mac', 'Kankin', 'Muan', 'Pax', 'Kayab', 'Cumku', 'Uayeb'],\n            tzolkinMonths: ['Imix', 'Ik', 'Akbal', 'Kan', 'Chicchan', 'Cimi', 'Manik', 'Lamat', 'Muluc', 'Oc',\n            'Chuen', 'Eb', 'Ben', 'Ix', 'Men', 'Cib', 'Caban', 'Etznab', 'Cauac', 'Ahau']\n        }\n    },\n\n    /** Determine whether this date is in a leap year.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\n        @throws Error if an invalid year or a different calendar used. */\n    leapYear: function(year) {\n        this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n        return false;\n    },\n\n    /** Format the year, if not a simple sequential number.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to format or the year to format.\n        @return {string} The formatted year.\n        @throws Error if an invalid year or a different calendar used. */\n    formatYear: function(year) {\n        var date = this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n        year = date.year();\n        var baktun = Math.floor(year / 400);\n        year = year % 400;\n        year += (year < 0 ? 400 : 0);\n        var katun = Math.floor(year / 20);\n        return baktun + '.' + katun + '.' + (year % 20);\n    },\n\n    /** Convert from the formatted year back to a single number.\n        @memberof MayanCalendar\n        @param years {string} The year as n.n.n.\n        @return {number} The sequential year.\n        @throws Error if an invalid value is supplied. */\n    forYear: function(years) {\n        years = years.split('.');\n        if (years.length < 3) {\n            throw 'Invalid Mayan year';\n        }\n        var year = 0;\n        for (var i = 0; i < years.length; i++) {\n            var y = parseInt(years[i], 10);\n            if (Math.abs(y) > 19 || (i > 0 && y < 0)) {\n                throw 'Invalid Mayan year';\n            }\n            year = year * 20 + y;\n        }\n        return year;\n    },\n\n    /** Retrieve the number of months in a year.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {number} The number of months.\n        @throws Error if an invalid year or a different calendar used. */\n    monthsInYear: function(year) {\n        this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n        return 18;\n    },\n\n    /** Determine the week of the year for a date.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [month] {number} The month to examine.\n        @param [day] {number} The day to examine.\n        @return {number} The week of the year.\n        @throws Error if an invalid date or a different calendar used. */\n    weekOfYear: function(year, month, day) {\n        this._validate(year, month, day, main.local.invalidDate);\n        return 0;\n    },\n\n    /** Retrieve the number of days in a year.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {number} The number of days.\n        @throws Error if an invalid year or a different calendar used. */\n    daysInYear: function(year) {\n        this._validate(year, this.minMonth, this.minDay, main.local.invalidYear);\n        return 360;\n    },\n\n    /** Retrieve the number of days in a month.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year of the month.\n        @param [month] {number} The month.\n        @return {number} The number of days in this month.\n        @throws Error if an invalid month/year or a different calendar used. */\n    daysInMonth: function(year, month) {\n        this._validate(year, month, this.minDay, main.local.invalidMonth);\n        return 20;\n    },\n\n    /** Retrieve the number of days in a week.\n        @memberof MayanCalendar\n        @return {number} The number of days. */\n    daysInWeek: function() {\n        return 5; // Just for formatting\n    },\n\n    /** Retrieve the day of the week for a date.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [month] {number} The month to examine.\n        @param [day] {number} The day to examine.\n        @return {number} The day of the week: 0 to number of days - 1.\n        @throws Error if an invalid date or a different calendar used. */\n    dayOfWeek: function(year, month, day) {\n        var date = this._validate(year, month, day, main.local.invalidDate);\n        return date.day();\n    },\n\n    /** Determine whether this date is a week day.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [month] {number} The month to examine.\n        @param [day] {number} The day to examine.\n        @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\n        @throws Error if an invalid date or a different calendar used. */\n    weekDay: function(year, month, day) {\n        this._validate(year, month, day, main.local.invalidDate);\n        return true;\n    },\n\n    /** Retrieve additional information about a date - Haab and Tzolkin equivalents.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [month] {number} The month to examine.\n        @param [day] {number} The day to examine.\n        @return {object} Additional information - contents depends on calendar.\n        @throws Error if an invalid date or a different calendar used. */\n    extraInfo: function(year, month, day) {\n        var date = this._validate(year, month, day, main.local.invalidDate);\n        var jd = date.toJD();\n        var haab = this._toHaab(jd);\n        var tzolkin = this._toTzolkin(jd);\n        return {haabMonthName: this.local.haabMonths[haab[0] - 1],\n            haabMonth: haab[0], haabDay: haab[1],\n            tzolkinDayName: this.local.tzolkinMonths[tzolkin[0] - 1],\n            tzolkinDay: tzolkin[0], tzolkinTrecena: tzolkin[1]};\n    },\n\n    /** Retrieve Haab date from a Julian date.\n        @memberof MayanCalendar\n        @private\n        @param jd  {number} The Julian date.\n        @return {number[]} Corresponding Haab month and day. */\n    _toHaab: function(jd) {\n        jd -= this.jdEpoch;\n        var day = mod(jd + 8 + ((18 - 1) * 20), 365);\n        return [Math.floor(day / 20) + 1, mod(day, 20)];\n    },\n\n    /** Retrieve Tzolkin date from a Julian date.\n        @memberof MayanCalendar\n        @private\n        @param jd {number} The Julian date.\n        @return {number[]} Corresponding Tzolkin day and trecena. */\n    _toTzolkin: function(jd) {\n        jd -= this.jdEpoch;\n        return [amod(jd + 20, 20), amod(jd + 4, 13)];\n    },\n\n    /** Retrieve the Julian date equivalent for this date,\n        i.e. days since January 1, 4713 BCE Greenwich noon.\n        @memberof MayanCalendar\n        @param year {CDate|number} The date to convert or the year to convert.\n        @param [month] {number} The month to convert.\n        @param [day] {number} The day to convert.\n        @return {number} The equivalent Julian date.\n        @throws Error if an invalid date or a different calendar used. */\n    toJD: function(year, month, day) {\n        var date = this._validate(year, month, day, main.local.invalidDate);\n        return date.day() + (date.month() * 20) + (date.year() * 360) + this.jdEpoch;\n    },\n\n    /** Create a new date from a Julian date.\n        @memberof MayanCalendar\n        @param jd {number} The Julian date to convert.\n        @return {CDate} The equivalent date. */\n    fromJD: function(jd) {\n        jd = Math.floor(jd) + 0.5 - this.jdEpoch;\n        var year = Math.floor(jd / 360);\n        jd = jd % 360;\n        jd += (jd < 0 ? 360 : 0);\n        var month = Math.floor(jd / 20);\n        var day = jd % 20;\n        return this.newDate(year, month, day);\n    }\n});\n\n// Modulus function which works for non-integers.\nfunction mod(a, b) {\n    return a - (b * Math.floor(a / b));\n}\n\n// Modulus function which returns numerator if modulus is zero.\nfunction amod(a, b) {\n    return mod(a - 1, b) + 1;\n}\n\n// Mayan calendar implementation\nmain.calendars.mayan = MayanCalendar;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
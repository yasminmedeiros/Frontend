{"ast":null,"code":"'use strict';\n\nmodule.exports = createHeatmap2D;\nvar bsearch = require('binary-search-bounds');\nvar iota = require('iota-array');\nvar pool = require('typedarray-pool');\nvar createShader = require('gl-shader');\nvar createBuffer = require('gl-buffer');\nvar shaders = require('./lib/shaders');\nfunction GLHeatmap2D(plot, shader, pickShader, positionBuffer, weightBuffer, colorBuffer, idBuffer) {\n  this.plot = plot;\n  this.shader = shader;\n  this.pickShader = pickShader;\n  this.positionBuffer = positionBuffer;\n  this.weightBuffer = weightBuffer;\n  this.colorBuffer = colorBuffer;\n  this.idBuffer = idBuffer;\n  this.xData = [];\n  this.yData = [];\n  this.shape = [0, 0];\n  this.bounds = [Infinity, Infinity, -Infinity, -Infinity];\n  this.pickOffset = 0;\n}\nvar proto = GLHeatmap2D.prototype;\nvar WEIGHTS = [0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1];\nproto.draw = function () {\n  var MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  return function () {\n    var plot = this.plot;\n    var shader = this.shader;\n    var bounds = this.bounds;\n    var numVertices = this.numVertices;\n    if (numVertices <= 0) {\n      return;\n    }\n    var gl = plot.gl;\n    var dataBox = plot.dataBox;\n    var boundX = bounds[2] - bounds[0];\n    var boundY = bounds[3] - bounds[1];\n    var dataX = dataBox[2] - dataBox[0];\n    var dataY = dataBox[3] - dataBox[1];\n    MATRIX[0] = 2.0 * boundX / dataX;\n    MATRIX[4] = 2.0 * boundY / dataY;\n    MATRIX[6] = 2.0 * (bounds[0] - dataBox[0]) / dataX - 1.0;\n    MATRIX[7] = 2.0 * (bounds[1] - dataBox[1]) / dataY - 1.0;\n    shader.bind();\n    var uniforms = shader.uniforms;\n    uniforms.viewTransform = MATRIX;\n    uniforms.shape = this.shape;\n    var attributes = shader.attributes;\n    this.positionBuffer.bind();\n    attributes.position.pointer();\n    this.weightBuffer.bind();\n    attributes.weight.pointer(gl.UNSIGNED_BYTE, false);\n    this.colorBuffer.bind();\n    attributes.color.pointer(gl.UNSIGNED_BYTE, true);\n    gl.drawArrays(gl.TRIANGLES, 0, numVertices);\n  };\n}();\nproto.drawPick = function () {\n  var MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  var PICK_VECTOR = [0, 0, 0, 0];\n  return function (pickOffset) {\n    var plot = this.plot;\n    var shader = this.pickShader;\n    var bounds = this.bounds;\n    var numVertices = this.numVertices;\n    if (numVertices <= 0) {\n      return;\n    }\n    var gl = plot.gl;\n    var dataBox = plot.dataBox;\n    var boundX = bounds[2] - bounds[0];\n    var boundY = bounds[3] - bounds[1];\n    var dataX = dataBox[2] - dataBox[0];\n    var dataY = dataBox[3] - dataBox[1];\n    MATRIX[0] = 2.0 * boundX / dataX;\n    MATRIX[4] = 2.0 * boundY / dataY;\n    MATRIX[6] = 2.0 * (bounds[0] - dataBox[0]) / dataX - 1.0;\n    MATRIX[7] = 2.0 * (bounds[1] - dataBox[1]) / dataY - 1.0;\n    for (var i = 0; i < 4; ++i) {\n      PICK_VECTOR[i] = pickOffset >> i * 8 & 0xff;\n    }\n    this.pickOffset = pickOffset;\n    shader.bind();\n    var uniforms = shader.uniforms;\n    uniforms.viewTransform = MATRIX;\n    uniforms.pickOffset = PICK_VECTOR;\n    uniforms.shape = this.shape;\n    var attributes = shader.attributes;\n    this.positionBuffer.bind();\n    attributes.position.pointer();\n    this.weightBuffer.bind();\n    attributes.weight.pointer(gl.UNSIGNED_BYTE, false);\n    this.idBuffer.bind();\n    attributes.pickId.pointer(gl.UNSIGNED_BYTE, false);\n    gl.drawArrays(gl.TRIANGLES, 0, numVertices);\n    return pickOffset + this.shape[0] * this.shape[1];\n  };\n}();\nproto.pick = function (x, y, value) {\n  var pickOffset = this.pickOffset;\n  var pointCount = this.shape[0] * this.shape[1];\n  if (value < pickOffset || value >= pickOffset + pointCount) {\n    return null;\n  }\n  var pointId = value - pickOffset;\n  var xData = this.xData;\n  var yData = this.yData;\n  return {\n    object: this,\n    pointId: pointId,\n    dataCoord: [xData[pointId % this.shape[0]], yData[pointId / this.shape[0] | 0]]\n  };\n};\nproto.update = function (options) {\n  options = options || {};\n  var shape = options.shape || [0, 0];\n  var x = options.x || iota(shape[0]);\n  var y = options.y || iota(shape[1]);\n  var z = options.z || new Float32Array(shape[0] * shape[1]);\n  var isSmooth = options.zsmooth !== false;\n  this.xData = x;\n  this.yData = y;\n  var colorLevels = options.colorLevels || [0];\n  var colorValues = options.colorValues || [0, 0, 0, 1];\n  var colorCount = colorLevels.length;\n  var bounds = this.bounds;\n  var lox, loy, hix, hiy;\n  if (isSmooth) {\n    lox = bounds[0] = x[0];\n    loy = bounds[1] = y[0];\n    hix = bounds[2] = x[x.length - 1];\n    hiy = bounds[3] = y[y.length - 1];\n  } else {\n    // To get squares to centre on data values\n    lox = bounds[0] = x[0] + (x[1] - x[0]) / 2; // starting x value\n    loy = bounds[1] = y[0] + (y[1] - y[0]) / 2; // starting y value\n\n    // Bounds needs to add half a square on each end\n    hix = bounds[2] = x[x.length - 1] + (x[x.length - 1] - x[x.length - 2]) / 2;\n    hiy = bounds[3] = y[y.length - 1] + (y[y.length - 1] - y[y.length - 2]) / 2;\n\n    // N.B. Resolution = 1 / range\n  }\n\n  var xs = 1.0 / (hix - lox);\n  var ys = 1.0 / (hiy - loy);\n  var numX = shape[0];\n  var numY = shape[1];\n  this.shape = [numX, numY];\n  var numVerts = (isSmooth ? (numX - 1) * (numY - 1) : numX * numY) * (WEIGHTS.length >>> 1);\n  this.numVertices = numVerts;\n  var colors = pool.mallocUint8(numVerts * 4);\n  var positions = pool.mallocFloat32(numVerts * 2);\n  var weights = pool.mallocUint8(numVerts * 2);\n  var ids = pool.mallocUint32(numVerts);\n  var ptr = 0;\n  var ni = isSmooth ? numX - 1 : numX;\n  var nj = isSmooth ? numY - 1 : numY;\n  for (var j = 0; j < nj; ++j) {\n    var yc0, yc1;\n    if (isSmooth) {\n      yc0 = ys * (y[j] - loy);\n      yc1 = ys * (y[j + 1] - loy);\n    } else {\n      yc0 = j < numY - 1 ? ys * (y[j] - (y[j + 1] - y[j]) / 2 - loy) : ys * (y[j] - (y[j] - y[j - 1]) / 2 - loy);\n      yc1 = j < numY - 1 ? ys * (y[j] + (y[j + 1] - y[j]) / 2 - loy) : ys * (y[j] + (y[j] - y[j - 1]) / 2 - loy);\n    }\n    for (var i = 0; i < ni; ++i) {\n      var xc0, xc1;\n      if (isSmooth) {\n        xc0 = xs * (x[i] - lox);\n        xc1 = xs * (x[i + 1] - lox);\n      } else {\n        xc0 = i < numX - 1 ? xs * (x[i] - (x[i + 1] - x[i]) / 2 - lox) : xs * (x[i] - (x[i] - x[i - 1]) / 2 - lox);\n        xc1 = i < numX - 1 ? xs * (x[i] + (x[i + 1] - x[i]) / 2 - lox) : xs * (x[i] + (x[i] - x[i - 1]) / 2 - lox);\n      }\n      for (var dd = 0; dd < WEIGHTS.length; dd += 2) {\n        var dx = WEIGHTS[dd];\n        var dy = WEIGHTS[dd + 1];\n        var offset = isSmooth ? (j + dy) * numX + (i + dx) : j * numX + i;\n        var zc = z[offset];\n        var colorIdx = bsearch.le(colorLevels, zc);\n        var r, g, b, a;\n        if (colorIdx < 0) {\n          r = colorValues[0];\n          g = colorValues[1];\n          b = colorValues[2];\n          a = colorValues[3];\n        } else if (colorIdx === colorCount - 1) {\n          r = colorValues[4 * colorCount - 4];\n          g = colorValues[4 * colorCount - 3];\n          b = colorValues[4 * colorCount - 2];\n          a = colorValues[4 * colorCount - 1];\n        } else {\n          var t = (zc - colorLevels[colorIdx]) / (colorLevels[colorIdx + 1] - colorLevels[colorIdx]);\n          var ti = 1.0 - t;\n          var i0 = 4 * colorIdx;\n          var i1 = 4 * (colorIdx + 1);\n          r = ti * colorValues[i0] + t * colorValues[i1];\n          g = ti * colorValues[i0 + 1] + t * colorValues[i1 + 1];\n          b = ti * colorValues[i0 + 2] + t * colorValues[i1 + 2];\n          a = ti * colorValues[i0 + 3] + t * colorValues[i1 + 3];\n        }\n        colors[4 * ptr] = 255 * r;\n        colors[4 * ptr + 1] = 255 * g;\n        colors[4 * ptr + 2] = 255 * b;\n        colors[4 * ptr + 3] = 255 * a;\n        positions[2 * ptr] = xc0 * .5 + xc1 * .5;\n        positions[2 * ptr + 1] = yc0 * .5 + yc1 * .5;\n        weights[2 * ptr] = dx;\n        weights[2 * ptr + 1] = dy;\n        ids[ptr] = j * numX + i;\n        ptr += 1;\n      }\n    }\n  }\n  this.positionBuffer.update(positions);\n  this.weightBuffer.update(weights);\n  this.colorBuffer.update(colors);\n  this.idBuffer.update(ids);\n  pool.free(positions);\n  pool.free(colors);\n  pool.free(weights);\n  pool.free(ids);\n};\nproto.dispose = function () {\n  this.shader.dispose();\n  this.pickShader.dispose();\n  this.positionBuffer.dispose();\n  this.weightBuffer.dispose();\n  this.colorBuffer.dispose();\n  this.idBuffer.dispose();\n  this.plot.removeObject(this);\n};\nfunction createHeatmap2D(plot, options) {\n  var gl = plot.gl;\n  var shader = createShader(gl, shaders.vertex, shaders.fragment);\n  var pickShader = createShader(gl, shaders.pickVertex, shaders.pickFragment);\n  var positionBuffer = createBuffer(gl);\n  var weightBuffer = createBuffer(gl);\n  var colorBuffer = createBuffer(gl);\n  var idBuffer = createBuffer(gl);\n  var heatmap = new GLHeatmap2D(plot, shader, pickShader, positionBuffer, weightBuffer, colorBuffer, idBuffer);\n  heatmap.update(options);\n  plot.addObject(heatmap);\n  return heatmap;\n}","map":{"version":3,"names":["module","exports","createHeatmap2D","bsearch","require","iota","pool","createShader","createBuffer","shaders","GLHeatmap2D","plot","shader","pickShader","positionBuffer","weightBuffer","colorBuffer","idBuffer","xData","yData","shape","bounds","Infinity","pickOffset","proto","prototype","WEIGHTS","draw","MATRIX","numVertices","gl","dataBox","boundX","boundY","dataX","dataY","bind","uniforms","viewTransform","attributes","position","pointer","weight","UNSIGNED_BYTE","color","drawArrays","TRIANGLES","drawPick","PICK_VECTOR","i","pickId","pick","x","y","value","pointCount","pointId","object","dataCoord","update","options","z","Float32Array","isSmooth","zsmooth","colorLevels","colorValues","colorCount","length","lox","loy","hix","hiy","xs","ys","numX","numY","numVerts","colors","mallocUint8","positions","mallocFloat32","weights","ids","mallocUint32","ptr","ni","nj","j","yc0","yc1","xc0","xc1","dd","dx","dy","offset","zc","colorIdx","le","r","g","b","a","t","ti","i0","i1","free","dispose","removeObject","vertex","fragment","pickVertex","pickFragment","heatmap","addObject"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-heatmap2d/heatmap.js"],"sourcesContent":["'use strict'\n\nmodule.exports = createHeatmap2D\n\nvar bsearch = require('binary-search-bounds')\nvar iota = require('iota-array')\nvar pool = require('typedarray-pool')\nvar createShader = require('gl-shader')\nvar createBuffer = require('gl-buffer')\n\nvar shaders = require('./lib/shaders')\n\nfunction GLHeatmap2D (\n  plot,\n  shader,\n  pickShader,\n  positionBuffer,\n  weightBuffer,\n  colorBuffer,\n  idBuffer) {\n  this.plot = plot\n  this.shader = shader\n  this.pickShader = pickShader\n  this.positionBuffer = positionBuffer\n  this.weightBuffer = weightBuffer\n  this.colorBuffer = colorBuffer\n  this.idBuffer = idBuffer\n  this.xData = []\n  this.yData = []\n  this.shape = [0, 0]\n  this.bounds = [Infinity, Infinity, -Infinity, -Infinity]\n  this.pickOffset = 0\n}\n\nvar proto = GLHeatmap2D.prototype\n\nvar WEIGHTS = [\n  0, 0,\n  1, 0,\n  0, 1,\n  1, 0,\n  1, 1,\n  0, 1\n]\n\nproto.draw = (function () {\n  var MATRIX = [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]\n\n  return function () {\n    var plot = this.plot\n    var shader = this.shader\n    var bounds = this.bounds\n    var numVertices = this.numVertices\n\n    if (numVertices <= 0) {\n      return\n    }\n\n    var gl = plot.gl\n    var dataBox = plot.dataBox\n\n    var boundX = bounds[2] - bounds[0]\n    var boundY = bounds[3] - bounds[1]\n    var dataX = dataBox[2] - dataBox[0]\n    var dataY = dataBox[3] - dataBox[1]\n\n    MATRIX[0] = 2.0 * boundX / dataX\n    MATRIX[4] = 2.0 * boundY / dataY\n    MATRIX[6] = 2.0 * (bounds[0] - dataBox[0]) / dataX - 1.0\n    MATRIX[7] = 2.0 * (bounds[1] - dataBox[1]) / dataY - 1.0\n\n    shader.bind()\n\n    var uniforms = shader.uniforms\n    uniforms.viewTransform = MATRIX\n\n    uniforms.shape = this.shape\n\n    var attributes = shader.attributes\n    this.positionBuffer.bind()\n    attributes.position.pointer()\n\n    this.weightBuffer.bind()\n    attributes.weight.pointer(gl.UNSIGNED_BYTE, false)\n\n    this.colorBuffer.bind()\n    attributes.color.pointer(gl.UNSIGNED_BYTE, true)\n\n    gl.drawArrays(gl.TRIANGLES, 0, numVertices)\n  }\n})()\n\nproto.drawPick = (function () {\n  var MATRIX = [\n    1, 0, 0,\n    0, 1, 0,\n    0, 0, 1\n  ]\n\n  var PICK_VECTOR = [0, 0, 0, 0]\n\n  return function (pickOffset) {\n    var plot = this.plot\n    var shader = this.pickShader\n    var bounds = this.bounds\n    var numVertices = this.numVertices\n\n    if (numVertices <= 0) {\n      return\n    }\n\n    var gl = plot.gl\n    var dataBox = plot.dataBox\n\n    var boundX = bounds[2] - bounds[0]\n    var boundY = bounds[3] - bounds[1]\n    var dataX = dataBox[2] - dataBox[0]\n    var dataY = dataBox[3] - dataBox[1]\n\n    MATRIX[0] = 2.0 * boundX / dataX\n    MATRIX[4] = 2.0 * boundY / dataY\n    MATRIX[6] = 2.0 * (bounds[0] - dataBox[0]) / dataX - 1.0\n    MATRIX[7] = 2.0 * (bounds[1] - dataBox[1]) / dataY - 1.0\n\n    for (var i = 0; i < 4; ++i) {\n      PICK_VECTOR[i] = (pickOffset >> (i * 8)) & 0xff\n    }\n\n    this.pickOffset = pickOffset\n\n    shader.bind()\n\n    var uniforms = shader.uniforms\n    uniforms.viewTransform = MATRIX\n    uniforms.pickOffset = PICK_VECTOR\n    uniforms.shape = this.shape\n\n    var attributes = shader.attributes\n    this.positionBuffer.bind()\n    attributes.position.pointer()\n\n    this.weightBuffer.bind()\n    attributes.weight.pointer(gl.UNSIGNED_BYTE, false)\n\n    this.idBuffer.bind()\n    attributes.pickId.pointer(gl.UNSIGNED_BYTE, false)\n\n    gl.drawArrays(gl.TRIANGLES, 0, numVertices)\n\n    return pickOffset + this.shape[0] * this.shape[1]\n  }\n})()\n\nproto.pick = function (x, y, value) {\n  var pickOffset = this.pickOffset\n  var pointCount = this.shape[0] * this.shape[1]\n  if (value < pickOffset || value >= pickOffset + pointCount) {\n    return null\n  }\n  var pointId = value - pickOffset\n  var xData = this.xData\n  var yData = this.yData\n  return {\n    object: this,\n    pointId: pointId,\n    dataCoord: [\n      xData[pointId % this.shape[0]],\n      yData[(pointId / this.shape[0]) | 0]]\n  }\n}\n\nproto.update = function (options) {\n  options = options || {}\n\n  var shape = options.shape || [0, 0]\n\n  var x = options.x || iota(shape[0])\n  var y = options.y || iota(shape[1])\n  var z = options.z || new Float32Array(shape[0] * shape[1])\n\n  var isSmooth = options.zsmooth !== false\n\n  this.xData = x\n  this.yData = y\n\n  var colorLevels = options.colorLevels || [0]\n  var colorValues = options.colorValues || [0, 0, 0, 1]\n  var colorCount = colorLevels.length\n\n  var bounds = this.bounds\n  var lox, loy, hix, hiy\n  if (isSmooth) {\n    lox = bounds[0] = x[0]\n    loy = bounds[1] = y[0]\n    hix = bounds[2] = x[x.length - 1]\n    hiy = bounds[3] = y[y.length - 1]\n  } else {\n    // To get squares to centre on data values\n    lox = bounds[0] = x[0] + (x[1] - x[0]) / 2 // starting x value\n    loy = bounds[1] = y[0] + (y[1] - y[0]) / 2 // starting y value\n\n    // Bounds needs to add half a square on each end\n    hix = bounds[2] = x[x.length - 1] + (x[x.length - 1] - x[x.length - 2]) / 2\n    hiy = bounds[3] = y[y.length - 1] + (y[y.length - 1] - y[y.length - 2]) / 2\n\n    // N.B. Resolution = 1 / range\n  }\n  var xs = 1.0 / (hix - lox)\n  var ys = 1.0 / (hiy - loy)\n\n  var numX = shape[0]\n  var numY = shape[1]\n\n  this.shape = [numX, numY]\n\n  var numVerts = (\n    isSmooth ? (numX - 1) * (numY - 1) : numX * numY\n  ) * (WEIGHTS.length >>> 1)\n\n  this.numVertices = numVerts\n\n  var colors = pool.mallocUint8(numVerts * 4)\n  var positions = pool.mallocFloat32(numVerts * 2)\n  var weights   = pool.mallocUint8 (numVerts * 2)\n  var ids = pool.mallocUint32(numVerts)\n\n  var ptr = 0\n\n  var ni = isSmooth ? numX - 1 : numX\n  var nj = isSmooth ? numY - 1 : numY\n\n  for (var j = 0; j < nj; ++j) {\n    var yc0, yc1\n\n    if (isSmooth) {\n      yc0 =  ys * (y[j] - loy)\n      yc1 =  ys * (y[j + 1] - loy)\n    } else {\n      yc0 = j < numY - 1 ? ys * (y[j] - (y[j + 1] - y[j])/2 - loy) : ys * (y[j] - (y[j] - y[j - 1])/2 - loy)\n      yc1 = j < numY - 1 ? ys * (y[j] + (y[j + 1] - y[j])/2 - loy) : ys * (y[j] + (y[j] - y[j - 1])/2 - loy)\n    }\n\n    for (var i = 0; i < ni; ++i) {\n      var xc0, xc1\n\n      if (isSmooth) {\n        xc0 = xs * (x[i] - lox)\n        xc1 = xs * (x[i + 1] - lox)\n      } else {\n        xc0 = i < numX - 1 ? xs * (x[i] - (x[i + 1] - x[i])/2 - lox) : xs * (x[i] - (x[i] - x[i - 1])/2 - lox)\n        xc1 = i < numX - 1 ? xs * (x[i] + (x[i + 1] - x[i])/2 - lox) : xs * (x[i] + (x[i] - x[i - 1])/2 - lox)\n      }\n\n      for (var dd = 0; dd < WEIGHTS.length; dd += 2) {\n        var dx = WEIGHTS[dd]\n        var dy = WEIGHTS[dd + 1]\n        var offset = isSmooth ? (j + dy) * numX + (i + dx) : j * numX + i\n        var zc = z[offset]\n        var colorIdx = bsearch.le(colorLevels, zc)\n        var r, g, b, a\n        if (colorIdx < 0) {\n          r = colorValues[0]\n          g = colorValues[1]\n          b = colorValues[2]\n          a = colorValues[3]\n        } else if (colorIdx === colorCount - 1) {\n          r = colorValues[4 * colorCount - 4]\n          g = colorValues[4 * colorCount - 3]\n          b = colorValues[4 * colorCount - 2]\n          a = colorValues[4 * colorCount - 1]\n        } else {\n          var t = (zc - colorLevels[colorIdx]) /\n            (colorLevels[colorIdx + 1] - colorLevels[colorIdx])\n          var ti = 1.0 - t\n          var i0 = 4 * colorIdx\n          var i1 = 4 * (colorIdx + 1)\n          r = ti * colorValues[i0] + t * colorValues[i1]\n          g = ti * colorValues[i0 + 1] + t * colorValues[i1 + 1]\n          b = ti * colorValues[i0 + 2] + t * colorValues[i1 + 2]\n          a = ti * colorValues[i0 + 3] + t * colorValues[i1 + 3]\n        }\n\n        colors[4 * ptr] = 255 * r\n        colors[4 * ptr + 1] = 255 * g\n        colors[4 * ptr + 2] = 255 * b\n        colors[4 * ptr + 3] = 255 * a\n\n        positions[2*ptr] = xc0*.5 + xc1*.5;\n        positions[2*ptr+1] = yc0*.5 + yc1*.5;\n\n        weights[2*ptr] = dx;\n        weights[2*ptr+1] = dy;\n\n        ids[ptr] = j * numX + i\n\n        ptr += 1\n      }\n    }\n  }\n\n  this.positionBuffer.update(positions)\n  this.weightBuffer.update(weights)\n  this.colorBuffer.update(colors)\n  this.idBuffer.update(ids)\n\n  pool.free(positions)\n  pool.free(colors)\n  pool.free(weights)\n  pool.free(ids)\n}\n\nproto.dispose = function () {\n  this.shader.dispose()\n  this.pickShader.dispose()\n  this.positionBuffer.dispose()\n  this.weightBuffer.dispose()\n  this.colorBuffer.dispose()\n  this.idBuffer.dispose()\n  this.plot.removeObject(this)\n}\n\nfunction createHeatmap2D (plot, options) {\n  var gl = plot.gl\n\n  var shader = createShader(gl, shaders.vertex, shaders.fragment)\n  var pickShader = createShader(gl, shaders.pickVertex, shaders.pickFragment)\n\n  var positionBuffer = createBuffer(gl)\n  var weightBuffer   = createBuffer(gl)\n  var colorBuffer = createBuffer(gl)\n  var idBuffer = createBuffer(gl)\n\n  var heatmap = new GLHeatmap2D(\n    plot,\n    shader,\n    pickShader,\n    positionBuffer,\n    weightBuffer,\n    colorBuffer,\n    idBuffer)\n\n  heatmap.update(options)\n  plot.addObject(heatmap)\n\n  return heatmap\n}\n"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,eAAe;AAEhC,IAAIC,OAAO,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIC,IAAI,GAAGD,OAAO,CAAC,YAAY,CAAC;AAChC,IAAIE,IAAI,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AACrC,IAAIG,YAAY,GAAGH,OAAO,CAAC,WAAW,CAAC;AACvC,IAAII,YAAY,GAAGJ,OAAO,CAAC,WAAW,CAAC;AAEvC,IAAIK,OAAO,GAAGL,OAAO,CAAC,eAAe,CAAC;AAEtC,SAASM,WAAW,CAClBC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZC,WAAW,EACXC,QAAQ,EAAE;EACV,IAAI,CAACN,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACpB,IAAI,CAACC,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACC,cAAc,GAAGA,cAAc;EACpC,IAAI,CAACC,YAAY,GAAGA,YAAY;EAChC,IAAI,CAACC,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACC,KAAK,GAAG,EAAE;EACf,IAAI,CAACC,KAAK,GAAG,EAAE;EACf,IAAI,CAACC,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EACnB,IAAI,CAACC,MAAM,GAAG,CAACC,QAAQ,EAAEA,QAAQ,EAAE,CAACA,QAAQ,EAAE,CAACA,QAAQ,CAAC;EACxD,IAAI,CAACC,UAAU,GAAG,CAAC;AACrB;AAEA,IAAIC,KAAK,GAAGd,WAAW,CAACe,SAAS;AAEjC,IAAIC,OAAO,GAAG,CACZ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,CACL;AAEDF,KAAK,CAACG,IAAI,GAAI,YAAY;EACxB,IAAIC,MAAM,GAAG,CACX,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CACR;EAED,OAAO,YAAY;IACjB,IAAIjB,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAIC,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIS,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAElC,IAAIA,WAAW,IAAI,CAAC,EAAE;MACpB;IACF;IAEA,IAAIC,EAAE,GAAGnB,IAAI,CAACmB,EAAE;IAChB,IAAIC,OAAO,GAAGpB,IAAI,CAACoB,OAAO;IAE1B,IAAIC,MAAM,GAAGX,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IAClC,IAAIY,MAAM,GAAGZ,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IAClC,IAAIa,KAAK,GAAGH,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;IACnC,IAAII,KAAK,GAAGJ,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;IAEnCH,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGI,MAAM,GAAGE,KAAK;IAChCN,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGK,MAAM,GAAGE,KAAK;IAChCP,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIP,MAAM,CAAC,CAAC,CAAC,GAAGU,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGG,KAAK,GAAG,GAAG;IACxDN,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIP,MAAM,CAAC,CAAC,CAAC,GAAGU,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGI,KAAK,GAAG,GAAG;IAExDvB,MAAM,CAACwB,IAAI,EAAE;IAEb,IAAIC,QAAQ,GAAGzB,MAAM,CAACyB,QAAQ;IAC9BA,QAAQ,CAACC,aAAa,GAAGV,MAAM;IAE/BS,QAAQ,CAACjB,KAAK,GAAG,IAAI,CAACA,KAAK;IAE3B,IAAImB,UAAU,GAAG3B,MAAM,CAAC2B,UAAU;IAClC,IAAI,CAACzB,cAAc,CAACsB,IAAI,EAAE;IAC1BG,UAAU,CAACC,QAAQ,CAACC,OAAO,EAAE;IAE7B,IAAI,CAAC1B,YAAY,CAACqB,IAAI,EAAE;IACxBG,UAAU,CAACG,MAAM,CAACD,OAAO,CAACX,EAAE,CAACa,aAAa,EAAE,KAAK,CAAC;IAElD,IAAI,CAAC3B,WAAW,CAACoB,IAAI,EAAE;IACvBG,UAAU,CAACK,KAAK,CAACH,OAAO,CAACX,EAAE,CAACa,aAAa,EAAE,IAAI,CAAC;IAEhDb,EAAE,CAACe,UAAU,CAACf,EAAE,CAACgB,SAAS,EAAE,CAAC,EAAEjB,WAAW,CAAC;EAC7C,CAAC;AACH,CAAC,EAAG;AAEJL,KAAK,CAACuB,QAAQ,GAAI,YAAY;EAC5B,IAAInB,MAAM,GAAG,CACX,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,EACP,CAAC,EAAE,CAAC,EAAE,CAAC,CACR;EAED,IAAIoB,WAAW,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAE9B,OAAO,UAAUzB,UAAU,EAAE;IAC3B,IAAIZ,IAAI,GAAG,IAAI,CAACA,IAAI;IACpB,IAAIC,MAAM,GAAG,IAAI,CAACC,UAAU;IAC5B,IAAIQ,MAAM,GAAG,IAAI,CAACA,MAAM;IACxB,IAAIQ,WAAW,GAAG,IAAI,CAACA,WAAW;IAElC,IAAIA,WAAW,IAAI,CAAC,EAAE;MACpB;IACF;IAEA,IAAIC,EAAE,GAAGnB,IAAI,CAACmB,EAAE;IAChB,IAAIC,OAAO,GAAGpB,IAAI,CAACoB,OAAO;IAE1B,IAAIC,MAAM,GAAGX,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IAClC,IAAIY,MAAM,GAAGZ,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC;IAClC,IAAIa,KAAK,GAAGH,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;IACnC,IAAII,KAAK,GAAGJ,OAAO,CAAC,CAAC,CAAC,GAAGA,OAAO,CAAC,CAAC,CAAC;IAEnCH,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGI,MAAM,GAAGE,KAAK;IAChCN,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGK,MAAM,GAAGE,KAAK;IAChCP,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIP,MAAM,CAAC,CAAC,CAAC,GAAGU,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGG,KAAK,GAAG,GAAG;IACxDN,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIP,MAAM,CAAC,CAAC,CAAC,GAAGU,OAAO,CAAC,CAAC,CAAC,CAAC,GAAGI,KAAK,GAAG,GAAG;IAExD,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAE,EAAEA,CAAC,EAAE;MAC1BD,WAAW,CAACC,CAAC,CAAC,GAAI1B,UAAU,IAAK0B,CAAC,GAAG,CAAE,GAAI,IAAI;IACjD;IAEA,IAAI,CAAC1B,UAAU,GAAGA,UAAU;IAE5BX,MAAM,CAACwB,IAAI,EAAE;IAEb,IAAIC,QAAQ,GAAGzB,MAAM,CAACyB,QAAQ;IAC9BA,QAAQ,CAACC,aAAa,GAAGV,MAAM;IAC/BS,QAAQ,CAACd,UAAU,GAAGyB,WAAW;IACjCX,QAAQ,CAACjB,KAAK,GAAG,IAAI,CAACA,KAAK;IAE3B,IAAImB,UAAU,GAAG3B,MAAM,CAAC2B,UAAU;IAClC,IAAI,CAACzB,cAAc,CAACsB,IAAI,EAAE;IAC1BG,UAAU,CAACC,QAAQ,CAACC,OAAO,EAAE;IAE7B,IAAI,CAAC1B,YAAY,CAACqB,IAAI,EAAE;IACxBG,UAAU,CAACG,MAAM,CAACD,OAAO,CAACX,EAAE,CAACa,aAAa,EAAE,KAAK,CAAC;IAElD,IAAI,CAAC1B,QAAQ,CAACmB,IAAI,EAAE;IACpBG,UAAU,CAACW,MAAM,CAACT,OAAO,CAACX,EAAE,CAACa,aAAa,EAAE,KAAK,CAAC;IAElDb,EAAE,CAACe,UAAU,CAACf,EAAE,CAACgB,SAAS,EAAE,CAAC,EAAEjB,WAAW,CAAC;IAE3C,OAAON,UAAU,GAAG,IAAI,CAACH,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC;EACnD,CAAC;AACH,CAAC,EAAG;AAEJI,KAAK,CAAC2B,IAAI,GAAG,UAAUC,CAAC,EAAEC,CAAC,EAAEC,KAAK,EAAE;EAClC,IAAI/B,UAAU,GAAG,IAAI,CAACA,UAAU;EAChC,IAAIgC,UAAU,GAAG,IAAI,CAACnC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC;EAC9C,IAAIkC,KAAK,GAAG/B,UAAU,IAAI+B,KAAK,IAAI/B,UAAU,GAAGgC,UAAU,EAAE;IAC1D,OAAO,IAAI;EACb;EACA,IAAIC,OAAO,GAAGF,KAAK,GAAG/B,UAAU;EAChC,IAAIL,KAAK,GAAG,IAAI,CAACA,KAAK;EACtB,IAAIC,KAAK,GAAG,IAAI,CAACA,KAAK;EACtB,OAAO;IACLsC,MAAM,EAAE,IAAI;IACZD,OAAO,EAAEA,OAAO;IAChBE,SAAS,EAAE,CACTxC,KAAK,CAACsC,OAAO,GAAG,IAAI,CAACpC,KAAK,CAAC,CAAC,CAAC,CAAC,EAC9BD,KAAK,CAAEqC,OAAO,GAAG,IAAI,CAACpC,KAAK,CAAC,CAAC,CAAC,GAAI,CAAC,CAAC;EACxC,CAAC;AACH,CAAC;AAEDI,KAAK,CAACmC,MAAM,GAAG,UAAUC,OAAO,EAAE;EAChCA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;EAEvB,IAAIxC,KAAK,GAAGwC,OAAO,CAACxC,KAAK,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;EAEnC,IAAIgC,CAAC,GAAGQ,OAAO,CAACR,CAAC,IAAI/C,IAAI,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,IAAIiC,CAAC,GAAGO,OAAO,CAACP,CAAC,IAAIhD,IAAI,CAACe,KAAK,CAAC,CAAC,CAAC,CAAC;EACnC,IAAIyC,CAAC,GAAGD,OAAO,CAACC,CAAC,IAAI,IAAIC,YAAY,CAAC1C,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC;EAE1D,IAAI2C,QAAQ,GAAGH,OAAO,CAACI,OAAO,KAAK,KAAK;EAExC,IAAI,CAAC9C,KAAK,GAAGkC,CAAC;EACd,IAAI,CAACjC,KAAK,GAAGkC,CAAC;EAEd,IAAIY,WAAW,GAAGL,OAAO,CAACK,WAAW,IAAI,CAAC,CAAC,CAAC;EAC5C,IAAIC,WAAW,GAAGN,OAAO,CAACM,WAAW,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACrD,IAAIC,UAAU,GAAGF,WAAW,CAACG,MAAM;EAEnC,IAAI/C,MAAM,GAAG,IAAI,CAACA,MAAM;EACxB,IAAIgD,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG;EACtB,IAAIT,QAAQ,EAAE;IACZM,GAAG,GAAGhD,MAAM,CAAC,CAAC,CAAC,GAAG+B,CAAC,CAAC,CAAC,CAAC;IACtBkB,GAAG,GAAGjD,MAAM,CAAC,CAAC,CAAC,GAAGgC,CAAC,CAAC,CAAC,CAAC;IACtBkB,GAAG,GAAGlD,MAAM,CAAC,CAAC,CAAC,GAAG+B,CAAC,CAACA,CAAC,CAACgB,MAAM,GAAG,CAAC,CAAC;IACjCI,GAAG,GAAGnD,MAAM,CAAC,CAAC,CAAC,GAAGgC,CAAC,CAACA,CAAC,CAACe,MAAM,GAAG,CAAC,CAAC;EACnC,CAAC,MAAM;IACL;IACAC,GAAG,GAAGhD,MAAM,CAAC,CAAC,CAAC,GAAG+B,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;IAC3CkB,GAAG,GAAGjD,MAAM,CAAC,CAAC,CAAC,GAAGgC,CAAC,CAAC,CAAC,CAAC,GAAG,CAACA,CAAC,CAAC,CAAC,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAC;;IAE3C;IACAkB,GAAG,GAAGlD,MAAM,CAAC,CAAC,CAAC,GAAG+B,CAAC,CAACA,CAAC,CAACgB,MAAM,GAAG,CAAC,CAAC,GAAG,CAAChB,CAAC,CAACA,CAAC,CAACgB,MAAM,GAAG,CAAC,CAAC,GAAGhB,CAAC,CAACA,CAAC,CAACgB,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;IAC3EI,GAAG,GAAGnD,MAAM,CAAC,CAAC,CAAC,GAAGgC,CAAC,CAACA,CAAC,CAACe,MAAM,GAAG,CAAC,CAAC,GAAG,CAACf,CAAC,CAACA,CAAC,CAACe,MAAM,GAAG,CAAC,CAAC,GAAGf,CAAC,CAACA,CAAC,CAACe,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC;;IAE3E;EACF;;EACA,IAAIK,EAAE,GAAG,GAAG,IAAIF,GAAG,GAAGF,GAAG,CAAC;EAC1B,IAAIK,EAAE,GAAG,GAAG,IAAIF,GAAG,GAAGF,GAAG,CAAC;EAE1B,IAAIK,IAAI,GAAGvD,KAAK,CAAC,CAAC,CAAC;EACnB,IAAIwD,IAAI,GAAGxD,KAAK,CAAC,CAAC,CAAC;EAEnB,IAAI,CAACA,KAAK,GAAG,CAACuD,IAAI,EAAEC,IAAI,CAAC;EAEzB,IAAIC,QAAQ,GAAG,CACbd,QAAQ,GAAG,CAACY,IAAI,GAAG,CAAC,KAAKC,IAAI,GAAG,CAAC,CAAC,GAAGD,IAAI,GAAGC,IAAI,KAC7ClD,OAAO,CAAC0C,MAAM,KAAK,CAAC,CAAC;EAE1B,IAAI,CAACvC,WAAW,GAAGgD,QAAQ;EAE3B,IAAIC,MAAM,GAAGxE,IAAI,CAACyE,WAAW,CAACF,QAAQ,GAAG,CAAC,CAAC;EAC3C,IAAIG,SAAS,GAAG1E,IAAI,CAAC2E,aAAa,CAACJ,QAAQ,GAAG,CAAC,CAAC;EAChD,IAAIK,OAAO,GAAK5E,IAAI,CAACyE,WAAW,CAAEF,QAAQ,GAAG,CAAC,CAAC;EAC/C,IAAIM,GAAG,GAAG7E,IAAI,CAAC8E,YAAY,CAACP,QAAQ,CAAC;EAErC,IAAIQ,GAAG,GAAG,CAAC;EAEX,IAAIC,EAAE,GAAGvB,QAAQ,GAAGY,IAAI,GAAG,CAAC,GAAGA,IAAI;EACnC,IAAIY,EAAE,GAAGxB,QAAQ,GAAGa,IAAI,GAAG,CAAC,GAAGA,IAAI;EAEnC,KAAK,IAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,EAAE,EAAE,EAAEC,CAAC,EAAE;IAC3B,IAAIC,GAAG,EAAEC,GAAG;IAEZ,IAAI3B,QAAQ,EAAE;MACZ0B,GAAG,GAAIf,EAAE,IAAIrB,CAAC,CAACmC,CAAC,CAAC,GAAGlB,GAAG,CAAC;MACxBoB,GAAG,GAAIhB,EAAE,IAAIrB,CAAC,CAACmC,CAAC,GAAG,CAAC,CAAC,GAAGlB,GAAG,CAAC;IAC9B,CAAC,MAAM;MACLmB,GAAG,GAAGD,CAAC,GAAGZ,IAAI,GAAG,CAAC,GAAGF,EAAE,IAAIrB,CAAC,CAACmC,CAAC,CAAC,GAAG,CAACnC,CAAC,CAACmC,CAAC,GAAG,CAAC,CAAC,GAAGnC,CAAC,CAACmC,CAAC,CAAC,IAAE,CAAC,GAAGlB,GAAG,CAAC,GAAGI,EAAE,IAAIrB,CAAC,CAACmC,CAAC,CAAC,GAAG,CAACnC,CAAC,CAACmC,CAAC,CAAC,GAAGnC,CAAC,CAACmC,CAAC,GAAG,CAAC,CAAC,IAAE,CAAC,GAAGlB,GAAG,CAAC;MACtGoB,GAAG,GAAGF,CAAC,GAAGZ,IAAI,GAAG,CAAC,GAAGF,EAAE,IAAIrB,CAAC,CAACmC,CAAC,CAAC,GAAG,CAACnC,CAAC,CAACmC,CAAC,GAAG,CAAC,CAAC,GAAGnC,CAAC,CAACmC,CAAC,CAAC,IAAE,CAAC,GAAGlB,GAAG,CAAC,GAAGI,EAAE,IAAIrB,CAAC,CAACmC,CAAC,CAAC,GAAG,CAACnC,CAAC,CAACmC,CAAC,CAAC,GAAGnC,CAAC,CAACmC,CAAC,GAAG,CAAC,CAAC,IAAE,CAAC,GAAGlB,GAAG,CAAC;IACxG;IAEA,KAAK,IAAIrB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqC,EAAE,EAAE,EAAErC,CAAC,EAAE;MAC3B,IAAI0C,GAAG,EAAEC,GAAG;MAEZ,IAAI7B,QAAQ,EAAE;QACZ4B,GAAG,GAAGlB,EAAE,IAAIrB,CAAC,CAACH,CAAC,CAAC,GAAGoB,GAAG,CAAC;QACvBuB,GAAG,GAAGnB,EAAE,IAAIrB,CAAC,CAACH,CAAC,GAAG,CAAC,CAAC,GAAGoB,GAAG,CAAC;MAC7B,CAAC,MAAM;QACLsB,GAAG,GAAG1C,CAAC,GAAG0B,IAAI,GAAG,CAAC,GAAGF,EAAE,IAAIrB,CAAC,CAACH,CAAC,CAAC,GAAG,CAACG,CAAC,CAACH,CAAC,GAAG,CAAC,CAAC,GAAGG,CAAC,CAACH,CAAC,CAAC,IAAE,CAAC,GAAGoB,GAAG,CAAC,GAAGI,EAAE,IAAIrB,CAAC,CAACH,CAAC,CAAC,GAAG,CAACG,CAAC,CAACH,CAAC,CAAC,GAAGG,CAAC,CAACH,CAAC,GAAG,CAAC,CAAC,IAAE,CAAC,GAAGoB,GAAG,CAAC;QACtGuB,GAAG,GAAG3C,CAAC,GAAG0B,IAAI,GAAG,CAAC,GAAGF,EAAE,IAAIrB,CAAC,CAACH,CAAC,CAAC,GAAG,CAACG,CAAC,CAACH,CAAC,GAAG,CAAC,CAAC,GAAGG,CAAC,CAACH,CAAC,CAAC,IAAE,CAAC,GAAGoB,GAAG,CAAC,GAAGI,EAAE,IAAIrB,CAAC,CAACH,CAAC,CAAC,GAAG,CAACG,CAAC,CAACH,CAAC,CAAC,GAAGG,CAAC,CAACH,CAAC,GAAG,CAAC,CAAC,IAAE,CAAC,GAAGoB,GAAG,CAAC;MACxG;MAEA,KAAK,IAAIwB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGnE,OAAO,CAAC0C,MAAM,EAAEyB,EAAE,IAAI,CAAC,EAAE;QAC7C,IAAIC,EAAE,GAAGpE,OAAO,CAACmE,EAAE,CAAC;QACpB,IAAIE,EAAE,GAAGrE,OAAO,CAACmE,EAAE,GAAG,CAAC,CAAC;QACxB,IAAIG,MAAM,GAAGjC,QAAQ,GAAG,CAACyB,CAAC,GAAGO,EAAE,IAAIpB,IAAI,IAAI1B,CAAC,GAAG6C,EAAE,CAAC,GAAGN,CAAC,GAAGb,IAAI,GAAG1B,CAAC;QACjE,IAAIgD,EAAE,GAAGpC,CAAC,CAACmC,MAAM,CAAC;QAClB,IAAIE,QAAQ,GAAG/F,OAAO,CAACgG,EAAE,CAAClC,WAAW,EAAEgC,EAAE,CAAC;QAC1C,IAAIG,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC;QACd,IAAIL,QAAQ,GAAG,CAAC,EAAE;UAChBE,CAAC,GAAGlC,WAAW,CAAC,CAAC,CAAC;UAClBmC,CAAC,GAAGnC,WAAW,CAAC,CAAC,CAAC;UAClBoC,CAAC,GAAGpC,WAAW,CAAC,CAAC,CAAC;UAClBqC,CAAC,GAAGrC,WAAW,CAAC,CAAC,CAAC;QACpB,CAAC,MAAM,IAAIgC,QAAQ,KAAK/B,UAAU,GAAG,CAAC,EAAE;UACtCiC,CAAC,GAAGlC,WAAW,CAAC,CAAC,GAAGC,UAAU,GAAG,CAAC,CAAC;UACnCkC,CAAC,GAAGnC,WAAW,CAAC,CAAC,GAAGC,UAAU,GAAG,CAAC,CAAC;UACnCmC,CAAC,GAAGpC,WAAW,CAAC,CAAC,GAAGC,UAAU,GAAG,CAAC,CAAC;UACnCoC,CAAC,GAAGrC,WAAW,CAAC,CAAC,GAAGC,UAAU,GAAG,CAAC,CAAC;QACrC,CAAC,MAAM;UACL,IAAIqC,CAAC,GAAG,CAACP,EAAE,GAAGhC,WAAW,CAACiC,QAAQ,CAAC,KAChCjC,WAAW,CAACiC,QAAQ,GAAG,CAAC,CAAC,GAAGjC,WAAW,CAACiC,QAAQ,CAAC,CAAC;UACrD,IAAIO,EAAE,GAAG,GAAG,GAAGD,CAAC;UAChB,IAAIE,EAAE,GAAG,CAAC,GAAGR,QAAQ;UACrB,IAAIS,EAAE,GAAG,CAAC,IAAIT,QAAQ,GAAG,CAAC,CAAC;UAC3BE,CAAC,GAAGK,EAAE,GAAGvC,WAAW,CAACwC,EAAE,CAAC,GAAGF,CAAC,GAAGtC,WAAW,CAACyC,EAAE,CAAC;UAC9CN,CAAC,GAAGI,EAAE,GAAGvC,WAAW,CAACwC,EAAE,GAAG,CAAC,CAAC,GAAGF,CAAC,GAAGtC,WAAW,CAACyC,EAAE,GAAG,CAAC,CAAC;UACtDL,CAAC,GAAGG,EAAE,GAAGvC,WAAW,CAACwC,EAAE,GAAG,CAAC,CAAC,GAAGF,CAAC,GAAGtC,WAAW,CAACyC,EAAE,GAAG,CAAC,CAAC;UACtDJ,CAAC,GAAGE,EAAE,GAAGvC,WAAW,CAACwC,EAAE,GAAG,CAAC,CAAC,GAAGF,CAAC,GAAGtC,WAAW,CAACyC,EAAE,GAAG,CAAC,CAAC;QACxD;QAEA7B,MAAM,CAAC,CAAC,GAAGO,GAAG,CAAC,GAAG,GAAG,GAAGe,CAAC;QACzBtB,MAAM,CAAC,CAAC,GAAGO,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGgB,CAAC;QAC7BvB,MAAM,CAAC,CAAC,GAAGO,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGiB,CAAC;QAC7BxB,MAAM,CAAC,CAAC,GAAGO,GAAG,GAAG,CAAC,CAAC,GAAG,GAAG,GAAGkB,CAAC;QAE7BvB,SAAS,CAAC,CAAC,GAACK,GAAG,CAAC,GAAGM,GAAG,GAAC,EAAE,GAAGC,GAAG,GAAC,EAAE;QAClCZ,SAAS,CAAC,CAAC,GAACK,GAAG,GAAC,CAAC,CAAC,GAAGI,GAAG,GAAC,EAAE,GAAGC,GAAG,GAAC,EAAE;QAEpCR,OAAO,CAAC,CAAC,GAACG,GAAG,CAAC,GAAGS,EAAE;QACnBZ,OAAO,CAAC,CAAC,GAACG,GAAG,GAAC,CAAC,CAAC,GAAGU,EAAE;QAErBZ,GAAG,CAACE,GAAG,CAAC,GAAGG,CAAC,GAAGb,IAAI,GAAG1B,CAAC;QAEvBoC,GAAG,IAAI,CAAC;MACV;IACF;EACF;EAEA,IAAI,CAACvE,cAAc,CAAC6C,MAAM,CAACqB,SAAS,CAAC;EACrC,IAAI,CAACjE,YAAY,CAAC4C,MAAM,CAACuB,OAAO,CAAC;EACjC,IAAI,CAAClE,WAAW,CAAC2C,MAAM,CAACmB,MAAM,CAAC;EAC/B,IAAI,CAAC7D,QAAQ,CAAC0C,MAAM,CAACwB,GAAG,CAAC;EAEzB7E,IAAI,CAACsG,IAAI,CAAC5B,SAAS,CAAC;EACpB1E,IAAI,CAACsG,IAAI,CAAC9B,MAAM,CAAC;EACjBxE,IAAI,CAACsG,IAAI,CAAC1B,OAAO,CAAC;EAClB5E,IAAI,CAACsG,IAAI,CAACzB,GAAG,CAAC;AAChB,CAAC;AAED3D,KAAK,CAACqF,OAAO,GAAG,YAAY;EAC1B,IAAI,CAACjG,MAAM,CAACiG,OAAO,EAAE;EACrB,IAAI,CAAChG,UAAU,CAACgG,OAAO,EAAE;EACzB,IAAI,CAAC/F,cAAc,CAAC+F,OAAO,EAAE;EAC7B,IAAI,CAAC9F,YAAY,CAAC8F,OAAO,EAAE;EAC3B,IAAI,CAAC7F,WAAW,CAAC6F,OAAO,EAAE;EAC1B,IAAI,CAAC5F,QAAQ,CAAC4F,OAAO,EAAE;EACvB,IAAI,CAAClG,IAAI,CAACmG,YAAY,CAAC,IAAI,CAAC;AAC9B,CAAC;AAED,SAAS5G,eAAe,CAAES,IAAI,EAAEiD,OAAO,EAAE;EACvC,IAAI9B,EAAE,GAAGnB,IAAI,CAACmB,EAAE;EAEhB,IAAIlB,MAAM,GAAGL,YAAY,CAACuB,EAAE,EAAErB,OAAO,CAACsG,MAAM,EAAEtG,OAAO,CAACuG,QAAQ,CAAC;EAC/D,IAAInG,UAAU,GAAGN,YAAY,CAACuB,EAAE,EAAErB,OAAO,CAACwG,UAAU,EAAExG,OAAO,CAACyG,YAAY,CAAC;EAE3E,IAAIpG,cAAc,GAAGN,YAAY,CAACsB,EAAE,CAAC;EACrC,IAAIf,YAAY,GAAKP,YAAY,CAACsB,EAAE,CAAC;EACrC,IAAId,WAAW,GAAGR,YAAY,CAACsB,EAAE,CAAC;EAClC,IAAIb,QAAQ,GAAGT,YAAY,CAACsB,EAAE,CAAC;EAE/B,IAAIqF,OAAO,GAAG,IAAIzG,WAAW,CAC3BC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,cAAc,EACdC,YAAY,EACZC,WAAW,EACXC,QAAQ,CAAC;EAEXkG,OAAO,CAACxD,MAAM,CAACC,OAAO,CAAC;EACvBjD,IAAI,CAACyG,SAAS,CAACD,OAAO,CAAC;EAEvB,OAAOA,OAAO;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nfunction calculateAxisErrors(data, params, scaleFactor, axis) {\n  if (!params || !params.visible) return null;\n  var computeError = Registry.getComponentMethod('errorbars', 'makeComputeError')(params);\n  var result = new Array(data.length);\n  for (var i = 0; i < data.length; i++) {\n    var errors = computeError(+data[i], i);\n    if (axis.type === 'log') {\n      var point = axis.c2l(data[i]);\n      var min = data[i] - errors[0];\n      var max = data[i] + errors[1];\n      result[i] = [(axis.c2l(min, true) - point) * scaleFactor, (axis.c2l(max, true) - point) * scaleFactor];\n\n      // Keep track of the lower error bound which isn't negative!\n      if (min > 0) {\n        var lower = axis.c2l(min);\n        if (!axis._lowerLogErrorBound) axis._lowerLogErrorBound = lower;\n        axis._lowerErrorBound = Math.min(axis._lowerLogErrorBound, lower);\n      }\n    } else {\n      result[i] = [-errors[0] * scaleFactor, errors[1] * scaleFactor];\n    }\n  }\n  return result;\n}\nfunction dataLength(array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i]) return array[i].length;\n  }\n  return 0;\n}\nfunction calculateErrors(data, scaleFactor, sceneLayout) {\n  var errors = [calculateAxisErrors(data.x, data.error_x, scaleFactor[0], sceneLayout.xaxis), calculateAxisErrors(data.y, data.error_y, scaleFactor[1], sceneLayout.yaxis), calculateAxisErrors(data.z, data.error_z, scaleFactor[2], sceneLayout.zaxis)];\n  var n = dataLength(errors);\n  if (n === 0) return null;\n  var errorBounds = new Array(n);\n  for (var i = 0; i < n; i++) {\n    var bound = [[0, 0, 0], [0, 0, 0]];\n    for (var j = 0; j < 3; j++) {\n      if (errors[j]) {\n        for (var k = 0; k < 2; k++) {\n          bound[k][j] = errors[j][i][k];\n        }\n      }\n    }\n    errorBounds[i] = bound;\n  }\n  return errorBounds;\n}\nmodule.exports = calculateErrors;","map":{"version":3,"names":["Registry","require","calculateAxisErrors","data","params","scaleFactor","axis","visible","computeError","getComponentMethod","result","Array","length","i","errors","type","point","c2l","min","max","lower","_lowerLogErrorBound","_lowerErrorBound","Math","dataLength","array","calculateErrors","sceneLayout","x","error_x","xaxis","y","error_y","yaxis","z","error_z","zaxis","n","errorBounds","bound","j","k","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatter3d/calc_errors.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\n\nfunction calculateAxisErrors(data, params, scaleFactor, axis) {\n    if(!params || !params.visible) return null;\n\n    var computeError = Registry.getComponentMethod('errorbars', 'makeComputeError')(params);\n    var result = new Array(data.length);\n\n    for(var i = 0; i < data.length; i++) {\n        var errors = computeError(+data[i], i);\n\n        if(axis.type === 'log') {\n            var point = axis.c2l(data[i]);\n            var min = data[i] - errors[0];\n            var max = data[i] + errors[1];\n\n            result[i] = [\n                (axis.c2l(min, true) - point) * scaleFactor,\n                (axis.c2l(max, true) - point) * scaleFactor\n            ];\n\n            // Keep track of the lower error bound which isn't negative!\n            if(min > 0) {\n                var lower = axis.c2l(min);\n                if(!axis._lowerLogErrorBound) axis._lowerLogErrorBound = lower;\n                axis._lowerErrorBound = Math.min(axis._lowerLogErrorBound, lower);\n            }\n        } else {\n            result[i] = [\n                -errors[0] * scaleFactor,\n                errors[1] * scaleFactor\n            ];\n        }\n    }\n\n    return result;\n}\n\nfunction dataLength(array) {\n    for(var i = 0; i < array.length; i++) {\n        if(array[i]) return array[i].length;\n    }\n    return 0;\n}\n\nfunction calculateErrors(data, scaleFactor, sceneLayout) {\n    var errors = [\n        calculateAxisErrors(data.x, data.error_x, scaleFactor[0], sceneLayout.xaxis),\n        calculateAxisErrors(data.y, data.error_y, scaleFactor[1], sceneLayout.yaxis),\n        calculateAxisErrors(data.z, data.error_z, scaleFactor[2], sceneLayout.zaxis)\n    ];\n\n    var n = dataLength(errors);\n    if(n === 0) return null;\n\n    var errorBounds = new Array(n);\n\n    for(var i = 0; i < n; i++) {\n        var bound = [[0, 0, 0], [0, 0, 0]];\n\n        for(var j = 0; j < 3; j++) {\n            if(errors[j]) {\n                for(var k = 0; k < 2; k++) {\n                    bound[k][j] = errors[j][i][k];\n                }\n            }\n        }\n\n        errorBounds[i] = bound;\n    }\n\n    return errorBounds;\n}\n\nmodule.exports = calculateErrors;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAExC,SAASC,mBAAmB,CAACC,IAAI,EAAEC,MAAM,EAAEC,WAAW,EAAEC,IAAI,EAAE;EAC1D,IAAG,CAACF,MAAM,IAAI,CAACA,MAAM,CAACG,OAAO,EAAE,OAAO,IAAI;EAE1C,IAAIC,YAAY,GAAGR,QAAQ,CAACS,kBAAkB,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAACL,MAAM,CAAC;EACvF,IAAIM,MAAM,GAAG,IAAIC,KAAK,CAACR,IAAI,CAACS,MAAM,CAAC;EAEnC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,IAAI,CAACS,MAAM,EAAEC,CAAC,EAAE,EAAE;IACjC,IAAIC,MAAM,GAAGN,YAAY,CAAC,CAACL,IAAI,CAACU,CAAC,CAAC,EAAEA,CAAC,CAAC;IAEtC,IAAGP,IAAI,CAACS,IAAI,KAAK,KAAK,EAAE;MACpB,IAAIC,KAAK,GAAGV,IAAI,CAACW,GAAG,CAACd,IAAI,CAACU,CAAC,CAAC,CAAC;MAC7B,IAAIK,GAAG,GAAGf,IAAI,CAACU,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;MAC7B,IAAIK,GAAG,GAAGhB,IAAI,CAACU,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC;MAE7BJ,MAAM,CAACG,CAAC,CAAC,GAAG,CACR,CAACP,IAAI,CAACW,GAAG,CAACC,GAAG,EAAE,IAAI,CAAC,GAAGF,KAAK,IAAIX,WAAW,EAC3C,CAACC,IAAI,CAACW,GAAG,CAACE,GAAG,EAAE,IAAI,CAAC,GAAGH,KAAK,IAAIX,WAAW,CAC9C;;MAED;MACA,IAAGa,GAAG,GAAG,CAAC,EAAE;QACR,IAAIE,KAAK,GAAGd,IAAI,CAACW,GAAG,CAACC,GAAG,CAAC;QACzB,IAAG,CAACZ,IAAI,CAACe,mBAAmB,EAAEf,IAAI,CAACe,mBAAmB,GAAGD,KAAK;QAC9Dd,IAAI,CAACgB,gBAAgB,GAAGC,IAAI,CAACL,GAAG,CAACZ,IAAI,CAACe,mBAAmB,EAAED,KAAK,CAAC;MACrE;IACJ,CAAC,MAAM;MACHV,MAAM,CAACG,CAAC,CAAC,GAAG,CACR,CAACC,MAAM,CAAC,CAAC,CAAC,GAAGT,WAAW,EACxBS,MAAM,CAAC,CAAC,CAAC,GAAGT,WAAW,CAC1B;IACL;EACJ;EAEA,OAAOK,MAAM;AACjB;AAEA,SAASc,UAAU,CAACC,KAAK,EAAE;EACvB,KAAI,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGY,KAAK,CAACb,MAAM,EAAEC,CAAC,EAAE,EAAE;IAClC,IAAGY,KAAK,CAACZ,CAAC,CAAC,EAAE,OAAOY,KAAK,CAACZ,CAAC,CAAC,CAACD,MAAM;EACvC;EACA,OAAO,CAAC;AACZ;AAEA,SAASc,eAAe,CAACvB,IAAI,EAAEE,WAAW,EAAEsB,WAAW,EAAE;EACrD,IAAIb,MAAM,GAAG,CACTZ,mBAAmB,CAACC,IAAI,CAACyB,CAAC,EAAEzB,IAAI,CAAC0B,OAAO,EAAExB,WAAW,CAAC,CAAC,CAAC,EAAEsB,WAAW,CAACG,KAAK,CAAC,EAC5E5B,mBAAmB,CAACC,IAAI,CAAC4B,CAAC,EAAE5B,IAAI,CAAC6B,OAAO,EAAE3B,WAAW,CAAC,CAAC,CAAC,EAAEsB,WAAW,CAACM,KAAK,CAAC,EAC5E/B,mBAAmB,CAACC,IAAI,CAAC+B,CAAC,EAAE/B,IAAI,CAACgC,OAAO,EAAE9B,WAAW,CAAC,CAAC,CAAC,EAAEsB,WAAW,CAACS,KAAK,CAAC,CAC/E;EAED,IAAIC,CAAC,GAAGb,UAAU,CAACV,MAAM,CAAC;EAC1B,IAAGuB,CAAC,KAAK,CAAC,EAAE,OAAO,IAAI;EAEvB,IAAIC,WAAW,GAAG,IAAI3B,KAAK,CAAC0B,CAAC,CAAC;EAE9B,KAAI,IAAIxB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwB,CAAC,EAAExB,CAAC,EAAE,EAAE;IACvB,IAAI0B,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAElC,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACvB,IAAG1B,MAAM,CAAC0B,CAAC,CAAC,EAAE;QACV,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;UACvBF,KAAK,CAACE,CAAC,CAAC,CAACD,CAAC,CAAC,GAAG1B,MAAM,CAAC0B,CAAC,CAAC,CAAC3B,CAAC,CAAC,CAAC4B,CAAC,CAAC;QACjC;MACJ;IACJ;IAEAH,WAAW,CAACzB,CAAC,CAAC,GAAG0B,KAAK;EAC1B;EAEA,OAAOD,WAAW;AACtB;AAEAI,MAAM,CAACC,OAAO,GAAGjB,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}
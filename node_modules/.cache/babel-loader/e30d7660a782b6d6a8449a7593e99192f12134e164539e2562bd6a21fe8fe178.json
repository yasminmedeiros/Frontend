{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\nvar createPlot2D = require('gl-plot2d');\nvar createSpikes = require('gl-spikes2d');\nvar createSelectBox = require('gl-select-box');\nvar getContext = require('webgl-context');\nvar createOptions = require('./convert');\nvar createCamera = require('./camera');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\nvar axisConstraints = require('../cartesian/constraints');\nvar enforceAxisConstraints = axisConstraints.enforce;\nvar cleanAxisConstraints = axisConstraints.clean;\nvar doAutoRange = require('../cartesian/autorange').doAutoRange;\nvar AXES = ['xaxis', 'yaxis'];\nvar STATIC_CANVAS, STATIC_CONTEXT;\nvar SUBPLOT_PATTERN = require('../cartesian/constants').SUBPLOT_PATTERN;\nfunction Scene2D(options, fullLayout) {\n  this.container = options.container;\n  this.graphDiv = options.graphDiv;\n  this.pixelRatio = options.plotGlPixelRatio || window.devicePixelRatio;\n  this.id = options.id;\n  this.staticPlot = !!options.staticPlot;\n  this.scrollZoom = this.graphDiv._context._scrollZoom.cartesian;\n  this.fullData = null;\n  this.updateRefs(fullLayout);\n  this.makeFramework();\n  if (this.stopped) return;\n\n  // update options\n  this.glplotOptions = createOptions(this);\n  this.glplotOptions.merge(fullLayout);\n\n  // create the plot\n  this.glplot = createPlot2D(this.glplotOptions);\n\n  // create camera\n  this.camera = createCamera(this);\n\n  // trace set\n  this.traces = {};\n\n  // create axes spikes\n  this.spikes = createSpikes(this.glplot);\n  this.selectBox = createSelectBox(this.glplot, {\n    innerFill: false,\n    outerFill: true\n  });\n\n  // last button state\n  this.lastButtonState = 0;\n\n  // last pick result\n  this.pickResult = null;\n\n  // is the mouse over the plot?\n  // it's OK if this says true when it's not, so long as\n  // when we get a mouseout we set it to false before handling\n  this.isMouseOver = true;\n\n  // flag to stop render loop\n  this.stopped = false;\n\n  // redraw the plot\n  this.redraw = this.draw.bind(this);\n  this.redraw();\n}\nmodule.exports = Scene2D;\nvar proto = Scene2D.prototype;\nproto.makeFramework = function () {\n  // create canvas and gl context\n  if (this.staticPlot) {\n    if (!STATIC_CONTEXT) {\n      STATIC_CANVAS = document.createElement('canvas');\n      STATIC_CONTEXT = getContext({\n        canvas: STATIC_CANVAS,\n        preserveDrawingBuffer: false,\n        premultipliedAlpha: true,\n        antialias: true\n      });\n      if (!STATIC_CONTEXT) {\n        throw new Error('Error creating static canvas/context for image server');\n      }\n    }\n    this.canvas = STATIC_CANVAS;\n    this.gl = STATIC_CONTEXT;\n  } else {\n    var liveCanvas = this.container.querySelector('.gl-canvas-focus');\n    var gl = getContext({\n      canvas: liveCanvas,\n      preserveDrawingBuffer: true,\n      premultipliedAlpha: true\n    });\n    if (!gl) {\n      showNoWebGlMsg(this);\n      this.stopped = true;\n      return;\n    }\n    this.canvas = liveCanvas;\n    this.gl = gl;\n  }\n\n  // position the canvas\n  var canvas = this.canvas;\n  canvas.style.width = '100%';\n  canvas.style.height = '100%';\n  canvas.style.position = 'absolute';\n  canvas.style.top = '0px';\n  canvas.style.left = '0px';\n  canvas.style['pointer-events'] = 'none';\n  this.updateSize(canvas);\n\n  // disabling user select on the canvas\n  // sanitizes double-clicks interactions\n  // ref: https://github.com/plotly/plotly.js/issues/744\n  canvas.className += ' user-select-none';\n\n  // create SVG container for hover text\n  var svgContainer = this.svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgContainer.style.position = 'absolute';\n  svgContainer.style.top = svgContainer.style.left = '0px';\n  svgContainer.style.width = svgContainer.style.height = '100%';\n  svgContainer.style['z-index'] = 20;\n  svgContainer.style['pointer-events'] = 'none';\n\n  // create div to catch the mouse event\n  var mouseContainer = this.mouseContainer = document.createElement('div');\n  mouseContainer.style.position = 'absolute';\n  mouseContainer.style['pointer-events'] = 'auto';\n  this.pickCanvas = this.container.querySelector('.gl-canvas-pick');\n\n  // append canvas, hover svg and mouse div to container\n  var container = this.container;\n  container.appendChild(svgContainer);\n  container.appendChild(mouseContainer);\n  var self = this;\n  mouseContainer.addEventListener('mouseout', function () {\n    self.isMouseOver = false;\n    self.unhover();\n  });\n  mouseContainer.addEventListener('mouseover', function () {\n    self.isMouseOver = true;\n  });\n};\nproto.toImage = function (format) {\n  if (!format) format = 'png';\n  this.stopped = true;\n  if (this.staticPlot) this.container.appendChild(STATIC_CANVAS);\n\n  // update canvas size\n  this.updateSize(this.canvas);\n\n  // grab context and yank out pixels\n  var gl = this.glplot.gl;\n  var w = gl.drawingBufferWidth;\n  var h = gl.drawingBufferHeight;\n\n  // force redraw\n  gl.clearColor(1, 1, 1, 0);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.glplot.setDirty();\n  this.glplot.draw();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var pixels = new Uint8Array(w * h * 4);\n  gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n  // flip pixels\n  for (var j = 0, k = h - 1; j < k; ++j, --k) {\n    for (var i = 0; i < w; ++i) {\n      for (var l = 0; l < 4; ++l) {\n        var tmp = pixels[4 * (w * j + i) + l];\n        pixels[4 * (w * j + i) + l] = pixels[4 * (w * k + i) + l];\n        pixels[4 * (w * k + i) + l] = tmp;\n      }\n    }\n  }\n  var canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  var imageData = context.createImageData(w, h);\n  imageData.data.set(pixels);\n  context.putImageData(imageData, 0, 0);\n  var dataURL;\n  switch (format) {\n    case 'jpeg':\n      dataURL = canvas.toDataURL('image/jpeg');\n      break;\n    case 'webp':\n      dataURL = canvas.toDataURL('image/webp');\n      break;\n    default:\n      dataURL = canvas.toDataURL('image/png');\n  }\n  if (this.staticPlot) this.container.removeChild(STATIC_CANVAS);\n  return dataURL;\n};\nproto.updateSize = function (canvas) {\n  if (!canvas) canvas = this.canvas;\n  var pixelRatio = this.pixelRatio;\n  var fullLayout = this.fullLayout;\n  var width = fullLayout.width;\n  var height = fullLayout.height;\n  var pixelWidth = Math.ceil(pixelRatio * width) | 0;\n  var pixelHeight = Math.ceil(pixelRatio * height) | 0;\n\n  // check for resize\n  if (canvas.width !== pixelWidth || canvas.height !== pixelHeight) {\n    canvas.width = pixelWidth;\n    canvas.height = pixelHeight;\n  }\n  return canvas;\n};\nproto.computeTickMarks = function () {\n  this.xaxis.setScale();\n  this.yaxis.setScale();\n  var nextTicks = [Axes.calcTicks(this.xaxis), Axes.calcTicks(this.yaxis)];\n  for (var j = 0; j < 2; ++j) {\n    for (var i = 0; i < nextTicks[j].length; ++i) {\n      // coercing tick value (may not be a string) to a string\n      nextTicks[j][i].text = nextTicks[j][i].text + '';\n    }\n  }\n  return nextTicks;\n};\nfunction compareTicks(a, b) {\n  for (var i = 0; i < 2; ++i) {\n    var aticks = a[i];\n    var bticks = b[i];\n    if (aticks.length !== bticks.length) return true;\n    for (var j = 0; j < aticks.length; ++j) {\n      if (aticks[j].x !== bticks[j].x) return true;\n    }\n  }\n  return false;\n}\nproto.updateRefs = function (newFullLayout) {\n  this.fullLayout = newFullLayout;\n  var spmatch = this.id.match(SUBPLOT_PATTERN);\n  var xaxisName = 'xaxis' + spmatch[1];\n  var yaxisName = 'yaxis' + spmatch[2];\n  this.xaxis = this.fullLayout[xaxisName];\n  this.yaxis = this.fullLayout[yaxisName];\n};\nproto.relayoutCallback = function () {\n  var graphDiv = this.graphDiv;\n  var xaxis = this.xaxis;\n  var yaxis = this.yaxis;\n  var layout = graphDiv.layout;\n\n  // make a meaningful value to be passed on to possible 'plotly_relayout' subscriber(s)\n  var update = {};\n  var xrange = update[xaxis._name + '.range'] = xaxis.range.slice();\n  var yrange = update[yaxis._name + '.range'] = yaxis.range.slice();\n  update[xaxis._name + '.autorange'] = xaxis.autorange;\n  update[yaxis._name + '.autorange'] = yaxis.autorange;\n  Registry.call('_storeDirectGUIEdit', graphDiv.layout, graphDiv._fullLayout._preGUI, update);\n\n  // update the input layout\n  var xaIn = layout[xaxis._name];\n  xaIn.range = xrange;\n  xaIn.autorange = xaxis.autorange;\n  var yaIn = layout[yaxis._name];\n  yaIn.range = yrange;\n  yaIn.autorange = yaxis.autorange;\n\n  // lastInputTime helps determine which one is the latest input (if async)\n  update.lastInputTime = this.camera.lastInputTime;\n  graphDiv.emit('plotly_relayout', update);\n};\nproto.cameraChanged = function () {\n  var camera = this.camera;\n  this.glplot.setDataBox(this.calcDataBox());\n  var nextTicks = this.computeTickMarks();\n  var curTicks = this.glplotOptions.ticks;\n  if (compareTicks(nextTicks, curTicks)) {\n    this.glplotOptions.ticks = nextTicks;\n    this.glplotOptions.dataBox = camera.dataBox;\n    this.glplot.update(this.glplotOptions);\n    this.handleAnnotations();\n  }\n};\nproto.handleAnnotations = function () {\n  var gd = this.graphDiv;\n  var annotations = this.fullLayout.annotations;\n  for (var i = 0; i < annotations.length; i++) {\n    var ann = annotations[i];\n    if (ann.xref === this.xaxis._id && ann.yref === this.yaxis._id) {\n      Registry.getComponentMethod('annotations', 'drawOne')(gd, i);\n    }\n  }\n};\nproto.destroy = function () {\n  if (!this.glplot) return;\n  var traces = this.traces;\n  if (traces) {\n    Object.keys(traces).map(function (key) {\n      traces[key].dispose();\n      delete traces[key];\n    });\n  }\n  this.glplot.dispose();\n  this.container.removeChild(this.svgContainer);\n  this.container.removeChild(this.mouseContainer);\n  this.fullData = null;\n  this.glplot = null;\n  this.stopped = true;\n  this.camera.mouseListener.enabled = false;\n  this.mouseContainer.removeEventListener('wheel', this.camera.wheelListener);\n  this.camera = null;\n};\nproto.plot = function (fullData, calcData, fullLayout) {\n  var glplot = this.glplot;\n  this.updateRefs(fullLayout);\n  this.xaxis.clearCalc();\n  this.yaxis.clearCalc();\n  this.updateTraces(fullData, calcData);\n  this.updateFx(fullLayout.dragmode);\n  var width = fullLayout.width;\n  var height = fullLayout.height;\n  this.updateSize(this.canvas);\n  var options = this.glplotOptions;\n  options.merge(fullLayout);\n  options.screenBox = [0, 0, width, height];\n  var mockGraphDiv = {\n    _fullLayout: {\n      _axisConstraintGroups: this.graphDiv._fullLayout._axisConstraintGroups,\n      xaxis: this.xaxis,\n      yaxis: this.yaxis\n    }\n  };\n  cleanAxisConstraints(mockGraphDiv, this.xaxis);\n  cleanAxisConstraints(mockGraphDiv, this.yaxis);\n  var size = fullLayout._size;\n  var domainX = this.xaxis.domain;\n  var domainY = this.yaxis.domain;\n  options.viewBox = [size.l + domainX[0] * size.w, size.b + domainY[0] * size.h, width - size.r - (1 - domainX[1]) * size.w, height - size.t - (1 - domainY[1]) * size.h];\n  this.mouseContainer.style.width = size.w * (domainX[1] - domainX[0]) + 'px';\n  this.mouseContainer.style.height = size.h * (domainY[1] - domainY[0]) + 'px';\n  this.mouseContainer.height = size.h * (domainY[1] - domainY[0]);\n  this.mouseContainer.style.left = size.l + domainX[0] * size.w + 'px';\n  this.mouseContainer.style.top = size.t + (1 - domainY[1]) * size.h + 'px';\n  var ax, i;\n  for (i = 0; i < 2; ++i) {\n    ax = this[AXES[i]];\n    ax._length = options.viewBox[i + 2] - options.viewBox[i];\n    doAutoRange(this.graphDiv, ax);\n    ax.setScale();\n  }\n  enforceAxisConstraints(mockGraphDiv);\n  options.ticks = this.computeTickMarks();\n  options.dataBox = this.calcDataBox();\n  options.merge(fullLayout);\n  glplot.update(options);\n\n  // force redraw so that promise is returned when rendering is completed\n  this.glplot.draw();\n};\nproto.calcDataBox = function () {\n  var xaxis = this.xaxis;\n  var yaxis = this.yaxis;\n  var xrange = xaxis.range;\n  var yrange = yaxis.range;\n  var xr2l = xaxis.r2l;\n  var yr2l = yaxis.r2l;\n  return [xr2l(xrange[0]), yr2l(yrange[0]), xr2l(xrange[1]), yr2l(yrange[1])];\n};\nproto.setRanges = function (dataBox) {\n  var xaxis = this.xaxis;\n  var yaxis = this.yaxis;\n  var xl2r = xaxis.l2r;\n  var yl2r = yaxis.l2r;\n  xaxis.range = [xl2r(dataBox[0]), xl2r(dataBox[2])];\n  yaxis.range = [yl2r(dataBox[1]), yl2r(dataBox[3])];\n};\nproto.updateTraces = function (fullData, calcData) {\n  var traceIds = Object.keys(this.traces);\n  var i, j, fullTrace;\n  this.fullData = fullData;\n\n  // remove empty traces\n  traceIdLoop: for (i = 0; i < traceIds.length; i++) {\n    var oldUid = traceIds[i];\n    var oldTrace = this.traces[oldUid];\n    for (j = 0; j < fullData.length; j++) {\n      fullTrace = fullData[j];\n      if (fullTrace.uid === oldUid && fullTrace.type === oldTrace.type) {\n        continue traceIdLoop;\n      }\n    }\n    oldTrace.dispose();\n    delete this.traces[oldUid];\n  }\n\n  // update / create trace objects\n  for (i = 0; i < fullData.length; i++) {\n    fullTrace = fullData[i];\n    var calcTrace = calcData[i];\n    var traceObj = this.traces[fullTrace.uid];\n    if (traceObj) traceObj.update(fullTrace, calcTrace);else {\n      traceObj = fullTrace._module.plot(this, fullTrace, calcTrace);\n      this.traces[fullTrace.uid] = traceObj;\n    }\n  }\n\n  // order object per traces\n  this.glplot.objects.sort(function (a, b) {\n    return a._trace.index - b._trace.index;\n  });\n};\nproto.updateFx = function (dragmode) {\n  // switch to svg interactions in lasso/select mode\n  if (dragmode === 'lasso' || dragmode === 'select') {\n    this.pickCanvas.style['pointer-events'] = 'none';\n    this.mouseContainer.style['pointer-events'] = 'none';\n  } else {\n    this.pickCanvas.style['pointer-events'] = 'auto';\n    this.mouseContainer.style['pointer-events'] = 'auto';\n  }\n\n  // set proper cursor\n  if (dragmode === 'pan') {\n    this.mouseContainer.style.cursor = 'move';\n  } else if (dragmode === 'zoom') {\n    this.mouseContainer.style.cursor = 'crosshair';\n  } else {\n    this.mouseContainer.style.cursor = null;\n  }\n};\nproto.emitPointAction = function (nextSelection, eventType) {\n  var uid = nextSelection.trace.uid;\n  var ptNumber = nextSelection.pointIndex;\n  var trace;\n  for (var i = 0; i < this.fullData.length; i++) {\n    if (this.fullData[i].uid === uid) {\n      trace = this.fullData[i];\n    }\n  }\n  var pointData = {\n    x: nextSelection.traceCoord[0],\n    y: nextSelection.traceCoord[1],\n    curveNumber: trace.index,\n    pointNumber: ptNumber,\n    data: trace._input,\n    fullData: this.fullData,\n    xaxis: this.xaxis,\n    yaxis: this.yaxis\n  };\n  Fx.appendArrayPointValue(pointData, trace, ptNumber);\n  this.graphDiv.emit(eventType, {\n    points: [pointData]\n  });\n};\nproto.draw = function () {\n  if (this.stopped) return;\n  requestAnimationFrame(this.redraw);\n  var glplot = this.glplot;\n  var camera = this.camera;\n  var mouseListener = camera.mouseListener;\n  var mouseUp = this.lastButtonState === 1 && mouseListener.buttons === 0;\n  var fullLayout = this.fullLayout;\n  this.lastButtonState = mouseListener.buttons;\n  this.cameraChanged();\n  var x = mouseListener.x * glplot.pixelRatio;\n  var y = this.canvas.height - glplot.pixelRatio * mouseListener.y;\n  var result;\n  if (camera.boxEnabled && fullLayout.dragmode === 'zoom') {\n    this.selectBox.enabled = true;\n    var selectBox = this.selectBox.selectBox = [Math.min(camera.boxStart[0], camera.boxEnd[0]), Math.min(camera.boxStart[1], camera.boxEnd[1]), Math.max(camera.boxStart[0], camera.boxEnd[0]), Math.max(camera.boxStart[1], camera.boxEnd[1])];\n\n    // 1D zoom\n    for (var i = 0; i < 2; i++) {\n      if (camera.boxStart[i] === camera.boxEnd[i]) {\n        selectBox[i] = glplot.dataBox[i];\n        selectBox[i + 2] = glplot.dataBox[i + 2];\n      }\n    }\n    glplot.setDirty();\n  } else if (!camera.panning && this.isMouseOver) {\n    this.selectBox.enabled = false;\n    var size = fullLayout._size;\n    var domainX = this.xaxis.domain;\n    var domainY = this.yaxis.domain;\n    result = glplot.pick(x / glplot.pixelRatio + size.l + domainX[0] * size.w, y / glplot.pixelRatio - (size.t + (1 - domainY[1]) * size.h));\n    var nextSelection = result && result.object._trace.handlePick(result);\n    if (nextSelection && mouseUp) {\n      this.emitPointAction(nextSelection, 'plotly_click');\n    }\n    if (result && result.object._trace.hoverinfo !== 'skip' && fullLayout.hovermode) {\n      if (nextSelection && (!this.lastPickResult || this.lastPickResult.traceUid !== nextSelection.trace.uid || this.lastPickResult.dataCoord[0] !== nextSelection.dataCoord[0] || this.lastPickResult.dataCoord[1] !== nextSelection.dataCoord[1])) {\n        var selection = nextSelection;\n        this.lastPickResult = {\n          traceUid: nextSelection.trace ? nextSelection.trace.uid : null,\n          dataCoord: nextSelection.dataCoord.slice()\n        };\n        this.spikes.update({\n          center: result.dataCoord\n        });\n        selection.screenCoord = [((glplot.viewBox[2] - glplot.viewBox[0]) * (result.dataCoord[0] - glplot.dataBox[0]) / (glplot.dataBox[2] - glplot.dataBox[0]) + glplot.viewBox[0]) / glplot.pixelRatio, (this.canvas.height - (glplot.viewBox[3] - glplot.viewBox[1]) * (result.dataCoord[1] - glplot.dataBox[1]) / (glplot.dataBox[3] - glplot.dataBox[1]) - glplot.viewBox[1]) / glplot.pixelRatio];\n\n        // this needs to happen before the next block that deletes traceCoord data\n        // also it's important to copy, otherwise data is lost by the time event data is read\n        this.emitPointAction(nextSelection, 'plotly_hover');\n        var trace = this.fullData[selection.trace.index] || {};\n        var ptNumber = selection.pointIndex;\n        var hoverinfo = Fx.castHoverinfo(trace, fullLayout, ptNumber);\n        if (hoverinfo && hoverinfo !== 'all') {\n          var parts = hoverinfo.split('+');\n          if (parts.indexOf('x') === -1) selection.traceCoord[0] = undefined;\n          if (parts.indexOf('y') === -1) selection.traceCoord[1] = undefined;\n          if (parts.indexOf('z') === -1) selection.traceCoord[2] = undefined;\n          if (parts.indexOf('text') === -1) selection.textLabel = undefined;\n          if (parts.indexOf('name') === -1) selection.name = undefined;\n        }\n        Fx.loneHover({\n          x: selection.screenCoord[0],\n          y: selection.screenCoord[1],\n          xLabel: this.hoverFormatter('xaxis', selection.traceCoord[0]),\n          yLabel: this.hoverFormatter('yaxis', selection.traceCoord[1]),\n          zLabel: selection.traceCoord[2],\n          text: selection.textLabel,\n          name: selection.name,\n          color: Fx.castHoverOption(trace, ptNumber, 'bgcolor') || selection.color,\n          borderColor: Fx.castHoverOption(trace, ptNumber, 'bordercolor'),\n          fontFamily: Fx.castHoverOption(trace, ptNumber, 'font.family'),\n          fontSize: Fx.castHoverOption(trace, ptNumber, 'font.size'),\n          fontColor: Fx.castHoverOption(trace, ptNumber, 'font.color')\n        }, {\n          container: this.svgContainer,\n          gd: this.graphDiv\n        });\n      }\n    }\n  }\n\n  // Remove hover effects if we're not over a point OR\n  // if we're zooming or panning (in which case result is not set)\n  if (!result) {\n    this.unhover();\n  }\n  glplot.draw();\n};\nproto.unhover = function () {\n  if (this.lastPickResult) {\n    this.spikes.update({});\n    this.lastPickResult = null;\n    this.graphDiv.emit('plotly_unhover');\n    Fx.loneUnhover(this.svgContainer);\n  }\n};\nproto.hoverFormatter = function (axisName, val) {\n  if (val === undefined) return undefined;\n  var axis = this[axisName];\n  return Axes.tickText(axis, axis.c2l(val), 'hover').text;\n};","map":{"version":3,"names":["Registry","require","Axes","Fx","createPlot2D","createSpikes","createSelectBox","getContext","createOptions","createCamera","showNoWebGlMsg","axisConstraints","enforceAxisConstraints","enforce","cleanAxisConstraints","clean","doAutoRange","AXES","STATIC_CANVAS","STATIC_CONTEXT","SUBPLOT_PATTERN","Scene2D","options","fullLayout","container","graphDiv","pixelRatio","plotGlPixelRatio","window","devicePixelRatio","id","staticPlot","scrollZoom","_context","_scrollZoom","cartesian","fullData","updateRefs","makeFramework","stopped","glplotOptions","merge","glplot","camera","traces","spikes","selectBox","innerFill","outerFill","lastButtonState","pickResult","isMouseOver","redraw","draw","bind","module","exports","proto","prototype","document","createElement","canvas","preserveDrawingBuffer","premultipliedAlpha","antialias","Error","gl","liveCanvas","querySelector","style","width","height","position","top","left","updateSize","className","svgContainer","createElementNS","mouseContainer","pickCanvas","appendChild","self","addEventListener","unhover","toImage","format","w","drawingBufferWidth","h","drawingBufferHeight","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","setDirty","bindFramebuffer","FRAMEBUFFER","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","j","k","i","l","tmp","context","imageData","createImageData","data","set","putImageData","dataURL","toDataURL","removeChild","pixelWidth","Math","ceil","pixelHeight","computeTickMarks","xaxis","setScale","yaxis","nextTicks","calcTicks","length","text","compareTicks","a","b","aticks","bticks","x","newFullLayout","spmatch","match","xaxisName","yaxisName","relayoutCallback","layout","update","xrange","_name","range","slice","yrange","autorange","call","_fullLayout","_preGUI","xaIn","yaIn","lastInputTime","emit","cameraChanged","setDataBox","calcDataBox","curTicks","ticks","dataBox","handleAnnotations","gd","annotations","ann","xref","_id","yref","getComponentMethod","destroy","Object","keys","map","key","dispose","mouseListener","enabled","removeEventListener","wheelListener","plot","calcData","clearCalc","updateTraces","updateFx","dragmode","screenBox","mockGraphDiv","_axisConstraintGroups","size","_size","domainX","domain","domainY","viewBox","r","t","ax","_length","xr2l","r2l","yr2l","setRanges","xl2r","l2r","yl2r","traceIds","fullTrace","traceIdLoop","oldUid","oldTrace","uid","type","calcTrace","traceObj","_module","objects","sort","_trace","index","cursor","emitPointAction","nextSelection","eventType","trace","ptNumber","pointIndex","pointData","traceCoord","y","curveNumber","pointNumber","_input","appendArrayPointValue","points","requestAnimationFrame","mouseUp","buttons","result","boxEnabled","min","boxStart","boxEnd","max","panning","pick","object","handlePick","hoverinfo","hovermode","lastPickResult","traceUid","dataCoord","selection","center","screenCoord","castHoverinfo","parts","split","indexOf","undefined","textLabel","name","loneHover","xLabel","hoverFormatter","yLabel","zLabel","color","castHoverOption","borderColor","fontFamily","fontSize","fontColor","loneUnhover","axisName","val","axis","tickText","c2l"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/gl2d/scene2d.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\n\nvar createPlot2D = require('gl-plot2d');\nvar createSpikes = require('gl-spikes2d');\nvar createSelectBox = require('gl-select-box');\nvar getContext = require('webgl-context');\n\nvar createOptions = require('./convert');\nvar createCamera = require('./camera');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\nvar axisConstraints = require('../cartesian/constraints');\nvar enforceAxisConstraints = axisConstraints.enforce;\nvar cleanAxisConstraints = axisConstraints.clean;\nvar doAutoRange = require('../cartesian/autorange').doAutoRange;\n\nvar AXES = ['xaxis', 'yaxis'];\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nvar SUBPLOT_PATTERN = require('../cartesian/constants').SUBPLOT_PATTERN;\n\n\nfunction Scene2D(options, fullLayout) {\n    this.container = options.container;\n    this.graphDiv = options.graphDiv;\n    this.pixelRatio = options.plotGlPixelRatio || window.devicePixelRatio;\n    this.id = options.id;\n    this.staticPlot = !!options.staticPlot;\n    this.scrollZoom = this.graphDiv._context._scrollZoom.cartesian;\n\n    this.fullData = null;\n    this.updateRefs(fullLayout);\n\n    this.makeFramework();\n    if(this.stopped) return;\n\n    // update options\n    this.glplotOptions = createOptions(this);\n    this.glplotOptions.merge(fullLayout);\n\n    // create the plot\n    this.glplot = createPlot2D(this.glplotOptions);\n\n    // create camera\n    this.camera = createCamera(this);\n\n    // trace set\n    this.traces = {};\n\n    // create axes spikes\n    this.spikes = createSpikes(this.glplot);\n\n    this.selectBox = createSelectBox(this.glplot, {\n        innerFill: false,\n        outerFill: true\n    });\n\n    // last button state\n    this.lastButtonState = 0;\n\n    // last pick result\n    this.pickResult = null;\n\n    // is the mouse over the plot?\n    // it's OK if this says true when it's not, so long as\n    // when we get a mouseout we set it to false before handling\n    this.isMouseOver = true;\n\n    // flag to stop render loop\n    this.stopped = false;\n\n    // redraw the plot\n    this.redraw = this.draw.bind(this);\n    this.redraw();\n}\n\nmodule.exports = Scene2D;\n\nvar proto = Scene2D.prototype;\n\nproto.makeFramework = function() {\n\n    // create canvas and gl context\n    if(this.staticPlot) {\n        if(!STATIC_CONTEXT) {\n            STATIC_CANVAS = document.createElement('canvas');\n\n            STATIC_CONTEXT = getContext({\n                canvas: STATIC_CANVAS,\n                preserveDrawingBuffer: false,\n                premultipliedAlpha: true,\n                antialias: true\n            });\n\n            if(!STATIC_CONTEXT) {\n                throw new Error('Error creating static canvas/context for image server');\n            }\n        }\n\n        this.canvas = STATIC_CANVAS;\n        this.gl = STATIC_CONTEXT;\n    }\n    else {\n        var liveCanvas = this.container.querySelector('.gl-canvas-focus');\n\n        var gl = getContext({\n            canvas: liveCanvas,\n            preserveDrawingBuffer: true,\n            premultipliedAlpha: true\n        });\n\n        if(!gl) {\n            showNoWebGlMsg(this);\n            this.stopped = true;\n            return;\n        }\n\n        this.canvas = liveCanvas;\n        this.gl = gl;\n    }\n\n    // position the canvas\n    var canvas = this.canvas;\n\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    canvas.style.position = 'absolute';\n    canvas.style.top = '0px';\n    canvas.style.left = '0px';\n    canvas.style['pointer-events'] = 'none';\n\n    this.updateSize(canvas);\n\n    // disabling user select on the canvas\n    // sanitizes double-clicks interactions\n    // ref: https://github.com/plotly/plotly.js/issues/744\n    canvas.className += ' user-select-none';\n\n    // create SVG container for hover text\n    var svgContainer = this.svgContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'svg');\n    svgContainer.style.position = 'absolute';\n    svgContainer.style.top = svgContainer.style.left = '0px';\n    svgContainer.style.width = svgContainer.style.height = '100%';\n    svgContainer.style['z-index'] = 20;\n    svgContainer.style['pointer-events'] = 'none';\n\n    // create div to catch the mouse event\n    var mouseContainer = this.mouseContainer = document.createElement('div');\n    mouseContainer.style.position = 'absolute';\n    mouseContainer.style['pointer-events'] = 'auto';\n\n    this.pickCanvas = this.container.querySelector('.gl-canvas-pick');\n\n\n    // append canvas, hover svg and mouse div to container\n    var container = this.container;\n    container.appendChild(svgContainer);\n    container.appendChild(mouseContainer);\n\n    var self = this;\n    mouseContainer.addEventListener('mouseout', function() {\n        self.isMouseOver = false;\n        self.unhover();\n    });\n    mouseContainer.addEventListener('mouseover', function() {\n        self.isMouseOver = true;\n    });\n};\n\nproto.toImage = function(format) {\n    if(!format) format = 'png';\n\n    this.stopped = true;\n\n    if(this.staticPlot) this.container.appendChild(STATIC_CANVAS);\n\n    // update canvas size\n    this.updateSize(this.canvas);\n\n\n    // grab context and yank out pixels\n    var gl = this.glplot.gl;\n    var w = gl.drawingBufferWidth;\n    var h = gl.drawingBufferHeight;\n\n    // force redraw\n    gl.clearColor(1, 1, 1, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.glplot.setDirty();\n    this.glplot.draw();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    var pixels = new Uint8Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n    // flip pixels\n    for(var j = 0, k = h - 1; j < k; ++j, --k) {\n        for(var i = 0; i < w; ++i) {\n            for(var l = 0; l < 4; ++l) {\n                var tmp = pixels[4 * (w * j + i) + l];\n                pixels[4 * (w * j + i) + l] = pixels[4 * (w * k + i) + l];\n                pixels[4 * (w * k + i) + l] = tmp;\n            }\n        }\n    }\n\n    var canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n\n    var context = canvas.getContext('2d');\n    var imageData = context.createImageData(w, h);\n    imageData.data.set(pixels);\n    context.putImageData(imageData, 0, 0);\n\n    var dataURL;\n\n    switch(format) {\n        case 'jpeg':\n            dataURL = canvas.toDataURL('image/jpeg');\n            break;\n        case 'webp':\n            dataURL = canvas.toDataURL('image/webp');\n            break;\n        default:\n            dataURL = canvas.toDataURL('image/png');\n    }\n\n    if(this.staticPlot) this.container.removeChild(STATIC_CANVAS);\n\n    return dataURL;\n};\n\nproto.updateSize = function(canvas) {\n    if(!canvas) canvas = this.canvas;\n\n    var pixelRatio = this.pixelRatio;\n    var fullLayout = this.fullLayout;\n\n    var width = fullLayout.width;\n    var height = fullLayout.height;\n    var pixelWidth = Math.ceil(pixelRatio * width) |0;\n    var pixelHeight = Math.ceil(pixelRatio * height) |0;\n\n    // check for resize\n    if(canvas.width !== pixelWidth || canvas.height !== pixelHeight) {\n        canvas.width = pixelWidth;\n        canvas.height = pixelHeight;\n    }\n\n    return canvas;\n};\n\nproto.computeTickMarks = function() {\n    this.xaxis.setScale();\n    this.yaxis.setScale();\n\n    var nextTicks = [\n        Axes.calcTicks(this.xaxis),\n        Axes.calcTicks(this.yaxis)\n    ];\n\n    for(var j = 0; j < 2; ++j) {\n        for(var i = 0; i < nextTicks[j].length; ++i) {\n            // coercing tick value (may not be a string) to a string\n            nextTicks[j][i].text = nextTicks[j][i].text + '';\n        }\n    }\n\n    return nextTicks;\n};\n\nfunction compareTicks(a, b) {\n    for(var i = 0; i < 2; ++i) {\n        var aticks = a[i];\n        var bticks = b[i];\n\n        if(aticks.length !== bticks.length) return true;\n\n        for(var j = 0; j < aticks.length; ++j) {\n            if(aticks[j].x !== bticks[j].x) return true;\n        }\n    }\n\n    return false;\n}\n\nproto.updateRefs = function(newFullLayout) {\n    this.fullLayout = newFullLayout;\n\n    var spmatch = this.id.match(SUBPLOT_PATTERN);\n    var xaxisName = 'xaxis' + spmatch[1];\n    var yaxisName = 'yaxis' + spmatch[2];\n\n    this.xaxis = this.fullLayout[xaxisName];\n    this.yaxis = this.fullLayout[yaxisName];\n};\n\nproto.relayoutCallback = function() {\n    var graphDiv = this.graphDiv;\n    var xaxis = this.xaxis;\n    var yaxis = this.yaxis;\n    var layout = graphDiv.layout;\n\n    // make a meaningful value to be passed on to possible 'plotly_relayout' subscriber(s)\n    var update = {};\n    var xrange = update[xaxis._name + '.range'] = xaxis.range.slice();\n    var yrange = update[yaxis._name + '.range'] = yaxis.range.slice();\n    update[xaxis._name + '.autorange'] = xaxis.autorange;\n    update[yaxis._name + '.autorange'] = yaxis.autorange;\n\n    Registry.call('_storeDirectGUIEdit', graphDiv.layout, graphDiv._fullLayout._preGUI, update);\n\n    // update the input layout\n    var xaIn = layout[xaxis._name];\n    xaIn.range = xrange;\n    xaIn.autorange = xaxis.autorange;\n\n    var yaIn = layout[yaxis._name];\n    yaIn.range = yrange;\n    yaIn.autorange = yaxis.autorange;\n\n    // lastInputTime helps determine which one is the latest input (if async)\n    update.lastInputTime = this.camera.lastInputTime;\n    graphDiv.emit('plotly_relayout', update);\n};\n\nproto.cameraChanged = function() {\n    var camera = this.camera;\n\n    this.glplot.setDataBox(this.calcDataBox());\n\n    var nextTicks = this.computeTickMarks();\n    var curTicks = this.glplotOptions.ticks;\n\n    if(compareTicks(nextTicks, curTicks)) {\n        this.glplotOptions.ticks = nextTicks;\n        this.glplotOptions.dataBox = camera.dataBox;\n        this.glplot.update(this.glplotOptions);\n        this.handleAnnotations();\n    }\n};\n\nproto.handleAnnotations = function() {\n    var gd = this.graphDiv;\n    var annotations = this.fullLayout.annotations;\n\n    for(var i = 0; i < annotations.length; i++) {\n        var ann = annotations[i];\n\n        if(ann.xref === this.xaxis._id && ann.yref === this.yaxis._id) {\n            Registry.getComponentMethod('annotations', 'drawOne')(gd, i);\n        }\n    }\n};\n\nproto.destroy = function() {\n    if(!this.glplot) return;\n\n    var traces = this.traces;\n\n    if(traces) {\n        Object.keys(traces).map(function(key) {\n            traces[key].dispose();\n            delete traces[key];\n        });\n    }\n\n    this.glplot.dispose();\n\n    this.container.removeChild(this.svgContainer);\n    this.container.removeChild(this.mouseContainer);\n\n    this.fullData = null;\n    this.glplot = null;\n    this.stopped = true;\n    this.camera.mouseListener.enabled = false;\n    this.mouseContainer.removeEventListener('wheel', this.camera.wheelListener);\n    this.camera = null;\n};\n\nproto.plot = function(fullData, calcData, fullLayout) {\n    var glplot = this.glplot;\n\n    this.updateRefs(fullLayout);\n    this.xaxis.clearCalc();\n    this.yaxis.clearCalc();\n    this.updateTraces(fullData, calcData);\n    this.updateFx(fullLayout.dragmode);\n\n    var width = fullLayout.width;\n    var height = fullLayout.height;\n\n    this.updateSize(this.canvas);\n\n    var options = this.glplotOptions;\n    options.merge(fullLayout);\n    options.screenBox = [0, 0, width, height];\n\n    var mockGraphDiv = {_fullLayout: {\n        _axisConstraintGroups: this.graphDiv._fullLayout._axisConstraintGroups,\n        xaxis: this.xaxis,\n        yaxis: this.yaxis\n    }};\n\n    cleanAxisConstraints(mockGraphDiv, this.xaxis);\n    cleanAxisConstraints(mockGraphDiv, this.yaxis);\n\n    var size = fullLayout._size;\n    var domainX = this.xaxis.domain;\n    var domainY = this.yaxis.domain;\n\n    options.viewBox = [\n        size.l + domainX[0] * size.w,\n        size.b + domainY[0] * size.h,\n        (width - size.r) - (1 - domainX[1]) * size.w,\n        (height - size.t) - (1 - domainY[1]) * size.h\n    ];\n\n    this.mouseContainer.style.width = size.w * (domainX[1] - domainX[0]) + 'px';\n    this.mouseContainer.style.height = size.h * (domainY[1] - domainY[0]) + 'px';\n    this.mouseContainer.height = size.h * (domainY[1] - domainY[0]);\n    this.mouseContainer.style.left = size.l + domainX[0] * size.w + 'px';\n    this.mouseContainer.style.top = size.t + (1 - domainY[1]) * size.h + 'px';\n\n    var ax, i;\n\n    for(i = 0; i < 2; ++i) {\n        ax = this[AXES[i]];\n        ax._length = options.viewBox[i + 2] - options.viewBox[i];\n\n        doAutoRange(this.graphDiv, ax);\n        ax.setScale();\n    }\n\n    enforceAxisConstraints(mockGraphDiv);\n\n    options.ticks = this.computeTickMarks();\n\n    options.dataBox = this.calcDataBox();\n\n    options.merge(fullLayout);\n    glplot.update(options);\n\n    // force redraw so that promise is returned when rendering is completed\n    this.glplot.draw();\n};\n\nproto.calcDataBox = function() {\n    var xaxis = this.xaxis;\n    var yaxis = this.yaxis;\n    var xrange = xaxis.range;\n    var yrange = yaxis.range;\n    var xr2l = xaxis.r2l;\n    var yr2l = yaxis.r2l;\n\n    return [xr2l(xrange[0]), yr2l(yrange[0]), xr2l(xrange[1]), yr2l(yrange[1])];\n};\n\nproto.setRanges = function(dataBox) {\n    var xaxis = this.xaxis;\n    var yaxis = this.yaxis;\n    var xl2r = xaxis.l2r;\n    var yl2r = yaxis.l2r;\n\n    xaxis.range = [xl2r(dataBox[0]), xl2r(dataBox[2])];\n    yaxis.range = [yl2r(dataBox[1]), yl2r(dataBox[3])];\n};\n\nproto.updateTraces = function(fullData, calcData) {\n    var traceIds = Object.keys(this.traces);\n    var i, j, fullTrace;\n\n    this.fullData = fullData;\n\n    // remove empty traces\n    traceIdLoop:\n    for(i = 0; i < traceIds.length; i++) {\n        var oldUid = traceIds[i];\n        var oldTrace = this.traces[oldUid];\n\n        for(j = 0; j < fullData.length; j++) {\n            fullTrace = fullData[j];\n\n            if(fullTrace.uid === oldUid && fullTrace.type === oldTrace.type) {\n                continue traceIdLoop;\n            }\n        }\n\n        oldTrace.dispose();\n        delete this.traces[oldUid];\n    }\n\n    // update / create trace objects\n    for(i = 0; i < fullData.length; i++) {\n        fullTrace = fullData[i];\n        var calcTrace = calcData[i];\n        var traceObj = this.traces[fullTrace.uid];\n\n        if(traceObj) traceObj.update(fullTrace, calcTrace);\n        else {\n            traceObj = fullTrace._module.plot(this, fullTrace, calcTrace);\n            this.traces[fullTrace.uid] = traceObj;\n        }\n    }\n\n    // order object per traces\n    this.glplot.objects.sort(function(a, b) {\n        return a._trace.index - b._trace.index;\n    });\n};\n\nproto.updateFx = function(dragmode) {\n    // switch to svg interactions in lasso/select mode\n    if(dragmode === 'lasso' || dragmode === 'select') {\n        this.pickCanvas.style['pointer-events'] = 'none';\n        this.mouseContainer.style['pointer-events'] = 'none';\n    } else {\n        this.pickCanvas.style['pointer-events'] = 'auto';\n        this.mouseContainer.style['pointer-events'] = 'auto';\n    }\n\n    // set proper cursor\n    if(dragmode === 'pan') {\n        this.mouseContainer.style.cursor = 'move';\n    }\n    else if(dragmode === 'zoom') {\n        this.mouseContainer.style.cursor = 'crosshair';\n    }\n    else {\n        this.mouseContainer.style.cursor = null;\n    }\n};\n\nproto.emitPointAction = function(nextSelection, eventType) {\n    var uid = nextSelection.trace.uid;\n    var ptNumber = nextSelection.pointIndex;\n    var trace;\n\n    for(var i = 0; i < this.fullData.length; i++) {\n        if(this.fullData[i].uid === uid) {\n            trace = this.fullData[i];\n        }\n    }\n\n    var pointData = {\n        x: nextSelection.traceCoord[0],\n        y: nextSelection.traceCoord[1],\n        curveNumber: trace.index,\n        pointNumber: ptNumber,\n        data: trace._input,\n        fullData: this.fullData,\n        xaxis: this.xaxis,\n        yaxis: this.yaxis\n    };\n\n    Fx.appendArrayPointValue(pointData, trace, ptNumber);\n\n    this.graphDiv.emit(eventType, {points: [pointData]});\n};\n\nproto.draw = function() {\n    if(this.stopped) return;\n\n    requestAnimationFrame(this.redraw);\n\n    var glplot = this.glplot;\n    var camera = this.camera;\n    var mouseListener = camera.mouseListener;\n    var mouseUp = this.lastButtonState === 1 && mouseListener.buttons === 0;\n    var fullLayout = this.fullLayout;\n\n    this.lastButtonState = mouseListener.buttons;\n\n    this.cameraChanged();\n\n    var x = mouseListener.x * glplot.pixelRatio;\n    var y = this.canvas.height - glplot.pixelRatio * mouseListener.y;\n\n    var result;\n\n    if(camera.boxEnabled && fullLayout.dragmode === 'zoom') {\n        this.selectBox.enabled = true;\n\n        var selectBox = this.selectBox.selectBox = [\n            Math.min(camera.boxStart[0], camera.boxEnd[0]),\n            Math.min(camera.boxStart[1], camera.boxEnd[1]),\n            Math.max(camera.boxStart[0], camera.boxEnd[0]),\n            Math.max(camera.boxStart[1], camera.boxEnd[1])\n        ];\n\n        // 1D zoom\n        for(var i = 0; i < 2; i++) {\n            if(camera.boxStart[i] === camera.boxEnd[i]) {\n                selectBox[i] = glplot.dataBox[i];\n                selectBox[i + 2] = glplot.dataBox[i + 2];\n            }\n        }\n\n        glplot.setDirty();\n    }\n    else if(!camera.panning && this.isMouseOver) {\n        this.selectBox.enabled = false;\n\n        var size = fullLayout._size;\n        var domainX = this.xaxis.domain;\n        var domainY = this.yaxis.domain;\n\n        result = glplot.pick(\n            (x / glplot.pixelRatio) + size.l + domainX[0] * size.w,\n            (y / glplot.pixelRatio) - (size.t + (1 - domainY[1]) * size.h)\n        );\n\n        var nextSelection = result && result.object._trace.handlePick(result);\n\n        if(nextSelection && mouseUp) {\n            this.emitPointAction(nextSelection, 'plotly_click');\n        }\n\n        if(result && result.object._trace.hoverinfo !== 'skip' && fullLayout.hovermode) {\n\n            if(nextSelection && (\n                !this.lastPickResult ||\n                this.lastPickResult.traceUid !== nextSelection.trace.uid ||\n                this.lastPickResult.dataCoord[0] !== nextSelection.dataCoord[0] ||\n                this.lastPickResult.dataCoord[1] !== nextSelection.dataCoord[1])\n            ) {\n                var selection = nextSelection;\n\n                this.lastPickResult = {\n                    traceUid: nextSelection.trace ? nextSelection.trace.uid : null,\n                    dataCoord: nextSelection.dataCoord.slice()\n                };\n                this.spikes.update({ center: result.dataCoord });\n\n                selection.screenCoord = [\n                    ((glplot.viewBox[2] - glplot.viewBox[0]) *\n                    (result.dataCoord[0] - glplot.dataBox[0]) /\n                        (glplot.dataBox[2] - glplot.dataBox[0]) + glplot.viewBox[0]) /\n                            glplot.pixelRatio,\n                    (this.canvas.height - (glplot.viewBox[3] - glplot.viewBox[1]) *\n                    (result.dataCoord[1] - glplot.dataBox[1]) /\n                        (glplot.dataBox[3] - glplot.dataBox[1]) - glplot.viewBox[1]) /\n                            glplot.pixelRatio\n                ];\n\n                // this needs to happen before the next block that deletes traceCoord data\n                // also it's important to copy, otherwise data is lost by the time event data is read\n                this.emitPointAction(nextSelection, 'plotly_hover');\n\n                var trace = this.fullData[selection.trace.index] || {};\n                var ptNumber = selection.pointIndex;\n                var hoverinfo = Fx.castHoverinfo(trace, fullLayout, ptNumber);\n\n                if(hoverinfo && hoverinfo !== 'all') {\n                    var parts = hoverinfo.split('+');\n                    if(parts.indexOf('x') === -1) selection.traceCoord[0] = undefined;\n                    if(parts.indexOf('y') === -1) selection.traceCoord[1] = undefined;\n                    if(parts.indexOf('z') === -1) selection.traceCoord[2] = undefined;\n                    if(parts.indexOf('text') === -1) selection.textLabel = undefined;\n                    if(parts.indexOf('name') === -1) selection.name = undefined;\n                }\n\n                Fx.loneHover({\n                    x: selection.screenCoord[0],\n                    y: selection.screenCoord[1],\n                    xLabel: this.hoverFormatter('xaxis', selection.traceCoord[0]),\n                    yLabel: this.hoverFormatter('yaxis', selection.traceCoord[1]),\n                    zLabel: selection.traceCoord[2],\n                    text: selection.textLabel,\n                    name: selection.name,\n                    color: Fx.castHoverOption(trace, ptNumber, 'bgcolor') || selection.color,\n                    borderColor: Fx.castHoverOption(trace, ptNumber, 'bordercolor'),\n                    fontFamily: Fx.castHoverOption(trace, ptNumber, 'font.family'),\n                    fontSize: Fx.castHoverOption(trace, ptNumber, 'font.size'),\n                    fontColor: Fx.castHoverOption(trace, ptNumber, 'font.color')\n                }, {\n                    container: this.svgContainer,\n                    gd: this.graphDiv\n                });\n            }\n        }\n    }\n\n    // Remove hover effects if we're not over a point OR\n    // if we're zooming or panning (in which case result is not set)\n    if(!result) {\n        this.unhover();\n    }\n\n    glplot.draw();\n};\n\nproto.unhover = function() {\n    if(this.lastPickResult) {\n        this.spikes.update({});\n        this.lastPickResult = null;\n        this.graphDiv.emit('plotly_unhover');\n        Fx.loneUnhover(this.svgContainer);\n    }\n};\n\nproto.hoverFormatter = function(axisName, val) {\n    if(val === undefined) return undefined;\n\n    var axis = this[axisName];\n    return Axes.tickText(axis, axis.c2l(val), 'hover').text;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorMix = require('tinycolor2').mix;\nvar Lib = require('../../../lib');\nvar Template = require('../../../plot_api/plot_template');\nvar layoutAttributes = require('./axis_attributes');\nvar handleTypeDefaults = require('../../cartesian/type_defaults');\nvar handleAxisDefaults = require('../../cartesian/axis_defaults');\nvar axesNames = ['xaxis', 'yaxis', 'zaxis'];\n\n// TODO: hard-coded lightness fraction based on gridline default colors\n// that differ from other subplot types.\nvar gridLightness = 100 * (204 - 0x44) / (255 - 0x44);\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, options) {\n  var containerIn, containerOut;\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, layoutAttributes, attr, dflt);\n  }\n  for (var j = 0; j < axesNames.length; j++) {\n    var axName = axesNames[j];\n    containerIn = layoutIn[axName] || {};\n    containerOut = Template.newContainer(layoutOut, axName);\n    containerOut._id = axName[0] + options.scene;\n    containerOut._name = axName;\n    handleTypeDefaults(containerIn, containerOut, coerce, options);\n    handleAxisDefaults(containerIn, containerOut, coerce, {\n      font: options.font,\n      letter: axName[0],\n      data: options.data,\n      showGrid: true,\n      noTickson: true,\n      bgColor: options.bgColor,\n      calendar: options.calendar\n    }, options.fullLayout);\n    coerce('gridcolor', colorMix(containerOut.color, options.bgColor, gridLightness).toRgbString());\n    coerce('title.text', axName[0]); // shouldn't this be on-par with 2D?\n\n    containerOut.setScale = Lib.noop;\n    if (coerce('showspikes')) {\n      coerce('spikesides');\n      coerce('spikethickness');\n      coerce('spikecolor', containerOut.color);\n    }\n    coerce('showaxeslabels');\n    if (coerce('showbackground')) coerce('backgroundcolor');\n  }\n};","map":{"version":3,"names":["colorMix","require","mix","Lib","Template","layoutAttributes","handleTypeDefaults","handleAxisDefaults","axesNames","gridLightness","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","options","containerIn","containerOut","coerce","attr","dflt","j","length","axName","newContainer","_id","scene","_name","font","letter","data","showGrid","noTickson","bgColor","calendar","fullLayout","color","toRgbString","setScale","noop"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/gl3d/layout/axis_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar colorMix = require('tinycolor2').mix;\n\nvar Lib = require('../../../lib');\nvar Template = require('../../../plot_api/plot_template');\n\nvar layoutAttributes = require('./axis_attributes');\nvar handleTypeDefaults = require('../../cartesian/type_defaults');\nvar handleAxisDefaults = require('../../cartesian/axis_defaults');\n\nvar axesNames = ['xaxis', 'yaxis', 'zaxis'];\n\n// TODO: hard-coded lightness fraction based on gridline default colors\n// that differ from other subplot types.\nvar gridLightness = 100 * (204 - 0x44) / (255 - 0x44);\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, options) {\n    var containerIn, containerOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, layoutAttributes, attr, dflt);\n    }\n\n    for(var j = 0; j < axesNames.length; j++) {\n        var axName = axesNames[j];\n        containerIn = layoutIn[axName] || {};\n\n        containerOut = Template.newContainer(layoutOut, axName);\n        containerOut._id = axName[0] + options.scene;\n        containerOut._name = axName;\n\n        handleTypeDefaults(containerIn, containerOut, coerce, options);\n\n        handleAxisDefaults(\n            containerIn,\n            containerOut,\n            coerce,\n            {\n                font: options.font,\n                letter: axName[0],\n                data: options.data,\n                showGrid: true,\n                noTickson: true,\n                bgColor: options.bgColor,\n                calendar: options.calendar\n            },\n            options.fullLayout);\n\n        coerce('gridcolor', colorMix(containerOut.color, options.bgColor, gridLightness).toRgbString());\n        coerce('title.text', axName[0]);  // shouldn't this be on-par with 2D?\n\n        containerOut.setScale = Lib.noop;\n\n        if(coerce('showspikes')) {\n            coerce('spikesides');\n            coerce('spikethickness');\n            coerce('spikecolor', containerOut.color);\n        }\n\n        coerce('showaxeslabels');\n        if(coerce('showbackground')) coerce('backgroundcolor');\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,GAAG;AAExC,IAAIC,GAAG,GAAGF,OAAO,CAAC,cAAc,CAAC;AACjC,IAAIG,QAAQ,GAAGH,OAAO,CAAC,iCAAiC,CAAC;AAEzD,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,mBAAmB,CAAC;AACnD,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,+BAA+B,CAAC;AACjE,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,+BAA+B,CAAC;AAEjE,IAAIO,SAAS,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC;;AAE3C;AACA;AACA,IAAIC,aAAa,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC;AAErDC,MAAM,CAACC,OAAO,GAAG,SAASC,oBAAoB,CAACC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAE;EACzE,IAAIC,WAAW,EAAEC,YAAY;EAE7B,SAASC,MAAM,CAACC,IAAI,EAAEC,IAAI,EAAE;IACxB,OAAOjB,GAAG,CAACe,MAAM,CAACF,WAAW,EAAEC,YAAY,EAAEZ,gBAAgB,EAAEc,IAAI,EAAEC,IAAI,CAAC;EAC9E;EAEA,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,SAAS,CAACc,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIE,MAAM,GAAGf,SAAS,CAACa,CAAC,CAAC;IACzBL,WAAW,GAAGH,QAAQ,CAACU,MAAM,CAAC,IAAI,CAAC,CAAC;IAEpCN,YAAY,GAAGb,QAAQ,CAACoB,YAAY,CAACV,SAAS,EAAES,MAAM,CAAC;IACvDN,YAAY,CAACQ,GAAG,GAAGF,MAAM,CAAC,CAAC,CAAC,GAAGR,OAAO,CAACW,KAAK;IAC5CT,YAAY,CAACU,KAAK,GAAGJ,MAAM;IAE3BjB,kBAAkB,CAACU,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEH,OAAO,CAAC;IAE9DR,kBAAkB,CACdS,WAAW,EACXC,YAAY,EACZC,MAAM,EACN;MACIU,IAAI,EAAEb,OAAO,CAACa,IAAI;MAClBC,MAAM,EAAEN,MAAM,CAAC,CAAC,CAAC;MACjBO,IAAI,EAAEf,OAAO,CAACe,IAAI;MAClBC,QAAQ,EAAE,IAAI;MACdC,SAAS,EAAE,IAAI;MACfC,OAAO,EAAElB,OAAO,CAACkB,OAAO;MACxBC,QAAQ,EAAEnB,OAAO,CAACmB;IACtB,CAAC,EACDnB,OAAO,CAACoB,UAAU,CAAC;IAEvBjB,MAAM,CAAC,WAAW,EAAElB,QAAQ,CAACiB,YAAY,CAACmB,KAAK,EAAErB,OAAO,CAACkB,OAAO,EAAExB,aAAa,CAAC,CAAC4B,WAAW,EAAE,CAAC;IAC/FnB,MAAM,CAAC,YAAY,EAAEK,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;;IAElCN,YAAY,CAACqB,QAAQ,GAAGnC,GAAG,CAACoC,IAAI;IAEhC,IAAGrB,MAAM,CAAC,YAAY,CAAC,EAAE;MACrBA,MAAM,CAAC,YAAY,CAAC;MACpBA,MAAM,CAAC,gBAAgB,CAAC;MACxBA,MAAM,CAAC,YAAY,EAAED,YAAY,CAACmB,KAAK,CAAC;IAC5C;IAEAlB,MAAM,CAAC,gBAAgB,CAAC;IACxB,IAAGA,MAAM,CAAC,gBAAgB,CAAC,EAAEA,MAAM,CAAC,iBAAiB,CAAC;EAC1D;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
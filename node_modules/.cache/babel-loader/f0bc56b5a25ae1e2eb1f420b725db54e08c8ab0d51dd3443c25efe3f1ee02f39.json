{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nmodule.exports = function makeBoundArray(trace, arrayIn, v0In, dvIn, numbricks, ax) {\n  var arrayOut = [];\n  var isContour = Registry.traceIs(trace, 'contour');\n  var isHist = Registry.traceIs(trace, 'histogram');\n  var isGL2D = Registry.traceIs(trace, 'gl2d');\n  var v0;\n  var dv;\n  var i;\n  var isArrayOfTwoItemsOrMore = isArrayOrTypedArray(arrayIn) && arrayIn.length > 1;\n  if (isArrayOfTwoItemsOrMore && !isHist && ax.type !== 'category') {\n    var len = arrayIn.length;\n\n    // given vals are brick centers\n    // hopefully length === numbricks, but use this method even if too few are supplied\n    // and extend it linearly based on the last two points\n    if (len <= numbricks) {\n      // contour plots only want the centers\n      if (isContour || isGL2D) arrayOut = arrayIn.slice(0, numbricks);else if (numbricks === 1) {\n        arrayOut = [arrayIn[0] - 0.5, arrayIn[0] + 0.5];\n      } else {\n        arrayOut = [1.5 * arrayIn[0] - 0.5 * arrayIn[1]];\n        for (i = 1; i < len; i++) {\n          arrayOut.push((arrayIn[i - 1] + arrayIn[i]) * 0.5);\n        }\n        arrayOut.push(1.5 * arrayIn[len - 1] - 0.5 * arrayIn[len - 2]);\n      }\n      if (len < numbricks) {\n        var lastPt = arrayOut[arrayOut.length - 1];\n        var delta = lastPt - arrayOut[arrayOut.length - 2];\n        for (i = len; i < numbricks; i++) {\n          lastPt += delta;\n          arrayOut.push(lastPt);\n        }\n      }\n    } else {\n      // hopefully length === numbricks+1, but do something regardless:\n      // given vals are brick boundaries\n      return isContour ? arrayIn.slice(0, numbricks) :\n      // we must be strict for contours\n      arrayIn.slice(0, numbricks + 1);\n    }\n  } else {\n    dv = dvIn || 1;\n    var calendar = trace[ax._id.charAt(0) + 'calendar'];\n    if (isHist || ax.type === 'category' || ax.type === 'multicategory') {\n      v0 = ax.r2c(v0In, 0, calendar) || 0;\n    } else if (isArrayOrTypedArray(arrayIn) && arrayIn.length === 1) {\n      v0 = arrayIn[0];\n    } else if (v0In === undefined) {\n      v0 = 0;\n    } else {\n      v0 = ax.d2c(v0In, 0, calendar);\n    }\n    for (i = isContour || isGL2D ? 0 : -0.5; i < numbricks; i++) {\n      arrayOut.push(v0 + dv * i);\n    }\n  }\n  return arrayOut;\n};","map":{"version":3,"names":["Registry","require","isArrayOrTypedArray","module","exports","makeBoundArray","trace","arrayIn","v0In","dvIn","numbricks","ax","arrayOut","isContour","traceIs","isHist","isGL2D","v0","dv","i","isArrayOfTwoItemsOrMore","length","type","len","slice","push","lastPt","delta","calendar","_id","charAt","r2c","undefined","d2c"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/heatmap/make_bound_array.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nmodule.exports = function makeBoundArray(trace, arrayIn, v0In, dvIn, numbricks, ax) {\n    var arrayOut = [];\n    var isContour = Registry.traceIs(trace, 'contour');\n    var isHist = Registry.traceIs(trace, 'histogram');\n    var isGL2D = Registry.traceIs(trace, 'gl2d');\n    var v0;\n    var dv;\n    var i;\n\n    var isArrayOfTwoItemsOrMore = isArrayOrTypedArray(arrayIn) && arrayIn.length > 1;\n\n    if(isArrayOfTwoItemsOrMore && !isHist && (ax.type !== 'category')) {\n        var len = arrayIn.length;\n\n        // given vals are brick centers\n        // hopefully length === numbricks, but use this method even if too few are supplied\n        // and extend it linearly based on the last two points\n        if(len <= numbricks) {\n            // contour plots only want the centers\n            if(isContour || isGL2D) arrayOut = arrayIn.slice(0, numbricks);\n            else if(numbricks === 1) {\n                arrayOut = [arrayIn[0] - 0.5, arrayIn[0] + 0.5];\n            }\n            else {\n                arrayOut = [1.5 * arrayIn[0] - 0.5 * arrayIn[1]];\n\n                for(i = 1; i < len; i++) {\n                    arrayOut.push((arrayIn[i - 1] + arrayIn[i]) * 0.5);\n                }\n\n                arrayOut.push(1.5 * arrayIn[len - 1] - 0.5 * arrayIn[len - 2]);\n            }\n\n            if(len < numbricks) {\n                var lastPt = arrayOut[arrayOut.length - 1];\n                var delta = lastPt - arrayOut[arrayOut.length - 2];\n\n                for(i = len; i < numbricks; i++) {\n                    lastPt += delta;\n                    arrayOut.push(lastPt);\n                }\n            }\n        }\n        else {\n            // hopefully length === numbricks+1, but do something regardless:\n            // given vals are brick boundaries\n            return isContour ?\n                arrayIn.slice(0, numbricks) :  // we must be strict for contours\n                arrayIn.slice(0, numbricks + 1);\n        }\n    }\n    else {\n        dv = dvIn || 1;\n\n        var calendar = trace[ax._id.charAt(0) + 'calendar'];\n\n        if(isHist || ax.type === 'category' || ax.type === 'multicategory') {\n            v0 = ax.r2c(v0In, 0, calendar) || 0;\n        } else if(isArrayOrTypedArray(arrayIn) && arrayIn.length === 1) {\n            v0 = arrayIn[0];\n        } else if(v0In === undefined) {\n            v0 = 0;\n        } else {\n            v0 = ax.d2c(v0In, 0, calendar);\n        }\n\n        for(i = (isContour || isGL2D) ? 0 : -0.5; i < numbricks; i++) {\n            arrayOut.push(v0 + dv * i);\n        }\n    }\n\n    return arrayOut;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
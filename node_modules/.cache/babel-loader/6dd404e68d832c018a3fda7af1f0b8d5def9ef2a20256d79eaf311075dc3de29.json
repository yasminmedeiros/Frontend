{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../lib');\nvar EventEmitter = require('events').EventEmitter;\nfunction svgToImg(opts) {\n  var ev = opts.emitter || new EventEmitter();\n  var promise = new Promise(function (resolve, reject) {\n    var Image = window.Image;\n    var svg = opts.svg;\n    var format = opts.format || 'png';\n\n    // IE only support svg\n    if (Lib.isIE() && format !== 'svg') {\n      var ieSvgError = new Error('Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.');\n      reject(ieSvgError);\n      // eventually remove the ev\n      //  in favor of promises\n      if (!opts.promise) {\n        return ev.emit('error', ieSvgError);\n      } else {\n        return promise;\n      }\n    }\n    var canvas = opts.canvas;\n    var scale = opts.scale || 1;\n    var w0 = opts.width || 300;\n    var h0 = opts.height || 150;\n    var w1 = scale * w0;\n    var h1 = scale * h0;\n    var ctx = canvas.getContext('2d');\n    var img = new Image();\n\n    // for Safari support, eliminate createObjectURL\n    //  this decision could cause problems if content\n    //  is not restricted to svg\n    var url = 'data:image/svg+xml,' + encodeURIComponent(svg);\n    canvas.width = w1;\n    canvas.height = h1;\n    img.onload = function () {\n      var imgData;\n\n      // don't need to draw to canvas if svg\n      //  save some time and also avoid failure on IE\n      if (format !== 'svg') {\n        ctx.drawImage(img, 0, 0, w1, h1);\n      }\n      switch (format) {\n        case 'jpeg':\n          imgData = canvas.toDataURL('image/jpeg');\n          break;\n        case 'png':\n          imgData = canvas.toDataURL('image/png');\n          break;\n        case 'webp':\n          imgData = canvas.toDataURL('image/webp');\n          break;\n        case 'svg':\n          imgData = url;\n          break;\n        default:\n          var errorMsg = 'Image format is not jpeg, png, svg or webp.';\n          reject(new Error(errorMsg));\n          // eventually remove the ev\n          //  in favor of promises\n          if (!opts.promise) {\n            return ev.emit('error', errorMsg);\n          }\n      }\n      resolve(imgData);\n      // eventually remove the ev\n      //  in favor of promises\n      if (!opts.promise) {\n        ev.emit('success', imgData);\n      }\n    };\n    img.onerror = function (err) {\n      reject(err);\n      // eventually remove the ev\n      //  in favor of promises\n      if (!opts.promise) {\n        return ev.emit('error', err);\n      }\n    };\n    img.src = url;\n  });\n\n  // temporary for backward compatibility\n  //  move to only Promise in 2.0.0\n  //  and eliminate the EventEmitter\n  if (opts.promise) {\n    return promise;\n  }\n  return ev;\n}\nmodule.exports = svgToImg;","map":{"version":3,"names":["Lib","require","EventEmitter","svgToImg","opts","ev","emitter","promise","Promise","resolve","reject","Image","window","svg","format","isIE","ieSvgError","Error","emit","canvas","scale","w0","width","h0","height","w1","h1","ctx","getContext","img","url","encodeURIComponent","onload","imgData","drawImage","toDataURL","errorMsg","onerror","err","src","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/snapshot/svgtoimg.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../lib');\nvar EventEmitter = require('events').EventEmitter;\n\nfunction svgToImg(opts) {\n    var ev = opts.emitter || new EventEmitter();\n\n    var promise = new Promise(function(resolve, reject) {\n        var Image = window.Image;\n        var svg = opts.svg;\n        var format = opts.format || 'png';\n\n        // IE only support svg\n        if(Lib.isIE() && format !== 'svg') {\n            var ieSvgError = new Error('Sorry IE does not support downloading from canvas. Try {format:\\'svg\\'} instead.');\n            reject(ieSvgError);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                return ev.emit('error', ieSvgError);\n            } else {\n                return promise;\n            }\n        }\n\n        var canvas = opts.canvas;\n        var scale = opts.scale || 1;\n        var w0 = opts.width || 300;\n        var h0 = opts.height || 150;\n        var w1 = scale * w0;\n        var h1 = scale * h0;\n\n        var ctx = canvas.getContext('2d');\n        var img = new Image();\n\n        // for Safari support, eliminate createObjectURL\n        //  this decision could cause problems if content\n        //  is not restricted to svg\n        var url = 'data:image/svg+xml,' + encodeURIComponent(svg);\n\n        canvas.width = w1;\n        canvas.height = h1;\n\n        img.onload = function() {\n            var imgData;\n\n            // don't need to draw to canvas if svg\n            //  save some time and also avoid failure on IE\n            if(format !== 'svg') {\n                ctx.drawImage(img, 0, 0, w1, h1);\n            }\n\n            switch(format) {\n                case 'jpeg':\n                    imgData = canvas.toDataURL('image/jpeg');\n                    break;\n                case 'png':\n                    imgData = canvas.toDataURL('image/png');\n                    break;\n                case 'webp':\n                    imgData = canvas.toDataURL('image/webp');\n                    break;\n                case 'svg':\n                    imgData = url;\n                    break;\n                default:\n                    var errorMsg = 'Image format is not jpeg, png, svg or webp.';\n                    reject(new Error(errorMsg));\n                    // eventually remove the ev\n                    //  in favor of promises\n                    if(!opts.promise) {\n                        return ev.emit('error', errorMsg);\n                    }\n            }\n            resolve(imgData);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                ev.emit('success', imgData);\n            }\n        };\n\n        img.onerror = function(err) {\n            reject(err);\n            // eventually remove the ev\n            //  in favor of promises\n            if(!opts.promise) {\n                return ev.emit('error', err);\n            }\n        };\n\n        img.src = url;\n    });\n\n    // temporary for backward compatibility\n    //  move to only Promise in 2.0.0\n    //  and eliminate the EventEmitter\n    if(opts.promise) {\n        return promise;\n    }\n\n    return ev;\n}\n\nmodule.exports = svgToImg;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC3B,IAAIC,YAAY,GAAGD,OAAO,CAAC,QAAQ,CAAC,CAACC,YAAY;AAEjD,SAASC,QAAQ,CAACC,IAAI,EAAE;EACpB,IAAIC,EAAE,GAAGD,IAAI,CAACE,OAAO,IAAI,IAAIJ,YAAY,EAAE;EAE3C,IAAIK,OAAO,GAAG,IAAIC,OAAO,CAAC,UAASC,OAAO,EAAEC,MAAM,EAAE;IAChD,IAAIC,KAAK,GAAGC,MAAM,CAACD,KAAK;IACxB,IAAIE,GAAG,GAAGT,IAAI,CAACS,GAAG;IAClB,IAAIC,MAAM,GAAGV,IAAI,CAACU,MAAM,IAAI,KAAK;;IAEjC;IACA,IAAGd,GAAG,CAACe,IAAI,EAAE,IAAID,MAAM,KAAK,KAAK,EAAE;MAC/B,IAAIE,UAAU,GAAG,IAAIC,KAAK,CAAC,kFAAkF,CAAC;MAC9GP,MAAM,CAACM,UAAU,CAAC;MAClB;MACA;MACA,IAAG,CAACZ,IAAI,CAACG,OAAO,EAAE;QACd,OAAOF,EAAE,CAACa,IAAI,CAAC,OAAO,EAAEF,UAAU,CAAC;MACvC,CAAC,MAAM;QACH,OAAOT,OAAO;MAClB;IACJ;IAEA,IAAIY,MAAM,GAAGf,IAAI,CAACe,MAAM;IACxB,IAAIC,KAAK,GAAGhB,IAAI,CAACgB,KAAK,IAAI,CAAC;IAC3B,IAAIC,EAAE,GAAGjB,IAAI,CAACkB,KAAK,IAAI,GAAG;IAC1B,IAAIC,EAAE,GAAGnB,IAAI,CAACoB,MAAM,IAAI,GAAG;IAC3B,IAAIC,EAAE,GAAGL,KAAK,GAAGC,EAAE;IACnB,IAAIK,EAAE,GAAGN,KAAK,GAAGG,EAAE;IAEnB,IAAII,GAAG,GAAGR,MAAM,CAACS,UAAU,CAAC,IAAI,CAAC;IACjC,IAAIC,GAAG,GAAG,IAAIlB,KAAK,EAAE;;IAErB;IACA;IACA;IACA,IAAImB,GAAG,GAAG,qBAAqB,GAAGC,kBAAkB,CAAClB,GAAG,CAAC;IAEzDM,MAAM,CAACG,KAAK,GAAGG,EAAE;IACjBN,MAAM,CAACK,MAAM,GAAGE,EAAE;IAElBG,GAAG,CAACG,MAAM,GAAG,YAAW;MACpB,IAAIC,OAAO;;MAEX;MACA;MACA,IAAGnB,MAAM,KAAK,KAAK,EAAE;QACjBa,GAAG,CAACO,SAAS,CAACL,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEJ,EAAE,EAAEC,EAAE,CAAC;MACpC;MAEA,QAAOZ,MAAM;QACT,KAAK,MAAM;UACPmB,OAAO,GAAGd,MAAM,CAACgB,SAAS,CAAC,YAAY,CAAC;UACxC;QACJ,KAAK,KAAK;UACNF,OAAO,GAAGd,MAAM,CAACgB,SAAS,CAAC,WAAW,CAAC;UACvC;QACJ,KAAK,MAAM;UACPF,OAAO,GAAGd,MAAM,CAACgB,SAAS,CAAC,YAAY,CAAC;UACxC;QACJ,KAAK,KAAK;UACNF,OAAO,GAAGH,GAAG;UACb;QACJ;UACI,IAAIM,QAAQ,GAAG,6CAA6C;UAC5D1B,MAAM,CAAC,IAAIO,KAAK,CAACmB,QAAQ,CAAC,CAAC;UAC3B;UACA;UACA,IAAG,CAAChC,IAAI,CAACG,OAAO,EAAE;YACd,OAAOF,EAAE,CAACa,IAAI,CAAC,OAAO,EAAEkB,QAAQ,CAAC;UACrC;MAAC;MAET3B,OAAO,CAACwB,OAAO,CAAC;MAChB;MACA;MACA,IAAG,CAAC7B,IAAI,CAACG,OAAO,EAAE;QACdF,EAAE,CAACa,IAAI,CAAC,SAAS,EAAEe,OAAO,CAAC;MAC/B;IACJ,CAAC;IAEDJ,GAAG,CAACQ,OAAO,GAAG,UAASC,GAAG,EAAE;MACxB5B,MAAM,CAAC4B,GAAG,CAAC;MACX;MACA;MACA,IAAG,CAAClC,IAAI,CAACG,OAAO,EAAE;QACd,OAAOF,EAAE,CAACa,IAAI,CAAC,OAAO,EAAEoB,GAAG,CAAC;MAChC;IACJ,CAAC;IAEDT,GAAG,CAACU,GAAG,GAAGT,GAAG;EACjB,CAAC,CAAC;;EAEF;EACA;EACA;EACA,IAAG1B,IAAI,CAACG,OAAO,EAAE;IACb,OAAOA,OAAO;EAClB;EAEA,OAAOF,EAAE;AACb;AAEAmC,MAAM,CAACC,OAAO,GAAGtC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
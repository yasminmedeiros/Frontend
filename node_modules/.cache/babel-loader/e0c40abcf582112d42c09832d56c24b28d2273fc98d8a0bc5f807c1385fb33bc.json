{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterPlot = require('../scatter/plot');\nvar Axes = require('../../plots/cartesian/axes');\nvar Drawing = require('../../components/drawing');\nmodule.exports = function plot(gd, plotinfoproxy, data, layer) {\n  var i, trace, node;\n  var carpet = data[0][0].carpet;\n  // mimic cartesian plotinfo\n  var plotinfo = {\n    xaxis: Axes.getFromId(gd, carpet.xaxis || 'x'),\n    yaxis: Axes.getFromId(gd, carpet.yaxis || 'y'),\n    plot: plotinfoproxy.plot\n  };\n  scatterPlot(gd, plotinfo, data, layer);\n  for (i = 0; i < data.length; i++) {\n    trace = data[i][0].trace;\n\n    // Note: .select is adequate but seems to mutate the node data,\n    // which is at least a bit suprising and causes problems elsewhere\n    node = layer.selectAll('g.trace' + trace.uid + ' .js-line');\n\n    // Note: it would be more efficient if this didn't need to be applied\n    // separately to all scattercarpet traces, but that would require\n    // lots of reorganization of scatter traces that is otherwise not\n    // necessary. That makes this a potential optimization.\n    Drawing.setClipUrl(node, data[i][0].carpet._clipPathId, gd);\n  }\n};","map":{"version":3,"names":["scatterPlot","require","Axes","Drawing","module","exports","plot","gd","plotinfoproxy","data","layer","i","trace","node","carpet","plotinfo","xaxis","getFromId","yaxis","length","selectAll","uid","setClipUrl","_clipPathId"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scattercarpet/plot.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar scatterPlot = require('../scatter/plot');\nvar Axes = require('../../plots/cartesian/axes');\nvar Drawing = require('../../components/drawing');\n\nmodule.exports = function plot(gd, plotinfoproxy, data, layer) {\n    var i, trace, node;\n\n    var carpet = data[0][0].carpet;\n    // mimic cartesian plotinfo\n    var plotinfo = {\n        xaxis: Axes.getFromId(gd, carpet.xaxis || 'x'),\n        yaxis: Axes.getFromId(gd, carpet.yaxis || 'y'),\n        plot: plotinfoproxy.plot,\n    };\n\n    scatterPlot(gd, plotinfo, data, layer);\n\n    for(i = 0; i < data.length; i++) {\n        trace = data[i][0].trace;\n\n        // Note: .select is adequate but seems to mutate the node data,\n        // which is at least a bit suprising and causes problems elsewhere\n        node = layer.selectAll('g.trace' + trace.uid + ' .js-line');\n\n        // Note: it would be more efficient if this didn't need to be applied\n        // separately to all scattercarpet traces, but that would require\n        // lots of reorganization of scatter traces that is otherwise not\n        // necessary. That makes this a potential optimization.\n        Drawing.setClipUrl(node, data[i][0].carpet._clipPathId, gd);\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,WAAW,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC5C,IAAIC,IAAI,GAAGD,OAAO,CAAC,4BAA4B,CAAC;AAChD,IAAIE,OAAO,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAEjDG,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAE;EAC3D,IAAIC,CAAC,EAAEC,KAAK,EAAEC,IAAI;EAElB,IAAIC,MAAM,GAAGL,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,MAAM;EAC9B;EACA,IAAIC,QAAQ,GAAG;IACXC,KAAK,EAAEd,IAAI,CAACe,SAAS,CAACV,EAAE,EAAEO,MAAM,CAACE,KAAK,IAAI,GAAG,CAAC;IAC9CE,KAAK,EAAEhB,IAAI,CAACe,SAAS,CAACV,EAAE,EAAEO,MAAM,CAACI,KAAK,IAAI,GAAG,CAAC;IAC9CZ,IAAI,EAAEE,aAAa,CAACF;EACxB,CAAC;EAEDN,WAAW,CAACO,EAAE,EAAEQ,QAAQ,EAAEN,IAAI,EAAEC,KAAK,CAAC;EAEtC,KAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACU,MAAM,EAAER,CAAC,EAAE,EAAE;IAC7BC,KAAK,GAAGH,IAAI,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;;IAExB;IACA;IACAC,IAAI,GAAGH,KAAK,CAACU,SAAS,CAAC,SAAS,GAAGR,KAAK,CAACS,GAAG,GAAG,WAAW,CAAC;;IAE3D;IACA;IACA;IACA;IACAlB,OAAO,CAACmB,UAAU,CAACT,IAAI,EAAEJ,IAAI,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAACG,MAAM,CAACS,WAAW,EAAEhB,EAAE,CAAC;EAC/D;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar createLinePlot = require('gl-line3d');\nvar createScatterPlot = require('gl-scatter3d');\nvar createErrorBars = require('gl-error3d');\nvar createMesh = require('gl-mesh3d');\nvar triangulate = require('delaunay-triangulate');\nvar Lib = require('../../lib');\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar formatColor = require('../../lib/gl_format_color').formatColor;\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar DASH_PATTERNS = require('../../constants/gl3d_dashes');\nvar MARKER_SYMBOLS = require('../../constants/gl3d_markers');\nvar calculateError = require('./calc_errors');\nfunction LineWithMarkers(scene, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.linePlot = null;\n  this.scatterPlot = null;\n  this.errorBars = null;\n  this.textMarkers = null;\n  this.delaunayMesh = null;\n  this.color = null;\n  this.mode = '';\n  this.dataPoints = [];\n  this.axesBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.textLabels = null;\n  this.data = null;\n}\nvar proto = LineWithMarkers.prototype;\nproto.handlePick = function (selection) {\n  if (selection.object && (selection.object === this.linePlot || selection.object === this.delaunayMesh || selection.object === this.textMarkers || selection.object === this.scatterPlot)) {\n    var ind = selection.index = selection.data.index;\n    if (selection.object.highlight) {\n      selection.object.highlight(null);\n    }\n    if (this.scatterPlot) {\n      selection.object = this.scatterPlot;\n      this.scatterPlot.highlight(selection.data);\n    }\n    selection.textLabel = '';\n    if (this.textLabels) {\n      if (Array.isArray(this.textLabels)) {\n        if (this.textLabels[ind] || this.textLabels[ind] === 0) {\n          selection.textLabel = this.textLabels[ind];\n        }\n      } else {\n        selection.textLabel = this.textLabels;\n      }\n    }\n    selection.traceCoordinate = [this.data.x[ind], this.data.y[ind], this.data.z[ind]];\n    return true;\n  }\n};\nfunction constructDelaunay(points, color, axis) {\n  var u = (axis + 1) % 3;\n  var v = (axis + 2) % 3;\n  var filteredPoints = [];\n  var filteredIds = [];\n  var i;\n  for (i = 0; i < points.length; ++i) {\n    var p = points[i];\n    if (isNaN(p[u]) || !isFinite(p[u]) || isNaN(p[v]) || !isFinite(p[v])) {\n      continue;\n    }\n    filteredPoints.push([p[u], p[v]]);\n    filteredIds.push(i);\n  }\n  var cells = triangulate(filteredPoints);\n  for (i = 0; i < cells.length; ++i) {\n    var c = cells[i];\n    for (var j = 0; j < c.length; ++j) {\n      c[j] = filteredIds[c[j]];\n    }\n  }\n  return {\n    positions: points,\n    cells: cells,\n    meshColor: color\n  };\n}\nfunction calculateErrorParams(errors) {\n  var capSize = [0.0, 0.0, 0.0];\n  var color = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n  var lineWidth = [1.0, 1.0, 1.0];\n  for (var i = 0; i < 3; i++) {\n    var e = errors[i];\n    if (e && e.copy_zstyle !== false && errors[2].visible !== false) e = errors[2];\n    if (!e || !e.visible) continue;\n    capSize[i] = e.width / 2; // ballpark rescaling\n    color[i] = str2RgbaArray(e.color);\n    lineWidth[i] = e.thickness;\n  }\n  return {\n    capSize: capSize,\n    color: color,\n    lineWidth: lineWidth\n  };\n}\nfunction parseAlignmentX(a) {\n  if (a === null || a === undefined) return 0;\n  return a.indexOf('left') > -1 ? -1 : a.indexOf('right') > -1 ? 1 : 0;\n}\nfunction parseAlignmentY(a) {\n  if (a === null || a === undefined) return 0;\n  return a.indexOf('top') > -1 ? -1 : a.indexOf('bottom') > -1 ? 1 : 0;\n}\nfunction calculateTextOffset(tp) {\n  // Read out text properties\n\n  var defaultAlignmentX = 0;\n  var defaultAlignmentY = 0;\n  var textOffset = [defaultAlignmentX, defaultAlignmentY];\n  if (Array.isArray(tp)) {\n    for (var i = 0; i < tp.length; i++) {\n      textOffset[i] = [defaultAlignmentX, defaultAlignmentY];\n      if (tp[i]) {\n        textOffset[i][0] = parseAlignmentX(tp[i]);\n        textOffset[i][1] = parseAlignmentY(tp[i]);\n      }\n    }\n  } else {\n    textOffset[0] = parseAlignmentX(tp);\n    textOffset[1] = parseAlignmentY(tp);\n  }\n  return textOffset;\n}\nfunction calculateSize(sizeIn, sizeFn) {\n  // rough parity with Plotly 2D markers\n  return sizeFn(sizeIn * 4);\n}\nfunction calculateSymbol(symbolIn) {\n  return MARKER_SYMBOLS[symbolIn];\n}\nfunction formatParam(paramIn, len, calculate, dflt, extraFn) {\n  var paramOut = null;\n  if (Lib.isArrayOrTypedArray(paramIn)) {\n    paramOut = [];\n    for (var i = 0; i < len; i++) {\n      if (paramIn[i] === undefined) paramOut[i] = dflt;else paramOut[i] = calculate(paramIn[i], extraFn);\n    }\n  } else paramOut = calculate(paramIn, Lib.identity);\n  return paramOut;\n}\nfunction convertPlotlyOptions(scene, data) {\n  var points = [];\n  var sceneLayout = scene.fullSceneLayout;\n  var scaleFactor = scene.dataScale;\n  var xaxis = sceneLayout.xaxis;\n  var yaxis = sceneLayout.yaxis;\n  var zaxis = sceneLayout.zaxis;\n  var marker = data.marker;\n  var line = data.line;\n  var x = data.x || [];\n  var y = data.y || [];\n  var z = data.z || [];\n  var len = x.length;\n  var xcalendar = data.xcalendar;\n  var ycalendar = data.ycalendar;\n  var zcalendar = data.zcalendar;\n  var xc, yc, zc;\n  var params, i;\n  var text;\n\n  // Convert points\n  for (i = 0; i < len; i++) {\n    // sanitize numbers and apply transforms based on axes.type\n    xc = xaxis.d2l(x[i], 0, xcalendar) * scaleFactor[0];\n    yc = yaxis.d2l(y[i], 0, ycalendar) * scaleFactor[1];\n    zc = zaxis.d2l(z[i], 0, zcalendar) * scaleFactor[2];\n    points[i] = [xc, yc, zc];\n  }\n\n  // convert text\n  if (Array.isArray(data.text)) text = data.text;else if (data.text !== undefined) {\n    text = new Array(len);\n    for (i = 0; i < len; i++) {\n      text[i] = data.text;\n    }\n  }\n\n  // Build object parameters\n  params = {\n    position: points,\n    mode: data.mode,\n    text: text\n  };\n  if ('line' in data) {\n    params.lineColor = formatColor(line, 1, len);\n    params.lineWidth = line.width;\n    params.lineDashes = line.dash;\n  }\n  if ('marker' in data) {\n    var sizeFn = makeBubbleSizeFn(data);\n    params.scatterColor = formatColor(marker, 1, len);\n    params.scatterSize = formatParam(marker.size, len, calculateSize, 20, sizeFn);\n    params.scatterMarker = formatParam(marker.symbol, len, calculateSymbol, '●');\n    params.scatterLineWidth = marker.line.width; // arrayOk === false\n    params.scatterLineColor = formatColor(marker.line, 1, len);\n    params.scatterAngle = 0;\n  }\n  if ('textposition' in data) {\n    params.textOffset = calculateTextOffset(data.textposition);\n    params.textColor = formatColor(data.textfont, 1, len);\n    params.textSize = formatParam(data.textfont.size, len, Lib.identity, 12);\n    params.textFont = data.textfont.family; // arrayOk === false\n    params.textAngle = 0;\n  }\n  var dims = ['x', 'y', 'z'];\n  params.project = [false, false, false];\n  params.projectScale = [1, 1, 1];\n  params.projectOpacity = [1, 1, 1];\n  for (i = 0; i < 3; ++i) {\n    var projection = data.projection[dims[i]];\n    if (params.project[i] = projection.show) {\n      params.projectOpacity[i] = projection.opacity;\n      params.projectScale[i] = projection.scale;\n    }\n  }\n  params.errorBounds = calculateError(data, scaleFactor, sceneLayout);\n  var errorParams = calculateErrorParams([data.error_x, data.error_y, data.error_z]);\n  params.errorColor = errorParams.color;\n  params.errorLineWidth = errorParams.lineWidth;\n  params.errorCapSize = errorParams.capSize;\n  params.delaunayAxis = data.surfaceaxis;\n  params.delaunayColor = str2RgbaArray(data.surfacecolor);\n  return params;\n}\nfunction arrayToColor(color) {\n  if (Array.isArray(color)) {\n    var c = color[0];\n    if (Array.isArray(c)) color = c;\n    return 'rgb(' + color.slice(0, 3).map(function (x) {\n      return Math.round(x * 255);\n    }) + ')';\n  }\n  return null;\n}\nproto.update = function (data) {\n  var gl = this.scene.glplot.gl;\n  var lineOptions;\n  var scatterOptions;\n  var errorOptions;\n  var textOptions;\n  var dashPattern = DASH_PATTERNS.solid;\n\n  // Save data\n  this.data = data;\n\n  // Run data conversion\n  var options = convertPlotlyOptions(this.scene, data);\n  if ('mode' in options) {\n    this.mode = options.mode;\n  }\n  if ('lineDashes' in options) {\n    if (options.lineDashes in DASH_PATTERNS) {\n      dashPattern = DASH_PATTERNS[options.lineDashes];\n    }\n  }\n  this.color = arrayToColor(options.scatterColor) || arrayToColor(options.lineColor);\n\n  // Save data points\n  this.dataPoints = options.position;\n  lineOptions = {\n    gl: gl,\n    position: options.position,\n    color: options.lineColor,\n    lineWidth: options.lineWidth || 1,\n    dashes: dashPattern[0],\n    dashScale: dashPattern[1],\n    opacity: data.opacity,\n    connectGaps: data.connectgaps\n  };\n  if (this.mode.indexOf('lines') !== -1) {\n    if (this.linePlot) this.linePlot.update(lineOptions);else {\n      this.linePlot = createLinePlot(lineOptions);\n      this.linePlot._trace = this;\n      this.scene.glplot.add(this.linePlot);\n    }\n  } else if (this.linePlot) {\n    this.scene.glplot.remove(this.linePlot);\n    this.linePlot.dispose();\n    this.linePlot = null;\n  }\n\n  // N.B. marker.opacity must be a scalar for performance\n  var scatterOpacity = data.opacity;\n  if (data.marker && data.marker.opacity) scatterOpacity *= data.marker.opacity;\n  scatterOptions = {\n    gl: gl,\n    position: options.position,\n    color: options.scatterColor,\n    size: options.scatterSize,\n    glyph: options.scatterMarker,\n    opacity: scatterOpacity,\n    orthographic: true,\n    lineWidth: options.scatterLineWidth,\n    lineColor: options.scatterLineColor,\n    project: options.project,\n    projectScale: options.projectScale,\n    projectOpacity: options.projectOpacity\n  };\n  if (this.mode.indexOf('markers') !== -1) {\n    if (this.scatterPlot) this.scatterPlot.update(scatterOptions);else {\n      this.scatterPlot = createScatterPlot(scatterOptions);\n      this.scatterPlot._trace = this;\n      this.scatterPlot.highlightScale = 1;\n      this.scene.glplot.add(this.scatterPlot);\n    }\n  } else if (this.scatterPlot) {\n    this.scene.glplot.remove(this.scatterPlot);\n    this.scatterPlot.dispose();\n    this.scatterPlot = null;\n  }\n  textOptions = {\n    gl: gl,\n    position: options.position,\n    glyph: options.text,\n    color: options.textColor,\n    size: options.textSize,\n    angle: options.textAngle,\n    alignment: options.textOffset,\n    font: options.textFont,\n    orthographic: true,\n    lineWidth: 0,\n    project: false,\n    opacity: data.opacity\n  };\n  this.textLabels = data.hovertext || data.text;\n  if (this.mode.indexOf('text') !== -1) {\n    if (this.textMarkers) this.textMarkers.update(textOptions);else {\n      this.textMarkers = createScatterPlot(textOptions);\n      this.textMarkers._trace = this;\n      this.textMarkers.highlightScale = 1;\n      this.scene.glplot.add(this.textMarkers);\n    }\n  } else if (this.textMarkers) {\n    this.scene.glplot.remove(this.textMarkers);\n    this.textMarkers.dispose();\n    this.textMarkers = null;\n  }\n  errorOptions = {\n    gl: gl,\n    position: options.position,\n    color: options.errorColor,\n    error: options.errorBounds,\n    lineWidth: options.errorLineWidth,\n    capSize: options.errorCapSize,\n    opacity: data.opacity\n  };\n  if (this.errorBars) {\n    if (options.errorBounds) {\n      this.errorBars.update(errorOptions);\n    } else {\n      this.scene.glplot.remove(this.errorBars);\n      this.errorBars.dispose();\n      this.errorBars = null;\n    }\n  } else if (options.errorBounds) {\n    this.errorBars = createErrorBars(errorOptions);\n    this.errorBars._trace = this;\n    this.scene.glplot.add(this.errorBars);\n  }\n  if (options.delaunayAxis >= 0) {\n    var delaunayOptions = constructDelaunay(options.position, options.delaunayColor, options.delaunayAxis);\n    delaunayOptions.opacity = data.opacity;\n    if (this.delaunayMesh) {\n      this.delaunayMesh.update(delaunayOptions);\n    } else {\n      delaunayOptions.gl = gl;\n      this.delaunayMesh = createMesh(delaunayOptions);\n      this.delaunayMesh._trace = this;\n      this.scene.glplot.add(this.delaunayMesh);\n    }\n  } else if (this.delaunayMesh) {\n    this.scene.glplot.remove(this.delaunayMesh);\n    this.delaunayMesh.dispose();\n    this.delaunayMesh = null;\n  }\n};\nproto.dispose = function () {\n  if (this.linePlot) {\n    this.scene.glplot.remove(this.linePlot);\n    this.linePlot.dispose();\n  }\n  if (this.scatterPlot) {\n    this.scene.glplot.remove(this.scatterPlot);\n    this.scatterPlot.dispose();\n  }\n  if (this.errorBars) {\n    this.scene.glplot.remove(this.errorBars);\n    this.errorBars.dispose();\n  }\n  if (this.textMarkers) {\n    this.scene.glplot.remove(this.textMarkers);\n    this.textMarkers.dispose();\n  }\n  if (this.delaunayMesh) {\n    this.scene.glplot.remove(this.delaunayMesh);\n    this.delaunayMesh.dispose();\n  }\n};\nfunction createLineWithMarkers(scene, data) {\n  var plot = new LineWithMarkers(scene, data.uid);\n  plot.update(data);\n  return plot;\n}\nmodule.exports = createLineWithMarkers;","map":{"version":3,"names":["createLinePlot","require","createScatterPlot","createErrorBars","createMesh","triangulate","Lib","str2RgbaArray","formatColor","makeBubbleSizeFn","DASH_PATTERNS","MARKER_SYMBOLS","calculateError","LineWithMarkers","scene","uid","linePlot","scatterPlot","errorBars","textMarkers","delaunayMesh","color","mode","dataPoints","axesBounds","Infinity","textLabels","data","proto","prototype","handlePick","selection","object","ind","index","highlight","textLabel","Array","isArray","traceCoordinate","x","y","z","constructDelaunay","points","axis","u","v","filteredPoints","filteredIds","i","length","p","isNaN","isFinite","push","cells","c","j","positions","meshColor","calculateErrorParams","errors","capSize","lineWidth","e","copy_zstyle","visible","width","thickness","parseAlignmentX","a","undefined","indexOf","parseAlignmentY","calculateTextOffset","tp","defaultAlignmentX","defaultAlignmentY","textOffset","calculateSize","sizeIn","sizeFn","calculateSymbol","symbolIn","formatParam","paramIn","len","calculate","dflt","extraFn","paramOut","isArrayOrTypedArray","identity","convertPlotlyOptions","sceneLayout","fullSceneLayout","scaleFactor","dataScale","xaxis","yaxis","zaxis","marker","line","xcalendar","ycalendar","zcalendar","xc","yc","zc","params","text","d2l","position","lineColor","lineDashes","dash","scatterColor","scatterSize","size","scatterMarker","symbol","scatterLineWidth","scatterLineColor","scatterAngle","textposition","textColor","textfont","textSize","textFont","family","textAngle","dims","project","projectScale","projectOpacity","projection","show","opacity","scale","errorBounds","errorParams","error_x","error_y","error_z","errorColor","errorLineWidth","errorCapSize","delaunayAxis","surfaceaxis","delaunayColor","surfacecolor","arrayToColor","slice","map","Math","round","update","gl","glplot","lineOptions","scatterOptions","errorOptions","textOptions","dashPattern","solid","options","dashes","dashScale","connectGaps","connectgaps","_trace","add","remove","dispose","scatterOpacity","glyph","orthographic","highlightScale","angle","alignment","font","hovertext","error","delaunayOptions","createLineWithMarkers","plot","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatter3d/convert.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar createLinePlot = require('gl-line3d');\nvar createScatterPlot = require('gl-scatter3d');\nvar createErrorBars = require('gl-error3d');\nvar createMesh = require('gl-mesh3d');\nvar triangulate = require('delaunay-triangulate');\n\nvar Lib = require('../../lib');\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar formatColor = require('../../lib/gl_format_color').formatColor;\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar DASH_PATTERNS = require('../../constants/gl3d_dashes');\nvar MARKER_SYMBOLS = require('../../constants/gl3d_markers');\n\nvar calculateError = require('./calc_errors');\n\nfunction LineWithMarkers(scene, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.linePlot = null;\n    this.scatterPlot = null;\n    this.errorBars = null;\n    this.textMarkers = null;\n    this.delaunayMesh = null;\n    this.color = null;\n    this.mode = '';\n    this.dataPoints = [];\n    this.axesBounds = [\n        [-Infinity, -Infinity, -Infinity],\n        [Infinity, Infinity, Infinity]\n    ];\n    this.textLabels = null;\n    this.data = null;\n}\n\nvar proto = LineWithMarkers.prototype;\n\nproto.handlePick = function(selection) {\n    if(selection.object &&\n        (selection.object === this.linePlot ||\n         selection.object === this.delaunayMesh ||\n         selection.object === this.textMarkers ||\n         selection.object === this.scatterPlot)\n    ) {\n        var ind = selection.index = selection.data.index;\n\n        if(selection.object.highlight) {\n            selection.object.highlight(null);\n        }\n        if(this.scatterPlot) {\n            selection.object = this.scatterPlot;\n            this.scatterPlot.highlight(selection.data);\n        }\n\n        selection.textLabel = '';\n        if(this.textLabels) {\n            if(Array.isArray(this.textLabels)) {\n                if(this.textLabels[ind] || this.textLabels[ind] === 0) {\n                    selection.textLabel = this.textLabels[ind];\n                }\n            } else {\n                selection.textLabel = this.textLabels;\n            }\n        }\n\n        selection.traceCoordinate = [\n            this.data.x[ind],\n            this.data.y[ind],\n            this.data.z[ind]\n        ];\n\n        return true;\n    }\n};\n\nfunction constructDelaunay(points, color, axis) {\n    var u = (axis + 1) % 3;\n    var v = (axis + 2) % 3;\n    var filteredPoints = [];\n    var filteredIds = [];\n    var i;\n\n    for(i = 0; i < points.length; ++i) {\n        var p = points[i];\n        if(isNaN(p[u]) || !isFinite(p[u]) ||\n           isNaN(p[v]) || !isFinite(p[v])) {\n            continue;\n        }\n        filteredPoints.push([p[u], p[v]]);\n        filteredIds.push(i);\n    }\n    var cells = triangulate(filteredPoints);\n    for(i = 0; i < cells.length; ++i) {\n        var c = cells[i];\n        for(var j = 0; j < c.length; ++j) {\n            c[j] = filteredIds[c[j]];\n        }\n    }\n    return {\n        positions: points,\n        cells: cells,\n        meshColor: color\n    };\n}\n\nfunction calculateErrorParams(errors) {\n    var capSize = [0.0, 0.0, 0.0];\n    var color = [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n    var lineWidth = [1.0, 1.0, 1.0];\n\n    for(var i = 0; i < 3; i++) {\n        var e = errors[i];\n\n        if(e && e.copy_zstyle !== false && errors[2].visible !== false) e = errors[2];\n        if(!e || !e.visible) continue;\n\n        capSize[i] = e.width / 2;  // ballpark rescaling\n        color[i] = str2RgbaArray(e.color);\n        lineWidth[i] = e.thickness;\n\n    }\n\n    return {capSize: capSize, color: color, lineWidth: lineWidth};\n}\n\nfunction parseAlignmentX(a) {\n    if(a === null || a === undefined) return 0;\n\n    return (a.indexOf('left') > -1) ? -1 :\n           (a.indexOf('right') > -1) ? 1 : 0;\n}\n\nfunction parseAlignmentY(a) {\n    if(a === null || a === undefined) return 0;\n\n    return (a.indexOf('top') > -1) ? -1 :\n           (a.indexOf('bottom') > -1) ? 1 : 0;\n}\n\nfunction calculateTextOffset(tp) {\n    // Read out text properties\n\n    var defaultAlignmentX = 0;\n    var defaultAlignmentY = 0;\n\n    var textOffset = [\n        defaultAlignmentX,\n        defaultAlignmentY\n    ];\n\n    if(Array.isArray(tp)) {\n        for(var i = 0; i < tp.length; i++) {\n            textOffset[i] = [\n                defaultAlignmentX,\n                defaultAlignmentY\n            ];\n            if(tp[i]) {\n                textOffset[i][0] = parseAlignmentX(tp[i]);\n                textOffset[i][1] = parseAlignmentY(tp[i]);\n            }\n        }\n    } else {\n        textOffset[0] = parseAlignmentX(tp);\n        textOffset[1] = parseAlignmentY(tp);\n    }\n\n    return textOffset;\n}\n\n\nfunction calculateSize(sizeIn, sizeFn) {\n    // rough parity with Plotly 2D markers\n    return sizeFn(sizeIn * 4);\n}\n\nfunction calculateSymbol(symbolIn) {\n    return MARKER_SYMBOLS[symbolIn];\n}\n\nfunction formatParam(paramIn, len, calculate, dflt, extraFn) {\n    var paramOut = null;\n\n    if(Lib.isArrayOrTypedArray(paramIn)) {\n        paramOut = [];\n\n        for(var i = 0; i < len; i++) {\n            if(paramIn[i] === undefined) paramOut[i] = dflt;\n            else paramOut[i] = calculate(paramIn[i], extraFn);\n        }\n\n    }\n    else paramOut = calculate(paramIn, Lib.identity);\n\n    return paramOut;\n}\n\n\nfunction convertPlotlyOptions(scene, data) {\n    var points = [];\n    var sceneLayout = scene.fullSceneLayout;\n    var scaleFactor = scene.dataScale;\n    var xaxis = sceneLayout.xaxis;\n    var yaxis = sceneLayout.yaxis;\n    var zaxis = sceneLayout.zaxis;\n    var marker = data.marker;\n    var line = data.line;\n    var x = data.x || [];\n    var y = data.y || [];\n    var z = data.z || [];\n    var len = x.length;\n    var xcalendar = data.xcalendar;\n    var ycalendar = data.ycalendar;\n    var zcalendar = data.zcalendar;\n    var xc, yc, zc;\n    var params, i;\n    var text;\n\n    // Convert points\n    for(i = 0; i < len; i++) {\n        // sanitize numbers and apply transforms based on axes.type\n        xc = xaxis.d2l(x[i], 0, xcalendar) * scaleFactor[0];\n        yc = yaxis.d2l(y[i], 0, ycalendar) * scaleFactor[1];\n        zc = zaxis.d2l(z[i], 0, zcalendar) * scaleFactor[2];\n\n        points[i] = [xc, yc, zc];\n    }\n\n    // convert text\n    if(Array.isArray(data.text)) text = data.text;\n    else if(data.text !== undefined) {\n        text = new Array(len);\n        for(i = 0; i < len; i++) text[i] = data.text;\n    }\n\n    // Build object parameters\n    params = {\n        position: points,\n        mode: data.mode,\n        text: text\n    };\n\n    if('line' in data) {\n        params.lineColor = formatColor(line, 1, len);\n        params.lineWidth = line.width;\n        params.lineDashes = line.dash;\n    }\n\n    if('marker' in data) {\n        var sizeFn = makeBubbleSizeFn(data);\n\n        params.scatterColor = formatColor(marker, 1, len);\n        params.scatterSize = formatParam(marker.size, len, calculateSize, 20, sizeFn);\n        params.scatterMarker = formatParam(marker.symbol, len, calculateSymbol, '●');\n        params.scatterLineWidth = marker.line.width;  // arrayOk === false\n        params.scatterLineColor = formatColor(marker.line, 1, len);\n        params.scatterAngle = 0;\n    }\n\n    if('textposition' in data) {\n        params.textOffset = calculateTextOffset(data.textposition);\n        params.textColor = formatColor(data.textfont, 1, len);\n        params.textSize = formatParam(data.textfont.size, len, Lib.identity, 12);\n        params.textFont = data.textfont.family;  // arrayOk === false\n        params.textAngle = 0;\n    }\n\n    var dims = ['x', 'y', 'z'];\n    params.project = [false, false, false];\n    params.projectScale = [1, 1, 1];\n    params.projectOpacity = [1, 1, 1];\n    for(i = 0; i < 3; ++i) {\n        var projection = data.projection[dims[i]];\n        if((params.project[i] = projection.show)) {\n            params.projectOpacity[i] = projection.opacity;\n            params.projectScale[i] = projection.scale;\n        }\n    }\n\n    params.errorBounds = calculateError(data, scaleFactor, sceneLayout);\n\n    var errorParams = calculateErrorParams([data.error_x, data.error_y, data.error_z]);\n    params.errorColor = errorParams.color;\n    params.errorLineWidth = errorParams.lineWidth;\n    params.errorCapSize = errorParams.capSize;\n\n    params.delaunayAxis = data.surfaceaxis;\n    params.delaunayColor = str2RgbaArray(data.surfacecolor);\n\n    return params;\n}\n\nfunction arrayToColor(color) {\n    if(Array.isArray(color)) {\n        var c = color[0];\n\n        if(Array.isArray(c)) color = c;\n\n        return 'rgb(' + color.slice(0, 3).map(function(x) {\n            return Math.round(x * 255);\n        }) + ')';\n    }\n\n    return null;\n}\n\nproto.update = function(data) {\n    var gl = this.scene.glplot.gl;\n    var lineOptions;\n    var scatterOptions;\n    var errorOptions;\n    var textOptions;\n    var dashPattern = DASH_PATTERNS.solid;\n\n    // Save data\n    this.data = data;\n\n    // Run data conversion\n    var options = convertPlotlyOptions(this.scene, data);\n\n    if('mode' in options) {\n        this.mode = options.mode;\n    }\n    if('lineDashes' in options) {\n        if(options.lineDashes in DASH_PATTERNS) {\n            dashPattern = DASH_PATTERNS[options.lineDashes];\n        }\n    }\n\n    this.color = arrayToColor(options.scatterColor) ||\n                 arrayToColor(options.lineColor);\n\n    // Save data points\n    this.dataPoints = options.position;\n\n    lineOptions = {\n        gl: gl,\n        position: options.position,\n        color: options.lineColor,\n        lineWidth: options.lineWidth || 1,\n        dashes: dashPattern[0],\n        dashScale: dashPattern[1],\n        opacity: data.opacity,\n        connectGaps: data.connectgaps\n    };\n\n    if(this.mode.indexOf('lines') !== -1) {\n        if(this.linePlot) this.linePlot.update(lineOptions);\n        else {\n            this.linePlot = createLinePlot(lineOptions);\n            this.linePlot._trace = this;\n            this.scene.glplot.add(this.linePlot);\n        }\n    } else if(this.linePlot) {\n        this.scene.glplot.remove(this.linePlot);\n        this.linePlot.dispose();\n        this.linePlot = null;\n    }\n\n    // N.B. marker.opacity must be a scalar for performance\n    var scatterOpacity = data.opacity;\n    if(data.marker && data.marker.opacity) scatterOpacity *= data.marker.opacity;\n\n    scatterOptions = {\n        gl: gl,\n        position: options.position,\n        color: options.scatterColor,\n        size: options.scatterSize,\n        glyph: options.scatterMarker,\n        opacity: scatterOpacity,\n        orthographic: true,\n        lineWidth: options.scatterLineWidth,\n        lineColor: options.scatterLineColor,\n        project: options.project,\n        projectScale: options.projectScale,\n        projectOpacity: options.projectOpacity\n    };\n\n    if(this.mode.indexOf('markers') !== -1) {\n        if(this.scatterPlot) this.scatterPlot.update(scatterOptions);\n        else {\n            this.scatterPlot = createScatterPlot(scatterOptions);\n            this.scatterPlot._trace = this;\n            this.scatterPlot.highlightScale = 1;\n            this.scene.glplot.add(this.scatterPlot);\n        }\n    } else if(this.scatterPlot) {\n        this.scene.glplot.remove(this.scatterPlot);\n        this.scatterPlot.dispose();\n        this.scatterPlot = null;\n    }\n\n    textOptions = {\n        gl: gl,\n        position: options.position,\n        glyph: options.text,\n        color: options.textColor,\n        size: options.textSize,\n        angle: options.textAngle,\n        alignment: options.textOffset,\n        font: options.textFont,\n        orthographic: true,\n        lineWidth: 0,\n        project: false,\n        opacity: data.opacity\n    };\n\n    this.textLabels = data.hovertext || data.text;\n\n    if(this.mode.indexOf('text') !== -1) {\n        if(this.textMarkers) this.textMarkers.update(textOptions);\n        else {\n            this.textMarkers = createScatterPlot(textOptions);\n            this.textMarkers._trace = this;\n            this.textMarkers.highlightScale = 1;\n            this.scene.glplot.add(this.textMarkers);\n        }\n    } else if(this.textMarkers) {\n        this.scene.glplot.remove(this.textMarkers);\n        this.textMarkers.dispose();\n        this.textMarkers = null;\n    }\n\n    errorOptions = {\n        gl: gl,\n        position: options.position,\n        color: options.errorColor,\n        error: options.errorBounds,\n        lineWidth: options.errorLineWidth,\n        capSize: options.errorCapSize,\n        opacity: data.opacity\n    };\n    if(this.errorBars) {\n        if(options.errorBounds) {\n            this.errorBars.update(errorOptions);\n        } else {\n            this.scene.glplot.remove(this.errorBars);\n            this.errorBars.dispose();\n            this.errorBars = null;\n        }\n    } else if(options.errorBounds) {\n        this.errorBars = createErrorBars(errorOptions);\n        this.errorBars._trace = this;\n        this.scene.glplot.add(this.errorBars);\n    }\n\n    if(options.delaunayAxis >= 0) {\n        var delaunayOptions = constructDelaunay(\n            options.position,\n            options.delaunayColor,\n            options.delaunayAxis\n        );\n        delaunayOptions.opacity = data.opacity;\n\n        if(this.delaunayMesh) {\n            this.delaunayMesh.update(delaunayOptions);\n        } else {\n            delaunayOptions.gl = gl;\n            this.delaunayMesh = createMesh(delaunayOptions);\n            this.delaunayMesh._trace = this;\n            this.scene.glplot.add(this.delaunayMesh);\n        }\n    } else if(this.delaunayMesh) {\n        this.scene.glplot.remove(this.delaunayMesh);\n        this.delaunayMesh.dispose();\n        this.delaunayMesh = null;\n    }\n};\n\nproto.dispose = function() {\n    if(this.linePlot) {\n        this.scene.glplot.remove(this.linePlot);\n        this.linePlot.dispose();\n    }\n    if(this.scatterPlot) {\n        this.scene.glplot.remove(this.scatterPlot);\n        this.scatterPlot.dispose();\n    }\n    if(this.errorBars) {\n        this.scene.glplot.remove(this.errorBars);\n        this.errorBars.dispose();\n    }\n    if(this.textMarkers) {\n        this.scene.glplot.remove(this.textMarkers);\n        this.textMarkers.dispose();\n    }\n    if(this.delaunayMesh) {\n        this.scene.glplot.remove(this.delaunayMesh);\n        this.delaunayMesh.dispose();\n    }\n};\n\nfunction createLineWithMarkers(scene, data) {\n    var plot = new LineWithMarkers(scene, data.uid);\n    plot.update(data);\n    return plot;\n}\n\nmodule.exports = createLineWithMarkers;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Color = require('../../components/color');\nvar Template = require('../../plot_api/plot_template');\nvar Lib = require('../../lib');\nvar handleSubplotDefaults = require('../subplot_defaults');\nvar handleTickLabelDefaults = require('../cartesian/tick_label_defaults');\nvar handleTickMarkDefaults = require('../cartesian/tick_mark_defaults');\nvar handleTickValueDefaults = require('../cartesian/tick_value_defaults');\nvar handleLineGridDefaults = require('../cartesian/line_grid_defaults');\nvar layoutAttributes = require('./layout_attributes');\nvar axesNames = ['aaxis', 'baxis', 'caxis'];\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  handleSubplotDefaults(layoutIn, layoutOut, fullData, {\n    type: 'ternary',\n    attributes: layoutAttributes,\n    handleDefaults: handleTernaryDefaults,\n    font: layoutOut.font,\n    paper_bgcolor: layoutOut.paper_bgcolor\n  });\n};\nfunction handleTernaryDefaults(ternaryLayoutIn, ternaryLayoutOut, coerce, options) {\n  var bgColor = coerce('bgcolor');\n  var sum = coerce('sum');\n  options.bgColor = Color.combine(bgColor, options.paper_bgcolor);\n  var axName, containerIn, containerOut;\n\n  // TODO: allow most (if not all) axis attributes to be set\n  // in the outer container and used as defaults in the individual axes?\n\n  for (var j = 0; j < axesNames.length; j++) {\n    axName = axesNames[j];\n    containerIn = ternaryLayoutIn[axName] || {};\n    containerOut = Template.newContainer(ternaryLayoutOut, axName);\n    containerOut._name = axName;\n    handleAxisDefaults(containerIn, containerOut, options, ternaryLayoutOut);\n  }\n\n  // if the min values contradict each other, set them all to default (0)\n  // and delete *all* the inputs so the user doesn't get confused later by\n  // changing one and having them all change.\n  var aaxis = ternaryLayoutOut.aaxis;\n  var baxis = ternaryLayoutOut.baxis;\n  var caxis = ternaryLayoutOut.caxis;\n  if (aaxis.min + baxis.min + caxis.min >= sum) {\n    aaxis.min = 0;\n    baxis.min = 0;\n    caxis.min = 0;\n    if (ternaryLayoutIn.aaxis) delete ternaryLayoutIn.aaxis.min;\n    if (ternaryLayoutIn.baxis) delete ternaryLayoutIn.baxis.min;\n    if (ternaryLayoutIn.caxis) delete ternaryLayoutIn.caxis.min;\n  }\n}\nfunction handleAxisDefaults(containerIn, containerOut, options, ternaryLayoutOut) {\n  var axAttrs = layoutAttributes[containerOut._name];\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, axAttrs, attr, dflt);\n  }\n  coerce('uirevision', ternaryLayoutOut.uirevision);\n  containerOut.type = 'linear'; // no other types allowed for ternary\n\n  var dfltColor = coerce('color');\n  // if axis.color was provided, use it for fonts too; otherwise,\n  // inherit from global font color in case that was provided.\n  var dfltFontColor = dfltColor !== axAttrs.color.dflt ? dfltColor : options.font.color;\n  var axName = containerOut._name;\n  var letterUpper = axName.charAt(0).toUpperCase();\n  var dfltTitle = 'Component ' + letterUpper;\n  var title = coerce('title.text', dfltTitle);\n  containerOut._hovertitle = title === dfltTitle ? title : letterUpper;\n  Lib.coerceFont(coerce, 'title.font', {\n    family: options.font.family,\n    size: Math.round(options.font.size * 1.2),\n    color: dfltFontColor\n  });\n\n  // range is just set by 'min' - max is determined by the other axes mins\n  coerce('min');\n  handleTickValueDefaults(containerIn, containerOut, coerce, 'linear');\n  handleTickLabelDefaults(containerIn, containerOut, coerce, 'linear', {});\n  handleTickMarkDefaults(containerIn, containerOut, coerce, {\n    outerTicks: true\n  });\n  var showTickLabels = coerce('showticklabels');\n  if (showTickLabels) {\n    Lib.coerceFont(coerce, 'tickfont', {\n      family: options.font.family,\n      size: options.font.size,\n      color: dfltFontColor\n    });\n    coerce('tickangle');\n    coerce('tickformat');\n  }\n  handleLineGridDefaults(containerIn, containerOut, coerce, {\n    dfltColor: dfltColor,\n    bgColor: options.bgColor,\n    // default grid color is darker here (60%, vs cartesian default ~91%)\n    // because the grid is not square so the eye needs heavier cues to follow\n    blend: 60,\n    showLine: true,\n    showGrid: true,\n    noZeroLine: true,\n    attributes: axAttrs\n  });\n  coerce('hoverformat');\n  coerce('layer');\n}","map":{"version":3,"names":["Color","require","Template","Lib","handleSubplotDefaults","handleTickLabelDefaults","handleTickMarkDefaults","handleTickValueDefaults","handleLineGridDefaults","layoutAttributes","axesNames","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","fullData","type","attributes","handleDefaults","handleTernaryDefaults","font","paper_bgcolor","ternaryLayoutIn","ternaryLayoutOut","coerce","options","bgColor","sum","combine","axName","containerIn","containerOut","j","length","newContainer","_name","handleAxisDefaults","aaxis","baxis","caxis","min","axAttrs","attr","dflt","uirevision","dfltColor","dfltFontColor","color","letterUpper","charAt","toUpperCase","dfltTitle","title","_hovertitle","coerceFont","family","size","Math","round","outerTicks","showTickLabels","blend","showLine","showGrid","noZeroLine"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/ternary/layout_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Color = require('../../components/color');\nvar Template = require('../../plot_api/plot_template');\nvar Lib = require('../../lib');\n\nvar handleSubplotDefaults = require('../subplot_defaults');\nvar handleTickLabelDefaults = require('../cartesian/tick_label_defaults');\nvar handleTickMarkDefaults = require('../cartesian/tick_mark_defaults');\nvar handleTickValueDefaults = require('../cartesian/tick_value_defaults');\nvar handleLineGridDefaults = require('../cartesian/line_grid_defaults');\nvar layoutAttributes = require('./layout_attributes');\n\nvar axesNames = ['aaxis', 'baxis', 'caxis'];\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    handleSubplotDefaults(layoutIn, layoutOut, fullData, {\n        type: 'ternary',\n        attributes: layoutAttributes,\n        handleDefaults: handleTernaryDefaults,\n        font: layoutOut.font,\n        paper_bgcolor: layoutOut.paper_bgcolor\n    });\n};\n\nfunction handleTernaryDefaults(ternaryLayoutIn, ternaryLayoutOut, coerce, options) {\n    var bgColor = coerce('bgcolor');\n    var sum = coerce('sum');\n    options.bgColor = Color.combine(bgColor, options.paper_bgcolor);\n    var axName, containerIn, containerOut;\n\n    // TODO: allow most (if not all) axis attributes to be set\n    // in the outer container and used as defaults in the individual axes?\n\n    for(var j = 0; j < axesNames.length; j++) {\n        axName = axesNames[j];\n        containerIn = ternaryLayoutIn[axName] || {};\n        containerOut = Template.newContainer(ternaryLayoutOut, axName);\n        containerOut._name = axName;\n\n        handleAxisDefaults(containerIn, containerOut, options, ternaryLayoutOut);\n    }\n\n    // if the min values contradict each other, set them all to default (0)\n    // and delete *all* the inputs so the user doesn't get confused later by\n    // changing one and having them all change.\n    var aaxis = ternaryLayoutOut.aaxis;\n    var baxis = ternaryLayoutOut.baxis;\n    var caxis = ternaryLayoutOut.caxis;\n    if(aaxis.min + baxis.min + caxis.min >= sum) {\n        aaxis.min = 0;\n        baxis.min = 0;\n        caxis.min = 0;\n        if(ternaryLayoutIn.aaxis) delete ternaryLayoutIn.aaxis.min;\n        if(ternaryLayoutIn.baxis) delete ternaryLayoutIn.baxis.min;\n        if(ternaryLayoutIn.caxis) delete ternaryLayoutIn.caxis.min;\n    }\n}\n\nfunction handleAxisDefaults(containerIn, containerOut, options, ternaryLayoutOut) {\n    var axAttrs = layoutAttributes[containerOut._name];\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(containerIn, containerOut, axAttrs, attr, dflt);\n    }\n\n    coerce('uirevision', ternaryLayoutOut.uirevision);\n\n    containerOut.type = 'linear'; // no other types allowed for ternary\n\n    var dfltColor = coerce('color');\n    // if axis.color was provided, use it for fonts too; otherwise,\n    // inherit from global font color in case that was provided.\n    var dfltFontColor = (dfltColor !== axAttrs.color.dflt) ? dfltColor : options.font.color;\n\n    var axName = containerOut._name;\n    var letterUpper = axName.charAt(0).toUpperCase();\n    var dfltTitle = 'Component ' + letterUpper;\n\n    var title = coerce('title.text', dfltTitle);\n    containerOut._hovertitle = title === dfltTitle ? title : letterUpper;\n\n    Lib.coerceFont(coerce, 'title.font', {\n        family: options.font.family,\n        size: Math.round(options.font.size * 1.2),\n        color: dfltFontColor\n    });\n\n    // range is just set by 'min' - max is determined by the other axes mins\n    coerce('min');\n\n    handleTickValueDefaults(containerIn, containerOut, coerce, 'linear');\n    handleTickLabelDefaults(containerIn, containerOut, coerce, 'linear', {});\n    handleTickMarkDefaults(containerIn, containerOut, coerce,\n        { outerTicks: true });\n\n    var showTickLabels = coerce('showticklabels');\n    if(showTickLabels) {\n        Lib.coerceFont(coerce, 'tickfont', {\n            family: options.font.family,\n            size: options.font.size,\n            color: dfltFontColor\n        });\n        coerce('tickangle');\n        coerce('tickformat');\n    }\n\n    handleLineGridDefaults(containerIn, containerOut, coerce, {\n        dfltColor: dfltColor,\n        bgColor: options.bgColor,\n        // default grid color is darker here (60%, vs cartesian default ~91%)\n        // because the grid is not square so the eye needs heavier cues to follow\n        blend: 60,\n        showLine: true,\n        showGrid: true,\n        noZeroLine: true,\n        attributes: axAttrs\n    });\n\n    coerce('hoverformat');\n    coerce('layer');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nvar robustDot = require(\"robust-dot-product\");\nvar robustSum = require(\"robust-sum\");\nmodule.exports = splitPolygon;\nmodule.exports.positive = positive;\nmodule.exports.negative = negative;\nfunction planeT(p, plane) {\n  var r = robustSum(robustDot(p, plane), [plane[plane.length - 1]]);\n  return r[r.length - 1];\n}\n\n//Can't do this exactly and emit a floating point result\nfunction lerpW(a, wa, b, wb) {\n  var d = wb - wa;\n  var t = -wa / d;\n  if (t < 0.0) {\n    t = 0.0;\n  } else if (t > 1.0) {\n    t = 1.0;\n  }\n  var ti = 1.0 - t;\n  var n = a.length;\n  var r = new Array(n);\n  for (var i = 0; i < n; ++i) {\n    r[i] = t * a[i] + ti * b[i];\n  }\n  return r;\n}\nfunction splitPolygon(points, plane) {\n  var pos = [];\n  var neg = [];\n  var a = planeT(points[points.length - 1], plane);\n  for (var s = points[points.length - 1], t = points[0], i = 0; i < points.length; ++i, s = t) {\n    t = points[i];\n    var b = planeT(t, plane);\n    if (a < 0 && b > 0 || a > 0 && b < 0) {\n      var p = lerpW(s, b, t, a);\n      pos.push(p);\n      neg.push(p.slice());\n    }\n    if (b < 0) {\n      neg.push(t.slice());\n    } else if (b > 0) {\n      pos.push(t.slice());\n    } else {\n      pos.push(t.slice());\n      neg.push(t.slice());\n    }\n    a = b;\n  }\n  return {\n    positive: pos,\n    negative: neg\n  };\n}\nfunction positive(points, plane) {\n  var pos = [];\n  var a = planeT(points[points.length - 1], plane);\n  for (var s = points[points.length - 1], t = points[0], i = 0; i < points.length; ++i, s = t) {\n    t = points[i];\n    var b = planeT(t, plane);\n    if (a < 0 && b > 0 || a > 0 && b < 0) {\n      pos.push(lerpW(s, b, t, a));\n    }\n    if (b >= 0) {\n      pos.push(t.slice());\n    }\n    a = b;\n  }\n  return pos;\n}\nfunction negative(points, plane) {\n  var neg = [];\n  var a = planeT(points[points.length - 1], plane);\n  for (var s = points[points.length - 1], t = points[0], i = 0; i < points.length; ++i, s = t) {\n    t = points[i];\n    var b = planeT(t, plane);\n    if (a < 0 && b > 0 || a > 0 && b < 0) {\n      neg.push(lerpW(s, b, t, a));\n    }\n    if (b <= 0) {\n      neg.push(t.slice());\n    }\n    a = b;\n  }\n  return neg;\n}","map":{"version":3,"names":["robustDot","require","robustSum","module","exports","splitPolygon","positive","negative","planeT","p","plane","r","length","lerpW","a","wa","b","wb","d","t","ti","n","Array","i","points","pos","neg","s","push","slice"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/split-polygon/clip-poly.js"],"sourcesContent":["\"use strict\"\n\nvar robustDot = require(\"robust-dot-product\")\nvar robustSum = require(\"robust-sum\")\n\nmodule.exports = splitPolygon\nmodule.exports.positive = positive\nmodule.exports.negative = negative\n\nfunction planeT(p, plane) {\n  var r = robustSum(robustDot(p, plane), [plane[plane.length-1]])\n  return r[r.length-1]\n}\n\n\n//Can't do this exactly and emit a floating point result\nfunction lerpW(a, wa, b, wb) {\n  var d = wb - wa\n  var t = -wa / d\n  if(t < 0.0) {\n    t = 0.0\n  } else if(t > 1.0) {\n    t = 1.0\n  }\n  var ti = 1.0 - t\n  var n = a.length\n  var r = new Array(n)\n  for(var i=0; i<n; ++i) {\n    r[i] = t * a[i] + ti * b[i]\n  }\n  return r\n}\n\nfunction splitPolygon(points, plane) {\n  var pos = []\n  var neg = []\n  var a = planeT(points[points.length-1], plane)\n  for(var s=points[points.length-1], t=points[0], i=0; i<points.length; ++i, s=t) {\n    t = points[i]\n    var b = planeT(t, plane)\n    if((a < 0 && b > 0) || (a > 0 && b < 0)) {\n      var p = lerpW(s, b, t, a)\n      pos.push(p)\n      neg.push(p.slice())\n    }\n    if(b < 0) {\n      neg.push(t.slice())\n    } else if(b > 0) {\n      pos.push(t.slice())\n    } else {\n      pos.push(t.slice())\n      neg.push(t.slice())\n    }\n    a = b\n  }\n  return { positive: pos, negative: neg }\n}\n\nfunction positive(points, plane) {\n  var pos = []\n  var a = planeT(points[points.length-1], plane)\n  for(var s=points[points.length-1], t=points[0], i=0; i<points.length; ++i, s=t) {\n    t = points[i]\n    var b = planeT(t, plane)\n    if((a < 0 && b > 0) || (a > 0 && b < 0)) {\n      pos.push(lerpW(s, b, t, a))\n    }\n    if(b >= 0) {\n      pos.push(t.slice())\n    }\n    a = b\n  }\n  return pos\n}\n\nfunction negative(points, plane) {\n  var neg = []\n  var a = planeT(points[points.length-1], plane)\n  for(var s=points[points.length-1], t=points[0], i=0; i<points.length; ++i, s=t) {\n    t = points[i]\n    var b = planeT(t, plane)\n    if((a < 0 && b > 0) || (a > 0 && b < 0)) {\n      neg.push(lerpW(s, b, t, a))\n    }\n    if(b <= 0) {\n      neg.push(t.slice())\n    }\n    a = b\n  }\n  return neg\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
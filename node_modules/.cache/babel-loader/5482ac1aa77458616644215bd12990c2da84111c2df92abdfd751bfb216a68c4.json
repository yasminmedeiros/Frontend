{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar colorAttrs = require('../../components/colorscale/attributes');\nvar scatterGlAttrs = require('../scattergl/attributes');\nvar cartesianIdRegex = require('../../plots/cartesian/constants').idRegex;\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\nvar markerLineAttrs = extendFlat(colorAttrs('marker.line', {\n  editTypeOverride: 'calc'\n}), {\n  width: extendFlat({}, scatterMarkerLineAttrs.width, {\n    editType: 'calc'\n  }),\n  editType: 'calc'\n});\nvar markerAttrs = extendFlat(colorAttrs('marker'), {\n  symbol: scatterMarkerAttrs.symbol,\n  size: extendFlat({}, scatterMarkerAttrs.size, {\n    editType: 'markerSize'\n  }),\n  sizeref: scatterMarkerAttrs.sizeref,\n  sizemin: scatterMarkerAttrs.sizemin,\n  sizemode: scatterMarkerAttrs.sizemode,\n  opacity: scatterMarkerAttrs.opacity,\n  colorbar: scatterMarkerAttrs.colorbar,\n  line: markerLineAttrs,\n  editType: 'calc'\n});\nmarkerAttrs.color.editType = markerAttrs.cmin.editType = markerAttrs.cmax.editType = 'style';\nfunction makeAxesValObject(axLetter) {\n  return {\n    valType: 'info_array',\n    freeLength: true,\n    role: 'info',\n    editType: 'calc',\n    items: {\n      valType: 'subplotid',\n      regex: cartesianIdRegex[axLetter],\n      editType: 'plot'\n    },\n    description: ['Sets the list of ' + axLetter + ' axes', 'corresponding to dimensions of this splom trace.', 'By default, a splom will match the first N ' + axLetter + 'axes', 'where N is the number of input dimensions.', 'Note that, in case where `diagonal.visible` is false and `showupperhalf`', 'or `showlowerhalf` is false, this splom trace will generate', 'one less x-axis and one less y-axis.'].join(' ')\n  };\n}\nmodule.exports = {\n  dimensions: templatedArray('dimension', {\n    visible: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      editType: 'calc',\n      description: ['Determines whether or not this dimension is shown on the graph.', 'Note that even visible false dimension contribute to the', 'default grid generate by this splom trace.'].join(' ')\n    },\n    label: {\n      valType: 'string',\n      role: 'info',\n      editType: 'calc',\n      description: 'Sets the label corresponding to this splom dimension.'\n    },\n    values: {\n      valType: 'data_array',\n      role: 'info',\n      editType: 'calc+clearAxisTypes',\n      description: 'Sets the dimension values to be plotted.'\n    },\n    axis: {\n      type: {\n        valType: 'enumerated',\n        values: ['linear', 'log', 'date', 'category'],\n        role: 'info',\n        editType: 'calc+clearAxisTypes',\n        description: ['Sets the axis type for this dimension\\'s generated', 'x and y axes.', 'Note that the axis `type` values set in layout take', 'precedence over this attribute.'].join(' ')\n      },\n      editType: 'calc+clearAxisTypes'\n    },\n    // TODO should add an attribute to pin down x only vars and y only vars\n    // like https://seaborn.pydata.org/generated/seaborn.pairplot.html\n    // x_vars and y_vars\n\n    // maybe more axis defaulting option e.g. `showgrid: false`\n\n    editType: 'calc+clearAxisTypes'\n  }),\n  // mode: {}, (only 'markers' for now)\n\n  text: extendFlat({}, scatterGlAttrs.text, {\n    description: ['Sets text elements associated with each (x,y) pair to appear on hover.', 'If a single string, the same string appears over', 'all the data points.', 'If an array of string, the items are mapped in order to the', 'this trace\\'s (x,y) coordinates.'].join(' ')\n  }),\n  marker: markerAttrs,\n  xaxes: makeAxesValObject('x'),\n  yaxes: makeAxesValObject('y'),\n  diagonal: {\n    visible: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      editType: 'calc',\n      description: ['Determines whether or not subplots on the diagonal are displayed.'].join(' ')\n    },\n    // type: 'scattergl' | 'histogram' | 'box' | 'violin'\n    // ...\n    // more options\n\n    editType: 'calc'\n  },\n  showupperhalf: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not subplots on the upper half', 'from the diagonal are displayed.'].join(' ')\n  },\n  showlowerhalf: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not subplots on the lower half', 'from the diagonal are displayed.'].join(' ')\n  },\n  selected: {\n    marker: scatterGlAttrs.selected.marker,\n    editType: 'calc'\n  },\n  unselected: {\n    marker: scatterGlAttrs.unselected.marker,\n    editType: 'calc'\n  },\n  opacity: scatterGlAttrs.opacity\n};","map":{"version":3,"names":["scatterAttrs","require","colorAttrs","scatterGlAttrs","cartesianIdRegex","idRegex","templatedArray","extendFlat","scatterMarkerAttrs","marker","scatterMarkerLineAttrs","line","markerLineAttrs","editTypeOverride","width","editType","markerAttrs","symbol","size","sizeref","sizemin","sizemode","opacity","colorbar","color","cmin","cmax","makeAxesValObject","axLetter","valType","freeLength","role","items","regex","description","join","module","exports","dimensions","visible","dflt","label","values","axis","type","text","xaxes","yaxes","diagonal","showupperhalf","showlowerhalf","selected","unselected"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/splom/attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar scatterAttrs = require('../scatter/attributes');\nvar colorAttrs = require('../../components/colorscale/attributes');\nvar scatterGlAttrs = require('../scattergl/attributes');\nvar cartesianIdRegex = require('../../plots/cartesian/constants').idRegex;\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar scatterMarkerAttrs = scatterAttrs.marker;\nvar scatterMarkerLineAttrs = scatterMarkerAttrs.line;\n\nvar markerLineAttrs = extendFlat(colorAttrs('marker.line', {editTypeOverride: 'calc'}), {\n    width: extendFlat({}, scatterMarkerLineAttrs.width, {editType: 'calc'}),\n    editType: 'calc'\n});\n\nvar markerAttrs = extendFlat(colorAttrs('marker'), {\n    symbol: scatterMarkerAttrs.symbol,\n    size: extendFlat({}, scatterMarkerAttrs.size, {editType: 'markerSize'}),\n    sizeref: scatterMarkerAttrs.sizeref,\n    sizemin: scatterMarkerAttrs.sizemin,\n    sizemode: scatterMarkerAttrs.sizemode,\n    opacity: scatterMarkerAttrs.opacity,\n    colorbar: scatterMarkerAttrs.colorbar,\n    line: markerLineAttrs,\n    editType: 'calc'\n});\n\nmarkerAttrs.color.editType = markerAttrs.cmin.editType = markerAttrs.cmax.editType = 'style';\n\nfunction makeAxesValObject(axLetter) {\n    return {\n        valType: 'info_array',\n        freeLength: true,\n        role: 'info',\n        editType: 'calc',\n        items: {\n            valType: 'subplotid',\n            regex: cartesianIdRegex[axLetter],\n            editType: 'plot'\n        },\n        description: [\n            'Sets the list of ' + axLetter + ' axes',\n            'corresponding to dimensions of this splom trace.',\n            'By default, a splom will match the first N ' + axLetter + 'axes',\n            'where N is the number of input dimensions.',\n            'Note that, in case where `diagonal.visible` is false and `showupperhalf`',\n            'or `showlowerhalf` is false, this splom trace will generate',\n            'one less x-axis and one less y-axis.',\n        ].join(' ')\n    };\n}\n\nmodule.exports = {\n    dimensions: templatedArray('dimension', {\n        visible: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            editType: 'calc',\n            description: [\n                'Determines whether or not this dimension is shown on the graph.',\n                'Note that even visible false dimension contribute to the',\n                'default grid generate by this splom trace.'\n            ].join(' ')\n        },\n        label: {\n            valType: 'string',\n            role: 'info',\n            editType: 'calc',\n            description: 'Sets the label corresponding to this splom dimension.'\n        },\n        values: {\n            valType: 'data_array',\n            role: 'info',\n            editType: 'calc+clearAxisTypes',\n            description: 'Sets the dimension values to be plotted.'\n        },\n\n        axis: {\n            type: {\n                valType: 'enumerated',\n                values: ['linear', 'log', 'date', 'category'],\n                role: 'info',\n                editType: 'calc+clearAxisTypes',\n                description: [\n                    'Sets the axis type for this dimension\\'s generated',\n                    'x and y axes.',\n                    'Note that the axis `type` values set in layout take',\n                    'precedence over this attribute.'\n                ].join(' ')\n            },\n\n            editType: 'calc+clearAxisTypes'\n        },\n\n        // TODO should add an attribute to pin down x only vars and y only vars\n        // like https://seaborn.pydata.org/generated/seaborn.pairplot.html\n        // x_vars and y_vars\n\n        // maybe more axis defaulting option e.g. `showgrid: false`\n\n        editType: 'calc+clearAxisTypes'\n    }),\n\n    // mode: {}, (only 'markers' for now)\n\n    text: extendFlat({}, scatterGlAttrs.text, {\n        description: [\n            'Sets text elements associated with each (x,y) pair to appear on hover.',\n            'If a single string, the same string appears over',\n            'all the data points.',\n            'If an array of string, the items are mapped in order to the',\n            'this trace\\'s (x,y) coordinates.'\n        ].join(' ')\n    }),\n\n    marker: markerAttrs,\n\n    xaxes: makeAxesValObject('x'),\n    yaxes: makeAxesValObject('y'),\n\n    diagonal: {\n        visible: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            editType: 'calc',\n            description: [\n                'Determines whether or not subplots on the diagonal are displayed.'\n            ].join(' ')\n        },\n\n        // type: 'scattergl' | 'histogram' | 'box' | 'violin'\n        // ...\n        // more options\n\n        editType: 'calc'\n    },\n\n    showupperhalf: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not subplots on the upper half',\n            'from the diagonal are displayed.'\n        ].join(' ')\n    },\n    showlowerhalf: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not subplots on the lower half',\n            'from the diagonal are displayed.'\n        ].join(' ')\n    },\n\n    selected: {\n        marker: scatterGlAttrs.selected.marker,\n        editType: 'calc'\n    },\n    unselected: {\n        marker: scatterGlAttrs.unselected.marker,\n        editType: 'calc'\n    },\n\n    opacity: scatterGlAttrs.opacity\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
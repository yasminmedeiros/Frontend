{"ast":null,"code":"import _objectSpread from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _defineProperty from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { withStyles } from '@material-ui/core/styles';\n// import { green } from '@material-ui/core/colors';\nimport apiSaber from'../../services/apisaber';import Datatable from'../../components/Datatable';import Header from\"../../components/Header\";// import Input from '../../components/Input';\nimport Footer from'../../components/Footer';import{ChartPerYear}from'../../components/ChartPerYear/ChartPerYear';import{LineChartBySchool}from'../../components/LineChartBySchool/LineChartBySchool';import{ChartBySchool}from'../../components/ChartBySchool/ChartBySchool';import PlotlyMapBox from'../../components/PlotlyMapBox';import apisaber from'../../services/apisaber';import'./styles.css';import Select,{createFilter}from'react-select';import CustomOption from\"../../components/Options/CustomOption\";import jsPDF from'jspdf';import'jspdf-autotable';// const GreenCheckbox = withStyles({\n//   root: {\n//     color: green[400],\n//     '&$checked': {\n//       color: green[600],\n//     },\n//   },\n//   checked: {},\n// })((props) => <Checkbox color=\"default\" {...props} />);\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){// const [escolas, setEscolas] = useState([]);\n// const [query, setQuery] = useState(\"\");\n// const [searchColumns, setSearchColumns] = useState([\"Escola\"]);\nvar dataChart={loading:true,year:2021,x:[],y:[]};var dataChartSchool={loading:true,data_id:0,useSelect:true,x:[],y:[]};var dataLineChart={loading:true,data_id:0,//4556\nuseSelect:true,x:[],y:[]};var _useState=useState(dataChart),_useState2=_slicedToArray(_useState,2),schoolsPerSize=_useState2[0],setSchoolsPerSize=_useState2[1];var _useState3=useState(dataChart),_useState4=_slicedToArray(_useState3,2),enrollmentsPerSize=_useState4[0],setEnrollmentsPerSize=_useState4[1];var _useState5=useState(dataChart),_useState6=_slicedToArray(_useState5,2),averagesPersize=_useState6[0],setAveragePerSize=_useState6[1];var _useState7=useState(dataChart),_useState8=_slicedToArray(_useState7,2),schoolsPerGre=_useState8[0],setSchoolsPerGre=_useState8[1];var _useState9=useState(dataChart),_useState10=_slicedToArray(_useState9,2),enrollmentsPerGre=_useState10[0],setEnrollmentsPerGre=_useState10[1];var _useState11=useState(dataChart),_useState12=_slicedToArray(_useState11,2),averagesPerGre=_useState12[0],setAveragesPerGre=_useState12[1];var _useState13=useState(dataChart),_useState14=_slicedToArray(_useState13,2),highestEnrollments=_useState14[0],setHighestEnrollments=_useState14[1];var _useState15=useState(dataChart),_useState16=_slicedToArray(_useState15,2),enrollmentsJP=_useState16[0],setEnrollmentsJP=_useState16[1];var _useState17=useState(dataChart),_useState18=_slicedToArray(_useState17,2),enrollmentsCG=_useState18[0],setEnrollmentsCG=_useState18[1];var _useState19=useState(dataChartSchool),_useState20=_slicedToArray(_useState19,2),averageIntSchoolEvasion=_useState20[0],setAverageIntSchoolEvasion=_useState20[1];var _useState21=useState(dataLineChart),_useState22=_slicedToArray(_useState21,2),enrollmentsInYears=_useState22[0],setEnrollmentsInYears=_useState22[1];var _useState23=useState(dataLineChart),_useState24=_slicedToArray(_useState23,2),totalEnrollmentsInYears=_useState24[0],setTotalEnrollmentsInYears=_useState24[1];var _useState25=useState(dataLineChart),_useState26=_slicedToArray(_useState25,2),schoolsInYearsPerGre=_useState26[0],setSchoolsInYearsPerGre=_useState26[1];var _useState27=useState(dataLineChart),_useState28=_slicedToArray(_useState27,2),schoolsInYearsPerSize=_useState28[0],setSchoolsInYearsPerSize=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),enrollmentsLocations=_useState30[0],setEnrollmentsLocations=_useState30[1];var _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),schoolsLocations=_useState32[0],setSchoolsLocations=_useState32[1];var _useState33=useState([]),_useState34=_slicedToArray(_useState33,2),years=_useState34[0],setYears=_useState34[1];var _useState35=useState({label:'Todos',value:3}),_useState36=_slicedToArray(_useState35,2),selectedAdministrationType=_useState36[0],setSelectedAdministrationType=_useState36[1];var _useState37=useState([]),_useState38=_slicedToArray(_useState37,2),schoolsInfos=_useState38[0],setSchoolsInfos=_useState38[1];var _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),loadingTabel=_useState40[0],setLoadingTabel=_useState40[1];var _useState41=useState([{label:'Todos',value:3},{label:'Municipal',value:1},{label:'Estadual',value:0}]),_useState42=_slicedToArray(_useState41,1),optionsAdministrationType=_useState42[0];var head=['ID','GRE','UTB','INEP','Município','Escola','Matrículas'];var DataTableColumns=[{field:'id',headerName:head[0],flex:0.10,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'gr',headerName:head[1],flex:0.15,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'utb',headerName:head[2],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'inep',headerName:head[3],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'mun',headerName:head[4],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'left'},{field:'name',headerName:head[5],flex:0.19,headerAlign:'center',headerClassName:'theme-header',align:'left'},{field:'mat',headerName:head[6],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'center'}];var rows=schoolsInfos.map(function(item){return{id:item.school_id,gr:item.gre,utb:item.utb?item.utb:'-',inep:item.inep?parseInt(item.inep):'-',mun:item.city,name:item.school,mat:item.enrollments?parseInt(item.enrollments):0};});function handleDownloadPdf(){var doc=new jsPDF();var lines=[];setLoadingTabel(true);schoolsInfos.forEach(function(item){lines.push([item.school_id,item.gre,item.utb?item.utb:'-',item.inep?parseInt(item.inep):'-',item.city,item.school,item.enrollments?parseInt(item.enrollments):0]);});doc.autoTable({head:[head],body:lines});doc.save('escolas.pdf');setLoadingTabel(false);}function handleDownloadCsv(){var heads=head;var serialized=schoolsInfos.map(function(item,index){var _ref;return _ref={},_defineProperty(_ref,heads[0],item.school_id),_defineProperty(_ref,heads[1],item.gre),_defineProperty(_ref,heads[2],item.utb?item.utb:'-'),_defineProperty(_ref,heads[3],item.inep?parseInt(item.inep):'-'),_defineProperty(_ref,heads[4],item.city),_defineProperty(_ref,heads[5],item.school),_defineProperty(_ref,heads[6],item.enrollments?parseInt(item.enrollments):0),_ref;});return serialized;}function onSelectYear(id,option){switch(id){case'highestEnrollments':setHighestEnrollments(_objectSpread(_objectSpread({},highestEnrollments),{},{loading:true}));apiSaber.get(\"/enrollments/get-highest/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setHighestEnrollments({loading:false,year:option,x:x,y:y});});break;case'enrollmentsJP':setEnrollmentsJP(_objectSpread(_objectSpread({},enrollmentsJP),{},{loading:true}));apiSaber.get(\"/enrollments/by-city/?cityName=Jo\\xE3o Pessoa&year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsJP({loading:false,year:option,x:x,y:y});});break;case'enrollmentsCG':setEnrollmentsCG(_objectSpread(_objectSpread({},enrollmentsCG),{},{loading:true}));apiSaber.get(\"/enrollments/by-city/?cityName=Campina Grande&year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsCG({loading:false,year:option,x:x,y:y});});break;case'schoolsPerSize':setSchoolsPerSize(_objectSpread(_objectSpread({},schoolsPerSize),{},{loading:true}));apiSaber.get(\"/enrollments/get-schools-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setSchoolsPerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'enrollmentsPerSize':setEnrollmentsPerSize(_objectSpread(_objectSpread({},enrollmentsPerSize),{},{loading:true}));apiSaber.get(\"/enrollments/get-enrollments-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setEnrollmentsPerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'averagesPersize':setAveragePerSize(_objectSpread(_objectSpread({},averagesPersize),{},{loading:true}));apiSaber.get(\"/enrollments/get-average-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setAveragePerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'schoolsPerGre':setSchoolsPerGre(_objectSpread(_objectSpread({},schoolsPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-schools-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setSchoolsPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'enrollmentsPerGre':setEnrollmentsPerGre(_objectSpread(_objectSpread({},enrollmentsPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-enrollments-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setEnrollmentsPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'averagesPerGre':setAveragesPerGre(_objectSpread(_objectSpread({},averagesPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-average-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setAveragesPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;default:break;}}function onSelectSchool(id,value){switch(id){case'enrollmentsInYears':setEnrollmentsInYears(_objectSpread(_objectSpread({},enrollmentsInYears),{},{loading:true}));apiSaber.get(\"/enrollments/in-years/?school_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setEnrollmentsInYears(_objectSpread(_objectSpread({},enrollmentsInYears),{},{loading:false,data_id:value,x:x,y:y}));}).catch(function(error){return console.log(error);});break;case'schoolsInYearsPerGre':setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:true}));apisaber.get(\"/schools/in-years-gre/?gre_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:false,data_id:value,x:x,y:y}));});break;case'schoolsInYearsPerSize':setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:true}));apisaber.get(\"/schools/in-years-size/?size_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:false,data_id:value,x:x,y:y}));});break;case'averageIntSchoolEvasion':setAverageIntSchoolEvasion(_objectSpread(_objectSpread({},averageIntSchoolEvasion),{},{loading:true}));apisaber.get(\"/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setAverageIntSchoolEvasion(_objectSpread(_objectSpread({},averageIntSchoolEvasion),{},{loading:false,data_id:value,x:x,y:y}));});break;default:break;}}useEffect(function(){apiSaber.get(\"/enrollments/get-years/?type=\".concat(selectedAdministrationType.value)).then(function(response){var options=response.data.map(function(item){return item.year;});setYears(options);}).catch(function(error){return console.log(error);});if(highestEnrollments.year){apiSaber.get(\"/enrollments/get-highest/?year=\".concat(highestEnrollments.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setHighestEnrollments(_objectSpread(_objectSpread({},highestEnrollments),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsJP.year){apiSaber.get(\"/enrollments/by-city/?cityName=Jo\\xE3o Pessoa&year=\".concat(enrollmentsJP.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsJP(_objectSpread(_objectSpread({},enrollmentsJP),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsCG.year){apiSaber.get(\"/enrollments/by-city/?cityName=Campina Grande&year=\".concat(enrollmentsCG.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsCG(_objectSpread(_objectSpread({},enrollmentsCG),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(schoolsPerSize.year){apiSaber.get(\"/enrollments/get-schools-by-size/?year=\".concat(schoolsPerSize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setSchoolsPerSize(_objectSpread(_objectSpread({},schoolsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsPerSize.year){apiSaber.get(\"/enrollments/get-enrollments-by-size/?year=\".concat(enrollmentsPerSize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setEnrollmentsPerSize(_objectSpread(_objectSpread({},enrollmentsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(averagesPersize.year){apiSaber.get(\"/enrollments/get-average-by-size/?year=\".concat(averagesPersize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setAveragePerSize(_objectSpread(_objectSpread({},averagesPersize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(schoolsPerGre.year){apiSaber.get(\"/enrollments/get-schools-by-gre/?year=\".concat(schoolsPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setSchoolsPerGre(_objectSpread(_objectSpread({},schoolsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsPerGre.year){apiSaber.get(\"/enrollments/get-enrollments-by-gre/?year=\".concat(enrollmentsPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setEnrollmentsPerGre(_objectSpread(_objectSpread({},enrollmentsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(averagesPerGre.year){apiSaber.get(\"/enrollments/get-average-by-gre/?year=\".concat(averagesPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setAveragesPerGre(_objectSpread(_objectSpread({},averagesPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}apisaber.get(\"/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=\".concat(averageIntSchoolEvasion.data_id===0?3:averageIntSchoolEvasion.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setAverageIntSchoolEvasion(_objectSpread(_objectSpread({},averageIntSchoolEvasion),{},{loading:false,x:x,y:y}));});apiSaber.get(\"/enrollments/in-years/?school_id=\".concat(enrollmentsInYears.data_id===0?4556:enrollmentsInYears.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setEnrollmentsInYears(_objectSpread(_objectSpread({},enrollmentsInYears),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apisaber.get(\"/schools/in-years-gre/?gre_id=\".concat(schoolsInYearsPerGre.data_id===0?1:schoolsInYearsPerGre.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apisaber.get(\"/schools/in-years-size/?size_id=\".concat(schoolsInYearsPerSize.data_id===0?1:schoolsInYearsPerSize.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/total-in-years?type=\".concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setTotalEnrollmentsInYears(_objectSpread(_objectSpread({},totalEnrollmentsInYears),{},{useSelect:false,loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/get-city-location?type=\".concat(selectedAdministrationType.value)).then(function(response){var enrollmentsLocations=response.data.map(function(item){return{latitude:item.latitude,longitude:item.longitude,data:item.enrollments};});var schoolsLocations=response.data.map(function(item){return{latitude:item.latitude,longitude:item.longitude,data:item.schools};});setEnrollmentsLocations(enrollmentsLocations);setSchoolsLocations(schoolsLocations);}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/get-all-schools-info?type=\".concat(selectedAdministrationType.value)).then(function(response){var serialized=response.data.map(function(item){return{school_id:item.school_id,gre:item.gre,utb:item.utb?item.utb:'-',inep:item.inep?parseInt(item.inep):'-',city:item.city,school:item.school,enrollments:item.enrollments?parseInt(item.enrollments):0};});setSchoolsInfos(serialized);}).catch(function(error){return console.log(error);});},[selectedAdministrationType]);// function search(rows) {\n//   return rows.filter((row) =>\n//     searchColumns.some(\n//       (column) =>\n//         row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n//     )\n//   );\n// }\n// const columns = escolas[0] && Object.keys(escolas[0]).filter((column) => column !== 'field1' && column !== 'Unnamed: 7');\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"dash\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{id:\"wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-area\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-sm container-fluid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"administration-type\",children:/*#__PURE__*/_jsx(Select,{className:\"basic-single\",classNamePrefix:\"custom-select\",isSearchable:false,value:selectedAdministrationType,options:optionsAdministrationType,components:{Option:CustomOption},filterOption:createFilter({ignoreAccents:false}),onChange:function onChange(value){return setSelectedAdministrationType(value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:totalEnrollmentsInYears.x,y:totalEnrollmentsInYears.y,name:\"Matr\\xEDculas\",type:\"line\",title:\"Total de matr\\xEDculas na Para\\xEDba ao longo dos anos\",id:\"totalEnrollmentsInYears\"// onChange={onSelectSchool}\n,useSelect:totalEnrollmentsInYears.useSelect,loading:totalEnrollmentsInYears.loading})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:highestEnrollments.x,y:highestEnrollments.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Escolas paraibanas com maior n\\xFAmero de matr\\xEDculas\",id:\"highestEnrollments\",onSelect:onSelectYear,options:years,loading:highestEnrollments.loading})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:enrollmentsInYears.x,y:enrollmentsInYears.y,name:\"Matr\\xEDculas\",type:\"line\",title:\"Quantidade de matr\\xEDculas ao longo dos anos\",id:\"enrollmentsInYears\",onChange:onSelectSchool,useSelect:enrollmentsInYears.useSelect,loading:enrollmentsInYears.loading,by:\"school\",administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartBySchool,{x:averageIntSchoolEvasion.x,y:averageIntSchoolEvasion.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"M\\xE9dia de matr\\xEDculas em escolas integrais anteriormente regulares\",id:\"averageIntSchoolEvasion\",onChange:onSelectSchool,useSelect:averageIntSchoolEvasion.useSelect,loading:averageIntSchoolEvasion.loading,administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsJP.x,y:enrollmentsJP.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"Escolas de Jo\\xE3o Pessoa com mais Matr\\xEDculas\",id:\"enrollmentsJP\",onSelect:onSelectYear,options:years,loading:enrollmentsJP.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsCG.x,y:enrollmentsCG.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Escolas de Campina Grande com mais Matr\\xEDculas\",id:\"enrollmentsCG\",onSelect:onSelectYear,options:years,loading:enrollmentsCG.loading})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"map box\",children:/*#__PURE__*/_jsx(PlotlyMapBox,{title:\"Matr\\xEDculas por regi\\xE3o\",locations:enrollmentsLocations})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"map box\",children:/*#__PURE__*/_jsx(PlotlyMapBox,{title:\"Escolas por regi\\xE3o\",locations:schoolsLocations})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:schoolsPerSize.x,y:schoolsPerSize.y,name:\"Escolas\",type:\"bar\",title:\"Total de Escolas por Porte\",id:\"schoolsPerSize\",onSelect:onSelectYear,options:years,loading:schoolsPerSize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:schoolsPerGre.x,y:schoolsPerGre.y,name:\"Escolas\",type:\"bar\",title:\"Total de Escolas por GRE\",id:\"schoolsPerGre\",onSelect:onSelectYear,options:years,loading:schoolsPerGre.loading,viewPercent:true})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsPerSize.x,y:enrollmentsPerSize.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"Total de Matr\\xEDculas por Porte\",id:\"enrollmentsPerSize\",onSelect:onSelectYear,options:years,loading:enrollmentsPerSize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsPerGre.x,y:enrollmentsPerGre.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Total de Matr\\xEDculas por GRE\",id:\"enrollmentsPerGre\",onSelect:onSelectYear,options:years,loading:enrollmentsPerGre.loading,viewPercent:true})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:averagesPersize.x,y:averagesPersize.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"M\\xE9dia de Matr\\xEDculas por Porte\",id:\"averagesPersize\",onSelect:onSelectYear,options:years,loading:averagesPersize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:averagesPerGre.x,y:averagesPerGre.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"M\\xE9dia de Matr\\xEDculas por GRE\",id:\"averagesPerGre\",onSelect:onSelectYear,options:years,loading:averagesPerGre.loading})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:schoolsInYearsPerGre.x,y:schoolsInYearsPerGre.y,name:\"Escolas\",type:\"line\",title:\"Total de escolas por GRE ao longo dos anos\",id:\"schoolsInYearsPerGre\",onChange:onSelectSchool,useSelect:schoolsInYearsPerGre.useSelect,loading:schoolsInYearsPerGre.loading,by:\"gre\"})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:schoolsInYearsPerSize.x,y:schoolsInYearsPerSize.y,name:\"Escolas\",type:\"line\",title:\"Total de escolas por porte ao longo dos anos\",id:\"schoolsInYearsPerSize\",onChange:onSelectSchool,useSelect:schoolsInYearsPerSize.useSelect,loading:schoolsInYearsPerSize.loading,by:\"size\"})})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 bm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table box\",children:/*#__PURE__*/_jsx(Datatable,{title:\"Escolas por Tipo de Administra\\xE7\\xE3o\",infos:schoolsInfos,rows:rows,columns:DataTableColumns,head:head,downloadCsv:handleDownloadCsv,downloadPdf:handleDownloadPdf,loading:loadingTabel})})})})]})})}),/*#__PURE__*/_jsx(Footer,{})]});}export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","apiSaber","Datatable","Header","Footer","ChartPerYear","LineChartBySchool","ChartBySchool","PlotlyMapBox","apisaber","Select","createFilter","CustomOption","jsPDF","Dashboard","dataChart","loading","year","x","y","dataChartSchool","data_id","useSelect","dataLineChart","schoolsPerSize","setSchoolsPerSize","enrollmentsPerSize","setEnrollmentsPerSize","averagesPersize","setAveragePerSize","schoolsPerGre","setSchoolsPerGre","enrollmentsPerGre","setEnrollmentsPerGre","averagesPerGre","setAveragesPerGre","highestEnrollments","setHighestEnrollments","enrollmentsJP","setEnrollmentsJP","enrollmentsCG","setEnrollmentsCG","averageIntSchoolEvasion","setAverageIntSchoolEvasion","enrollmentsInYears","setEnrollmentsInYears","totalEnrollmentsInYears","setTotalEnrollmentsInYears","schoolsInYearsPerGre","setSchoolsInYearsPerGre","schoolsInYearsPerSize","setSchoolsInYearsPerSize","enrollmentsLocations","setEnrollmentsLocations","schoolsLocations","setSchoolsLocations","years","setYears","label","value","selectedAdministrationType","setSelectedAdministrationType","schoolsInfos","setSchoolsInfos","loadingTabel","setLoadingTabel","optionsAdministrationType","head","DataTableColumns","field","headerName","flex","headerAlign","headerClassName","align","rows","map","item","id","school_id","gr","gre","utb","inep","parseInt","mun","city","name","school","mat","enrollments","handleDownloadPdf","doc","lines","forEach","push","autoTable","body","save","handleDownloadCsv","heads","serialized","index","onSelectYear","option","get","then","response","data","escolas","sum","slice","size","key","catch","error","console","log","onSelectSchool","options","latitude","longitude","schools","Option","ignoreAccents"],"sources":["/home/yasmin/Área de Trabalho/Frontend/src/pages/Dashboard/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { withStyles } from '@material-ui/core/styles';\n// import { green } from '@material-ui/core/colors';\n\nimport apiSaber from '../../services/apisaber';\nimport Datatable from '../../components/Datatable';\nimport Header from \"../../components/Header\";\n// import Input from '../../components/Input';\nimport Footer from '../../components/Footer';\nimport { ChartPerYear } from '../../components/ChartPerYear/ChartPerYear';\nimport { LineChartBySchool } from '../../components/LineChartBySchool/LineChartBySchool';\nimport { ChartBySchool } from '../../components/ChartBySchool/ChartBySchool';\nimport PlotlyMapBox from '../../components/PlotlyMapBox';\nimport apisaber from '../../services/apisaber';\nimport './styles.css';\nimport Select, { createFilter } from 'react-select';\nimport CustomOption from \"../../components/Options/CustomOption\";\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n// const GreenCheckbox = withStyles({\n//   root: {\n//     color: green[400],\n//     '&$checked': {\n//       color: green[600],\n//     },\n//   },\n//   checked: {},\n// })((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction Dashboard() {\n  // const [escolas, setEscolas] = useState([]);\n  // const [query, setQuery] = useState(\"\");\n  // const [searchColumns, setSearchColumns] = useState([\"Escola\"]);\n  const dataChart = {\n    loading: true,\n    year: 2021,\n    x: [],\n    y: [],\n  };\n\n  const dataChartSchool = {\n    loading: true,\n    data_id: 0,\n    useSelect: true,\n    x: [],\n    y: [],\n  }\n\n  const dataLineChart = {\n    loading: true,\n    data_id: 0, //4556\n    useSelect: true,\n    x: [],\n    y: [],\n  };\n\n  const [schoolsPerSize, setSchoolsPerSize] = useState(dataChart);\n  const [enrollmentsPerSize, setEnrollmentsPerSize] = useState(dataChart);\n  const [averagesPersize, setAveragePerSize] = useState(dataChart);\n  const [schoolsPerGre, setSchoolsPerGre] = useState(dataChart);\n  const [enrollmentsPerGre, setEnrollmentsPerGre] = useState(dataChart);\n  const [averagesPerGre, setAveragesPerGre] = useState(dataChart);\n  const [highestEnrollments, setHighestEnrollments] = useState(dataChart);\n  const [enrollmentsJP, setEnrollmentsJP] = useState(dataChart);\n  const [enrollmentsCG, setEnrollmentsCG] = useState(dataChart);\n  const [averageIntSchoolEvasion, setAverageIntSchoolEvasion] = useState(dataChartSchool);\n  const [enrollmentsInYears, setEnrollmentsInYears] = useState(dataLineChart);\n  const [totalEnrollmentsInYears, setTotalEnrollmentsInYears] = useState(dataLineChart);\n  const [schoolsInYearsPerGre, setSchoolsInYearsPerGre] = useState(dataLineChart);\n  const [schoolsInYearsPerSize, setSchoolsInYearsPerSize] = useState(dataLineChart);\n  const [enrollmentsLocations, setEnrollmentsLocations] = useState([]);\n  const [schoolsLocations, setSchoolsLocations] = useState([]);\n  const [years, setYears] = useState([]);\n  const [selectedAdministrationType, setSelectedAdministrationType] = useState({ label: 'Todos', value: 3 });\n  const [schoolsInfos, setSchoolsInfos] = useState([]);\n  const [loadingTabel, setLoadingTabel] = useState(false);\n  const [optionsAdministrationType] = useState([\n    {\n      label: 'Todos',\n      value: 3,\n    },\n    {\n      label: 'Municipal',\n      value: 1,\n    },\n    {\n      label: 'Estadual',\n      value: 0,\n    }\n  ]);\n\n  const head = ['ID', 'GRE', 'UTB', 'INEP', 'Município', 'Escola', 'Matrículas'];\n  const DataTableColumns = [\n    { field: 'id', headerName: head[0], flex: 0.10, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'gr', headerName: head[1], flex: 0.15, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'utb', headerName: head[2], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'inep', headerName: head[3], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'mun', headerName: head[4], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'left' },\n    { field: 'name', headerName: head[5], flex: 0.19, headerAlign: 'center', headerClassName: 'theme-header', align: 'left' },\n    { field: 'mat', headerName: head[6], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' }\n  ];\n\n  const rows = schoolsInfos.map((item) => ({\n    id: item.school_id,\n    gr: item.gre,\n    utb: item.utb ? item.utb : '-',\n    inep: item.inep ? parseInt(item.inep) : '-',\n    mun: item.city,\n    name: item.school,\n    mat: item.enrollments ? parseInt(item.enrollments) : 0,\n  }));\n\n  function handleDownloadPdf() {\n    const doc = new jsPDF();\n    const lines = [];\n\n    setLoadingTabel(true);\n\n    schoolsInfos.forEach(item => {\n      lines.push([\n        item.school_id,\n        item.gre,\n        item.utb ? item.utb : '-',\n        item.inep ? parseInt(item.inep) : '-',\n        item.city,\n        item.school,\n        item.enrollments ? parseInt(item.enrollments) : 0,\n      ]);\n    });\n\n    doc.autoTable({\n      head: [head],\n      body: lines,\n    });\n\n    doc.save('escolas.pdf');\n\n    setLoadingTabel(false);\n  }\n\n  function handleDownloadCsv() {\n    const heads = head;\n    const serialized = schoolsInfos.map((item, index) => ({\n      [heads[0]]: item.school_id,\n      [heads[1]]: item.gre,\n      [heads[2]]: item.utb ? item.utb : '-',\n      [heads[3]]: item.inep ? parseInt(item.inep) : '-',\n      [heads[4]]: item.city,\n      [heads[5]]: item.school,\n      [heads[6]]: item.enrollments ? parseInt(item.enrollments) : 0,\n    }));\n\n    return serialized;\n  }\n\n\n  function onSelectYear(id, option) {\n    switch (id) {\n      case 'highestEnrollments':\n        setHighestEnrollments({ ...highestEnrollments, loading: true });\n        apiSaber.get(`/enrollments/get-highest/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setHighestEnrollments({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'enrollmentsJP':\n        setEnrollmentsJP({ ...enrollmentsJP, loading: true });\n        apiSaber.get(`/enrollments/by-city/?cityName=João Pessoa&year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setEnrollmentsJP({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'enrollmentsCG':\n        setEnrollmentsCG({ ...enrollmentsCG, loading: true });\n        apiSaber.get(`/enrollments/by-city/?cityName=Campina Grande&year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setEnrollmentsCG({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'schoolsPerSize':\n        setSchoolsPerSize({ ...schoolsPerSize, loading: true });\n        apiSaber.get(`/enrollments/get-schools-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setSchoolsPerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'enrollmentsPerSize':\n        setEnrollmentsPerSize({ ...enrollmentsPerSize, loading: true });\n        apiSaber.get(`/enrollments/get-enrollments-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setEnrollmentsPerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'averagesPersize':\n        setAveragePerSize({ ...averagesPersize, loading: true });\n        apiSaber.get(`/enrollments/get-average-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setAveragePerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'schoolsPerGre':\n        setSchoolsPerGre({ ...schoolsPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-schools-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setSchoolsPerGre({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'enrollmentsPerGre':\n        setEnrollmentsPerGre({ ...enrollmentsPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-enrollments-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setEnrollmentsPerGre({ loading: false, year: option, x, y });\n\n        }).catch(error => console.log(error));\n        break;\n\n      case 'averagesPerGre':\n        setAveragesPerGre({ ...averagesPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-average-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setAveragesPerGre({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function onSelectSchool(id, value) {\n    switch (id) {\n      case 'enrollmentsInYears':\n        setEnrollmentsInYears({ ...enrollmentsInYears, loading: true });\n        apiSaber.get(`/enrollments/in-years/?school_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setEnrollmentsInYears({ ...enrollmentsInYears, loading: false, data_id: value, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'schoolsInYearsPerGre':\n        setSchoolsInYearsPerGre({ ...schoolsInYearsPerGre, loading: true });\n        apisaber.get(`/schools/in-years-gre/?gre_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setSchoolsInYearsPerGre({\n            ...schoolsInYearsPerGre,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      case 'schoolsInYearsPerSize':\n        setSchoolsInYearsPerSize({ ...schoolsInYearsPerSize, loading: true });\n        apisaber.get(`/schools/in-years-size/?size_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setSchoolsInYearsPerSize({\n            ...schoolsInYearsPerSize,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      case 'averageIntSchoolEvasion':\n        setAverageIntSchoolEvasion({ ...averageIntSchoolEvasion, loading: true });\n        apisaber.get(`/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setAverageIntSchoolEvasion({\n            ...averageIntSchoolEvasion,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    apiSaber.get(`/enrollments/get-years/?type=${selectedAdministrationType.value}`).then(response => {\n      const options = response.data.map(item => item.year);\n      setYears(options);\n    }).catch(error => console.log(error));\n\n    if (highestEnrollments.year) {\n      apiSaber.get(`/enrollments/get-highest/?year=${highestEnrollments.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setHighestEnrollments({ ...highestEnrollments, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsJP.year) {\n      apiSaber.get(`/enrollments/by-city/?cityName=João Pessoa&year=${enrollmentsJP.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setEnrollmentsJP({ ...enrollmentsJP, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsCG.year) {\n      apiSaber.get(`/enrollments/by-city/?cityName=Campina Grande&year=${enrollmentsCG.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setEnrollmentsCG({ ...enrollmentsCG, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (schoolsPerSize.year) {\n      apiSaber.get(`/enrollments/get-schools-by-size/?year=${schoolsPerSize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setSchoolsPerSize({ ...schoolsPerSize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsPerSize.year) {\n      apiSaber.get(`/enrollments/get-enrollments-by-size/?year=${enrollmentsPerSize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setEnrollmentsPerSize({ ...enrollmentsPerSize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (averagesPersize.year) {\n      apiSaber.get(`/enrollments/get-average-by-size/?year=${averagesPersize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setAveragePerSize({ ...averagesPersize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (schoolsPerGre.year) {\n      apiSaber.get(`/enrollments/get-schools-by-gre/?year=${schoolsPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setSchoolsPerGre({ ...schoolsPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsPerGre.year) {\n      apiSaber.get(`/enrollments/get-enrollments-by-gre/?year=${enrollmentsPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setEnrollmentsPerGre({ ...enrollmentsPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (averagesPerGre.year) {\n      apiSaber.get(`/enrollments/get-average-by-gre/?year=${averagesPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setAveragesPerGre({ ...averagesPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    apisaber.get(`/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=${averageIntSchoolEvasion.data_id === 0 ? 3 : averageIntSchoolEvasion.data_id}&type=${selectedAdministrationType.value}`).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setAverageIntSchoolEvasion({ ...averageIntSchoolEvasion, loading: false, x, y });\n    });\n\n    apiSaber.get(\n      `/enrollments/in-years/?school_id=${enrollmentsInYears.data_id === 0 ? 4556 : enrollmentsInYears.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setEnrollmentsInYears({ ...enrollmentsInYears, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apisaber.get(\n      `/schools/in-years-gre/?gre_id=${schoolsInYearsPerGre.data_id === 0 ? 1 : schoolsInYearsPerGre.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setSchoolsInYearsPerGre({ ...schoolsInYearsPerGre, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apisaber.get(\n      `/schools/in-years-size/?size_id=${schoolsInYearsPerSize.data_id === 0 ? 1 : schoolsInYearsPerSize.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setSchoolsInYearsPerSize({ ...schoolsInYearsPerSize, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/total-in-years?type=${selectedAdministrationType.value}`).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setTotalEnrollmentsInYears({ ...totalEnrollmentsInYears, useSelect: false, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/get-city-location?type=${selectedAdministrationType.value}`).then(response => {\n      const enrollmentsLocations = response.data.map(item => {\n        return {\n          latitude: item.latitude,\n          longitude: item.longitude,\n          data: item.enrollments,\n        };\n      });\n\n      const schoolsLocations = response.data.map(item => {\n        return {\n          latitude: item.latitude,\n          longitude: item.longitude,\n          data: item.schools,\n        };\n      });\n\n      setEnrollmentsLocations(enrollmentsLocations);\n      setSchoolsLocations(schoolsLocations);\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/get-all-schools-info?type=${selectedAdministrationType.value}`).then(response => {\n      const serialized = response.data.map(item => {\n        return {\n          school_id: item.school_id,\n          gre: item.gre,\n          utb: item.utb ? item.utb : '-',\n          inep: item.inep ? parseInt(item.inep) : '-',\n          city: item.city,\n          school: item.school,\n          enrollments: item.enrollments ? parseInt(item.enrollments) : 0,\n        }\n      });\n\n      setSchoolsInfos(serialized);\n    }).catch(error => console.log(error));\n  }, [selectedAdministrationType]);\n\n  // function search(rows) {\n  //   return rows.filter((row) =>\n  //     searchColumns.some(\n  //       (column) =>\n  //         row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n  //     )\n  //   );\n  // }\n\n  // const columns = escolas[0] && Object.keys(escolas[0]).filter((column) => column !== 'field1' && column !== 'Unnamed: 7');\n\n  return (\n    <div className=\"dash\">\n      <Header />\n      <div id=\"wrapper\">\n        <div className=\"content-area\">\n          <div className=\"container-sm container-fluid\">\n            <div className=\"main\">\n              <div className='administration-type'>\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"custom-select\"\n                  isSearchable={false}\n                  value={selectedAdministrationType}\n                  options={optionsAdministrationType}\n                  components={{ Option: CustomOption }}\n                  filterOption={createFilter({ ignoreAccents: false })}\n                  onChange={value => setSelectedAdministrationType(value)}\n                />\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={totalEnrollmentsInYears.x}\n                      y={totalEnrollmentsInYears.y}\n                      name='Matrículas'\n                      type=\"line\"\n                      title=\"Total de matrículas na Paraíba ao longo dos anos\"\n                      id=\"totalEnrollmentsInYears\"\n                      // onChange={onSelectSchool}\n                      useSelect={totalEnrollmentsInYears.useSelect}\n                      loading={totalEnrollmentsInYears.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={highestEnrollments.x}\n                      y={highestEnrollments.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Escolas paraibanas com maior número de matrículas\"\n                      id=\"highestEnrollments\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={highestEnrollments.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={enrollmentsInYears.x}\n                      y={enrollmentsInYears.y}\n                      name='Matrículas'\n                      type=\"line\"\n                      title=\"Quantidade de matrículas ao longo dos anos\"\n                      id=\"enrollmentsInYears\"\n                      onChange={onSelectSchool}\n                      useSelect={enrollmentsInYears.useSelect}\n                      loading={enrollmentsInYears.loading}\n                      by=\"school\"\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartBySchool\n                      x={averageIntSchoolEvasion.x}\n                      y={averageIntSchoolEvasion.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Média de matrículas em escolas integrais anteriormente regulares\"\n                      id=\"averageIntSchoolEvasion\"\n                      onChange={onSelectSchool}\n                      useSelect={averageIntSchoolEvasion.useSelect}\n                      loading={averageIntSchoolEvasion.loading}\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsJP.x}\n                      y={enrollmentsJP.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Escolas de João Pessoa com mais Matrículas\"\n                      id=\"enrollmentsJP\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsJP.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsCG.x}\n                      y={enrollmentsCG.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Escolas de Campina Grande com mais Matrículas\"\n                      id=\"enrollmentsCG\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsCG.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='row mt-4 mb-4'>\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"map box\">\n                    <PlotlyMapBox\n                      title=\"Matrículas por região\"\n                      locations={enrollmentsLocations}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='row mt-4 mb-4'>\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"map box\">\n                    <PlotlyMapBox\n                      title=\"Escolas por região\"\n                      locations={schoolsLocations}\n                    />\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={schoolsPerSize.x}\n                      y={schoolsPerSize.y}\n                      name='Escolas'\n                      type=\"bar\"\n                      title=\"Total de Escolas por Porte\"\n                      id=\"schoolsPerSize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={schoolsPerSize.loading}\n                    />\n                  </div>\n                </div>\n\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={schoolsPerGre.x}\n                      y={schoolsPerGre.y}\n                      name='Escolas'\n                      type=\"bar\"\n                      title=\"Total de Escolas por GRE\"\n                      id=\"schoolsPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={schoolsPerGre.loading}\n                      viewPercent={true}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsPerSize.x}\n                      y={enrollmentsPerSize.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Total de Matrículas por Porte\"\n                      id=\"enrollmentsPerSize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsPerSize.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsPerGre.x}\n                      y={enrollmentsPerGre.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Total de Matrículas por GRE\"\n                      id=\"enrollmentsPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsPerGre.loading}\n                      viewPercent={true}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={averagesPersize.x}\n                      y={averagesPersize.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Média de Matrículas por Porte\"\n                      id=\"averagesPersize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={averagesPersize.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={averagesPerGre.x}\n                      y={averagesPerGre.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Média de Matrículas por GRE\"\n                      id=\"averagesPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={averagesPerGre.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={schoolsInYearsPerGre.x}\n                      y={schoolsInYearsPerGre.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Total de escolas por GRE ao longo dos anos\"\n                      id=\"schoolsInYearsPerGre\"\n                      onChange={onSelectSchool}\n                      useSelect={schoolsInYearsPerGre.useSelect}\n                      loading={schoolsInYearsPerGre.loading}\n                      by=\"gre\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={schoolsInYearsPerSize.x}\n                      y={schoolsInYearsPerSize.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Total de escolas por porte ao longo dos anos\"\n                      id=\"schoolsInYearsPerSize\"\n                      onChange={onSelectSchool}\n                      useSelect={schoolsInYearsPerSize.useSelect}\n                      loading={schoolsInYearsPerSize.loading}\n                      by=\"size\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-4 bm-4\">\n              <div className=\"col\">\n                <div className=\"table box\">\n                  <Datatable\n                    title=\"Escolas por Tipo de Administração\"\n                    infos={schoolsInfos}\n                    rows={rows}\n                    columns={DataTableColumns}\n                    head={head}\n                    downloadCsv={handleDownloadCsv}\n                    downloadPdf={handleDownloadPdf}\n                    loading={loadingTabel}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"8XAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD;AACA;AACA;AACA;AAEA,MAAOC,SAAQ,KAAM,yBAAyB,CAC9C,MAAOC,UAAS,KAAM,4BAA4B,CAClD,MAAOC,OAAM,KAAM,yBAAyB,CAC5C;AACA,MAAOC,OAAM,KAAM,yBAAyB,CAC5C,OAASC,YAAY,KAAQ,4CAA4C,CACzE,OAASC,iBAAiB,KAAQ,sDAAsD,CACxF,OAASC,aAAa,KAAQ,8CAA8C,CAC5E,MAAOC,aAAY,KAAM,+BAA+B,CACxD,MAAOC,SAAQ,KAAM,yBAAyB,CAC9C,MAAO,cAAc,CACrB,MAAOC,OAAM,EAAIC,YAAY,KAAQ,cAAc,CACnD,MAAOC,aAAY,KAAM,uCAAuC,CAChE,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAO,iBAAiB,CAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,wFAEA,QAASC,UAAS,EAAG,CACnB;AACA;AACA;AACA,GAAMC,UAAS,CAAG,CAChBC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,IAAI,CACVC,CAAC,CAAE,EAAE,CACLC,CAAC,CAAE,EACL,CAAC,CAED,GAAMC,gBAAe,CAAG,CACtBJ,OAAO,CAAE,IAAI,CACbK,OAAO,CAAE,CAAC,CACVC,SAAS,CAAE,IAAI,CACfJ,CAAC,CAAE,EAAE,CACLC,CAAC,CAAE,EACL,CAAC,CAED,GAAMI,cAAa,CAAG,CACpBP,OAAO,CAAE,IAAI,CACbK,OAAO,CAAE,CAAC,CAAE;AACZC,SAAS,CAAE,IAAI,CACfJ,CAAC,CAAE,EAAE,CACLC,CAAC,CAAE,EACL,CAAC,CAED,cAA4CpB,QAAQ,CAACgB,SAAS,CAAC,wCAAxDS,cAAc,eAAEC,iBAAiB,eACxC,eAAoD1B,QAAQ,CAACgB,SAAS,CAAC,yCAAhEW,kBAAkB,eAAEC,qBAAqB,eAChD,eAA6C5B,QAAQ,CAACgB,SAAS,CAAC,yCAAzDa,eAAe,eAAEC,iBAAiB,eACzC,eAA0C9B,QAAQ,CAACgB,SAAS,CAAC,yCAAtDe,aAAa,eAAEC,gBAAgB,eACtC,eAAkDhC,QAAQ,CAACgB,SAAS,CAAC,0CAA9DiB,iBAAiB,gBAAEC,oBAAoB,gBAC9C,gBAA4ClC,QAAQ,CAACgB,SAAS,CAAC,2CAAxDmB,cAAc,gBAAEC,iBAAiB,gBACxC,gBAAoDpC,QAAQ,CAACgB,SAAS,CAAC,2CAAhEqB,kBAAkB,gBAAEC,qBAAqB,gBAChD,gBAA0CtC,QAAQ,CAACgB,SAAS,CAAC,2CAAtDuB,aAAa,gBAAEC,gBAAgB,gBACtC,gBAA0CxC,QAAQ,CAACgB,SAAS,CAAC,2CAAtDyB,aAAa,gBAAEC,gBAAgB,gBACtC,gBAA8D1C,QAAQ,CAACqB,eAAe,CAAC,2CAAhFsB,uBAAuB,gBAAEC,0BAA0B,gBAC1D,gBAAoD5C,QAAQ,CAACwB,aAAa,CAAC,2CAApEqB,kBAAkB,gBAAEC,qBAAqB,gBAChD,gBAA8D9C,QAAQ,CAACwB,aAAa,CAAC,2CAA9EuB,uBAAuB,gBAAEC,0BAA0B,gBAC1D,gBAAwDhD,QAAQ,CAACwB,aAAa,CAAC,2CAAxEyB,oBAAoB,gBAAEC,uBAAuB,gBACpD,gBAA0DlD,QAAQ,CAACwB,aAAa,CAAC,2CAA1E2B,qBAAqB,gBAAEC,wBAAwB,gBACtD,gBAAwDpD,QAAQ,CAAC,EAAE,CAAC,2CAA7DqD,oBAAoB,gBAAEC,uBAAuB,gBACpD,gBAAgDtD,QAAQ,CAAC,EAAE,CAAC,2CAArDuD,gBAAgB,gBAAEC,mBAAmB,gBAC5C,gBAA0BxD,QAAQ,CAAC,EAAE,CAAC,2CAA/ByD,KAAK,gBAAEC,QAAQ,gBACtB,gBAAoE1D,QAAQ,CAAC,CAAE2D,KAAK,CAAE,OAAO,CAAEC,KAAK,CAAE,CAAE,CAAC,CAAC,2CAAnGC,0BAA0B,gBAAEC,6BAA6B,gBAChE,gBAAwC9D,QAAQ,CAAC,EAAE,CAAC,2CAA7C+D,YAAY,gBAAEC,eAAe,gBACpC,gBAAwChE,QAAQ,CAAC,KAAK,CAAC,2CAAhDiE,YAAY,gBAAEC,eAAe,gBACpC,gBAAoClE,QAAQ,CAAC,CAC3C,CACE2D,KAAK,CAAE,OAAO,CACdC,KAAK,CAAE,CACT,CAAC,CACD,CACED,KAAK,CAAE,WAAW,CAClBC,KAAK,CAAE,CACT,CAAC,CACD,CACED,KAAK,CAAE,UAAU,CACjBC,KAAK,CAAE,CACT,CAAC,CACF,CAAC,2CAbKO,yBAAyB,gBAehC,GAAMC,KAAI,CAAG,CAAC,IAAI,CAAE,KAAK,CAAE,KAAK,CAAE,MAAM,CAAE,WAAW,CAAE,QAAQ,CAAE,YAAY,CAAC,CAC9E,GAAMC,iBAAgB,CAAG,CACvB,CAAEC,KAAK,CAAE,IAAI,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,IAAI,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,QAAS,CAAC,CACzH,CAAEL,KAAK,CAAE,IAAI,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,IAAI,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,QAAS,CAAC,CACzH,CAAEL,KAAK,CAAE,KAAK,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,KAAK,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC3H,CAAEL,KAAK,CAAE,MAAM,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,KAAK,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC5H,CAAEL,KAAK,CAAE,KAAK,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,KAAK,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,MAAO,CAAC,CACzH,CAAEL,KAAK,CAAE,MAAM,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,IAAI,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,MAAO,CAAC,CACzH,CAAEL,KAAK,CAAE,KAAK,CAAEC,UAAU,CAAEH,IAAI,CAAC,CAAC,CAAC,CAAEI,IAAI,CAAE,KAAK,CAAEC,WAAW,CAAE,QAAQ,CAAEC,eAAe,CAAE,cAAc,CAAEC,KAAK,CAAE,QAAS,CAAC,CAC5H,CAED,GAAMC,KAAI,CAAGb,YAAY,CAACc,GAAG,CAAC,SAACC,IAAI,QAAM,CACvCC,EAAE,CAAED,IAAI,CAACE,SAAS,CAClBC,EAAE,CAAEH,IAAI,CAACI,GAAG,CACZC,GAAG,CAAEL,IAAI,CAACK,GAAG,CAAGL,IAAI,CAACK,GAAG,CAAG,GAAG,CAC9BC,IAAI,CAAEN,IAAI,CAACM,IAAI,CAAGC,QAAQ,CAACP,IAAI,CAACM,IAAI,CAAC,CAAG,GAAG,CAC3CE,GAAG,CAAER,IAAI,CAACS,IAAI,CACdC,IAAI,CAAEV,IAAI,CAACW,MAAM,CACjBC,GAAG,CAAEZ,IAAI,CAACa,WAAW,CAAGN,QAAQ,CAACP,IAAI,CAACa,WAAW,CAAC,CAAG,CACvD,CAAC,EAAC,CAAC,CAEH,QAASC,kBAAiB,EAAG,CAC3B,GAAMC,IAAG,CAAG,GAAI/E,MAAK,EAAE,CACvB,GAAMgF,MAAK,CAAG,EAAE,CAEhB5B,eAAe,CAAC,IAAI,CAAC,CAErBH,YAAY,CAACgC,OAAO,CAAC,SAAAjB,IAAI,CAAI,CAC3BgB,KAAK,CAACE,IAAI,CAAC,CACTlB,IAAI,CAACE,SAAS,CACdF,IAAI,CAACI,GAAG,CACRJ,IAAI,CAACK,GAAG,CAAGL,IAAI,CAACK,GAAG,CAAG,GAAG,CACzBL,IAAI,CAACM,IAAI,CAAGC,QAAQ,CAACP,IAAI,CAACM,IAAI,CAAC,CAAG,GAAG,CACrCN,IAAI,CAACS,IAAI,CACTT,IAAI,CAACW,MAAM,CACXX,IAAI,CAACa,WAAW,CAAGN,QAAQ,CAACP,IAAI,CAACa,WAAW,CAAC,CAAG,CAAC,CAClD,CAAC,CACJ,CAAC,CAAC,CAEFE,GAAG,CAACI,SAAS,CAAC,CACZ7B,IAAI,CAAE,CAACA,IAAI,CAAC,CACZ8B,IAAI,CAAEJ,KACR,CAAC,CAAC,CAEFD,GAAG,CAACM,IAAI,CAAC,aAAa,CAAC,CAEvBjC,eAAe,CAAC,KAAK,CAAC,CACxB,CAEA,QAASkC,kBAAiB,EAAG,CAC3B,GAAMC,MAAK,CAAGjC,IAAI,CAClB,GAAMkC,WAAU,CAAGvC,YAAY,CAACc,GAAG,CAAC,SAACC,IAAI,CAAEyB,KAAK,+CAC7CF,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACE,SAAS,uBACzBqB,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACI,GAAG,uBACnBmB,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACK,GAAG,CAAGL,IAAI,CAACK,GAAG,CAAG,GAAG,uBACpCkB,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACM,IAAI,CAAGC,QAAQ,CAACP,IAAI,CAACM,IAAI,CAAC,CAAG,GAAG,uBAChDiB,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACS,IAAI,uBACpBc,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACW,MAAM,uBACtBY,KAAK,CAAC,CAAC,CAAC,CAAGvB,IAAI,CAACa,WAAW,CAAGN,QAAQ,CAACP,IAAI,CAACa,WAAW,CAAC,CAAG,CAAC,QAC7D,CAAC,CAEH,MAAOW,WAAU,CACnB,CAGA,QAASE,aAAY,CAACzB,EAAE,CAAE0B,MAAM,CAAE,CAChC,OAAQ1B,EAAE,EACR,IAAK,oBAAoB,CACvBzC,qBAAqB,gCAAMD,kBAAkB,MAAEpB,OAAO,CAAE,IAAI,GAAG,CAC/Df,QAAQ,CAACwG,GAAG,0CAAmCD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACjH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACgC,OAAO,GAAC,CACjD,GAAM1F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACiC,GAAG,GAAC,CAE7CzE,qBAAqB,CAAC,CAAErB,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC/D,CAAC,CAAC,CACF,MAEF,IAAK,eAAe,CAClBoB,gBAAgB,gCAAMD,aAAa,MAAEtB,OAAO,CAAE,IAAI,GAAG,CACrDf,QAAQ,CAACwG,GAAG,8DAAoDD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAClI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACgC,OAAO,GAAC,CACjD,GAAM1F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACiC,GAAG,GAAC,CAE7CvE,gBAAgB,CAAC,CAAEvB,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC1D,CAAC,CAAC,CACF,MAEF,IAAK,eAAe,CAClBsB,gBAAgB,gCAAMD,aAAa,MAAExB,OAAO,CAAE,IAAI,GAAG,CACrDf,QAAQ,CAACwG,GAAG,8DAAuDD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACrI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACgC,OAAO,GAAC,CACjD,GAAM1F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACiC,GAAG,GAAC,CAE7CrE,gBAAgB,CAAC,CAAEzB,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC1D,CAAC,CAAC,CACF,MAEF,IAAK,gBAAgB,CACnBM,iBAAiB,gCAAMD,cAAc,MAAER,OAAO,CAAE,IAAI,GAAG,CACvDf,QAAQ,CAACwG,GAAG,kDAA2CD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACzH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC1D,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAE7DnF,iBAAiB,CAAC,CAAET,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC3D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,IAAK,oBAAoB,CACvBxF,qBAAqB,gCAAMD,kBAAkB,MAAEV,OAAO,CAAE,IAAI,GAAG,CAC/Df,QAAQ,CAACwG,GAAG,sDAA+CD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC7H,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC1D,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAE7DjF,qBAAqB,CAAC,CAAEX,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC/D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,IAAK,iBAAiB,CACpBtF,iBAAiB,gCAAMD,eAAe,MAAEZ,OAAO,CAAE,IAAI,GAAG,CACxDf,QAAQ,CAACwG,GAAG,kDAA2CD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACzH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC1D,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAE7D/E,iBAAiB,CAAC,CAAEb,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC3D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,IAAK,eAAe,CAClBpF,gBAAgB,gCAAMD,aAAa,MAAEd,OAAO,CAAE,IAAI,GAAG,CACrDf,QAAQ,CAACwG,GAAG,iDAA0CD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACxH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAEhD7E,gBAAgB,CAAC,CAAEf,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC1D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,IAAK,mBAAmB,CACtBlF,oBAAoB,gCAAMD,iBAAiB,MAAEhB,OAAO,CAAE,IAAI,GAAG,CAC7Df,QAAQ,CAACwG,GAAG,qDAA8CD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC5H,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAEhD3E,oBAAoB,CAAC,CAAEjB,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAE9D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,IAAK,gBAAgB,CACnBhF,iBAAiB,gCAAMD,cAAc,MAAElB,OAAO,CAAE,IAAI,GAAG,CACvDf,QAAQ,CAACwG,GAAG,iDAA0CD,MAAM,kBAAS5C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACxH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAEhDzE,iBAAiB,CAAC,CAAEnB,OAAO,CAAE,KAAK,CAAEC,IAAI,CAAEuF,MAAM,CAAEtF,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAE,CAAC,CAAC,CAC3D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,QACE,MAAM,CAEZ,CAEA,QAASG,eAAc,CAACxC,EAAE,CAAEnB,KAAK,CAAE,CACjC,OAAQmB,EAAE,EACR,IAAK,oBAAoB,CACvBjC,qBAAqB,gCAAMD,kBAAkB,MAAE5B,OAAO,CAAE,IAAI,GAAG,CAC/Df,QAAQ,CAACwG,GAAG,4CAAqC9C,KAAK,kBAASC,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAClH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9C/D,qBAAqB,gCAAMD,kBAAkB,MAAE5B,OAAO,CAAE,KAAK,CAAEK,OAAO,CAAEsC,KAAK,CAAEzC,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACxF,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACrC,MAEF,IAAK,sBAAsB,CACzBlE,uBAAuB,gCAAMD,oBAAoB,MAAEhC,OAAO,CAAE,IAAI,GAAG,CACnEP,QAAQ,CAACgG,GAAG,yCAAkC9C,KAAK,kBAASC,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC/G,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9C3D,uBAAuB,gCAClBD,oBAAoB,MACvBhC,OAAO,CAAE,KAAK,CACdK,OAAO,CAAEsC,KAAK,CACdzC,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,GACD,CACJ,CAAC,CAAC,CACF,MAEF,IAAK,uBAAuB,CAC1BgC,wBAAwB,gCAAMD,qBAAqB,MAAElC,OAAO,CAAE,IAAI,GAAG,CACrEP,QAAQ,CAACgG,GAAG,2CAAoC9C,KAAK,kBAASC,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACjH,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9CzD,wBAAwB,gCACnBD,qBAAqB,MACxBlC,OAAO,CAAE,KAAK,CACdK,OAAO,CAAEsC,KAAK,CACdzC,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,GACD,CACJ,CAAC,CAAC,CACF,MAEF,IAAK,yBAAyB,CAC5BwB,0BAA0B,gCAAMD,uBAAuB,MAAE1B,OAAO,CAAE,IAAI,GAAG,CACzEP,QAAQ,CAACgG,GAAG,uFAAgF9C,KAAK,kBAASC,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC7J,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9CjE,0BAA0B,gCACrBD,uBAAuB,MAC1B1B,OAAO,CAAE,KAAK,CACdK,OAAO,CAAEsC,KAAK,CACdzC,CAAC,CAADA,CAAC,CACDC,CAAC,CAADA,CAAC,GACD,CACJ,CAAC,CAAC,CACF,MAEF,QACE,MAAM,CAEZ,CAEAnB,SAAS,CAAC,UAAM,CACdC,QAAQ,CAACwG,GAAG,wCAAiC7C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAChG,GAAMY,QAAO,CAAGZ,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC5D,IAAI,GAAC,CACpDwC,QAAQ,CAAC8D,OAAO,CAAC,CACnB,CAAC,CAAC,CAACL,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CAErC,GAAI/E,kBAAkB,CAACnB,IAAI,CAAE,CAC3BhB,QAAQ,CAACwG,GAAG,0CAAmCrE,kBAAkB,CAACnB,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAClI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACgC,OAAO,GAAC,CACjD,GAAM1F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACiC,GAAG,GAAC,CAE7CzE,qBAAqB,gCAAMD,kBAAkB,MAAEpB,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACxE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAI7E,aAAa,CAACrB,IAAI,CAAE,CACtBhB,QAAQ,CAACwG,GAAG,8DAAoDnE,aAAa,CAACrB,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC9I,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACgC,OAAO,GAAC,CACjD,GAAM1F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACiC,GAAG,GAAC,CAE7CvE,gBAAgB,gCAAMD,aAAa,MAAEtB,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAC9D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAI3E,aAAa,CAACvB,IAAI,CAAE,CACtBhB,QAAQ,CAACwG,GAAG,8DAAuDjE,aAAa,CAACvB,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACjJ,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACgC,OAAO,GAAC,CACjD,GAAM1F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACiC,GAAG,GAAC,CAE7CrE,gBAAgB,gCAAMD,aAAa,MAAExB,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAC9D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAI3F,cAAc,CAACP,IAAI,CAAE,CACvBhB,QAAQ,CAACwG,GAAG,kDAA2CjF,cAAc,CAACP,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACtI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC1D,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAE7DnF,iBAAiB,gCAAMD,cAAc,MAAER,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAChE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAIzF,kBAAkB,CAACT,IAAI,CAAE,CAC3BhB,QAAQ,CAACwG,GAAG,sDAA+C/E,kBAAkB,CAACT,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC9I,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC1D,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAE7DjF,qBAAqB,gCAAMD,kBAAkB,MAAEV,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACxE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAIvF,eAAe,CAACX,IAAI,CAAE,CACxBhB,QAAQ,CAACwG,GAAG,kDAA2C7E,eAAe,CAACX,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACvI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC1D,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAACG,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAACnC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAE7D/E,iBAAiB,gCAAMD,eAAe,MAAEZ,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACjE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAIrF,aAAa,CAACb,IAAI,CAAE,CACtBhB,QAAQ,CAACwG,GAAG,iDAA0C3E,aAAa,CAACb,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACpI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAEhD7E,gBAAgB,gCAAMD,aAAa,MAAEd,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAC9D,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAInF,iBAAiB,CAACf,IAAI,CAAE,CAC1BhB,QAAQ,CAACwG,GAAG,qDAA8CzE,iBAAiB,CAACf,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC5I,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAEhD3E,oBAAoB,gCAAMD,iBAAiB,MAAEhB,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACtE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA,GAAIjF,cAAc,CAACjB,IAAI,CAAE,CACvBhB,QAAQ,CAACwG,GAAG,iDAA0CvE,cAAc,CAACjB,IAAI,kBAAS2C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACrI,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAoC,IAAI,QAAIA,KAAI,CAACC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAACoC,IAAI,QAAKA,KAAI,CAACJ,IAAI,GAAC,CAEhDzE,iBAAiB,gCAAMD,cAAc,MAAElB,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAChE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAEA1G,QAAQ,CAACgG,GAAG,uFAAgF/D,uBAAuB,CAACrB,OAAO,GAAK,CAAC,CAAG,CAAC,CAAGqB,uBAAuB,CAACrB,OAAO,kBAASuC,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACnO,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9CjE,0BAA0B,gCAAMD,uBAAuB,MAAE1B,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAClF,CAAC,CAAC,CAEFlB,QAAQ,CAACwG,GAAG,4CAC0B7D,kBAAkB,CAACvB,OAAO,GAAK,CAAC,CAAG,IAAI,CAAGuB,kBAAkB,CAACvB,OAAO,kBAASuC,0BAA0B,CAACD,KAAK,EAClJ,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACjB,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9C/D,qBAAqB,gCAAMD,kBAAkB,MAAE5B,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACxE,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CAErC1G,QAAQ,CAACgG,GAAG,yCACuBzD,oBAAoB,CAAC3B,OAAO,GAAK,CAAC,CAAG,CAAC,CAAG2B,oBAAoB,CAAC3B,OAAO,kBAASuC,0BAA0B,CAACD,KAAK,EAChJ,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACjB,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9C3D,uBAAuB,gCAAMD,oBAAoB,MAAEhC,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAC5E,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CAErC1G,QAAQ,CAACgG,GAAG,2CACyBvD,qBAAqB,CAAC7B,OAAO,GAAK,CAAC,CAAG,CAAC,CAAG6B,qBAAqB,CAAC7B,OAAO,kBAASuC,0BAA0B,CAACD,KAAK,EACpJ,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACjB,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9CzD,wBAAwB,gCAAMD,qBAAqB,MAAElC,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CAC9E,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CAErClH,QAAQ,CAACwG,GAAG,4CAAqC7C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACpG,GAAMzF,EAAC,CAAGyF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAACoC,GAAG,GAAC,CAC7C,GAAM9F,EAAC,CAAGwF,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,QAAIA,KAAI,CAAC+B,IAAI,GAAC,CAE9C7D,0BAA0B,gCAAMD,uBAAuB,MAAExB,SAAS,CAAE,KAAK,CAAEN,OAAO,CAAE,KAAK,CAAEE,CAAC,CAADA,CAAC,CAAEC,CAAC,CAADA,CAAC,GAAG,CACpG,CAAC,CAAC,CAAC+F,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CAErClH,QAAQ,CAACwG,GAAG,+CAAwC7C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CACvG,GAAMvD,qBAAoB,CAAGuD,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,CAAI,CACrD,MAAO,CACL2C,QAAQ,CAAE3C,IAAI,CAAC2C,QAAQ,CACvBC,SAAS,CAAE5C,IAAI,CAAC4C,SAAS,CACzBb,IAAI,CAAE/B,IAAI,CAACa,WACb,CAAC,CACH,CAAC,CAAC,CAEF,GAAMpC,iBAAgB,CAAGqD,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,CAAI,CACjD,MAAO,CACL2C,QAAQ,CAAE3C,IAAI,CAAC2C,QAAQ,CACvBC,SAAS,CAAE5C,IAAI,CAAC4C,SAAS,CACzBb,IAAI,CAAE/B,IAAI,CAAC6C,OACb,CAAC,CACH,CAAC,CAAC,CAEFrE,uBAAuB,CAACD,oBAAoB,CAAC,CAC7CG,mBAAmB,CAACD,gBAAgB,CAAC,CACvC,CAAC,CAAC,CAAC4D,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CAErClH,QAAQ,CAACwG,GAAG,kDAA2C7C,0BAA0B,CAACD,KAAK,EAAG,CAAC+C,IAAI,CAAC,SAAAC,QAAQ,CAAI,CAC1G,GAAMN,WAAU,CAAGM,QAAQ,CAACC,IAAI,CAAChC,GAAG,CAAC,SAAAC,IAAI,CAAI,CAC3C,MAAO,CACLE,SAAS,CAAEF,IAAI,CAACE,SAAS,CACzBE,GAAG,CAAEJ,IAAI,CAACI,GAAG,CACbC,GAAG,CAAEL,IAAI,CAACK,GAAG,CAAGL,IAAI,CAACK,GAAG,CAAG,GAAG,CAC9BC,IAAI,CAAEN,IAAI,CAACM,IAAI,CAAGC,QAAQ,CAACP,IAAI,CAACM,IAAI,CAAC,CAAG,GAAG,CAC3CG,IAAI,CAAET,IAAI,CAACS,IAAI,CACfE,MAAM,CAAEX,IAAI,CAACW,MAAM,CACnBE,WAAW,CAAEb,IAAI,CAACa,WAAW,CAAGN,QAAQ,CAACP,IAAI,CAACa,WAAW,CAAC,CAAG,CAC/D,CAAC,CACH,CAAC,CAAC,CAEF3B,eAAe,CAACsC,UAAU,CAAC,CAC7B,CAAC,CAAC,CAACa,KAAK,CAAC,SAAAC,KAAK,QAAIC,QAAO,CAACC,GAAG,CAACF,KAAK,CAAC,GAAC,CACvC,CAAC,CAAE,CAACvD,0BAA0B,CAAC,CAAC,CAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,mBACE,aAAK,SAAS,CAAC,MAAM,wBACnB,KAAC,MAAM,IAAG,cACV,YAAK,EAAE,CAAC,SAAS,uBACf,YAAK,SAAS,CAAC,cAAc,uBAC3B,aAAK,SAAS,CAAC,8BAA8B,wBAC3C,aAAK,SAAS,CAAC,MAAM,wBACnB,YAAK,SAAS,CAAC,qBAAqB,uBAClC,KAAC,MAAM,EACL,SAAS,CAAC,cAAc,CACxB,eAAe,CAAC,eAAe,CAC/B,YAAY,CAAE,KAAM,CACpB,KAAK,CAAEA,0BAA2B,CAClC,OAAO,CAAEM,yBAA0B,CACnC,UAAU,CAAE,CAAEyD,MAAM,CAAE/G,YAAa,CAAE,CACrC,YAAY,CAAED,YAAY,CAAC,CAAEiH,aAAa,CAAE,KAAM,CAAC,CAAE,CACrD,QAAQ,CAAE,kBAAAjE,KAAK,QAAIE,8BAA6B,CAACF,KAAK,CAAC,EAAC,EACxD,EACE,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,iBAAiB,EAChB,CAAC,CAAEb,uBAAuB,CAAC5B,CAAE,CAC7B,CAAC,CAAE4B,uBAAuB,CAAC3B,CAAE,CAC7B,IAAI,CAAC,eAAY,CACjB,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,wDAAkD,CACxD,EAAE,CAAC,yBACH;AAAA,CACA,SAAS,CAAE2B,uBAAuB,CAACxB,SAAU,CAC7C,OAAO,CAAEwB,uBAAuB,CAAC9B,OAAQ,EACzC,EACE,EACF,EACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEoB,kBAAkB,CAAClB,CAAE,CACxB,CAAC,CAAEkB,kBAAkB,CAACjB,CAAE,CACxB,IAAI,CAAC,eAAY,CACjB,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,yDAAmD,CACzD,EAAE,CAAC,oBAAoB,CACvB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAEpB,kBAAkB,CAACpB,OAAQ,EACpC,EACE,EACF,EACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,iBAAiB,EAChB,CAAC,CAAE4B,kBAAkB,CAAC1B,CAAE,CACxB,CAAC,CAAE0B,kBAAkB,CAACzB,CAAE,CACxB,IAAI,CAAC,eAAY,CACjB,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,+CAA4C,CAClD,EAAE,CAAC,oBAAoB,CACvB,QAAQ,CAAEmG,cAAe,CACzB,SAAS,CAAE1E,kBAAkB,CAACtB,SAAU,CACxC,OAAO,CAAEsB,kBAAkB,CAAC5B,OAAQ,CACpC,EAAE,CAAC,QAAQ,CACX,kBAAkB,CAAE4C,0BAA0B,CAACD,KAAM,EACrD,EACE,EACF,EACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,aAAa,EACZ,CAAC,CAAEjB,uBAAuB,CAACxB,CAAE,CAC7B,CAAC,CAAEwB,uBAAuB,CAACvB,CAAE,CAC7B,IAAI,CAAC,eAAY,CACjB,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,wEAAkE,CACxE,EAAE,CAAC,yBAAyB,CAC5B,QAAQ,CAAEmG,cAAe,CACzB,SAAS,CAAE5E,uBAAuB,CAACpB,SAAU,CAC7C,OAAO,CAAEoB,uBAAuB,CAAC1B,OAAQ,CACzC,kBAAkB,CAAE4C,0BAA0B,CAACD,KAAM,EACrD,EACE,EACF,EACF,cAEN,aAAK,SAAS,CAAC,eAAe,wBAC5B,YAAK,SAAS,CAAC,4BAA4B,uBACzC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAErB,aAAa,CAACpB,CAAE,CACnB,CAAC,CAAEoB,aAAa,CAACnB,CAAE,CACnB,IAAI,CAAC,eACL;AAAA,CACA,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,kDAA4C,CAClD,EAAE,CAAC,eAAe,CAClB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAElB,aAAa,CAACtB,OAAQ,EAC/B,EACE,EACF,cAEN,YAAK,SAAS,CAAC,oBAAoB,uBACjC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEwB,aAAa,CAACtB,CAAE,CACnB,CAAC,CAAEsB,aAAa,CAACrB,CAAE,CACnB,IAAI,CAAC,eAAY,CACjB,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,kDAA+C,CACrD,EAAE,CAAC,eAAe,CAClB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAEhB,aAAa,CAACxB,OAAQ,EAC/B,EACE,EACF,GACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,SAAS,uBACtB,KAAC,YAAY,EACX,KAAK,CAAC,6BAAuB,CAC7B,SAAS,CAAEoC,oBAAqB,EAChC,EACE,EACF,EACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,SAAS,uBACtB,KAAC,YAAY,EACX,KAAK,CAAC,uBAAoB,CAC1B,SAAS,CAAEE,gBAAiB,EAC5B,EACE,EACF,EACF,cAGN,aAAK,SAAS,CAAC,eAAe,wBAC5B,YAAK,SAAS,CAAC,4BAA4B,uBACzC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAE9B,cAAc,CAACN,CAAE,CACpB,CAAC,CAAEM,cAAc,CAACL,CAAE,CACpB,IAAI,CAAC,SAAS,CACd,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,4BAA4B,CAClC,EAAE,CAAC,gBAAgB,CACnB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAEhC,cAAc,CAACR,OAAQ,EAChC,EACE,EACF,cAGN,YAAK,SAAS,CAAC,oBAAoB,uBACjC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEc,aAAa,CAACZ,CAAE,CACnB,CAAC,CAAEY,aAAa,CAACX,CAAE,CACnB,IAAI,CAAC,SAAS,CACd,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,0BAA0B,CAChC,EAAE,CAAC,eAAe,CAClB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAE1B,aAAa,CAACd,OAAQ,CAC/B,WAAW,CAAE,IAAK,EAClB,EACE,EACF,GACF,cAEN,aAAK,SAAS,CAAC,eAAe,wBAC5B,YAAK,SAAS,CAAC,4BAA4B,uBACzC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEU,kBAAkB,CAACR,CAAE,CACxB,CAAC,CAAEQ,kBAAkB,CAACP,CAAE,CACxB,IAAI,CAAC,eACL;AAAA,CACA,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,kCAA+B,CACrC,EAAE,CAAC,oBAAoB,CACvB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAE9B,kBAAkB,CAACV,OAAQ,EACpC,EACE,EACF,cAEN,YAAK,SAAS,CAAC,oBAAoB,uBACjC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEgB,iBAAiB,CAACd,CAAE,CACvB,CAAC,CAAEc,iBAAiB,CAACb,CAAE,CACvB,IAAI,CAAC,eAAY,CACjB,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,gCAA6B,CACnC,EAAE,CAAC,mBAAmB,CACtB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAExB,iBAAiB,CAAChB,OAAQ,CACnC,WAAW,CAAE,IAAK,EAClB,EACE,EACF,GACF,cAEN,aAAK,SAAS,CAAC,eAAe,wBAC5B,YAAK,SAAS,CAAC,4BAA4B,uBACzC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEY,eAAe,CAACV,CAAE,CACrB,CAAC,CAAEU,eAAe,CAACT,CAAE,CACrB,IAAI,CAAC,eACL;AAAA,CACA,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,qCAA+B,CACrC,EAAE,CAAC,iBAAiB,CACpB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAE5B,eAAe,CAACZ,OAAQ,EACjC,EACE,EACF,cAEN,YAAK,SAAS,CAAC,oBAAoB,uBACjC,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,YAAY,EACX,CAAC,CAAEkB,cAAc,CAAChB,CAAE,CACpB,CAAC,CAAEgB,cAAc,CAACf,CAAE,CACpB,IAAI,CAAC,eACL;AAAA,CACA,IAAI,CAAC,KAAK,CACV,KAAK,CAAC,mCAA6B,CACnC,EAAE,CAAC,gBAAgB,CACnB,QAAQ,CAAEoF,YAAa,CACvB,OAAO,CAAE/C,KAAM,CACf,OAAO,CAAEtB,cAAc,CAAClB,OAAQ,EAChC,EACE,EACF,GACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,iBAAiB,EAChB,CAAC,CAAEgC,oBAAoB,CAAC9B,CAAE,CAC1B,CAAC,CAAE8B,oBAAoB,CAAC7B,CAAE,CAC1B,IAAI,CAAC,SAAS,CACd,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,4CAA4C,CAClD,EAAE,CAAC,sBAAsB,CACzB,QAAQ,CAAEmG,cAAe,CACzB,SAAS,CAAEtE,oBAAoB,CAAC1B,SAAU,CAC1C,OAAO,CAAE0B,oBAAoB,CAAChC,OAAQ,CACtC,EAAE,CAAC,KAAK,EACR,EACE,EACF,EACF,cAEN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,6BAA6B,uBAC1C,YAAK,SAAS,CAAC,cAAc,uBAC3B,KAAC,iBAAiB,EAChB,CAAC,CAAEkC,qBAAqB,CAAChC,CAAE,CAC3B,CAAC,CAAEgC,qBAAqB,CAAC/B,CAAE,CAC3B,IAAI,CAAC,SAAS,CACd,IAAI,CAAC,MAAM,CACX,KAAK,CAAC,8CAA8C,CACpD,EAAE,CAAC,uBAAuB,CAC1B,QAAQ,CAAEmG,cAAe,CACzB,SAAS,CAAEpE,qBAAqB,CAAC5B,SAAU,CAC3C,OAAO,CAAE4B,qBAAqB,CAAClC,OAAQ,CACvC,EAAE,CAAC,MAAM,EACT,EACE,EACF,EACF,GACF,cACN,YAAK,SAAS,CAAC,eAAe,uBAC5B,YAAK,SAAS,CAAC,KAAK,uBAClB,YAAK,SAAS,CAAC,WAAW,uBACxB,KAAC,SAAS,EACR,KAAK,CAAC,yCAAmC,CACzC,KAAK,CAAE8C,YAAa,CACpB,IAAI,CAAEa,IAAK,CACX,OAAO,CAAEP,gBAAiB,CAC1B,IAAI,CAAED,IAAK,CACX,WAAW,CAAEgC,iBAAkB,CAC/B,WAAW,CAAER,iBAAkB,CAC/B,OAAO,CAAE3B,YAAa,EACtB,EACE,EACF,EACF,GACF,EACF,EACF,cACN,KAAC,MAAM,IAAG,GACN,CAEV,CAEA,cAAelD,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
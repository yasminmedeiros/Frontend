{"ast":null,"code":"import _objectSpread from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _defineProperty from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _slicedToArray from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { withStyles } from '@material-ui/core/styles';\n// import { green } from '@material-ui/core/colors';\nimport apiSaber from'../../services/apisaber';import Datatable from'../../components/Datatable';import Header from\"../../components/Header\";// import Input from '../../components/Input';\nimport Footer from'../../components/Footer';import{ChartPerYear}from'../../components/ChartPerYear/ChartPerYear';import{LineChartBySchool}from'../../components/LineChartBySchool/LineChartBySchool';import{ChartBySchool}from'../../components/ChartBySchool/ChartBySchool';import PlotlyMapBox from'../../components/PlotlyMapBox';import apisaber from'../../services/apisaber';import'./styles.css';import Select,{createFilter}from'react-select';import CustomOption from\"../../components/Options/CustomOption\";import jsPDF from'jspdf';import'jspdf-autotable';// const GreenCheckbox = withStyles({\n//   root: {\n//     color: green[400],\n//     '&$checked': {\n//       color: green[600],\n//     },\n//   },\n//   checked: {},\n// })((props) => <Checkbox color=\"default\" {...props} />);\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashboard(){// const [escolas, setEscolas] = useState([]);\n// const [query, setQuery] = useState(\"\");\n// const [searchColumns, setSearchColumns] = useState([\"Escola\"]);\nvar dataChart={loading:true,year:2021,x:[],y:[]};var dataChartSchool={loading:true,data_id:0,useSelect:true,x:[],y:[]};var dataLineChart={loading:true,data_id:0,//4556\nuseSelect:true,x:[],y:[]};var _useState=useState(dataChart),_useState2=_slicedToArray(_useState,2),schoolsPerSize=_useState2[0],setSchoolsPerSize=_useState2[1];var _useState3=useState(dataChart),_useState4=_slicedToArray(_useState3,2),enrollmentsPerSize=_useState4[0],setEnrollmentsPerSize=_useState4[1];var _useState5=useState(dataChart),_useState6=_slicedToArray(_useState5,2),averagesPersize=_useState6[0],setAveragePerSize=_useState6[1];var _useState7=useState(dataChart),_useState8=_slicedToArray(_useState7,2),schoolsPerGre=_useState8[0],setSchoolsPerGre=_useState8[1];var _useState9=useState(dataChart),_useState10=_slicedToArray(_useState9,2),enrollmentsPerGre=_useState10[0],setEnrollmentsPerGre=_useState10[1];var _useState11=useState(dataChart),_useState12=_slicedToArray(_useState11,2),averagesPerGre=_useState12[0],setAveragesPerGre=_useState12[1];var _useState13=useState(dataChart),_useState14=_slicedToArray(_useState13,2),highestEnrollments=_useState14[0],setHighestEnrollments=_useState14[1];var _useState15=useState(dataChart),_useState16=_slicedToArray(_useState15,2),enrollmentsJP=_useState16[0],setEnrollmentsJP=_useState16[1];var _useState17=useState(dataChart),_useState18=_slicedToArray(_useState17,2),enrollmentsCG=_useState18[0],setEnrollmentsCG=_useState18[1];var _useState19=useState(dataChartSchool),_useState20=_slicedToArray(_useState19,2),averageIntSchoolEvasion=_useState20[0],setAverageIntSchoolEvasion=_useState20[1];var _useState21=useState(dataLineChart),_useState22=_slicedToArray(_useState21,2),enrollmentsInYears=_useState22[0],setEnrollmentsInYears=_useState22[1];var _useState23=useState(dataLineChart),_useState24=_slicedToArray(_useState23,2),totalEnrollmentsInYears=_useState24[0],setTotalEnrollmentsInYears=_useState24[1];var _useState25=useState(dataLineChart),_useState26=_slicedToArray(_useState25,2),schoolsInYearsPerGre=_useState26[0],setSchoolsInYearsPerGre=_useState26[1];var _useState27=useState(dataLineChart),_useState28=_slicedToArray(_useState27,2),schoolsInYearsPerSize=_useState28[0],setSchoolsInYearsPerSize=_useState28[1];var _useState29=useState([]),_useState30=_slicedToArray(_useState29,2),enrollmentsLocations=_useState30[0],setEnrollmentsLocations=_useState30[1];var _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),schoolsLocations=_useState32[0],setSchoolsLocations=_useState32[1];var _useState33=useState([]),_useState34=_slicedToArray(_useState33,2),years=_useState34[0],setYears=_useState34[1];var _useState35=useState({label:'Todos',value:3}),_useState36=_slicedToArray(_useState35,2),selectedAdministrationType=_useState36[0],setSelectedAdministrationType=_useState36[1];var _useState37=useState([]),_useState38=_slicedToArray(_useState37,2),schoolsInfos=_useState38[0],setSchoolsInfos=_useState38[1];var _useState39=useState(false),_useState40=_slicedToArray(_useState39,2),loadingTabel=_useState40[0],setLoadingTabel=_useState40[1];var _useState41=useState([{label:'Todos',value:3},{label:'Municipal',value:1},{label:'Estadual',value:0}]),_useState42=_slicedToArray(_useState41,1),optionsAdministrationType=_useState42[0];var head=['ID','GRE','UTB','INEP','Município','Escola','Matrículas'];var DataTableColumns=[{field:'id',headerName:head[0],flex:0.10,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'gr',headerName:head[1],flex:0.15,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'utb',headerName:head[2],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'inep',headerName:head[3],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'mun',headerName:head[4],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'left'},{field:'name',headerName:head[5],flex:0.19,headerAlign:'center',headerClassName:'theme-header',align:'left'},{field:'mat',headerName:head[6],flex:0.125,headerAlign:'center',headerClassName:'theme-header',align:'center'}];var rows=schoolsInfos.map(function(item){return{id:item.school_id,gr:item.gre,utb:item.utb?item.utb:'-',inep:item.inep?parseInt(item.inep):'-',mun:item.city,name:item.school,mat:item.enrollments?parseInt(item.enrollments):0};});function handleDownloadPdf(){var doc=new jsPDF();var lines=[];setLoadingTabel(true);schoolsInfos.forEach(function(item){lines.push([item.school_id,item.gre,item.utb?item.utb:'-',item.inep?parseInt(item.inep):'-',item.city,item.school,item.enrollments?parseInt(item.enrollments):0]);});doc.autoTable({head:[head],body:lines});doc.save('escolas.pdf');setLoadingTabel(false);}function handleDownloadCsv(){var heads=head;var serialized=schoolsInfos.map(function(item,index){var _ref;return _ref={},_defineProperty(_ref,heads[0],item.school_id),_defineProperty(_ref,heads[1],item.gre),_defineProperty(_ref,heads[2],item.utb?item.utb:'-'),_defineProperty(_ref,heads[3],item.inep?parseInt(item.inep):'-'),_defineProperty(_ref,heads[4],item.city),_defineProperty(_ref,heads[5],item.school),_defineProperty(_ref,heads[6],item.enrollments?parseInt(item.enrollments):0),_ref;});return serialized;}function onSelectYear(id,option){switch(id){case'highestEnrollments':setHighestEnrollments(_objectSpread(_objectSpread({},highestEnrollments),{},{loading:true}));apiSaber.get(\"/enrollments/get-highest/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setHighestEnrollments({loading:false,year:option,x:x,y:y});});break;case'enrollmentsJP':setEnrollmentsJP(_objectSpread(_objectSpread({},enrollmentsJP),{},{loading:true}));apiSaber.get(\"/enrollments/by-city/?cityName=Jo\\xE3o Pessoa&year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsJP({loading:false,year:option,x:x,y:y});});break;case'enrollmentsCG':setEnrollmentsCG(_objectSpread(_objectSpread({},enrollmentsCG),{},{loading:true}));apiSaber.get(\"/enrollments/by-city/?cityName=Campina Grande&year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsCG({loading:false,year:option,x:x,y:y});});break;case'schoolsPerSize':setSchoolsPerSize(_objectSpread(_objectSpread({},schoolsPerSize),{},{loading:true}));apiSaber.get(\"/enrollments/get-schools-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setSchoolsPerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'enrollmentsPerSize':setEnrollmentsPerSize(_objectSpread(_objectSpread({},enrollmentsPerSize),{},{loading:true}));apiSaber.get(\"/enrollments/get-enrollments-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setEnrollmentsPerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'averagesPersize':setAveragePerSize(_objectSpread(_objectSpread({},averagesPersize),{},{loading:true}));apiSaber.get(\"/enrollments/get-average-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setAveragePerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'schoolsPerGre':setSchoolsPerGre(_objectSpread(_objectSpread({},schoolsPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-schools-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setSchoolsPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'enrollmentsPerGre':setEnrollmentsPerGre(_objectSpread(_objectSpread({},enrollmentsPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-enrollments-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setEnrollmentsPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'averagesPerGre':setAveragesPerGre(_objectSpread(_objectSpread({},averagesPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-average-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setAveragesPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;default:break;}}function onSelectSchool(id,value){switch(id){case'enrollmentsInYears':setEnrollmentsInYears(_objectSpread(_objectSpread({},enrollmentsInYears),{},{loading:true}));apiSaber.get(\"/enrollments/in-years/?school_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setEnrollmentsInYears(_objectSpread(_objectSpread({},enrollmentsInYears),{},{loading:false,data_id:value,x:x,y:y}));}).catch(function(error){return console.log(error);});break;case'schoolsInYearsPerGre':setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:true}));apisaber.get(\"/schools/in-years-gre/?gre_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:false,data_id:value,x:x,y:y}));});break;case'schoolsInYearsPerSize':setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:true}));apisaber.get(\"/schools/in-years-size/?size_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:false,data_id:value,x:x,y:y}));});break;case'averageIntSchoolEvasion':setAverageIntSchoolEvasion(_objectSpread(_objectSpread({},averageIntSchoolEvasion),{},{loading:true}));apisaber.get(\"/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setAverageIntSchoolEvasion(_objectSpread(_objectSpread({},averageIntSchoolEvasion),{},{loading:false,data_id:value,x:x,y:y}));});break;default:break;}}useEffect(function(){apiSaber.get(\"/enrollments/get-years/?type=\".concat(selectedAdministrationType.value)).then(function(response){var options=response.data.map(function(item){return item.year;});setYears(options);}).catch(function(error){return console.log(error);});if(highestEnrollments.year){apiSaber.get(\"/enrollments/get-highest/?year=\".concat(highestEnrollments.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setHighestEnrollments(_objectSpread(_objectSpread({},highestEnrollments),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsJP.year){apiSaber.get(\"/enrollments/by-city/?cityName=Jo\\xE3o Pessoa&year=\".concat(enrollmentsJP.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsJP(_objectSpread(_objectSpread({},enrollmentsJP),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsCG.year){apiSaber.get(\"/enrollments/by-city/?cityName=Campina Grande&year=\".concat(enrollmentsCG.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsCG(_objectSpread(_objectSpread({},enrollmentsCG),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(schoolsPerSize.year){apiSaber.get(\"/enrollments/get-schools-by-size/?year=\".concat(schoolsPerSize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setSchoolsPerSize(_objectSpread(_objectSpread({},schoolsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsPerSize.year){apiSaber.get(\"/enrollments/get-enrollments-by-size/?year=\".concat(enrollmentsPerSize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setEnrollmentsPerSize(_objectSpread(_objectSpread({},enrollmentsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(averagesPersize.year){apiSaber.get(\"/enrollments/get-average-by-size/?year=\".concat(averagesPersize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setAveragePerSize(_objectSpread(_objectSpread({},averagesPersize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(schoolsPerGre.year){apiSaber.get(\"/enrollments/get-schools-by-gre/?year=\".concat(schoolsPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setSchoolsPerGre(_objectSpread(_objectSpread({},schoolsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsPerGre.year){apiSaber.get(\"/enrollments/get-enrollments-by-gre/?year=\".concat(enrollmentsPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setEnrollmentsPerGre(_objectSpread(_objectSpread({},enrollmentsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(averagesPerGre.year){apiSaber.get(\"/enrollments/get-average-by-gre/?year=\".concat(averagesPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setAveragesPerGre(_objectSpread(_objectSpread({},averagesPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}apisaber.get(\"/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=\".concat(averageIntSchoolEvasion.data_id===0?3:averageIntSchoolEvasion.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setAverageIntSchoolEvasion(_objectSpread(_objectSpread({},averageIntSchoolEvasion),{},{loading:false,x:x,y:y}));});apiSaber.get(\"/enrollments/in-years/?school_id=\".concat(enrollmentsInYears.data_id===0?4556:enrollmentsInYears.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setEnrollmentsInYears(_objectSpread(_objectSpread({},enrollmentsInYears),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apisaber.get(\"/schools/in-years-gre/?gre_id=\".concat(schoolsInYearsPerGre.data_id===0?1:schoolsInYearsPerGre.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apisaber.get(\"/schools/in-years-size/?size_id=\".concat(schoolsInYearsPerSize.data_id===0?1:schoolsInYearsPerSize.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/total-in-years?type=\".concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setTotalEnrollmentsInYears(_objectSpread(_objectSpread({},totalEnrollmentsInYears),{},{useSelect:false,loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/get-city-location?type=\".concat(selectedAdministrationType.value)).then(function(response){var enrollmentsLocations=response.data.map(function(item){return{latitude:item.latitude,longitude:item.longitude,data:item.enrollments};});var schoolsLocations=response.data.map(function(item){return{latitude:item.latitude,longitude:item.longitude,data:item.schools};});setEnrollmentsLocations(enrollmentsLocations);setSchoolsLocations(schoolsLocations);}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/get-all-schools-info?type=\".concat(selectedAdministrationType.value)).then(function(response){var serialized=response.data.map(function(item){return{school_id:item.school_id,gre:item.gre,utb:item.utb?item.utb:'-',inep:item.inep?parseInt(item.inep):'-',city:item.city,school:item.school,enrollments:item.enrollments?parseInt(item.enrollments):0};});setSchoolsInfos(serialized);}).catch(function(error){return console.log(error);});},[selectedAdministrationType]);// function search(rows) {\n//   return rows.filter((row) =>\n//     searchColumns.some(\n//       (column) =>\n//         row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n//     )\n//   );\n// }\n// const columns = escolas[0] && Object.keys(escolas[0]).filter((column) => column !== 'field1' && column !== 'Unnamed: 7');\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"dash\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{id:\"wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-area\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-sm container-fluid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"administration-type\",children:/*#__PURE__*/_jsx(Select,{className:\"basic-single\",classNamePrefix:\"custom-select\",isSearchable:false,value:selectedAdministrationType,options:optionsAdministrationType,components:{Option:CustomOption},filterOption:createFilter({ignoreAccents:false}),onChange:function onChange(value){return setSelectedAdministrationType(value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:totalEnrollmentsInYears.x,y:totalEnrollmentsInYears.y,name:\"Matr\\xEDculas\",type:\"line\",title:\"Total de matr\\xEDculas na Para\\xEDba ao longo dos anos\",id:\"totalEnrollmentsInYears\"// onChange={onSelectSchool}\n,useSelect:totalEnrollmentsInYears.useSelect,loading:totalEnrollmentsInYears.loading})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:highestEnrollments.x,y:highestEnrollments.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Escolas paraibanas com maior n\\xFAmero de matr\\xEDculas\",id:\"highestEnrollments\",onSelect:onSelectYear,options:years,loading:highestEnrollments.loading})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:enrollmentsInYears.x,y:enrollmentsInYears.y,name:\"Matr\\xEDculas\",type:\"line\",title:\"Quantidade de matr\\xEDculas ao longo dos anos\",id:\"enrollmentsInYears\",onChange:onSelectSchool,useSelect:enrollmentsInYears.useSelect,loading:enrollmentsInYears.loading,by:\"school\",administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartBySchool,{x:averageIntSchoolEvasion.x,y:averageIntSchoolEvasion.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"M\\xE9dia de matr\\xEDculas em escolas integrais anteriormente regulares\",id:\"averageIntSchoolEvasion\",onChange:onSelectSchool,useSelect:averageIntSchoolEvasion.useSelect,loading:averageIntSchoolEvasion.loading,administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsJP.x,y:enrollmentsJP.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"Escolas de Jo\\xE3o Pessoa com mais Matr\\xEDculas\",id:\"enrollmentsJP\",onSelect:onSelectYear,options:years,loading:enrollmentsJP.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsCG.x,y:enrollmentsCG.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Escolas de Campina Grande com mais Matr\\xEDculas\",id:\"enrollmentsCG\",onSelect:onSelectYear,options:years,loading:enrollmentsCG.loading})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"map box\",children:/*#__PURE__*/_jsx(PlotlyMapBox,{title:\"Matr\\xEDculas por regi\\xE3o\",locations:enrollmentsLocations})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"map box\",children:/*#__PURE__*/_jsx(PlotlyMapBox,{title:\"Escolas por regi\\xE3o\",locations:schoolsLocations})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:schoolsPerSize.x,y:schoolsPerSize.y,name:\"Escolas\",type:\"bar\",title:\"Total de Escolas por Porte\",id:\"schoolsPerSize\",onSelect:onSelectYear,options:years,loading:schoolsPerSize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:schoolsPerGre.x,y:schoolsPerGre.y,name:\"Escolas\",type:\"bar\",title:\"Total de Escolas por GRE\",id:\"schoolsPerGre\",onSelect:onSelectYear,options:years,loading:schoolsPerGre.loading,viewPercent:true})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsPerSize.x,y:enrollmentsPerSize.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"Total de Matr\\xEDculas por Porte\",id:\"enrollmentsPerSize\",onSelect:onSelectYear,options:years,loading:enrollmentsPerSize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsPerGre.x,y:enrollmentsPerGre.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Total de Matr\\xEDculas por GRE\",id:\"enrollmentsPerGre\",onSelect:onSelectYear,options:years,loading:enrollmentsPerGre.loading,viewPercent:true})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:averagesPersize.x,y:averagesPersize.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"M\\xE9dia de Matr\\xEDculas por Porte\",id:\"averagesPersize\",onSelect:onSelectYear,options:years,loading:averagesPersize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:averagesPerGre.x,y:averagesPerGre.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"M\\xE9dia de Matr\\xEDculas por GRE\",id:\"averagesPerGre\",onSelect:onSelectYear,options:years,loading:averagesPerGre.loading})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:schoolsInYearsPerGre.x,y:schoolsInYearsPerGre.y,name:\"Escolas\",type:\"line\",title:\"Total de escolas por GRE ao longo dos anos\",id:\"schoolsInYearsPerGre\",onChange:onSelectSchool,useSelect:schoolsInYearsPerGre.useSelect,loading:schoolsInYearsPerGre.loading,by:\"gre\"})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:schoolsInYearsPerSize.x,y:schoolsInYearsPerSize.y,name:\"Escolas\",type:\"line\",title:\"Total de escolas por porte ao longo dos anos\",id:\"schoolsInYearsPerSize\",onChange:onSelectSchool,useSelect:schoolsInYearsPerSize.useSelect,loading:schoolsInYearsPerSize.loading,by:\"size\"})})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 bm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table box\",children:/*#__PURE__*/_jsx(Datatable,{title:\"Escolas por Tipo de Administra\\xE7\\xE3o\",infos:schoolsInfos,rows:rows,columns:DataTableColumns,head:head,downloadCsv:handleDownloadCsv,downloadPdf:handleDownloadPdf,loading:loadingTabel})})})})]})})}),/*#__PURE__*/_jsx(Footer,{})]});}export default Dashboard;","map":{"version":3,"sources":["/home/yasmin/Área de Trabalho/Frontend/src/pages/Dashboard/index.jsx"],"names":["React","useState","useEffect","apiSaber","Datatable","Header","Footer","ChartPerYear","LineChartBySchool","ChartBySchool","PlotlyMapBox","apisaber","Select","createFilter","CustomOption","jsPDF","Dashboard","dataChart","loading","year","x","y","dataChartSchool","data_id","useSelect","dataLineChart","schoolsPerSize","setSchoolsPerSize","enrollmentsPerSize","setEnrollmentsPerSize","averagesPersize","setAveragePerSize","schoolsPerGre","setSchoolsPerGre","enrollmentsPerGre","setEnrollmentsPerGre","averagesPerGre","setAveragesPerGre","highestEnrollments","setHighestEnrollments","enrollmentsJP","setEnrollmentsJP","enrollmentsCG","setEnrollmentsCG","averageIntSchoolEvasion","setAverageIntSchoolEvasion","enrollmentsInYears","setEnrollmentsInYears","totalEnrollmentsInYears","setTotalEnrollmentsInYears","schoolsInYearsPerGre","setSchoolsInYearsPerGre","schoolsInYearsPerSize","setSchoolsInYearsPerSize","enrollmentsLocations","setEnrollmentsLocations","schoolsLocations","setSchoolsLocations","years","setYears","label","value","selectedAdministrationType","setSelectedAdministrationType","schoolsInfos","setSchoolsInfos","loadingTabel","setLoadingTabel","optionsAdministrationType","head","DataTableColumns","field","headerName","flex","headerAlign","headerClassName","align","rows","map","item","id","school_id","gr","gre","utb","inep","parseInt","mun","city","name","school","mat","enrollments","handleDownloadPdf","doc","lines","forEach","push","autoTable","body","save","handleDownloadCsv","heads","serialized","index","onSelectYear","option","get","then","response","data","escolas","sum","slice","size","key","catch","error","console","log","onSelectSchool","options","latitude","longitude","schools","Option","ignoreAccents"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import FormControlLabel from '@material-ui/core/FormControlLabel';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import { withStyles } from '@material-ui/core/styles';\n// import { green } from '@material-ui/core/colors';\n\nimport apiSaber from '../../services/apisaber';\nimport Datatable from '../../components/Datatable';\nimport Header from \"../../components/Header\";\n// import Input from '../../components/Input';\nimport Footer from '../../components/Footer';\nimport { ChartPerYear } from '../../components/ChartPerYear/ChartPerYear';\nimport { LineChartBySchool } from '../../components/LineChartBySchool/LineChartBySchool';\nimport { ChartBySchool } from '../../components/ChartBySchool/ChartBySchool';\nimport PlotlyMapBox from '../../components/PlotlyMapBox';\nimport apisaber from '../../services/apisaber';\nimport './styles.css';\nimport Select, { createFilter } from 'react-select';\nimport CustomOption from \"../../components/Options/CustomOption\";\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\n// const GreenCheckbox = withStyles({\n//   root: {\n//     color: green[400],\n//     '&$checked': {\n//       color: green[600],\n//     },\n//   },\n//   checked: {},\n// })((props) => <Checkbox color=\"default\" {...props} />);\n\nfunction Dashboard() {\n  // const [escolas, setEscolas] = useState([]);\n  // const [query, setQuery] = useState(\"\");\n  // const [searchColumns, setSearchColumns] = useState([\"Escola\"]);\n  const dataChart = {\n    loading: true,\n    year: 2021,\n    x: [],\n    y: [],\n  };\n\n  const dataChartSchool = {\n    loading: true,\n    data_id: 0,\n    useSelect: true,\n    x: [],\n    y: [],\n  }\n\n  const dataLineChart = {\n    loading: true,\n    data_id: 0, //4556\n    useSelect: true,\n    x: [],\n    y: [],\n  };\n\n  const [schoolsPerSize, setSchoolsPerSize] = useState(dataChart);\n  const [enrollmentsPerSize, setEnrollmentsPerSize] = useState(dataChart);\n  const [averagesPersize, setAveragePerSize] = useState(dataChart);\n  const [schoolsPerGre, setSchoolsPerGre] = useState(dataChart);\n  const [enrollmentsPerGre, setEnrollmentsPerGre] = useState(dataChart);\n  const [averagesPerGre, setAveragesPerGre] = useState(dataChart);\n  const [highestEnrollments, setHighestEnrollments] = useState(dataChart);\n  const [enrollmentsJP, setEnrollmentsJP] = useState(dataChart);\n  const [enrollmentsCG, setEnrollmentsCG] = useState(dataChart);\n  const [averageIntSchoolEvasion, setAverageIntSchoolEvasion] = useState(dataChartSchool);\n  const [enrollmentsInYears, setEnrollmentsInYears] = useState(dataLineChart);\n  const [totalEnrollmentsInYears, setTotalEnrollmentsInYears] = useState(dataLineChart);\n  const [schoolsInYearsPerGre, setSchoolsInYearsPerGre] = useState(dataLineChart);\n  const [schoolsInYearsPerSize, setSchoolsInYearsPerSize] = useState(dataLineChart);\n  const [enrollmentsLocations, setEnrollmentsLocations] = useState([]);\n  const [schoolsLocations, setSchoolsLocations] = useState([]);\n  const [years, setYears] = useState([]);\n  const [selectedAdministrationType, setSelectedAdministrationType] = useState({ label: 'Todos', value: 3 });\n  const [schoolsInfos, setSchoolsInfos] = useState([]);\n  const [loadingTabel, setLoadingTabel] = useState(false);\n  const [optionsAdministrationType] = useState([\n    {\n      label: 'Todos',\n      value: 3,\n    },\n    {\n      label: 'Municipal',\n      value: 1,\n    },\n    {\n      label: 'Estadual',\n      value: 0,\n    }\n  ]);\n\n  const head = ['ID', 'GRE', 'UTB', 'INEP', 'Município', 'Escola', 'Matrículas'];\n  const DataTableColumns = [\n    { field: 'id', headerName: head[0], flex: 0.10, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'gr', headerName: head[1], flex: 0.15, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'utb', headerName: head[2], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'inep', headerName: head[3], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'mun', headerName: head[4], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'left' },\n    { field: 'name', headerName: head[5], flex: 0.19, headerAlign: 'center', headerClassName: 'theme-header', align: 'left' },\n    { field: 'mat', headerName: head[6], flex: 0.125, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' }\n  ];\n\n  const rows = schoolsInfos.map((item) => ({\n    id: item.school_id,\n    gr: item.gre,\n    utb: item.utb ? item.utb : '-',\n    inep: item.inep ? parseInt(item.inep) : '-',\n    mun: item.city,\n    name: item.school,\n    mat: item.enrollments ? parseInt(item.enrollments) : 0,\n  }));\n\n  function handleDownloadPdf() {\n    const doc = new jsPDF();\n    const lines = [];\n\n    setLoadingTabel(true);\n\n    schoolsInfos.forEach(item => {\n      lines.push([\n        item.school_id,\n        item.gre,\n        item.utb ? item.utb : '-',\n        item.inep ? parseInt(item.inep) : '-',\n        item.city,\n        item.school,\n        item.enrollments ? parseInt(item.enrollments) : 0,\n      ]);\n    });\n\n    doc.autoTable({\n      head: [head],\n      body: lines,\n    });\n\n    doc.save('escolas.pdf');\n\n    setLoadingTabel(false);\n  }\n\n  function handleDownloadCsv() {\n    const heads = head;\n    const serialized = schoolsInfos.map((item, index) => ({\n      [heads[0]]: item.school_id,\n      [heads[1]]: item.gre,\n      [heads[2]]: item.utb ? item.utb : '-',\n      [heads[3]]: item.inep ? parseInt(item.inep) : '-',\n      [heads[4]]: item.city,\n      [heads[5]]: item.school,\n      [heads[6]]: item.enrollments ? parseInt(item.enrollments) : 0,\n    }));\n\n    return serialized;\n  }\n\n\n  function onSelectYear(id, option) {\n    switch (id) {\n      case 'highestEnrollments':\n        setHighestEnrollments({ ...highestEnrollments, loading: true });\n        apiSaber.get(`/enrollments/get-highest/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setHighestEnrollments({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'enrollmentsJP':\n        setEnrollmentsJP({ ...enrollmentsJP, loading: true });\n        apiSaber.get(`/enrollments/by-city/?cityName=João Pessoa&year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setEnrollmentsJP({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'enrollmentsCG':\n        setEnrollmentsCG({ ...enrollmentsCG, loading: true });\n        apiSaber.get(`/enrollments/by-city/?cityName=Campina Grande&year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setEnrollmentsCG({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'schoolsPerSize':\n        setSchoolsPerSize({ ...schoolsPerSize, loading: true });\n        apiSaber.get(`/enrollments/get-schools-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setSchoolsPerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'enrollmentsPerSize':\n        setEnrollmentsPerSize({ ...enrollmentsPerSize, loading: true });\n        apiSaber.get(`/enrollments/get-enrollments-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setEnrollmentsPerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'averagesPersize':\n        setAveragePerSize({ ...averagesPersize, loading: true });\n        apiSaber.get(`/enrollments/get-average-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setAveragePerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'schoolsPerGre':\n        setSchoolsPerGre({ ...schoolsPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-schools-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setSchoolsPerGre({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'enrollmentsPerGre':\n        setEnrollmentsPerGre({ ...enrollmentsPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-enrollments-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setEnrollmentsPerGre({ loading: false, year: option, x, y });\n\n        }).catch(error => console.log(error));\n        break;\n\n      case 'averagesPerGre':\n        setAveragesPerGre({ ...averagesPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-average-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setAveragesPerGre({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function onSelectSchool(id, value) {\n    switch (id) {\n      case 'enrollmentsInYears':\n        setEnrollmentsInYears({ ...enrollmentsInYears, loading: true });\n        apiSaber.get(`/enrollments/in-years/?school_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setEnrollmentsInYears({ ...enrollmentsInYears, loading: false, data_id: value, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'schoolsInYearsPerGre':\n        setSchoolsInYearsPerGre({ ...schoolsInYearsPerGre, loading: true });\n        apisaber.get(`/schools/in-years-gre/?gre_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setSchoolsInYearsPerGre({\n            ...schoolsInYearsPerGre,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      case 'schoolsInYearsPerSize':\n        setSchoolsInYearsPerSize({ ...schoolsInYearsPerSize, loading: true });\n        apisaber.get(`/schools/in-years-size/?size_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setSchoolsInYearsPerSize({\n            ...schoolsInYearsPerSize,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      case 'averageIntSchoolEvasion':\n        setAverageIntSchoolEvasion({ ...averageIntSchoolEvasion, loading: true });\n        apisaber.get(`/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setAverageIntSchoolEvasion({\n            ...averageIntSchoolEvasion,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    apiSaber.get(`/enrollments/get-years/?type=${selectedAdministrationType.value}`).then(response => {\n      const options = response.data.map(item => item.year);\n      setYears(options);\n    }).catch(error => console.log(error));\n\n    if (highestEnrollments.year) {\n      apiSaber.get(`/enrollments/get-highest/?year=${highestEnrollments.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setHighestEnrollments({ ...highestEnrollments, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsJP.year) {\n      apiSaber.get(`/enrollments/by-city/?cityName=João Pessoa&year=${enrollmentsJP.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setEnrollmentsJP({ ...enrollmentsJP, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsCG.year) {\n      apiSaber.get(`/enrollments/by-city/?cityName=Campina Grande&year=${enrollmentsCG.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setEnrollmentsCG({ ...enrollmentsCG, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (schoolsPerSize.year) {\n      apiSaber.get(`/enrollments/get-schools-by-size/?year=${schoolsPerSize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setSchoolsPerSize({ ...schoolsPerSize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsPerSize.year) {\n      apiSaber.get(`/enrollments/get-enrollments-by-size/?year=${enrollmentsPerSize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setEnrollmentsPerSize({ ...enrollmentsPerSize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (averagesPersize.year) {\n      apiSaber.get(`/enrollments/get-average-by-size/?year=${averagesPersize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setAveragePerSize({ ...averagesPersize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (schoolsPerGre.year) {\n      apiSaber.get(`/enrollments/get-schools-by-gre/?year=${schoolsPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setSchoolsPerGre({ ...schoolsPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsPerGre.year) {\n      apiSaber.get(`/enrollments/get-enrollments-by-gre/?year=${enrollmentsPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setEnrollmentsPerGre({ ...enrollmentsPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (averagesPerGre.year) {\n      apiSaber.get(`/enrollments/get-average-by-gre/?year=${averagesPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setAveragesPerGre({ ...averagesPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    apisaber.get(`/enrollments/get-mean-integral-school-evasion-previously-regular/?school_id=${averageIntSchoolEvasion.data_id === 0 ? 3 : averageIntSchoolEvasion.data_id}&type=${selectedAdministrationType.value}`).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setAverageIntSchoolEvasion({ ...averageIntSchoolEvasion, loading: false, x, y });\n    });\n\n    apiSaber.get(\n      `/enrollments/in-years/?school_id=${enrollmentsInYears.data_id === 0 ? 4556 : enrollmentsInYears.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setEnrollmentsInYears({ ...enrollmentsInYears, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apisaber.get(\n      `/schools/in-years-gre/?gre_id=${schoolsInYearsPerGre.data_id === 0 ? 1 : schoolsInYearsPerGre.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setSchoolsInYearsPerGre({ ...schoolsInYearsPerGre, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apisaber.get(\n      `/schools/in-years-size/?size_id=${schoolsInYearsPerSize.data_id === 0 ? 1 : schoolsInYearsPerSize.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setSchoolsInYearsPerSize({ ...schoolsInYearsPerSize, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/total-in-years?type=${selectedAdministrationType.value}`).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setTotalEnrollmentsInYears({ ...totalEnrollmentsInYears, useSelect: false, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/get-city-location?type=${selectedAdministrationType.value}`).then(response => {\n      const enrollmentsLocations = response.data.map(item => {\n        return {\n          latitude: item.latitude,\n          longitude: item.longitude,\n          data: item.enrollments,\n        };\n      });\n\n      const schoolsLocations = response.data.map(item => {\n        return {\n          latitude: item.latitude,\n          longitude: item.longitude,\n          data: item.schools,\n        };\n      });\n\n      setEnrollmentsLocations(enrollmentsLocations);\n      setSchoolsLocations(schoolsLocations);\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/get-all-schools-info?type=${selectedAdministrationType.value}`).then(response => {\n      const serialized = response.data.map(item => {\n        return {\n          school_id: item.school_id,\n          gre: item.gre,\n          utb: item.utb ? item.utb : '-',\n          inep: item.inep ? parseInt(item.inep) : '-',\n          city: item.city,\n          school: item.school,\n          enrollments: item.enrollments ? parseInt(item.enrollments) : 0,\n        }\n      });\n\n      setSchoolsInfos(serialized);\n    }).catch(error => console.log(error));\n  }, [selectedAdministrationType]);\n\n  // function search(rows) {\n  //   return rows.filter((row) =>\n  //     searchColumns.some(\n  //       (column) =>\n  //         row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n  //     )\n  //   );\n  // }\n\n  // const columns = escolas[0] && Object.keys(escolas[0]).filter((column) => column !== 'field1' && column !== 'Unnamed: 7');\n\n  return (\n    <div className=\"dash\">\n      <Header />\n      <div id=\"wrapper\">\n        <div className=\"content-area\">\n          <div className=\"container-sm container-fluid\">\n            <div className=\"main\">\n              <div className='administration-type'>\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"custom-select\"\n                  isSearchable={false}\n                  value={selectedAdministrationType}\n                  options={optionsAdministrationType}\n                  components={{ Option: CustomOption }}\n                  filterOption={createFilter({ ignoreAccents: false })}\n                  onChange={value => setSelectedAdministrationType(value)}\n                />\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={totalEnrollmentsInYears.x}\n                      y={totalEnrollmentsInYears.y}\n                      name='Matrículas'\n                      type=\"line\"\n                      title=\"Total de matrículas na Paraíba ao longo dos anos\"\n                      id=\"totalEnrollmentsInYears\"\n                      // onChange={onSelectSchool}\n                      useSelect={totalEnrollmentsInYears.useSelect}\n                      loading={totalEnrollmentsInYears.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={highestEnrollments.x}\n                      y={highestEnrollments.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Escolas paraibanas com maior número de matrículas\"\n                      id=\"highestEnrollments\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={highestEnrollments.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={enrollmentsInYears.x}\n                      y={enrollmentsInYears.y}\n                      name='Matrículas'\n                      type=\"line\"\n                      title=\"Quantidade de matrículas ao longo dos anos\"\n                      id=\"enrollmentsInYears\"\n                      onChange={onSelectSchool}\n                      useSelect={enrollmentsInYears.useSelect}\n                      loading={enrollmentsInYears.loading}\n                      by=\"school\"\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartBySchool\n                      x={averageIntSchoolEvasion.x}\n                      y={averageIntSchoolEvasion.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Média de matrículas em escolas integrais anteriormente regulares\"\n                      id=\"averageIntSchoolEvasion\"\n                      onChange={onSelectSchool}\n                      useSelect={averageIntSchoolEvasion.useSelect}\n                      loading={averageIntSchoolEvasion.loading}\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsJP.x}\n                      y={enrollmentsJP.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Escolas de João Pessoa com mais Matrículas\"\n                      id=\"enrollmentsJP\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsJP.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsCG.x}\n                      y={enrollmentsCG.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Escolas de Campina Grande com mais Matrículas\"\n                      id=\"enrollmentsCG\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsCG.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='row mt-4 mb-4'>\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"map box\">\n                    <PlotlyMapBox\n                      title=\"Matrículas por região\"\n                      locations={enrollmentsLocations}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className='row mt-4 mb-4'>\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"map box\">\n                    <PlotlyMapBox\n                      title=\"Escolas por região\"\n                      locations={schoolsLocations}\n                    />\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={schoolsPerSize.x}\n                      y={schoolsPerSize.y}\n                      name='Escolas'\n                      type=\"bar\"\n                      title=\"Total de Escolas por Porte\"\n                      id=\"schoolsPerSize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={schoolsPerSize.loading}\n                    />\n                  </div>\n                </div>\n\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={schoolsPerGre.x}\n                      y={schoolsPerGre.y}\n                      name='Escolas'\n                      type=\"bar\"\n                      title=\"Total de Escolas por GRE\"\n                      id=\"schoolsPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={schoolsPerGre.loading}\n                      viewPercent={true}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsPerSize.x}\n                      y={enrollmentsPerSize.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Total de Matrículas por Porte\"\n                      id=\"enrollmentsPerSize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsPerSize.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsPerGre.x}\n                      y={enrollmentsPerGre.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Total de Matrículas por GRE\"\n                      id=\"enrollmentsPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsPerGre.loading}\n                      viewPercent={true}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={averagesPersize.x}\n                      y={averagesPersize.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Média de Matrículas por Porte\"\n                      id=\"averagesPersize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={averagesPersize.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={averagesPerGre.x}\n                      y={averagesPerGre.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Média de Matrículas por GRE\"\n                      id=\"averagesPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={averagesPerGre.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={schoolsInYearsPerGre.x}\n                      y={schoolsInYearsPerGre.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Total de escolas por GRE ao longo dos anos\"\n                      id=\"schoolsInYearsPerGre\"\n                      onChange={onSelectSchool}\n                      useSelect={schoolsInYearsPerGre.useSelect}\n                      loading={schoolsInYearsPerGre.loading}\n                      by=\"gre\"\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={schoolsInYearsPerSize.x}\n                      y={schoolsInYearsPerSize.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Total de escolas por porte ao longo dos anos\"\n                      id=\"schoolsInYearsPerSize\"\n                      onChange={onSelectSchool}\n                      useSelect={schoolsInYearsPerSize.useSelect}\n                      loading={schoolsInYearsPerSize.loading}\n                      by=\"size\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"row mt-4 bm-4\">\n              <div className=\"col\">\n                <div className=\"table box\">\n                  <Datatable\n                    title=\"Escolas por Tipo de Administração\"\n                    infos={schoolsInfos}\n                    rows={rows}\n                    columns={DataTableColumns}\n                    head={head}\n                    downloadCsv={handleDownloadCsv}\n                    downloadPdf={handleDownloadPdf}\n                    loading={loadingTabel}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}
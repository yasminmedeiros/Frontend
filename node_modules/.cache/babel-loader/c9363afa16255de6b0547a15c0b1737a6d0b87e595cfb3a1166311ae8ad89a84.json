{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar convert = require('./convert');\nfunction ScatterMapbox(subplot, uid) {\n  this.subplot = subplot;\n  this.uid = uid;\n  this.sourceIds = {\n    fill: uid + '-source-fill',\n    line: uid + '-source-line',\n    circle: uid + '-source-circle',\n    symbol: uid + '-source-symbol'\n  };\n  this.layerIds = {\n    fill: uid + '-layer-fill',\n    line: uid + '-layer-line',\n    circle: uid + '-layer-circle',\n    symbol: uid + '-layer-symbol'\n  };\n  this.order = ['fill', 'line', 'circle', 'symbol'];\n\n  // We could merge the 'fill' source with the 'line' source and\n  // the 'circle' source with the 'symbol' source if ever having\n  // for up-to 4 sources per 'scattermapbox' traces becomes a problem.\n}\n\nvar proto = ScatterMapbox.prototype;\nproto.addSource = function (k, opts) {\n  this.subplot.map.addSource(this.sourceIds[k], {\n    type: 'geojson',\n    data: opts.geojson\n  });\n};\nproto.setSourceData = function (k, opts) {\n  this.subplot.map.getSource(this.sourceIds[k]).setData(opts.geojson);\n};\nproto.addLayer = function (k, opts) {\n  this.subplot.map.addLayer({\n    type: k,\n    id: this.layerIds[k],\n    source: this.sourceIds[k],\n    layout: opts.layout,\n    paint: opts.paint\n  });\n};\nproto.update = function update(calcTrace) {\n  var subplot = this.subplot;\n  var optsAll = convert(calcTrace);\n  for (var i = 0; i < this.order.length; i++) {\n    var k = this.order[i];\n    var opts = optsAll[k];\n    subplot.setOptions(this.layerIds[k], 'setLayoutProperty', opts.layout);\n    if (opts.layout.visibility === 'visible') {\n      this.setSourceData(k, opts);\n      subplot.setOptions(this.layerIds[k], 'setPaintProperty', opts.paint);\n    }\n  }\n\n  // link ref for quick update during selections\n  calcTrace[0].trace._glTrace = this;\n};\nproto.dispose = function dispose() {\n  var map = this.subplot.map;\n  for (var i = 0; i < this.order.length; i++) {\n    var k = this.order[i];\n    map.removeLayer(this.layerIds[k]);\n    map.removeSource(this.sourceIds[k]);\n  }\n};\nmodule.exports = function createScatterMapbox(subplot, calcTrace) {\n  var trace = calcTrace[0].trace;\n  var scatterMapbox = new ScatterMapbox(subplot, trace.uid);\n  var optsAll = convert(calcTrace);\n  for (var i = 0; i < scatterMapbox.order.length; i++) {\n    var k = scatterMapbox.order[i];\n    var opts = optsAll[k];\n    scatterMapbox.addSource(k, opts);\n    scatterMapbox.addLayer(k, opts);\n  }\n\n  // link ref for quick update during selections\n  calcTrace[0].trace._glTrace = scatterMapbox;\n  return scatterMapbox;\n};","map":{"version":3,"names":["convert","require","ScatterMapbox","subplot","uid","sourceIds","fill","line","circle","symbol","layerIds","order","proto","prototype","addSource","k","opts","map","type","data","geojson","setSourceData","getSource","setData","addLayer","id","source","layout","paint","update","calcTrace","optsAll","i","length","setOptions","visibility","trace","_glTrace","dispose","removeLayer","removeSource","module","exports","createScatterMapbox","scatterMapbox"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scattermapbox/plot.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar convert = require('./convert');\n\nfunction ScatterMapbox(subplot, uid) {\n    this.subplot = subplot;\n    this.uid = uid;\n\n    this.sourceIds = {\n        fill: uid + '-source-fill',\n        line: uid + '-source-line',\n        circle: uid + '-source-circle',\n        symbol: uid + '-source-symbol'\n    };\n\n    this.layerIds = {\n        fill: uid + '-layer-fill',\n        line: uid + '-layer-line',\n        circle: uid + '-layer-circle',\n        symbol: uid + '-layer-symbol'\n    };\n\n    this.order = ['fill', 'line', 'circle', 'symbol'];\n\n    // We could merge the 'fill' source with the 'line' source and\n    // the 'circle' source with the 'symbol' source if ever having\n    // for up-to 4 sources per 'scattermapbox' traces becomes a problem.\n}\n\nvar proto = ScatterMapbox.prototype;\n\nproto.addSource = function(k, opts) {\n    this.subplot.map.addSource(this.sourceIds[k], {\n        type: 'geojson',\n        data: opts.geojson\n    });\n};\n\nproto.setSourceData = function(k, opts) {\n    this.subplot.map\n        .getSource(this.sourceIds[k])\n        .setData(opts.geojson);\n};\n\nproto.addLayer = function(k, opts) {\n    this.subplot.map.addLayer({\n        type: k,\n        id: this.layerIds[k],\n        source: this.sourceIds[k],\n        layout: opts.layout,\n        paint: opts.paint\n    });\n};\n\nproto.update = function update(calcTrace) {\n    var subplot = this.subplot;\n    var optsAll = convert(calcTrace);\n\n    for(var i = 0; i < this.order.length; i++) {\n        var k = this.order[i];\n        var opts = optsAll[k];\n\n        subplot.setOptions(this.layerIds[k], 'setLayoutProperty', opts.layout);\n\n        if(opts.layout.visibility === 'visible') {\n            this.setSourceData(k, opts);\n            subplot.setOptions(this.layerIds[k], 'setPaintProperty', opts.paint);\n        }\n    }\n\n    // link ref for quick update during selections\n    calcTrace[0].trace._glTrace = this;\n};\n\nproto.dispose = function dispose() {\n    var map = this.subplot.map;\n\n    for(var i = 0; i < this.order.length; i++) {\n        var k = this.order[i];\n        map.removeLayer(this.layerIds[k]);\n        map.removeSource(this.sourceIds[k]);\n    }\n};\n\nmodule.exports = function createScatterMapbox(subplot, calcTrace) {\n    var trace = calcTrace[0].trace;\n    var scatterMapbox = new ScatterMapbox(subplot, trace.uid);\n    var optsAll = convert(calcTrace);\n\n    for(var i = 0; i < scatterMapbox.order.length; i++) {\n        var k = scatterMapbox.order[i];\n        var opts = optsAll[k];\n\n        scatterMapbox.addSource(k, opts);\n        scatterMapbox.addLayer(k, opts);\n    }\n\n    // link ref for quick update during selections\n    calcTrace[0].trace._glTrace = scatterMapbox;\n\n    return scatterMapbox;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar filterOps = require('../../constants/filter_ops');\nvar isNumeric = require('fast-isnumeric');\n\n// This syntax conforms to the existing filter transform syntax, but we don't care\n// about open vs. closed intervals for simply drawing contours constraints:\nmodule.exports = {\n  '[]': makeRangeSettings('[]'),\n  '][': makeRangeSettings(']['),\n  '>': makeInequalitySettings('>'),\n  '<': makeInequalitySettings('<'),\n  '=': makeInequalitySettings('=')\n};\n\n// This does not in any way shape or form support calendars. It's adapted from\n// transforms/filter.js.\nfunction coerceValue(operation, value) {\n  var hasArrayValue = Array.isArray(value);\n  var coercedValue;\n  function coerce(value) {\n    return isNumeric(value) ? +value : null;\n  }\n  if (filterOps.COMPARISON_OPS2.indexOf(operation) !== -1) {\n    coercedValue = hasArrayValue ? coerce(value[0]) : coerce(value);\n  } else if (filterOps.INTERVAL_OPS.indexOf(operation) !== -1) {\n    coercedValue = hasArrayValue ? [coerce(value[0]), coerce(value[1])] : [coerce(value), coerce(value)];\n  } else if (filterOps.SET_OPS.indexOf(operation) !== -1) {\n    coercedValue = hasArrayValue ? value.map(coerce) : [coerce(value)];\n  }\n  return coercedValue;\n}\n\n// Returns a parabola scaled so that the min/max is either +/- 1 and zero at the two values\n// provided. The data is mapped by this function when constructing intervals so that it's\n// very easy to construct contours as normal.\nfunction makeRangeSettings(operation) {\n  return function (value) {\n    value = coerceValue(operation, value);\n\n    // Ensure proper ordering:\n    var min = Math.min(value[0], value[1]);\n    var max = Math.max(value[0], value[1]);\n    return {\n      start: min,\n      end: max,\n      size: max - min\n    };\n  };\n}\nfunction makeInequalitySettings(operation) {\n  return function (value) {\n    value = coerceValue(operation, value);\n    return {\n      start: value,\n      end: Infinity,\n      size: Infinity\n    };\n  };\n}","map":{"version":3,"names":["filterOps","require","isNumeric","module","exports","makeRangeSettings","makeInequalitySettings","coerceValue","operation","value","hasArrayValue","Array","isArray","coercedValue","coerce","COMPARISON_OPS2","indexOf","INTERVAL_OPS","SET_OPS","map","min","Math","max","start","end","size","Infinity"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/contour/constraint_mapping.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar filterOps = require('../../constants/filter_ops');\nvar isNumeric = require('fast-isnumeric');\n\n// This syntax conforms to the existing filter transform syntax, but we don't care\n// about open vs. closed intervals for simply drawing contours constraints:\nmodule.exports = {\n    '[]': makeRangeSettings('[]'),\n    '][': makeRangeSettings(']['),\n    '>': makeInequalitySettings('>'),\n    '<': makeInequalitySettings('<'),\n    '=': makeInequalitySettings('=')\n};\n\n// This does not in any way shape or form support calendars. It's adapted from\n// transforms/filter.js.\nfunction coerceValue(operation, value) {\n    var hasArrayValue = Array.isArray(value);\n\n    var coercedValue;\n\n    function coerce(value) {\n        return isNumeric(value) ? (+value) : null;\n    }\n\n    if(filterOps.COMPARISON_OPS2.indexOf(operation) !== -1) {\n        coercedValue = hasArrayValue ? coerce(value[0]) : coerce(value);\n    } else if(filterOps.INTERVAL_OPS.indexOf(operation) !== -1) {\n        coercedValue = hasArrayValue ?\n            [coerce(value[0]), coerce(value[1])] :\n            [coerce(value), coerce(value)];\n    } else if(filterOps.SET_OPS.indexOf(operation) !== -1) {\n        coercedValue = hasArrayValue ? value.map(coerce) : [coerce(value)];\n    }\n\n    return coercedValue;\n}\n\n// Returns a parabola scaled so that the min/max is either +/- 1 and zero at the two values\n// provided. The data is mapped by this function when constructing intervals so that it's\n// very easy to construct contours as normal.\nfunction makeRangeSettings(operation) {\n    return function(value) {\n        value = coerceValue(operation, value);\n\n        // Ensure proper ordering:\n        var min = Math.min(value[0], value[1]);\n        var max = Math.max(value[0], value[1]);\n\n        return {\n            start: min,\n            end: max,\n            size: max - min\n        };\n    };\n}\n\nfunction makeInequalitySettings(operation) {\n    return function(value) {\n        value = coerceValue(operation, value);\n\n        return {\n            start: value,\n            end: Infinity,\n            size: Infinity\n        };\n    };\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AACrD,IAAIC,SAAS,GAAGD,OAAO,CAAC,gBAAgB,CAAC;;AAEzC;AACA;AACAE,MAAM,CAACC,OAAO,GAAG;EACb,IAAI,EAAEC,iBAAiB,CAAC,IAAI,CAAC;EAC7B,IAAI,EAAEA,iBAAiB,CAAC,IAAI,CAAC;EAC7B,GAAG,EAAEC,sBAAsB,CAAC,GAAG,CAAC;EAChC,GAAG,EAAEA,sBAAsB,CAAC,GAAG,CAAC;EAChC,GAAG,EAAEA,sBAAsB,CAAC,GAAG;AACnC,CAAC;;AAED;AACA;AACA,SAASC,WAAW,CAACC,SAAS,EAAEC,KAAK,EAAE;EACnC,IAAIC,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC;EAExC,IAAII,YAAY;EAEhB,SAASC,MAAM,CAACL,KAAK,EAAE;IACnB,OAAOP,SAAS,CAACO,KAAK,CAAC,GAAI,CAACA,KAAK,GAAI,IAAI;EAC7C;EAEA,IAAGT,SAAS,CAACe,eAAe,CAACC,OAAO,CAACR,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;IACpDK,YAAY,GAAGH,aAAa,GAAGI,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGK,MAAM,CAACL,KAAK,CAAC;EACnE,CAAC,MAAM,IAAGT,SAAS,CAACiB,YAAY,CAACD,OAAO,CAACR,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;IACxDK,YAAY,GAAGH,aAAa,GACxB,CAACI,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,EAAEK,MAAM,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GACpC,CAACK,MAAM,CAACL,KAAK,CAAC,EAAEK,MAAM,CAACL,KAAK,CAAC,CAAC;EACtC,CAAC,MAAM,IAAGT,SAAS,CAACkB,OAAO,CAACF,OAAO,CAACR,SAAS,CAAC,KAAK,CAAC,CAAC,EAAE;IACnDK,YAAY,GAAGH,aAAa,GAAGD,KAAK,CAACU,GAAG,CAACL,MAAM,CAAC,GAAG,CAACA,MAAM,CAACL,KAAK,CAAC,CAAC;EACtE;EAEA,OAAOI,YAAY;AACvB;;AAEA;AACA;AACA;AACA,SAASR,iBAAiB,CAACG,SAAS,EAAE;EAClC,OAAO,UAASC,KAAK,EAAE;IACnBA,KAAK,GAAGF,WAAW,CAACC,SAAS,EAAEC,KAAK,CAAC;;IAErC;IACA,IAAIW,GAAG,GAAGC,IAAI,CAACD,GAAG,CAACX,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAIa,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACb,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC;IAEtC,OAAO;MACHc,KAAK,EAAEH,GAAG;MACVI,GAAG,EAAEF,GAAG;MACRG,IAAI,EAAEH,GAAG,GAAGF;IAChB,CAAC;EACL,CAAC;AACL;AAEA,SAASd,sBAAsB,CAACE,SAAS,EAAE;EACvC,OAAO,UAASC,KAAK,EAAE;IACnBA,KAAK,GAAGF,WAAW,CAACC,SAAS,EAAEC,KAAK,CAAC;IAErC,OAAO;MACHc,KAAK,EAAEd,KAAK;MACZe,GAAG,EAAEE,QAAQ;MACbD,IAAI,EAAEC;IACV,CAAC;EACL,CAAC;AACL"},"metadata":{},"sourceType":"script","externalDependencies":[]}
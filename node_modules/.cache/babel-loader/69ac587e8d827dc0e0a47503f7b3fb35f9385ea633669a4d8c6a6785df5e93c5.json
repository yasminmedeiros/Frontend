{"ast":null,"code":"'use strict';\n\nmodule.exports = quatFromFrame;\nfunction quatFromFrame(out, rx, ry, rz, ux, uy, uz, fx, fy, fz) {\n  var tr = rx + uy + fz;\n  if (l > 0) {\n    var l = Math.sqrt(tr + 1.0);\n    out[0] = 0.5 * (uz - fy) / l;\n    out[1] = 0.5 * (fx - rz) / l;\n    out[2] = 0.5 * (ry - uy) / l;\n    out[3] = 0.5 * l;\n  } else {\n    var tf = Math.max(rx, uy, fz);\n    var l = Math.sqrt(2 * tf - tr + 1.0);\n    if (rx >= tf) {\n      //x y z  order\n      out[0] = 0.5 * l;\n      out[1] = 0.5 * (ux + ry) / l;\n      out[2] = 0.5 * (fx + rz) / l;\n      out[3] = 0.5 * (uz - fy) / l;\n    } else if (uy >= tf) {\n      //y z x  order\n      out[0] = 0.5 * (ry + ux) / l;\n      out[1] = 0.5 * l;\n      out[2] = 0.5 * (fy + uz) / l;\n      out[3] = 0.5 * (fx - rz) / l;\n    } else {\n      //z x y  order\n      out[0] = 0.5 * (rz + fx) / l;\n      out[1] = 0.5 * (uz + fy) / l;\n      out[2] = 0.5 * l;\n      out[3] = 0.5 * (ry - ux) / l;\n    }\n  }\n  return out;\n}","map":{"version":3,"names":["module","exports","quatFromFrame","out","rx","ry","rz","ux","uy","uz","fx","fy","fz","tr","l","Math","sqrt","tf","max"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/orbit-camera-controller/lib/quatFromFrame.js"],"sourcesContent":["'use strict'\n\nmodule.exports = quatFromFrame\n\nfunction quatFromFrame(\n  out,\n  rx, ry, rz,\n  ux, uy, uz,\n  fx, fy, fz) {\n  var tr = rx + uy + fz\n  if(l > 0) {\n    var l = Math.sqrt(tr + 1.0)\n    out[0] = 0.5 * (uz - fy) / l\n    out[1] = 0.5 * (fx - rz) / l\n    out[2] = 0.5 * (ry - uy) / l\n    out[3] = 0.5 * l\n  } else {\n    var tf = Math.max(rx, uy, fz)\n    var l = Math.sqrt(2 * tf - tr + 1.0)\n    if(rx >= tf) {\n      //x y z  order\n      out[0] = 0.5 * l\n      out[1] = 0.5 * (ux + ry) / l\n      out[2] = 0.5 * (fx + rz) / l\n      out[3] = 0.5 * (uz - fy) / l\n    } else if(uy >= tf) {\n      //y z x  order\n      out[0] = 0.5 * (ry + ux) / l\n      out[1] = 0.5 * l\n      out[2] = 0.5 * (fy + uz) / l\n      out[3] = 0.5 * (fx - rz) / l\n    } else {\n      //z x y  order\n      out[0] = 0.5 * (rz + fx) / l\n      out[1] = 0.5 * (uz + fy) / l\n      out[2] = 0.5 * l\n      out[3] = 0.5 * (ry - ux) / l\n    }\n  }\n  return out\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,aAAa;AAE9B,SAASA,aAAa,CACpBC,GAAG,EACHC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EACVC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EACVC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACZ,IAAIC,EAAE,GAAGT,EAAE,GAAGI,EAAE,GAAGI,EAAE;EACrB,IAAGE,CAAC,GAAG,CAAC,EAAE;IACR,IAAIA,CAAC,GAAGC,IAAI,CAACC,IAAI,CAACH,EAAE,GAAG,GAAG,CAAC;IAC3BV,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIM,EAAE,GAAGE,EAAE,CAAC,GAAGG,CAAC;IAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIO,EAAE,GAAGJ,EAAE,CAAC,GAAGQ,CAAC;IAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIE,EAAE,GAAGG,EAAE,CAAC,GAAGM,CAAC;IAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGW,CAAC;EAClB,CAAC,MAAM;IACL,IAAIG,EAAE,GAAGF,IAAI,CAACG,GAAG,CAACd,EAAE,EAAEI,EAAE,EAAEI,EAAE,CAAC;IAC7B,IAAIE,CAAC,GAAGC,IAAI,CAACC,IAAI,CAAC,CAAC,GAAGC,EAAE,GAAGJ,EAAE,GAAG,GAAG,CAAC;IACpC,IAAGT,EAAE,IAAIa,EAAE,EAAE;MACX;MACAd,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGW,CAAC;MAChBX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAII,EAAE,GAAGF,EAAE,CAAC,GAAGS,CAAC;MAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIO,EAAE,GAAGJ,EAAE,CAAC,GAAGQ,CAAC;MAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIM,EAAE,GAAGE,EAAE,CAAC,GAAGG,CAAC;IAC9B,CAAC,MAAM,IAAGN,EAAE,IAAIS,EAAE,EAAE;MAClB;MACAd,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIE,EAAE,GAAGE,EAAE,CAAC,GAAGO,CAAC;MAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGW,CAAC;MAChBX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIQ,EAAE,GAAGF,EAAE,CAAC,GAAGK,CAAC;MAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIO,EAAE,GAAGJ,EAAE,CAAC,GAAGQ,CAAC;IAC9B,CAAC,MAAM;MACL;MACAX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIG,EAAE,GAAGI,EAAE,CAAC,GAAGI,CAAC;MAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIM,EAAE,GAAGE,EAAE,CAAC,GAAGG,CAAC;MAC5BX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGW,CAAC;MAChBX,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAIE,EAAE,GAAGE,EAAE,CAAC,GAAGO,CAAC;IAC9B;EACF;EACA,OAAOX,GAAG;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
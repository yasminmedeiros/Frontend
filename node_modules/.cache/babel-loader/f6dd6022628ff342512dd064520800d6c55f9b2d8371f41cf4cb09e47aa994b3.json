{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar buttonAttrs = templatedArray('button', {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'plot',\n    description: 'Determines whether or not this button is visible.'\n  },\n  step: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n    dflt: 'month',\n    editType: 'plot',\n    description: ['The unit of measurement that the `count` value will set the range by.'].join(' ')\n  },\n  stepmode: {\n    valType: 'enumerated',\n    role: 'info',\n    values: ['backward', 'todate'],\n    dflt: 'backward',\n    editType: 'plot',\n    description: ['Sets the range update mode.', 'If *backward*, the range update shifts the start of range', 'back *count* times *step* milliseconds.', 'If *todate*, the range update shifts the start of range', 'back to the first timestamp from *count* times', '*step* milliseconds back.', 'For example, with `step` set to *year* and `count` set to *1*', 'the range update shifts the start of the range back to', 'January 01 of the current year.', 'Month and year *todate* are currently available only', 'for the built-in (Gregorian) calendar.'].join(' ')\n  },\n  count: {\n    valType: 'number',\n    role: 'info',\n    min: 0,\n    dflt: 1,\n    editType: 'plot',\n    description: ['Sets the number of steps to take to update the range.', 'Use with `step` to specify the update interval.'].join(' ')\n  },\n  label: {\n    valType: 'string',\n    role: 'info',\n    editType: 'plot',\n    description: 'Sets the text label to appear on the button.'\n  },\n  editType: 'plot',\n  description: ['Sets the specifications for each buttons.', 'By default, a range selector comes with no buttons.'].join(' ')\n});\nmodule.exports = {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    editType: 'plot',\n    description: ['Determines whether or not this range selector is visible.', 'Note that range selectors are only available for x axes of', '`type` set to or auto-typed to *date*.'].join(' ')\n  },\n  buttons: buttonAttrs,\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the x position (in normalized coordinates) of the range selector.'\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'left', 'center', 'right'],\n    dflt: 'left',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the range selector.'].join(' ')\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the y position (in normalized coordinates) of the range selector.'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['auto', 'top', 'middle', 'bottom'],\n    dflt: 'bottom',\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets the range selector\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the range selector.'].join(' ')\n  },\n  font: fontAttrs({\n    editType: 'plot',\n    description: 'Sets the font of the range selector button text.'\n  }),\n  bgcolor: {\n    valType: 'color',\n    dflt: colorAttrs.lightLine,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the background color of the range selector buttons.'\n  },\n  activecolor: {\n    valType: 'color',\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the background color of the active range selector button.'\n  },\n  bordercolor: {\n    valType: 'color',\n    dflt: colorAttrs.defaultLine,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the color of the border enclosing the range selector.'\n  },\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    role: 'style',\n    editType: 'plot',\n    description: 'Sets the width (in px) of the border enclosing the range selector.'\n  },\n  editType: 'plot'\n};","map":{"version":3,"names":["fontAttrs","require","colorAttrs","templatedArray","buttonAttrs","visible","valType","role","dflt","editType","description","step","values","join","stepmode","count","min","label","module","exports","buttons","x","max","xanchor","y","yanchor","font","bgcolor","lightLine","activecolor","bordercolor","defaultLine","borderwidth"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/components/rangeselector/attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar colorAttrs = require('../color/attributes');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar buttonAttrs = templatedArray('button', {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'plot',\n        description: 'Determines whether or not this button is visible.'\n    },\n    step: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['month', 'year', 'day', 'hour', 'minute', 'second', 'all'],\n        dflt: 'month',\n        editType: 'plot',\n        description: [\n            'The unit of measurement that the `count` value will set the range by.'\n        ].join(' ')\n    },\n    stepmode: {\n        valType: 'enumerated',\n        role: 'info',\n        values: ['backward', 'todate'],\n        dflt: 'backward',\n        editType: 'plot',\n        description: [\n            'Sets the range update mode.',\n            'If *backward*, the range update shifts the start of range',\n            'back *count* times *step* milliseconds.',\n            'If *todate*, the range update shifts the start of range',\n            'back to the first timestamp from *count* times',\n            '*step* milliseconds back.',\n            'For example, with `step` set to *year* and `count` set to *1*',\n            'the range update shifts the start of the range back to',\n            'January 01 of the current year.',\n            'Month and year *todate* are currently available only',\n            'for the built-in (Gregorian) calendar.'\n        ].join(' ')\n    },\n    count: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        dflt: 1,\n        editType: 'plot',\n        description: [\n            'Sets the number of steps to take to update the range.',\n            'Use with `step` to specify the update interval.'\n        ].join(' ')\n    },\n    label: {\n        valType: 'string',\n        role: 'info',\n        editType: 'plot',\n        description: 'Sets the text label to appear on the button.'\n    },\n    editType: 'plot',\n    description: [\n        'Sets the specifications for each buttons.',\n        'By default, a range selector comes with no buttons.'\n    ].join(' ')\n});\n\nmodule.exports = {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Determines whether or not this range selector is visible.',\n            'Note that range selectors are only available for x axes of',\n            '`type` set to or auto-typed to *date*.'\n        ].join(' ')\n    },\n\n    buttons: buttonAttrs,\n\n    x: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the x position (in normalized coordinates) of the range selector.'\n    },\n    xanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s horizontal position anchor.',\n            'This anchor binds the `x` position to the *left*, *center*',\n            'or *right* of the range selector.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'number',\n        min: -2,\n        max: 3,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the y position (in normalized coordinates) of the range selector.'\n    },\n    yanchor: {\n        valType: 'enumerated',\n        values: ['auto', 'top', 'middle', 'bottom'],\n        dflt: 'bottom',\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets the range selector\\'s vertical position anchor',\n            'This anchor binds the `y` position to the *top*, *middle*',\n            'or *bottom* of the range selector.'\n        ].join(' ')\n    },\n\n    font: fontAttrs({\n        editType: 'plot',\n        description: 'Sets the font of the range selector button text.'\n    }),\n\n    bgcolor: {\n        valType: 'color',\n        dflt: colorAttrs.lightLine,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the background color of the range selector buttons.'\n    },\n    activecolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the background color of the active range selector button.'\n    },\n    bordercolor: {\n        valType: 'color',\n        dflt: colorAttrs.defaultLine,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the color of the border enclosing the range selector.'\n    },\n    borderwidth: {\n        valType: 'number',\n        min: 0,\n        dflt: 0,\n        role: 'style',\n        editType: 'plot',\n        description: 'Sets the width (in px) of the border enclosing the range selector.'\n    },\n    editType: 'plot'\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
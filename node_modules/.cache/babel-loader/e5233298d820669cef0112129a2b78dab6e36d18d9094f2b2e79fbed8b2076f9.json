{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar dataArrays = ['a', 'b', 'c'];\nvar arraysToFill = {\n  a: ['b', 'c'],\n  b: ['a', 'c'],\n  c: ['a', 'b']\n};\nmodule.exports = function calc(gd, trace) {\n  var ternary = gd._fullLayout[trace.subplot];\n  var displaySum = ternary.sum;\n  var normSum = trace.sum || displaySum;\n  var arrays = {\n    a: trace.a,\n    b: trace.b,\n    c: trace.c\n  };\n  var i, j, dataArray, newArray, fillArray1, fillArray2;\n\n  // fill in one missing component\n  for (i = 0; i < dataArrays.length; i++) {\n    dataArray = dataArrays[i];\n    if (arrays[dataArray]) continue;\n    fillArray1 = arrays[arraysToFill[dataArray][0]];\n    fillArray2 = arrays[arraysToFill[dataArray][1]];\n    newArray = new Array(fillArray1.length);\n    for (j = 0; j < fillArray1.length; j++) {\n      newArray[j] = normSum - fillArray1[j] - fillArray2[j];\n    }\n    arrays[dataArray] = newArray;\n  }\n\n  // make the calcdata array\n  var serieslen = trace._length;\n  var cd = new Array(serieslen);\n  var a, b, c, norm, x, y;\n  for (i = 0; i < serieslen; i++) {\n    a = arrays.a[i];\n    b = arrays.b[i];\n    c = arrays.c[i];\n    if (isNumeric(a) && isNumeric(b) && isNumeric(c)) {\n      a = +a;\n      b = +b;\n      c = +c;\n      norm = displaySum / (a + b + c);\n      if (norm !== 1) {\n        a *= norm;\n        b *= norm;\n        c *= norm;\n      }\n      // map a, b, c onto x and y where the full scale of y\n      // is [0, sum], and x is [-sum, sum]\n      // TODO: this makes `a` always the top, `b` the bottom left,\n      // and `c` the bottom right. Do we want options to rearrange\n      // these?\n      y = a;\n      x = c - b;\n      cd[i] = {\n        x: x,\n        y: y,\n        a: a,\n        b: b,\n        c: c\n      };\n    } else cd[i] = {\n      x: false,\n      y: false\n    };\n  }\n  calcMarkerSize(trace, serieslen);\n  calcColorscale(gd, trace);\n  arraysToCalcdata(cd, trace);\n  calcSelection(cd, trace);\n  return cd;\n};","map":{"version":3,"names":["isNumeric","require","calcColorscale","arraysToCalcdata","calcSelection","calcMarkerSize","dataArrays","arraysToFill","a","b","c","module","exports","calc","gd","trace","ternary","_fullLayout","subplot","displaySum","sum","normSum","arrays","i","j","dataArray","newArray","fillArray1","fillArray2","length","Array","serieslen","_length","cd","norm","x","y"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatterternary/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\n\nvar dataArrays = ['a', 'b', 'c'];\nvar arraysToFill = {a: ['b', 'c'], b: ['a', 'c'], c: ['a', 'b']};\n\nmodule.exports = function calc(gd, trace) {\n    var ternary = gd._fullLayout[trace.subplot];\n    var displaySum = ternary.sum;\n    var normSum = trace.sum || displaySum;\n    var arrays = {a: trace.a, b: trace.b, c: trace.c};\n\n    var i, j, dataArray, newArray, fillArray1, fillArray2;\n\n    // fill in one missing component\n    for(i = 0; i < dataArrays.length; i++) {\n        dataArray = dataArrays[i];\n        if(arrays[dataArray]) continue;\n\n        fillArray1 = arrays[arraysToFill[dataArray][0]];\n        fillArray2 = arrays[arraysToFill[dataArray][1]];\n        newArray = new Array(fillArray1.length);\n        for(j = 0; j < fillArray1.length; j++) {\n            newArray[j] = normSum - fillArray1[j] - fillArray2[j];\n        }\n        arrays[dataArray] = newArray;\n    }\n\n    // make the calcdata array\n    var serieslen = trace._length;\n    var cd = new Array(serieslen);\n    var a, b, c, norm, x, y;\n    for(i = 0; i < serieslen; i++) {\n        a = arrays.a[i];\n        b = arrays.b[i];\n        c = arrays.c[i];\n        if(isNumeric(a) && isNumeric(b) && isNumeric(c)) {\n            a = +a;\n            b = +b;\n            c = +c;\n            norm = displaySum / (a + b + c);\n            if(norm !== 1) {\n                a *= norm;\n                b *= norm;\n                c *= norm;\n            }\n            // map a, b, c onto x and y where the full scale of y\n            // is [0, sum], and x is [-sum, sum]\n            // TODO: this makes `a` always the top, `b` the bottom left,\n            // and `c` the bottom right. Do we want options to rearrange\n            // these?\n            y = a;\n            x = c - b;\n            cd[i] = {x: x, y: y, a: a, b: b, c: c};\n        }\n        else cd[i] = {x: false, y: false};\n    }\n\n    calcMarkerSize(trace, serieslen);\n    calcColorscale(gd, trace);\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
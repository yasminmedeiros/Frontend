{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/* eslint block-scoped-var: 0*/\n/* eslint no-redeclare: 0*/\n\n'use strict';\n\nmodule.exports = computeTickMarks;\nvar Axes = require('../../cartesian/axes');\nvar Lib = require('../../../lib');\nvar AXES_NAMES = ['xaxis', 'yaxis', 'zaxis'];\nvar centerPoint = [0, 0, 0];\nfunction contourLevelsFromTicks(ticks) {\n  var result = new Array(3);\n  for (var i = 0; i < 3; ++i) {\n    var tlevel = ticks[i];\n    var clevel = new Array(tlevel.length);\n    for (var j = 0; j < tlevel.length; ++j) {\n      clevel[j] = tlevel[j].x;\n    }\n    result[i] = clevel;\n  }\n  return result;\n}\nfunction computeTickMarks(scene) {\n  var axesOptions = scene.axesOptions;\n  var glRange = scene.glplot.axesPixels;\n  var sceneLayout = scene.fullSceneLayout;\n  var ticks = [[], [], []];\n  for (var i = 0; i < 3; ++i) {\n    var axes = sceneLayout[AXES_NAMES[i]];\n    axes._length = (glRange[i].hi - glRange[i].lo) * glRange[i].pixelsPerDataUnit / scene.dataScale[i];\n    if (Math.abs(axes._length) === Infinity || isNaN(axes._length)) {\n      ticks[i] = [];\n    } else {\n      axes._input_range = axes.range.slice();\n      axes.range[0] = glRange[i].lo / scene.dataScale[i];\n      axes.range[1] = glRange[i].hi / scene.dataScale[i];\n      axes._m = 1.0 / (scene.dataScale[i] * glRange[i].pixelsPerDataUnit);\n      if (axes.range[0] === axes.range[1]) {\n        axes.range[0] -= 1;\n        axes.range[1] += 1;\n      }\n      // this is necessary to short-circuit the 'y' handling\n      // in autotick part of calcTicks... Treating all axes as 'y' in this case\n      // running the autoticks here, then setting\n      // autoticks to false to get around the 2D handling in calcTicks.\n      var tickModeCached = axes.tickmode;\n      if (axes.tickmode === 'auto') {\n        axes.tickmode = 'linear';\n        var nticks = axes.nticks || Lib.constrain(axes._length / 40, 4, 9);\n        Axes.autoTicks(axes, Math.abs(axes.range[1] - axes.range[0]) / nticks);\n      }\n      var dataTicks = Axes.calcTicks(axes);\n      for (var j = 0; j < dataTicks.length; ++j) {\n        dataTicks[j].x = dataTicks[j].x * scene.dataScale[i];\n        if (axes.type === 'date') {\n          dataTicks[j].text = dataTicks[j].text.replace(/\\<br\\>/g, ' ');\n        }\n      }\n      ticks[i] = dataTicks;\n      axes.tickmode = tickModeCached;\n    }\n  }\n  axesOptions.ticks = ticks;\n\n  // Calculate tick lengths dynamically\n  for (var i = 0; i < 3; ++i) {\n    centerPoint[i] = 0.5 * (scene.glplot.bounds[0][i] + scene.glplot.bounds[1][i]);\n    for (var j = 0; j < 2; ++j) {\n      axesOptions.bounds[j][i] = scene.glplot.bounds[j][i];\n    }\n  }\n  scene.contourLevels = contourLevelsFromTicks(ticks);\n}","map":{"version":3,"names":["module","exports","computeTickMarks","Axes","require","Lib","AXES_NAMES","centerPoint","contourLevelsFromTicks","ticks","result","Array","i","tlevel","clevel","length","j","x","scene","axesOptions","glRange","glplot","axesPixels","sceneLayout","fullSceneLayout","axes","_length","hi","lo","pixelsPerDataUnit","dataScale","Math","abs","Infinity","isNaN","_input_range","range","slice","_m","tickModeCached","tickmode","nticks","constrain","autoTicks","dataTicks","calcTicks","type","text","replace","bounds","contourLevels"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/gl3d/layout/tick_marks.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/* eslint block-scoped-var: 0*/\n/* eslint no-redeclare: 0*/\n\n'use strict';\n\nmodule.exports = computeTickMarks;\n\nvar Axes = require('../../cartesian/axes');\nvar Lib = require('../../../lib');\n\nvar AXES_NAMES = ['xaxis', 'yaxis', 'zaxis'];\n\nvar centerPoint = [0, 0, 0];\n\nfunction contourLevelsFromTicks(ticks) {\n    var result = new Array(3);\n    for(var i = 0; i < 3; ++i) {\n        var tlevel = ticks[i];\n        var clevel = new Array(tlevel.length);\n        for(var j = 0; j < tlevel.length; ++j) {\n            clevel[j] = tlevel[j].x;\n        }\n        result[i] = clevel;\n    }\n    return result;\n}\n\nfunction computeTickMarks(scene) {\n    var axesOptions = scene.axesOptions;\n    var glRange = scene.glplot.axesPixels;\n    var sceneLayout = scene.fullSceneLayout;\n\n    var ticks = [[], [], []];\n\n    for(var i = 0; i < 3; ++i) {\n        var axes = sceneLayout[AXES_NAMES[i]];\n\n        axes._length = (glRange[i].hi - glRange[i].lo) *\n            glRange[i].pixelsPerDataUnit / scene.dataScale[i];\n\n        if(Math.abs(axes._length) === Infinity ||\n           isNaN(axes._length)) {\n            ticks[i] = [];\n        } else {\n            axes._input_range = axes.range.slice();\n            axes.range[0] = (glRange[i].lo) / scene.dataScale[i];\n            axes.range[1] = (glRange[i].hi) / scene.dataScale[i];\n            axes._m = 1.0 / (scene.dataScale[i] * glRange[i].pixelsPerDataUnit);\n\n            if(axes.range[0] === axes.range[1]) {\n                axes.range[0] -= 1;\n                axes.range[1] += 1;\n            }\n            // this is necessary to short-circuit the 'y' handling\n            // in autotick part of calcTicks... Treating all axes as 'y' in this case\n            // running the autoticks here, then setting\n            // autoticks to false to get around the 2D handling in calcTicks.\n            var tickModeCached = axes.tickmode;\n            if(axes.tickmode === 'auto') {\n                axes.tickmode = 'linear';\n                var nticks = axes.nticks || Lib.constrain((axes._length / 40), 4, 9);\n                Axes.autoTicks(axes, Math.abs(axes.range[1] - axes.range[0]) / nticks);\n            }\n            var dataTicks = Axes.calcTicks(axes);\n            for(var j = 0; j < dataTicks.length; ++j) {\n                dataTicks[j].x = dataTicks[j].x * scene.dataScale[i];\n\n                if(axes.type === 'date') {\n                    dataTicks[j].text =\n                    dataTicks[j].text.replace(/\\<br\\>/g, ' ');\n                }\n            }\n            ticks[i] = dataTicks;\n\n\n            axes.tickmode = tickModeCached;\n        }\n    }\n\n    axesOptions.ticks = ticks;\n\n    // Calculate tick lengths dynamically\n    for(var i = 0; i < 3; ++i) {\n        centerPoint[i] = 0.5 * (scene.glplot.bounds[0][i] + scene.glplot.bounds[1][i]);\n        for(var j = 0; j < 2; ++j) {\n            axesOptions.bounds[j][i] = scene.glplot.bounds[j][i];\n        }\n    }\n\n    scene.contourLevels = contourLevelsFromTicks(ticks);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
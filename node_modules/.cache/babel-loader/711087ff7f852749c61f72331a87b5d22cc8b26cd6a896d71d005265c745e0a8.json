{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar appendArrayMultiPointValues = require('../../components/fx/helpers').appendArrayMultiPointValues;\n\n// Note: like other eventData routines, this creates the data for hover/unhover/click events\n// but it has a different API and goes through a totally different pathway.\n// So to ensure it doesn't get misused, it's not attached to the Pie module.\nmodule.exports = function eventData(pt, trace) {\n  var out = {\n    curveNumber: trace.index,\n    pointNumbers: pt.pts,\n    data: trace._input,\n    fullData: trace,\n    label: pt.label,\n    color: pt.color,\n    value: pt.v,\n    percent: pt.percent,\n    text: pt.text,\n    // pt.v (and pt.i below) for backward compatibility\n    v: pt.v\n  };\n\n  // Only include pointNumber if it's unambiguous\n  if (pt.pts.length === 1) out.pointNumber = out.i = pt.pts[0];\n\n  // Add extra data arrays to the output\n  // notice that this is the multi-point version ('s' on the end!)\n  // so added data will be arrays matching the pointNumbers array.\n  appendArrayMultiPointValues(out, trace, pt.pts);\n  return out;\n};","map":{"version":3,"names":["appendArrayMultiPointValues","require","module","exports","eventData","pt","trace","out","curveNumber","index","pointNumbers","pts","data","_input","fullData","label","color","value","v","percent","text","length","pointNumber","i"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/pie/event_data.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar appendArrayMultiPointValues = require('../../components/fx/helpers').appendArrayMultiPointValues;\n\n\n// Note: like other eventData routines, this creates the data for hover/unhover/click events\n// but it has a different API and goes through a totally different pathway.\n// So to ensure it doesn't get misused, it's not attached to the Pie module.\nmodule.exports = function eventData(pt, trace) {\n    var out = {\n        curveNumber: trace.index,\n        pointNumbers: pt.pts,\n        data: trace._input,\n        fullData: trace,\n        label: pt.label,\n        color: pt.color,\n        value: pt.v,\n        percent: pt.percent,\n        text: pt.text,\n\n        // pt.v (and pt.i below) for backward compatibility\n        v: pt.v\n    };\n\n    // Only include pointNumber if it's unambiguous\n    if(pt.pts.length === 1) out.pointNumber = out.i = pt.pts[0];\n\n    // Add extra data arrays to the output\n    // notice that this is the multi-point version ('s' on the end!)\n    // so added data will be arrays matching the pointNumbers array.\n    appendArrayMultiPointValues(out, trace, pt.pts);\n\n    return out;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,2BAA2B,GAAGC,OAAO,CAAC,6BAA6B,CAAC,CAACD,2BAA2B;;AAGpG;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,SAAS,CAACC,EAAE,EAAEC,KAAK,EAAE;EAC3C,IAAIC,GAAG,GAAG;IACNC,WAAW,EAAEF,KAAK,CAACG,KAAK;IACxBC,YAAY,EAAEL,EAAE,CAACM,GAAG;IACpBC,IAAI,EAAEN,KAAK,CAACO,MAAM;IAClBC,QAAQ,EAAER,KAAK;IACfS,KAAK,EAAEV,EAAE,CAACU,KAAK;IACfC,KAAK,EAAEX,EAAE,CAACW,KAAK;IACfC,KAAK,EAAEZ,EAAE,CAACa,CAAC;IACXC,OAAO,EAAEd,EAAE,CAACc,OAAO;IACnBC,IAAI,EAAEf,EAAE,CAACe,IAAI;IAEb;IACAF,CAAC,EAAEb,EAAE,CAACa;EACV,CAAC;;EAED;EACA,IAAGb,EAAE,CAACM,GAAG,CAACU,MAAM,KAAK,CAAC,EAAEd,GAAG,CAACe,WAAW,GAAGf,GAAG,CAACgB,CAAC,GAAGlB,EAAE,CAACM,GAAG,CAAC,CAAC,CAAC;;EAE3D;EACA;EACA;EACAX,2BAA2B,CAACO,GAAG,EAAED,KAAK,EAAED,EAAE,CAACM,GAAG,CAAC;EAE/C,OAAOJ,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar arrayEditor = require('../../plot_api/plot_template').arrayEditor;\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\nvar constants = require('./constants');\nvar ScrollBox = require('./scrollbox');\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var menuData = Lib.filterVisible(fullLayout[constants.name]);\n\n  /* Update menu data is bound to the header-group.\n   * The items in the header group are always present.\n   *\n   * Upon clicking on a header its corresponding button\n   * data is bound to the button-group.\n   *\n   * We draw all headers in one group before all buttons\n   * so that the buttons *always* appear above the headers.\n   *\n   * Note that only one set of buttons are visible at once.\n   *\n   * <g container />\n   *\n   *     <g header-group />\n   *         <g item header />\n   *         <text item header-arrow />\n   *     <g header-group />\n   *         <g item header />\n   *         <text item header-arrow />\n   *     ...\n   *\n   *     <g button-group />\n   *         <g item button />\n   *         <g item button />\n   *         ...\n   */\n\n  function clearAutoMargin(menuOpts) {\n    Plots.autoMargin(gd, autoMarginId(menuOpts));\n  }\n\n  // draw update menu container\n  var menus = fullLayout._menulayer.selectAll('g.' + constants.containerClassName).data(menuData.length > 0 ? [0] : []);\n  menus.enter().append('g').classed(constants.containerClassName, true).style('cursor', 'pointer');\n  menus.exit().each(function () {\n    // Most components don't need to explicitly remove autoMargin, because\n    // marginPushers does this - but updatemenu updates don't go through\n    // a full replot so we need to explicitly remove it.\n    // This is for removing *all* updatemenus, removing individuals is\n    // handled below, in headerGroups.exit\n    d3.select(this).selectAll('g.' + constants.headerGroupClassName).each(clearAutoMargin);\n  }).remove();\n\n  // return early if no update menus are visible\n  if (menuData.length === 0) return;\n\n  // join header group\n  var headerGroups = menus.selectAll('g.' + constants.headerGroupClassName).data(menuData, keyFunction);\n  headerGroups.enter().append('g').classed(constants.headerGroupClassName, true);\n\n  // draw dropdown button container\n  var gButton = Lib.ensureSingle(menus, 'g', constants.dropdownButtonGroupClassName, function (s) {\n    s.style('pointer-events', 'all');\n  });\n\n  // find dimensions before plotting anything (this mutates menuOpts)\n  for (var i = 0; i < menuData.length; i++) {\n    var menuOpts = menuData[i];\n    findDimensions(gd, menuOpts);\n  }\n\n  // setup scrollbox\n  var scrollBoxId = 'updatemenus' + fullLayout._uid;\n  var scrollBox = new ScrollBox(gd, gButton, scrollBoxId);\n\n  // remove exiting header, remove dropped buttons and reset margins\n  if (headerGroups.enter().size()) {\n    // make sure gButton is on top of all headers\n    gButton.node().parentNode.appendChild(gButton.node());\n    gButton.call(removeAllButtons);\n  }\n  headerGroups.exit().each(function (menuOpts) {\n    gButton.call(removeAllButtons);\n    clearAutoMargin(menuOpts);\n  }).remove();\n\n  // draw headers!\n  headerGroups.each(function (menuOpts) {\n    var gHeader = d3.select(this);\n    var _gButton = menuOpts.type === 'dropdown' ? gButton : null;\n    Plots.manageCommandObserver(gd, menuOpts, menuOpts.buttons, function (data) {\n      setActive(gd, menuOpts, menuOpts.buttons[data.index], gHeader, _gButton, scrollBox, data.index, true);\n    });\n    if (menuOpts.type === 'dropdown') {\n      drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n      // if this menu is active, update the dropdown container\n      if (isActive(gButton, menuOpts)) {\n        drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n      }\n    } else {\n      drawButtons(gd, gHeader, null, null, menuOpts);\n    }\n  });\n};\n\n// Note that '_index' is set at the default step,\n// it corresponds to the menu index in the user layout update menu container.\n// Because a menu can be set invisible,\n// this is a more 'consistent' field than the index in the menuData.\nfunction keyFunction(menuOpts) {\n  return menuOpts._index;\n}\nfunction isFolded(gButton) {\n  return +gButton.attr(constants.menuIndexAttrName) === -1;\n}\nfunction isActive(gButton, menuOpts) {\n  return +gButton.attr(constants.menuIndexAttrName) === menuOpts._index;\n}\nfunction setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex, isSilentUpdate) {\n  // update 'active' attribute in menuOpts\n  menuOpts.active = buttonIndex;\n\n  // due to templating, it's possible this slider doesn't even exist yet\n  arrayEditor(gd.layout, constants.name, menuOpts).applyUpdate('active', buttonIndex);\n  if (menuOpts.type === 'buttons') {\n    drawButtons(gd, gHeader, null, null, menuOpts);\n  } else if (menuOpts.type === 'dropdown') {\n    // fold up buttons and redraw header\n    gButton.attr(constants.menuIndexAttrName, '-1');\n    drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n    if (!isSilentUpdate) {\n      drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n    }\n  }\n}\nfunction drawHeader(gd, gHeader, gButton, scrollBox, menuOpts) {\n  var header = Lib.ensureSingle(gHeader, 'g', constants.headerClassName, function (s) {\n    s.style('pointer-events', 'all');\n  });\n  var dims = menuOpts._dims;\n  var active = menuOpts.active;\n  var headerOpts = menuOpts.buttons[active] || constants.blankHeaderOpts;\n  var posOpts = {\n    y: menuOpts.pad.t,\n    yPad: 0,\n    x: menuOpts.pad.l,\n    xPad: 0,\n    index: 0\n  };\n  var positionOverrides = {\n    width: dims.headerWidth,\n    height: dims.headerHeight\n  };\n  header.call(drawItem, menuOpts, headerOpts, gd).call(setItemPosition, menuOpts, posOpts, positionOverrides);\n\n  // draw drop arrow at the right edge\n  var arrow = Lib.ensureSingle(gHeader, 'text', constants.headerArrowClassName, function (s) {\n    s.classed('user-select-none', true).attr('text-anchor', 'end').call(Drawing.font, menuOpts.font).text(constants.arrowSymbol[menuOpts.direction]);\n  });\n  arrow.attr({\n    x: dims.headerWidth - constants.arrowOffsetX + menuOpts.pad.l,\n    y: dims.headerHeight / 2 + constants.textOffsetY + menuOpts.pad.t\n  });\n  header.on('click', function () {\n    gButton.call(removeAllButtons, String(isActive(gButton, menuOpts) ? -1 : menuOpts._index));\n    drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n  });\n  header.on('mouseover', function () {\n    header.call(styleOnMouseOver);\n  });\n  header.on('mouseout', function () {\n    header.call(styleOnMouseOut, menuOpts);\n  });\n\n  // translate header group\n  Drawing.setTranslate(gHeader, dims.lx, dims.ly);\n}\nfunction drawButtons(gd, gHeader, gButton, scrollBox, menuOpts) {\n  // If this is a set of buttons, set pointer events = all since we play\n  // some minor games with which container is which in order to simplify\n  // the drawing of *either* buttons or menus\n  if (!gButton) {\n    gButton = gHeader;\n    gButton.attr('pointer-events', 'all');\n  }\n  var buttonData = !isFolded(gButton) || menuOpts.type === 'buttons' ? menuOpts.buttons : [];\n  var klass = menuOpts.type === 'dropdown' ? constants.dropdownButtonClassName : constants.buttonClassName;\n  var buttons = gButton.selectAll('g.' + klass).data(Lib.filterVisible(buttonData));\n  var enter = buttons.enter().append('g').classed(klass, true);\n  var exit = buttons.exit();\n  if (menuOpts.type === 'dropdown') {\n    enter.attr('opacity', '0').transition().attr('opacity', '1');\n    exit.transition().attr('opacity', '0').remove();\n  } else {\n    exit.remove();\n  }\n  var x0 = 0;\n  var y0 = 0;\n  var dims = menuOpts._dims;\n  var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n  if (menuOpts.type === 'dropdown') {\n    if (isVertical) {\n      y0 = dims.headerHeight + constants.gapButtonHeader;\n    } else {\n      x0 = dims.headerWidth + constants.gapButtonHeader;\n    }\n  }\n  if (menuOpts.type === 'dropdown' && menuOpts.direction === 'up') {\n    y0 = -constants.gapButtonHeader + constants.gapButton - dims.openHeight;\n  }\n  if (menuOpts.type === 'dropdown' && menuOpts.direction === 'left') {\n    x0 = -constants.gapButtonHeader + constants.gapButton - dims.openWidth;\n  }\n  var posOpts = {\n    x: dims.lx + x0 + menuOpts.pad.l,\n    y: dims.ly + y0 + menuOpts.pad.t,\n    yPad: constants.gapButton,\n    xPad: constants.gapButton,\n    index: 0\n  };\n  var scrollBoxPosition = {\n    l: posOpts.x + menuOpts.borderwidth,\n    t: posOpts.y + menuOpts.borderwidth\n  };\n  buttons.each(function (buttonOpts, buttonIndex) {\n    var button = d3.select(this);\n    button.call(drawItem, menuOpts, buttonOpts, gd).call(setItemPosition, menuOpts, posOpts);\n    button.on('click', function () {\n      // skip `dragend` events\n      if (d3.event.defaultPrevented) return;\n      setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex);\n      if (buttonOpts.execute) {\n        Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args);\n      }\n      gd.emit('plotly_buttonclicked', {\n        menu: menuOpts,\n        button: buttonOpts,\n        active: menuOpts.active\n      });\n    });\n    button.on('mouseover', function () {\n      button.call(styleOnMouseOver);\n    });\n    button.on('mouseout', function () {\n      button.call(styleOnMouseOut, menuOpts);\n      buttons.call(styleButtons, menuOpts);\n    });\n  });\n  buttons.call(styleButtons, menuOpts);\n  if (isVertical) {\n    scrollBoxPosition.w = Math.max(dims.openWidth, dims.headerWidth);\n    scrollBoxPosition.h = posOpts.y - scrollBoxPosition.t;\n  } else {\n    scrollBoxPosition.w = posOpts.x - scrollBoxPosition.l;\n    scrollBoxPosition.h = Math.max(dims.openHeight, dims.headerHeight);\n  }\n  scrollBoxPosition.direction = menuOpts.direction;\n  if (scrollBox) {\n    if (buttons.size()) {\n      drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, scrollBoxPosition);\n    } else {\n      hideScrollBox(scrollBox);\n    }\n  }\n}\nfunction drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, position) {\n  // enable the scrollbox\n  var direction = menuOpts.direction;\n  var isVertical = direction === 'up' || direction === 'down';\n  var dims = menuOpts._dims;\n  var active = menuOpts.active;\n  var translateX, translateY;\n  var i;\n  if (isVertical) {\n    translateY = 0;\n    for (i = 0; i < active; i++) {\n      translateY += dims.heights[i] + constants.gapButton;\n    }\n  } else {\n    translateX = 0;\n    for (i = 0; i < active; i++) {\n      translateX += dims.widths[i] + constants.gapButton;\n    }\n  }\n  scrollBox.enable(position, translateX, translateY);\n  if (scrollBox.hbar) {\n    scrollBox.hbar.attr('opacity', '0').transition().attr('opacity', '1');\n  }\n  if (scrollBox.vbar) {\n    scrollBox.vbar.attr('opacity', '0').transition().attr('opacity', '1');\n  }\n}\nfunction hideScrollBox(scrollBox) {\n  var hasHBar = !!scrollBox.hbar;\n  var hasVBar = !!scrollBox.vbar;\n  if (hasHBar) {\n    scrollBox.hbar.transition().attr('opacity', '0').each('end', function () {\n      hasHBar = false;\n      if (!hasVBar) scrollBox.disable();\n    });\n  }\n  if (hasVBar) {\n    scrollBox.vbar.transition().attr('opacity', '0').each('end', function () {\n      hasVBar = false;\n      if (!hasHBar) scrollBox.disable();\n    });\n  }\n}\nfunction drawItem(item, menuOpts, itemOpts, gd) {\n  item.call(drawItemRect, menuOpts).call(drawItemText, menuOpts, itemOpts, gd);\n}\nfunction drawItemRect(item, menuOpts) {\n  var rect = Lib.ensureSingle(item, 'rect', constants.itemRectClassName, function (s) {\n    s.attr({\n      rx: constants.rx,\n      ry: constants.ry,\n      'shape-rendering': 'crispEdges'\n    });\n  });\n  rect.call(Color.stroke, menuOpts.bordercolor).call(Color.fill, menuOpts.bgcolor).style('stroke-width', menuOpts.borderwidth + 'px');\n}\nfunction drawItemText(item, menuOpts, itemOpts, gd) {\n  var text = Lib.ensureSingle(item, 'text', constants.itemTextClassName, function (s) {\n    s.classed('user-select-none', true).attr({\n      'text-anchor': 'start',\n      'data-notex': 1\n    });\n  });\n  text.call(Drawing.font, menuOpts.font).text(itemOpts.label).call(svgTextUtils.convertToTspans, gd);\n}\nfunction styleButtons(buttons, menuOpts) {\n  var active = menuOpts.active;\n  buttons.each(function (buttonOpts, i) {\n    var button = d3.select(this);\n    if (i === active && menuOpts.showactive) {\n      button.select('rect.' + constants.itemRectClassName).call(Color.fill, constants.activeColor);\n    }\n  });\n}\nfunction styleOnMouseOver(item) {\n  item.select('rect.' + constants.itemRectClassName).call(Color.fill, constants.hoverColor);\n}\nfunction styleOnMouseOut(item, menuOpts) {\n  item.select('rect.' + constants.itemRectClassName).call(Color.fill, menuOpts.bgcolor);\n}\n\n// find item dimensions (this mutates menuOpts)\nfunction findDimensions(gd, menuOpts) {\n  var dims = menuOpts._dims = {\n    width1: 0,\n    height1: 0,\n    heights: [],\n    widths: [],\n    totalWidth: 0,\n    totalHeight: 0,\n    openWidth: 0,\n    openHeight: 0,\n    lx: 0,\n    ly: 0\n  };\n  var fakeButtons = Drawing.tester.selectAll('g.' + constants.dropdownButtonClassName).data(Lib.filterVisible(menuOpts.buttons));\n  fakeButtons.enter().append('g').classed(constants.dropdownButtonClassName, true);\n  var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n  // loop over fake buttons to find width / height\n  fakeButtons.each(function (buttonOpts, i) {\n    var button = d3.select(this);\n    button.call(drawItem, menuOpts, buttonOpts, gd);\n    var text = button.select('.' + constants.itemTextClassName);\n\n    // width is given by max width of all buttons\n    var tWidth = text.node() && Drawing.bBox(text.node()).width;\n    var wEff = Math.max(tWidth + constants.textPadX, constants.minWidth);\n\n    // height is determined by item text\n    var tHeight = menuOpts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var hEff = Math.max(tHeight * tLines, constants.minHeight) + constants.textOffsetY;\n    hEff = Math.ceil(hEff);\n    wEff = Math.ceil(wEff);\n\n    // Store per-item sizes since a row of horizontal buttons, for example,\n    // don't all need to be the same width:\n    dims.widths[i] = wEff;\n    dims.heights[i] = hEff;\n\n    // Height and width of individual element:\n    dims.height1 = Math.max(dims.height1, hEff);\n    dims.width1 = Math.max(dims.width1, wEff);\n    if (isVertical) {\n      dims.totalWidth = Math.max(dims.totalWidth, wEff);\n      dims.openWidth = dims.totalWidth;\n      dims.totalHeight += hEff + constants.gapButton;\n      dims.openHeight += hEff + constants.gapButton;\n    } else {\n      dims.totalWidth += wEff + constants.gapButton;\n      dims.openWidth += wEff + constants.gapButton;\n      dims.totalHeight = Math.max(dims.totalHeight, hEff);\n      dims.openHeight = dims.totalHeight;\n    }\n  });\n  if (isVertical) {\n    dims.totalHeight -= constants.gapButton;\n  } else {\n    dims.totalWidth -= constants.gapButton;\n  }\n  dims.headerWidth = dims.width1 + constants.arrowPadX;\n  dims.headerHeight = dims.height1;\n  if (menuOpts.type === 'dropdown') {\n    if (isVertical) {\n      dims.width1 += constants.arrowPadX;\n      dims.totalHeight = dims.height1;\n    } else {\n      dims.totalWidth = dims.width1;\n    }\n    dims.totalWidth += constants.arrowPadX;\n  }\n  fakeButtons.remove();\n  var paddedWidth = dims.totalWidth + menuOpts.pad.l + menuOpts.pad.r;\n  var paddedHeight = dims.totalHeight + menuOpts.pad.t + menuOpts.pad.b;\n  var graphSize = gd._fullLayout._size;\n  dims.lx = graphSize.l + graphSize.w * menuOpts.x;\n  dims.ly = graphSize.t + graphSize.h * (1 - menuOpts.y);\n  var xanchor = 'left';\n  if (Lib.isRightAnchor(menuOpts)) {\n    dims.lx -= paddedWidth;\n    xanchor = 'right';\n  }\n  if (Lib.isCenterAnchor(menuOpts)) {\n    dims.lx -= paddedWidth / 2;\n    xanchor = 'center';\n  }\n  var yanchor = 'top';\n  if (Lib.isBottomAnchor(menuOpts)) {\n    dims.ly -= paddedHeight;\n    yanchor = 'bottom';\n  }\n  if (Lib.isMiddleAnchor(menuOpts)) {\n    dims.ly -= paddedHeight / 2;\n    yanchor = 'middle';\n  }\n  dims.totalWidth = Math.ceil(dims.totalWidth);\n  dims.totalHeight = Math.ceil(dims.totalHeight);\n  dims.lx = Math.round(dims.lx);\n  dims.ly = Math.round(dims.ly);\n  Plots.autoMargin(gd, autoMarginId(menuOpts), {\n    x: menuOpts.x,\n    y: menuOpts.y,\n    l: paddedWidth * ({\n      right: 1,\n      center: 0.5\n    }[xanchor] || 0),\n    r: paddedWidth * ({\n      left: 1,\n      center: 0.5\n    }[xanchor] || 0),\n    b: paddedHeight * ({\n      top: 1,\n      middle: 0.5\n    }[yanchor] || 0),\n    t: paddedHeight * ({\n      bottom: 1,\n      middle: 0.5\n    }[yanchor] || 0)\n  });\n}\nfunction autoMarginId(menuOpts) {\n  return constants.autoMarginIdRoot + menuOpts._index;\n}\n\n// set item positions (mutates posOpts)\nfunction setItemPosition(item, menuOpts, posOpts, overrideOpts) {\n  overrideOpts = overrideOpts || {};\n  var rect = item.select('.' + constants.itemRectClassName);\n  var text = item.select('.' + constants.itemTextClassName);\n  var borderWidth = menuOpts.borderwidth;\n  var index = posOpts.index;\n  var dims = menuOpts._dims;\n  Drawing.setTranslate(item, borderWidth + posOpts.x, borderWidth + posOpts.y);\n  var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n  var finalHeight = overrideOpts.height || (isVertical ? dims.heights[index] : dims.height1);\n  rect.attr({\n    x: 0,\n    y: 0,\n    width: overrideOpts.width || (isVertical ? dims.width1 : dims.widths[index]),\n    height: finalHeight\n  });\n  var tHeight = menuOpts.font.size * LINE_SPACING;\n  var tLines = svgTextUtils.lineCount(text);\n  var spanOffset = (tLines - 1) * tHeight / 2;\n  svgTextUtils.positionText(text, constants.textOffsetX, finalHeight / 2 - spanOffset + constants.textOffsetY);\n  if (isVertical) {\n    posOpts.y += dims.heights[index] + posOpts.yPad;\n  } else {\n    posOpts.x += dims.widths[index] + posOpts.xPad;\n  }\n  posOpts.index++;\n}\nfunction removeAllButtons(gButton, newMenuIndexAttr) {\n  gButton.attr(constants.menuIndexAttrName, newMenuIndexAttr || '-1').selectAll('g.' + constants.dropdownButtonClassName).remove();\n}","map":{"version":3,"names":["d3","require","Plots","Color","Drawing","Lib","svgTextUtils","arrayEditor","LINE_SPACING","constants","ScrollBox","module","exports","draw","gd","fullLayout","_fullLayout","menuData","filterVisible","name","clearAutoMargin","menuOpts","autoMargin","autoMarginId","menus","_menulayer","selectAll","containerClassName","data","length","enter","append","classed","style","exit","each","select","headerGroupClassName","remove","headerGroups","keyFunction","gButton","ensureSingle","dropdownButtonGroupClassName","s","i","findDimensions","scrollBoxId","_uid","scrollBox","size","node","parentNode","appendChild","call","removeAllButtons","gHeader","_gButton","type","manageCommandObserver","buttons","setActive","index","drawHeader","isActive","drawButtons","_index","isFolded","attr","menuIndexAttrName","buttonOpts","buttonIndex","isSilentUpdate","active","layout","applyUpdate","header","headerClassName","dims","_dims","headerOpts","blankHeaderOpts","posOpts","y","pad","t","yPad","x","l","xPad","positionOverrides","width","headerWidth","height","headerHeight","drawItem","setItemPosition","arrow","headerArrowClassName","font","text","arrowSymbol","direction","arrowOffsetX","textOffsetY","on","String","styleOnMouseOver","styleOnMouseOut","setTranslate","lx","ly","buttonData","klass","dropdownButtonClassName","buttonClassName","transition","x0","y0","isVertical","indexOf","gapButtonHeader","gapButton","openHeight","openWidth","scrollBoxPosition","borderwidth","button","event","defaultPrevented","execute","executeAPICommand","method","args","emit","menu","styleButtons","w","Math","max","h","drawScrollBox","hideScrollBox","position","translateX","translateY","heights","widths","enable","hbar","vbar","hasHBar","hasVBar","disable","item","itemOpts","drawItemRect","drawItemText","rect","itemRectClassName","rx","ry","stroke","bordercolor","fill","bgcolor","itemTextClassName","label","convertToTspans","showactive","activeColor","hoverColor","width1","height1","totalWidth","totalHeight","fakeButtons","tester","tWidth","bBox","wEff","textPadX","minWidth","tHeight","tLines","lineCount","hEff","minHeight","ceil","arrowPadX","paddedWidth","r","paddedHeight","b","graphSize","_size","xanchor","isRightAnchor","isCenterAnchor","yanchor","isBottomAnchor","isMiddleAnchor","round","right","center","left","top","middle","bottom","autoMarginIdRoot","overrideOpts","borderWidth","finalHeight","spanOffset","positionText","textOffsetX","newMenuIndexAttr"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/updatemenus/draw.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Plots = require('../../plots/plots');\nvar Color = require('../color');\nvar Drawing = require('../drawing');\nvar Lib = require('../../lib');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar arrayEditor = require('../../plot_api/plot_template').arrayEditor;\n\nvar LINE_SPACING = require('../../constants/alignment').LINE_SPACING;\n\nvar constants = require('./constants');\nvar ScrollBox = require('./scrollbox');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var menuData = Lib.filterVisible(fullLayout[constants.name]);\n\n    /* Update menu data is bound to the header-group.\n     * The items in the header group are always present.\n     *\n     * Upon clicking on a header its corresponding button\n     * data is bound to the button-group.\n     *\n     * We draw all headers in one group before all buttons\n     * so that the buttons *always* appear above the headers.\n     *\n     * Note that only one set of buttons are visible at once.\n     *\n     * <g container />\n     *\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     <g header-group />\n     *         <g item header />\n     *         <text item header-arrow />\n     *     ...\n     *\n     *     <g button-group />\n     *         <g item button />\n     *         <g item button />\n     *         ...\n     */\n\n    function clearAutoMargin(menuOpts) {\n        Plots.autoMargin(gd, autoMarginId(menuOpts));\n    }\n\n    // draw update menu container\n    var menus = fullLayout._menulayer\n        .selectAll('g.' + constants.containerClassName)\n        .data(menuData.length > 0 ? [0] : []);\n\n    menus.enter().append('g')\n        .classed(constants.containerClassName, true)\n        .style('cursor', 'pointer');\n\n    menus.exit().each(function() {\n        // Most components don't need to explicitly remove autoMargin, because\n        // marginPushers does this - but updatemenu updates don't go through\n        // a full replot so we need to explicitly remove it.\n        // This is for removing *all* updatemenus, removing individuals is\n        // handled below, in headerGroups.exit\n        d3.select(this).selectAll('g.' + constants.headerGroupClassName)\n            .each(clearAutoMargin);\n    }).remove();\n\n    // return early if no update menus are visible\n    if(menuData.length === 0) return;\n\n    // join header group\n    var headerGroups = menus.selectAll('g.' + constants.headerGroupClassName)\n        .data(menuData, keyFunction);\n\n    headerGroups.enter().append('g')\n        .classed(constants.headerGroupClassName, true);\n\n    // draw dropdown button container\n    var gButton = Lib.ensureSingle(menus, 'g', constants.dropdownButtonGroupClassName, function(s) {\n        s.style('pointer-events', 'all');\n    });\n\n    // find dimensions before plotting anything (this mutates menuOpts)\n    for(var i = 0; i < menuData.length; i++) {\n        var menuOpts = menuData[i];\n        findDimensions(gd, menuOpts);\n    }\n\n    // setup scrollbox\n    var scrollBoxId = 'updatemenus' + fullLayout._uid;\n    var scrollBox = new ScrollBox(gd, gButton, scrollBoxId);\n\n    // remove exiting header, remove dropped buttons and reset margins\n    if(headerGroups.enter().size()) {\n        // make sure gButton is on top of all headers\n        gButton.node().parentNode.appendChild(gButton.node());\n        gButton.call(removeAllButtons);\n    }\n\n    headerGroups.exit().each(function(menuOpts) {\n        gButton.call(removeAllButtons);\n        clearAutoMargin(menuOpts);\n    }).remove();\n\n    // draw headers!\n    headerGroups.each(function(menuOpts) {\n        var gHeader = d3.select(this);\n\n        var _gButton = menuOpts.type === 'dropdown' ? gButton : null;\n        Plots.manageCommandObserver(gd, menuOpts, menuOpts.buttons, function(data) {\n            setActive(gd, menuOpts, menuOpts.buttons[data.index], gHeader, _gButton, scrollBox, data.index, true);\n        });\n\n        if(menuOpts.type === 'dropdown') {\n            drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n            // if this menu is active, update the dropdown container\n            if(isActive(gButton, menuOpts)) {\n                drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n            }\n        } else {\n            drawButtons(gd, gHeader, null, null, menuOpts);\n        }\n\n    });\n};\n\n// Note that '_index' is set at the default step,\n// it corresponds to the menu index in the user layout update menu container.\n// Because a menu can be set invisible,\n// this is a more 'consistent' field than the index in the menuData.\nfunction keyFunction(menuOpts) {\n    return menuOpts._index;\n}\n\nfunction isFolded(gButton) {\n    return +gButton.attr(constants.menuIndexAttrName) === -1;\n}\n\nfunction isActive(gButton, menuOpts) {\n    return +gButton.attr(constants.menuIndexAttrName) === menuOpts._index;\n}\n\nfunction setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex, isSilentUpdate) {\n    // update 'active' attribute in menuOpts\n    menuOpts.active = buttonIndex;\n\n    // due to templating, it's possible this slider doesn't even exist yet\n    arrayEditor(gd.layout, constants.name, menuOpts)\n        .applyUpdate('active', buttonIndex);\n\n    if(menuOpts.type === 'buttons') {\n        drawButtons(gd, gHeader, null, null, menuOpts);\n    }\n    else if(menuOpts.type === 'dropdown') {\n        // fold up buttons and redraw header\n        gButton.attr(constants.menuIndexAttrName, '-1');\n\n        drawHeader(gd, gHeader, gButton, scrollBox, menuOpts);\n\n        if(!isSilentUpdate) {\n            drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n        }\n    }\n}\n\nfunction drawHeader(gd, gHeader, gButton, scrollBox, menuOpts) {\n    var header = Lib.ensureSingle(gHeader, 'g', constants.headerClassName, function(s) {\n        s.style('pointer-events', 'all');\n    });\n\n    var dims = menuOpts._dims;\n    var active = menuOpts.active;\n    var headerOpts = menuOpts.buttons[active] || constants.blankHeaderOpts;\n    var posOpts = { y: menuOpts.pad.t, yPad: 0, x: menuOpts.pad.l, xPad: 0, index: 0 };\n    var positionOverrides = {\n        width: dims.headerWidth,\n        height: dims.headerHeight\n    };\n\n    header\n        .call(drawItem, menuOpts, headerOpts, gd)\n        .call(setItemPosition, menuOpts, posOpts, positionOverrides);\n\n    // draw drop arrow at the right edge\n    var arrow = Lib.ensureSingle(gHeader, 'text', constants.headerArrowClassName, function(s) {\n        s.classed('user-select-none', true)\n            .attr('text-anchor', 'end')\n            .call(Drawing.font, menuOpts.font)\n            .text(constants.arrowSymbol[menuOpts.direction]);\n    });\n\n    arrow.attr({\n        x: dims.headerWidth - constants.arrowOffsetX + menuOpts.pad.l,\n        y: dims.headerHeight / 2 + constants.textOffsetY + menuOpts.pad.t\n    });\n\n    header.on('click', function() {\n        gButton.call(removeAllButtons,\n            String(isActive(gButton, menuOpts) ? -1 : menuOpts._index)\n        );\n\n        drawButtons(gd, gHeader, gButton, scrollBox, menuOpts);\n    });\n\n    header.on('mouseover', function() {\n        header.call(styleOnMouseOver);\n    });\n\n    header.on('mouseout', function() {\n        header.call(styleOnMouseOut, menuOpts);\n    });\n\n    // translate header group\n    Drawing.setTranslate(gHeader, dims.lx, dims.ly);\n}\n\nfunction drawButtons(gd, gHeader, gButton, scrollBox, menuOpts) {\n    // If this is a set of buttons, set pointer events = all since we play\n    // some minor games with which container is which in order to simplify\n    // the drawing of *either* buttons or menus\n    if(!gButton) {\n        gButton = gHeader;\n        gButton.attr('pointer-events', 'all');\n    }\n\n    var buttonData = (!isFolded(gButton) || menuOpts.type === 'buttons') ?\n        menuOpts.buttons :\n        [];\n\n    var klass = menuOpts.type === 'dropdown' ? constants.dropdownButtonClassName : constants.buttonClassName;\n\n    var buttons = gButton.selectAll('g.' + klass)\n        .data(Lib.filterVisible(buttonData));\n\n    var enter = buttons.enter().append('g')\n        .classed(klass, true);\n\n    var exit = buttons.exit();\n\n    if(menuOpts.type === 'dropdown') {\n        enter.attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n\n        exit.transition()\n            .attr('opacity', '0')\n            .remove();\n    } else {\n        exit.remove();\n    }\n\n    var x0 = 0;\n    var y0 = 0;\n    var dims = menuOpts._dims;\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n    if(menuOpts.type === 'dropdown') {\n        if(isVertical) {\n            y0 = dims.headerHeight + constants.gapButtonHeader;\n        } else {\n            x0 = dims.headerWidth + constants.gapButtonHeader;\n        }\n    }\n\n    if(menuOpts.type === 'dropdown' && menuOpts.direction === 'up') {\n        y0 = -constants.gapButtonHeader + constants.gapButton - dims.openHeight;\n    }\n\n    if(menuOpts.type === 'dropdown' && menuOpts.direction === 'left') {\n        x0 = -constants.gapButtonHeader + constants.gapButton - dims.openWidth;\n    }\n\n    var posOpts = {\n        x: dims.lx + x0 + menuOpts.pad.l,\n        y: dims.ly + y0 + menuOpts.pad.t,\n        yPad: constants.gapButton,\n        xPad: constants.gapButton,\n        index: 0,\n    };\n\n    var scrollBoxPosition = {\n        l: posOpts.x + menuOpts.borderwidth,\n        t: posOpts.y + menuOpts.borderwidth\n    };\n\n    buttons.each(function(buttonOpts, buttonIndex) {\n        var button = d3.select(this);\n\n        button\n            .call(drawItem, menuOpts, buttonOpts, gd)\n            .call(setItemPosition, menuOpts, posOpts);\n\n        button.on('click', function() {\n            // skip `dragend` events\n            if(d3.event.defaultPrevented) return;\n\n            setActive(gd, menuOpts, buttonOpts, gHeader, gButton, scrollBox, buttonIndex);\n\n            if(buttonOpts.execute) {\n                Plots.executeAPICommand(gd, buttonOpts.method, buttonOpts.args);\n            }\n\n            gd.emit('plotly_buttonclicked', {menu: menuOpts, button: buttonOpts, active: menuOpts.active});\n        });\n\n        button.on('mouseover', function() {\n            button.call(styleOnMouseOver);\n        });\n\n        button.on('mouseout', function() {\n            button.call(styleOnMouseOut, menuOpts);\n            buttons.call(styleButtons, menuOpts);\n        });\n    });\n\n    buttons.call(styleButtons, menuOpts);\n\n    if(isVertical) {\n        scrollBoxPosition.w = Math.max(dims.openWidth, dims.headerWidth);\n        scrollBoxPosition.h = posOpts.y - scrollBoxPosition.t;\n    }\n    else {\n        scrollBoxPosition.w = posOpts.x - scrollBoxPosition.l;\n        scrollBoxPosition.h = Math.max(dims.openHeight, dims.headerHeight);\n    }\n\n    scrollBoxPosition.direction = menuOpts.direction;\n\n    if(scrollBox) {\n        if(buttons.size()) {\n            drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, scrollBoxPosition);\n        }\n        else {\n            hideScrollBox(scrollBox);\n        }\n    }\n}\n\nfunction drawScrollBox(gd, gHeader, gButton, scrollBox, menuOpts, position) {\n    // enable the scrollbox\n    var direction = menuOpts.direction;\n    var isVertical = (direction === 'up' || direction === 'down');\n    var dims = menuOpts._dims;\n\n    var active = menuOpts.active;\n    var translateX, translateY;\n    var i;\n    if(isVertical) {\n        translateY = 0;\n        for(i = 0; i < active; i++) {\n            translateY += dims.heights[i] + constants.gapButton;\n        }\n    }\n    else {\n        translateX = 0;\n        for(i = 0; i < active; i++) {\n            translateX += dims.widths[i] + constants.gapButton;\n        }\n    }\n\n    scrollBox.enable(position, translateX, translateY);\n\n    if(scrollBox.hbar) {\n        scrollBox.hbar\n            .attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n    }\n\n    if(scrollBox.vbar) {\n        scrollBox.vbar\n            .attr('opacity', '0')\n            .transition()\n            .attr('opacity', '1');\n    }\n}\n\nfunction hideScrollBox(scrollBox) {\n    var hasHBar = !!scrollBox.hbar;\n    var hasVBar = !!scrollBox.vbar;\n\n    if(hasHBar) {\n        scrollBox.hbar\n            .transition()\n            .attr('opacity', '0')\n            .each('end', function() {\n                hasHBar = false;\n                if(!hasVBar) scrollBox.disable();\n            });\n    }\n\n    if(hasVBar) {\n        scrollBox.vbar\n            .transition()\n            .attr('opacity', '0')\n            .each('end', function() {\n                hasVBar = false;\n                if(!hasHBar) scrollBox.disable();\n            });\n    }\n}\n\nfunction drawItem(item, menuOpts, itemOpts, gd) {\n    item.call(drawItemRect, menuOpts)\n        .call(drawItemText, menuOpts, itemOpts, gd);\n}\n\nfunction drawItemRect(item, menuOpts) {\n    var rect = Lib.ensureSingle(item, 'rect', constants.itemRectClassName, function(s) {\n        s.attr({\n            rx: constants.rx,\n            ry: constants.ry,\n            'shape-rendering': 'crispEdges'\n        });\n    });\n\n    rect.call(Color.stroke, menuOpts.bordercolor)\n        .call(Color.fill, menuOpts.bgcolor)\n        .style('stroke-width', menuOpts.borderwidth + 'px');\n}\n\nfunction drawItemText(item, menuOpts, itemOpts, gd) {\n    var text = Lib.ensureSingle(item, 'text', constants.itemTextClassName, function(s) {\n        s.classed('user-select-none', true)\n            .attr({\n                'text-anchor': 'start',\n                'data-notex': 1\n            });\n    });\n\n    text.call(Drawing.font, menuOpts.font)\n        .text(itemOpts.label)\n        .call(svgTextUtils.convertToTspans, gd);\n}\n\nfunction styleButtons(buttons, menuOpts) {\n    var active = menuOpts.active;\n\n    buttons.each(function(buttonOpts, i) {\n        var button = d3.select(this);\n\n        if(i === active && menuOpts.showactive) {\n            button.select('rect.' + constants.itemRectClassName)\n                .call(Color.fill, constants.activeColor);\n        }\n    });\n}\n\nfunction styleOnMouseOver(item) {\n    item.select('rect.' + constants.itemRectClassName)\n        .call(Color.fill, constants.hoverColor);\n}\n\nfunction styleOnMouseOut(item, menuOpts) {\n    item.select('rect.' + constants.itemRectClassName)\n        .call(Color.fill, menuOpts.bgcolor);\n}\n\n// find item dimensions (this mutates menuOpts)\nfunction findDimensions(gd, menuOpts) {\n    var dims = menuOpts._dims = {\n        width1: 0,\n        height1: 0,\n        heights: [],\n        widths: [],\n        totalWidth: 0,\n        totalHeight: 0,\n        openWidth: 0,\n        openHeight: 0,\n        lx: 0,\n        ly: 0\n    };\n\n    var fakeButtons = Drawing.tester.selectAll('g.' + constants.dropdownButtonClassName)\n        .data(Lib.filterVisible(menuOpts.buttons));\n\n    fakeButtons.enter().append('g')\n        .classed(constants.dropdownButtonClassName, true);\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n\n    // loop over fake buttons to find width / height\n    fakeButtons.each(function(buttonOpts, i) {\n        var button = d3.select(this);\n\n        button.call(drawItem, menuOpts, buttonOpts, gd);\n\n        var text = button.select('.' + constants.itemTextClassName);\n\n        // width is given by max width of all buttons\n        var tWidth = text.node() && Drawing.bBox(text.node()).width;\n        var wEff = Math.max(tWidth + constants.textPadX, constants.minWidth);\n\n        // height is determined by item text\n        var tHeight = menuOpts.font.size * LINE_SPACING;\n        var tLines = svgTextUtils.lineCount(text);\n        var hEff = Math.max(tHeight * tLines, constants.minHeight) + constants.textOffsetY;\n\n        hEff = Math.ceil(hEff);\n        wEff = Math.ceil(wEff);\n\n        // Store per-item sizes since a row of horizontal buttons, for example,\n        // don't all need to be the same width:\n        dims.widths[i] = wEff;\n        dims.heights[i] = hEff;\n\n        // Height and width of individual element:\n        dims.height1 = Math.max(dims.height1, hEff);\n        dims.width1 = Math.max(dims.width1, wEff);\n\n        if(isVertical) {\n            dims.totalWidth = Math.max(dims.totalWidth, wEff);\n            dims.openWidth = dims.totalWidth;\n            dims.totalHeight += hEff + constants.gapButton;\n            dims.openHeight += hEff + constants.gapButton;\n        } else {\n            dims.totalWidth += wEff + constants.gapButton;\n            dims.openWidth += wEff + constants.gapButton;\n            dims.totalHeight = Math.max(dims.totalHeight, hEff);\n            dims.openHeight = dims.totalHeight;\n        }\n    });\n\n    if(isVertical) {\n        dims.totalHeight -= constants.gapButton;\n    } else {\n        dims.totalWidth -= constants.gapButton;\n    }\n\n\n    dims.headerWidth = dims.width1 + constants.arrowPadX;\n    dims.headerHeight = dims.height1;\n\n    if(menuOpts.type === 'dropdown') {\n        if(isVertical) {\n            dims.width1 += constants.arrowPadX;\n            dims.totalHeight = dims.height1;\n        } else {\n            dims.totalWidth = dims.width1;\n        }\n        dims.totalWidth += constants.arrowPadX;\n    }\n\n    fakeButtons.remove();\n\n    var paddedWidth = dims.totalWidth + menuOpts.pad.l + menuOpts.pad.r;\n    var paddedHeight = dims.totalHeight + menuOpts.pad.t + menuOpts.pad.b;\n\n    var graphSize = gd._fullLayout._size;\n    dims.lx = graphSize.l + graphSize.w * menuOpts.x;\n    dims.ly = graphSize.t + graphSize.h * (1 - menuOpts.y);\n\n    var xanchor = 'left';\n    if(Lib.isRightAnchor(menuOpts)) {\n        dims.lx -= paddedWidth;\n        xanchor = 'right';\n    }\n    if(Lib.isCenterAnchor(menuOpts)) {\n        dims.lx -= paddedWidth / 2;\n        xanchor = 'center';\n    }\n\n    var yanchor = 'top';\n    if(Lib.isBottomAnchor(menuOpts)) {\n        dims.ly -= paddedHeight;\n        yanchor = 'bottom';\n    }\n    if(Lib.isMiddleAnchor(menuOpts)) {\n        dims.ly -= paddedHeight / 2;\n        yanchor = 'middle';\n    }\n\n    dims.totalWidth = Math.ceil(dims.totalWidth);\n    dims.totalHeight = Math.ceil(dims.totalHeight);\n    dims.lx = Math.round(dims.lx);\n    dims.ly = Math.round(dims.ly);\n\n    Plots.autoMargin(gd, autoMarginId(menuOpts), {\n        x: menuOpts.x,\n        y: menuOpts.y,\n        l: paddedWidth * ({right: 1, center: 0.5}[xanchor] || 0),\n        r: paddedWidth * ({left: 1, center: 0.5}[xanchor] || 0),\n        b: paddedHeight * ({top: 1, middle: 0.5}[yanchor] || 0),\n        t: paddedHeight * ({bottom: 1, middle: 0.5}[yanchor] || 0)\n    });\n}\n\nfunction autoMarginId(menuOpts) {\n    return constants.autoMarginIdRoot + menuOpts._index;\n}\n\n// set item positions (mutates posOpts)\nfunction setItemPosition(item, menuOpts, posOpts, overrideOpts) {\n    overrideOpts = overrideOpts || {};\n    var rect = item.select('.' + constants.itemRectClassName);\n    var text = item.select('.' + constants.itemTextClassName);\n    var borderWidth = menuOpts.borderwidth;\n    var index = posOpts.index;\n    var dims = menuOpts._dims;\n\n    Drawing.setTranslate(item, borderWidth + posOpts.x, borderWidth + posOpts.y);\n\n    var isVertical = ['up', 'down'].indexOf(menuOpts.direction) !== -1;\n    var finalHeight = overrideOpts.height || (isVertical ? dims.heights[index] : dims.height1);\n\n    rect.attr({\n        x: 0,\n        y: 0,\n        width: overrideOpts.width || (isVertical ? dims.width1 : dims.widths[index]),\n        height: finalHeight\n    });\n\n    var tHeight = menuOpts.font.size * LINE_SPACING;\n    var tLines = svgTextUtils.lineCount(text);\n    var spanOffset = ((tLines - 1) * tHeight / 2);\n\n    svgTextUtils.positionText(text, constants.textOffsetX,\n        finalHeight / 2 - spanOffset + constants.textOffsetY);\n\n    if(isVertical) {\n        posOpts.y += dims.heights[index] + posOpts.yPad;\n    } else {\n        posOpts.x += dims.widths[index] + posOpts.xPad;\n    }\n\n    posOpts.index++;\n}\n\nfunction removeAllButtons(gButton, newMenuIndexAttr) {\n    gButton\n        .attr(constants.menuIndexAttrName, newMenuIndexAttr || '-1')\n        .selectAll('g.' + constants.dropdownButtonClassName).remove();\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Fx = require('../../components/fx');\nvar Lib = require('../../lib');\nvar getTraceColor = require('../scatter/get_trace_color');\nvar fillHoverText = require('../scatter/fill_hover_text');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n  var cd = pointData.cd;\n  var trace = cd[0].trace;\n  var xa = pointData.xa;\n  var ya = pointData.ya;\n  var subplot = pointData.subplot;\n\n  // compute winding number about [-180, 180] globe\n  var winding = xval >= 0 ? Math.floor((xval + 180) / 360) : Math.ceil((xval - 180) / 360);\n\n  // shift longitude to [-180, 180] to determine closest point\n  var lonShift = winding * 360;\n  var xval2 = xval - lonShift;\n  function distFn(d) {\n    var lonlat = d.lonlat;\n    if (lonlat[0] === BADNUM) return Infinity;\n    var lon = Lib.modHalf(lonlat[0], 360);\n    var lat = lonlat[1];\n    var pt = subplot.project([lon, lat]);\n    var dx = pt.x - xa.c2p([xval2, lat]);\n    var dy = pt.y - ya.c2p([lon, yval]);\n    var rad = Math.max(3, d.mrc || 0);\n    return Math.max(Math.sqrt(dx * dx + dy * dy) - rad, 1 - 3 / rad);\n  }\n  Fx.getClosest(cd, distFn, pointData);\n\n  // skip the rest (for this trace) if we didn't find a close point\n  if (pointData.index === false) return;\n  var di = cd[pointData.index];\n  var lonlat = di.lonlat;\n  var lonlatShifted = [Lib.modHalf(lonlat[0], 360) + lonShift, lonlat[1]];\n\n  // shift labels back to original winded globe\n  var xc = xa.c2p(lonlatShifted);\n  var yc = ya.c2p(lonlatShifted);\n  var rad = di.mrc || 1;\n  pointData.x0 = xc - rad;\n  pointData.x1 = xc + rad;\n  pointData.y0 = yc - rad;\n  pointData.y1 = yc + rad;\n  pointData.color = getTraceColor(trace, di);\n  pointData.extraText = getExtraText(trace, di, cd[0].t.labels);\n  pointData.hovertemplate = trace.hovertemplate;\n  return [pointData];\n};\nfunction getExtraText(trace, di, labels) {\n  if (trace.hovertemplate) {\n    return;\n  }\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var parts = hoverinfo.split('+');\n  var isAll = parts.indexOf('all') !== -1;\n  var hasLon = parts.indexOf('lon') !== -1;\n  var hasLat = parts.indexOf('lat') !== -1;\n  var lonlat = di.lonlat;\n  var text = [];\n\n  // TODO should we use a mock axis to format hover?\n  // If so, we'll need to make precision be zoom-level dependent\n  function format(v) {\n    return v + \"\\xB0\";\n  }\n  if (isAll || hasLon && hasLat) {\n    text.push('(' + format(lonlat[0]) + ', ' + format(lonlat[1]) + ')');\n  } else if (hasLon) {\n    text.push(labels.lon + format(lonlat[0]));\n  } else if (hasLat) {\n    text.push(labels.lat + format(lonlat[1]));\n  }\n  if (isAll || parts.indexOf('text') !== -1) {\n    fillHoverText(di, trace, text);\n  }\n  return text.join('<br>');\n}","map":{"version":3,"names":["Fx","require","Lib","getTraceColor","fillHoverText","BADNUM","module","exports","hoverPoints","pointData","xval","yval","cd","trace","xa","ya","subplot","winding","Math","floor","ceil","lonShift","xval2","distFn","d","lonlat","Infinity","lon","modHalf","lat","pt","project","dx","x","c2p","dy","y","rad","max","mrc","sqrt","getClosest","index","di","lonlatShifted","xc","yc","x0","x1","y0","y1","color","extraText","getExtraText","t","labels","hovertemplate","hoverinfo","hi","parts","split","isAll","indexOf","hasLon","hasLat","text","format","v","push","join"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scattermapbox/hover.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Fx = require('../../components/fx');\nvar Lib = require('../../lib');\nvar getTraceColor = require('../scatter/get_trace_color');\nvar fillHoverText = require('../scatter/fill_hover_text');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function hoverPoints(pointData, xval, yval) {\n    var cd = pointData.cd;\n    var trace = cd[0].trace;\n    var xa = pointData.xa;\n    var ya = pointData.ya;\n    var subplot = pointData.subplot;\n\n    // compute winding number about [-180, 180] globe\n    var winding = (xval >= 0) ?\n        Math.floor((xval + 180) / 360) :\n        Math.ceil((xval - 180) / 360);\n\n    // shift longitude to [-180, 180] to determine closest point\n    var lonShift = winding * 360;\n    var xval2 = xval - lonShift;\n\n    function distFn(d) {\n        var lonlat = d.lonlat;\n        if(lonlat[0] === BADNUM) return Infinity;\n\n        var lon = Lib.modHalf(lonlat[0], 360);\n        var lat = lonlat[1];\n        var pt = subplot.project([lon, lat]);\n        var dx = pt.x - xa.c2p([xval2, lat]);\n        var dy = pt.y - ya.c2p([lon, yval]);\n        var rad = Math.max(3, d.mrc || 0);\n\n        return Math.max(Math.sqrt(dx * dx + dy * dy) - rad, 1 - 3 / rad);\n    }\n\n    Fx.getClosest(cd, distFn, pointData);\n\n    // skip the rest (for this trace) if we didn't find a close point\n    if(pointData.index === false) return;\n\n    var di = cd[pointData.index];\n    var lonlat = di.lonlat;\n    var lonlatShifted = [Lib.modHalf(lonlat[0], 360) + lonShift, lonlat[1]];\n\n    // shift labels back to original winded globe\n    var xc = xa.c2p(lonlatShifted);\n    var yc = ya.c2p(lonlatShifted);\n    var rad = di.mrc || 1;\n\n    pointData.x0 = xc - rad;\n    pointData.x1 = xc + rad;\n    pointData.y0 = yc - rad;\n    pointData.y1 = yc + rad;\n\n    pointData.color = getTraceColor(trace, di);\n    pointData.extraText = getExtraText(trace, di, cd[0].t.labels);\n    pointData.hovertemplate = trace.hovertemplate;\n\n    return [pointData];\n};\n\nfunction getExtraText(trace, di, labels) {\n    if(trace.hovertemplate) {\n        return;\n    }\n\n    var hoverinfo = di.hi || trace.hoverinfo;\n    var parts = hoverinfo.split('+');\n    var isAll = parts.indexOf('all') !== -1;\n    var hasLon = parts.indexOf('lon') !== -1;\n    var hasLat = parts.indexOf('lat') !== -1;\n    var lonlat = di.lonlat;\n    var text = [];\n\n    // TODO should we use a mock axis to format hover?\n    // If so, we'll need to make precision be zoom-level dependent\n    function format(v) {\n        return v + '\\u00B0';\n    }\n\n    if(isAll || (hasLon && hasLat)) {\n        text.push('(' + format(lonlat[0]) + ', ' + format(lonlat[1]) + ')');\n    } else if(hasLon) {\n        text.push(labels.lon + format(lonlat[0]));\n    } else if(hasLat) {\n        text.push(labels.lat + format(lonlat[1]));\n    }\n\n    if(isAll || parts.indexOf('text') !== -1) {\n        fillHoverText(di, trace, text);\n    }\n\n    return text.join('<br>');\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
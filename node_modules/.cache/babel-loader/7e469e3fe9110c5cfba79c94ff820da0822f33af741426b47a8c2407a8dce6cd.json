{"ast":null,"code":"'use strict';\n\nvar createShader = require('gl-shader');\nvar createBuffer = require('gl-buffer');\nvar createVAO = require('gl-vao');\nvar createTexture = require('gl-texture2d');\nvar multiply = require('gl-mat4/multiply');\nvar invert = require('gl-mat4/invert');\nvar ndarray = require('ndarray');\nvar colormap = require('colormap');\nvar IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nfunction VectorMesh(gl, texture, triShader, pickShader, trianglePositions, triangleVectors, triangleIds, triangleColors, triangleUVs, triangleVAO, traceType) {\n  this.gl = gl;\n  this.pixelRatio = 1;\n  this.cells = [];\n  this.positions = [];\n  this.intensity = [];\n  this.texture = texture;\n  this.dirty = true;\n  this.triShader = triShader;\n  this.pickShader = pickShader;\n  this.trianglePositions = trianglePositions;\n  this.triangleVectors = triangleVectors;\n  this.triangleColors = triangleColors;\n  this.triangleUVs = triangleUVs;\n  this.triangleIds = triangleIds;\n  this.triangleVAO = triangleVAO;\n  this.triangleCount = 0;\n  this.pickId = 1;\n  this.bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  this.clipBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.lightPosition = [1e5, 1e5, 0];\n  this.ambientLight = 0.8;\n  this.diffuseLight = 0.8;\n  this.specularLight = 2.0;\n  this.roughness = 0.5;\n  this.fresnel = 1.5;\n  this.opacity = 1;\n  this.traceType = traceType;\n  this.tubeScale = 1; // used in streamtube\n  this.coneScale = 2; // used in cone\n  this.vectorScale = 1; // used in cone\n  this.coneOffset = 0.25; // used in cone\n\n  this._model = IDENTITY;\n  this._view = IDENTITY;\n  this._projection = IDENTITY;\n  this._resolution = [1, 1];\n}\nvar proto = VectorMesh.prototype;\nproto.isOpaque = function () {\n  return this.opacity >= 1;\n};\nproto.isTransparent = function () {\n  return this.opacity < 1;\n};\nproto.pickSlots = 1;\nproto.setPickBase = function (id) {\n  this.pickId = id;\n};\nfunction genColormap(param) {\n  var colors = colormap({\n    colormap: param,\n    nshades: 256,\n    format: 'rgba'\n  });\n  var result = new Uint8Array(256 * 4);\n  for (var i = 0; i < 256; ++i) {\n    var c = colors[i];\n    for (var j = 0; j < 3; ++j) {\n      result[4 * i + j] = c[j];\n    }\n    result[4 * i + 3] = c[3] * 255;\n  }\n  return ndarray(result, [256, 256, 4], [4, 0, 1]);\n}\nfunction takeZComponent(array) {\n  var n = array.length;\n  var result = new Array(n);\n  for (var i = 0; i < n; ++i) {\n    result[i] = array[i][2];\n  }\n  return result;\n}\nproto.update = function (params) {\n  params = params || {};\n  var gl = this.gl;\n  this.dirty = true;\n  if ('lightPosition' in params) {\n    this.lightPosition = params.lightPosition;\n  }\n  if ('opacity' in params) {\n    this.opacity = params.opacity;\n  }\n  if ('ambient' in params) {\n    this.ambientLight = params.ambient;\n  }\n  if ('diffuse' in params) {\n    this.diffuseLight = params.diffuse;\n  }\n  if ('specular' in params) {\n    this.specularLight = params.specular;\n  }\n  if ('roughness' in params) {\n    this.roughness = params.roughness;\n  }\n  if ('fresnel' in params) {\n    this.fresnel = params.fresnel;\n  }\n\n  // use in streamtube\n  if (params.tubeScale !== undefined) {\n    this.tubeScale = params.tubeScale;\n  }\n\n  // used in cone\n  if (params.vectorScale !== undefined) {\n    this.vectorScale = params.vectorScale;\n  }\n  if (params.coneScale !== undefined) {\n    this.coneScale = params.coneScale;\n  }\n  if (params.coneOffset !== undefined) {\n    this.coneOffset = params.coneOffset;\n  }\n  if (params.colormap) {\n    this.texture.shape = [256, 256];\n    this.texture.minFilter = gl.LINEAR_MIPMAP_LINEAR;\n    this.texture.magFilter = gl.LINEAR;\n    this.texture.setPixels(genColormap(params.colormap));\n    this.texture.generateMipmap();\n  }\n  var cells = params.cells;\n  var positions = params.positions;\n  var vectors = params.vectors;\n  if (!positions || !cells || !vectors) {\n    return;\n  }\n  var tPos = [];\n  var tVec = [];\n  var tCol = [];\n  var tUVs = [];\n  var tIds = [];\n\n  //Save geometry data for picking calculations\n  this.cells = cells;\n  this.positions = positions;\n  this.vectors = vectors;\n\n  //Compute colors\n  var meshColor = params.meshColor || [1, 1, 1, 1];\n\n  //UVs\n  var vertexIntensity = params.vertexIntensity;\n  var intensityLo = Infinity;\n  var intensityHi = -Infinity;\n  if (vertexIntensity) {\n    if (params.vertexIntensityBounds) {\n      intensityLo = +params.vertexIntensityBounds[0];\n      intensityHi = +params.vertexIntensityBounds[1];\n    } else {\n      for (var i = 0; i < vertexIntensity.length; ++i) {\n        var f = vertexIntensity[i];\n        intensityLo = Math.min(intensityLo, f);\n        intensityHi = Math.max(intensityHi, f);\n      }\n    }\n  } else {\n    for (var i = 0; i < positions.length; ++i) {\n      var f = positions[i][2];\n      intensityLo = Math.min(intensityLo, f);\n      intensityHi = Math.max(intensityHi, f);\n    }\n  }\n  if (vertexIntensity) {\n    this.intensity = vertexIntensity;\n  } else {\n    this.intensity = takeZComponent(positions);\n  }\n\n  //Update bounds\n  this.bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  for (var i = 0; i < positions.length; ++i) {\n    var p = positions[i];\n    for (var j = 0; j < 3; ++j) {\n      if (isNaN(p[j]) || !isFinite(p[j])) {\n        continue;\n      }\n      this.bounds[0][j] = Math.min(this.bounds[0][j], p[j]);\n      this.bounds[1][j] = Math.max(this.bounds[1][j], p[j]);\n    }\n  }\n\n  //Pack cells into buffers\n  var triangleCount = 0;\n  fill_loop: for (var i = 0; i < cells.length; ++i) {\n    var cell = cells[i];\n    switch (cell.length) {\n      case 3:\n        //Check NaNs\n        for (var j = 0; j < 3; ++j) {\n          var v = cell[j];\n          var p = positions[v];\n          for (var k = 0; k < 3; ++k) {\n            if (isNaN(p[k]) || !isFinite(p[k])) {\n              continue fill_loop;\n            }\n          }\n        }\n        for (var j = 0; j < 3; ++j) {\n          var v = cell[2 - j];\n          var p = positions[v];\n          tPos.push(p[0], p[1], p[2], p[3]);\n          var w = vectors[v];\n          tVec.push(w[0], w[1], w[2], w[3] || 0);\n          var c = meshColor;\n          if (c.length === 3) {\n            tCol.push(c[0], c[1], c[2], 1);\n          } else {\n            tCol.push(c[0], c[1], c[2], c[3]);\n          }\n          var uv;\n          if (vertexIntensity) {\n            uv = [(vertexIntensity[v] - intensityLo) / (intensityHi - intensityLo), 0];\n          } else {\n            uv = [(p[2] - intensityLo) / (intensityHi - intensityLo), 0];\n          }\n          tUVs.push(uv[0], uv[1]);\n          tIds.push(i);\n        }\n        triangleCount += 1;\n        break;\n      default:\n        break;\n    }\n  }\n  this.triangleCount = triangleCount;\n  this.trianglePositions.update(tPos);\n  this.triangleVectors.update(tVec);\n  this.triangleColors.update(tCol);\n  this.triangleUVs.update(tUVs);\n  this.triangleIds.update(new Uint32Array(tIds));\n};\nproto.drawTransparent = proto.draw = function (params) {\n  params = params || {};\n  var gl = this.gl;\n  var model = params.model || IDENTITY;\n  var view = params.view || IDENTITY;\n  var projection = params.projection || IDENTITY;\n  var clipBounds = [[-1e6, -1e6, -1e6], [1e6, 1e6, 1e6]];\n  for (var i = 0; i < 3; ++i) {\n    clipBounds[0][i] = Math.max(clipBounds[0][i], this.clipBounds[0][i]);\n    clipBounds[1][i] = Math.min(clipBounds[1][i], this.clipBounds[1][i]);\n  }\n  var uniforms = {\n    model: model,\n    view: view,\n    projection: projection,\n    inverseModel: IDENTITY.slice(),\n    clipBounds: clipBounds,\n    kambient: this.ambientLight,\n    kdiffuse: this.diffuseLight,\n    kspecular: this.specularLight,\n    roughness: this.roughness,\n    fresnel: this.fresnel,\n    eyePosition: [0, 0, 0],\n    lightPosition: [0, 0, 0],\n    opacity: this.opacity,\n    tubeScale: this.tubeScale,\n    vectorScale: this.vectorScale,\n    coneScale: this.coneScale,\n    coneOffset: this.coneOffset,\n    texture: 0\n  };\n  uniforms.inverseModel = invert(uniforms.inverseModel, uniforms.model);\n  gl.disable(gl.CULL_FACE);\n  this.texture.bind(0);\n  var invCameraMatrix = new Array(16);\n  multiply(invCameraMatrix, uniforms.view, uniforms.model);\n  multiply(invCameraMatrix, uniforms.projection, invCameraMatrix);\n  invert(invCameraMatrix, invCameraMatrix);\n  for (var i = 0; i < 3; ++i) {\n    uniforms.eyePosition[i] = invCameraMatrix[12 + i] / invCameraMatrix[15];\n  }\n  var w = invCameraMatrix[15];\n  for (var i = 0; i < 3; ++i) {\n    w += this.lightPosition[i] * invCameraMatrix[4 * i + 3];\n  }\n  for (var i = 0; i < 3; ++i) {\n    var s = invCameraMatrix[12 + i];\n    for (var j = 0; j < 3; ++j) {\n      s += invCameraMatrix[4 * j + i] * this.lightPosition[j];\n    }\n    uniforms.lightPosition[i] = s / w;\n  }\n  if (this.triangleCount > 0) {\n    var shader = this.triShader;\n    shader.bind();\n    shader.uniforms = uniforms;\n    this.triangleVAO.bind();\n    gl.drawArrays(gl.TRIANGLES, 0, this.triangleCount * 3);\n    this.triangleVAO.unbind();\n  }\n};\nproto.drawPick = function (params) {\n  params = params || {};\n  var gl = this.gl;\n  var model = params.model || IDENTITY;\n  var view = params.view || IDENTITY;\n  var projection = params.projection || IDENTITY;\n  var clipBounds = [[-1e6, -1e6, -1e6], [1e6, 1e6, 1e6]];\n  for (var i = 0; i < 3; ++i) {\n    clipBounds[0][i] = Math.max(clipBounds[0][i], this.clipBounds[0][i]);\n    clipBounds[1][i] = Math.min(clipBounds[1][i], this.clipBounds[1][i]);\n  }\n\n  //Save camera parameters\n  this._model = [].slice.call(model);\n  this._view = [].slice.call(view);\n  this._projection = [].slice.call(projection);\n  this._resolution = [gl.drawingBufferWidth, gl.drawingBufferHeight];\n  var uniforms = {\n    model: model,\n    view: view,\n    projection: projection,\n    clipBounds: clipBounds,\n    tubeScale: this.tubeScale,\n    vectorScale: this.vectorScale,\n    coneScale: this.coneScale,\n    coneOffset: this.coneOffset,\n    pickId: this.pickId / 255.0\n  };\n  var shader = this.pickShader;\n  shader.bind();\n  shader.uniforms = uniforms;\n  if (this.triangleCount > 0) {\n    this.triangleVAO.bind();\n    gl.drawArrays(gl.TRIANGLES, 0, this.triangleCount * 3);\n    this.triangleVAO.unbind();\n  }\n};\nproto.pick = function (pickData) {\n  if (!pickData) {\n    return null;\n  }\n  if (pickData.id !== this.pickId) {\n    return null;\n  }\n  var cellId = pickData.value[0] + 256 * pickData.value[1] + 65536 * pickData.value[2];\n  var cell = this.cells[cellId];\n  var pos = this.positions[cell[1]].slice(0, 3);\n  var result = {\n    position: pos,\n    dataCoordinate: pos,\n    index: Math.floor(cell[1] / 48)\n  };\n  if (this.traceType === 'cone') {\n    result.index = Math.floor(cell[1] / 48);\n  } else if (this.traceType === 'streamtube') {\n    result.intensity = this.intensity[cell[1]];\n    result.velocity = this.vectors[cell[1]].slice(0, 3);\n    result.divergence = this.vectors[cell[1]][3];\n    result.index = cellId;\n  }\n  return result;\n};\nproto.dispose = function () {\n  this.texture.dispose();\n  this.triShader.dispose();\n  this.pickShader.dispose();\n  this.triangleVAO.dispose();\n  this.trianglePositions.dispose();\n  this.triangleVectors.dispose();\n  this.triangleColors.dispose();\n  this.triangleUVs.dispose();\n  this.triangleIds.dispose();\n};\nfunction createMeshShader(gl, shaders) {\n  var shader = createShader(gl, shaders.meshShader.vertex, shaders.meshShader.fragment, null, shaders.meshShader.attributes);\n  shader.attributes.position.location = 0;\n  shader.attributes.color.location = 2;\n  shader.attributes.uv.location = 3;\n  shader.attributes.vector.location = 4;\n  return shader;\n}\nfunction createPickShader(gl, shaders) {\n  var shader = createShader(gl, shaders.pickShader.vertex, shaders.pickShader.fragment, null, shaders.pickShader.attributes);\n  shader.attributes.position.location = 0;\n  shader.attributes.id.location = 1;\n  shader.attributes.vector.location = 4;\n  return shader;\n}\nfunction createVectorMesh(gl, params, opts) {\n  var shaders = opts.shaders;\n  if (arguments.length === 1) {\n    params = gl;\n    gl = params.gl;\n  }\n  var triShader = createMeshShader(gl, shaders);\n  var pickShader = createPickShader(gl, shaders);\n  var meshTexture = createTexture(gl, ndarray(new Uint8Array([255, 255, 255, 255]), [1, 1, 4]));\n  meshTexture.generateMipmap();\n  meshTexture.minFilter = gl.LINEAR_MIPMAP_LINEAR;\n  meshTexture.magFilter = gl.LINEAR;\n  var trianglePositions = createBuffer(gl);\n  var triangleVectors = createBuffer(gl);\n  var triangleColors = createBuffer(gl);\n  var triangleUVs = createBuffer(gl);\n  var triangleIds = createBuffer(gl);\n  var triangleVAO = createVAO(gl, [{\n    buffer: trianglePositions,\n    type: gl.FLOAT,\n    size: 4\n  }, {\n    buffer: triangleIds,\n    type: gl.UNSIGNED_BYTE,\n    size: 4,\n    normalized: true\n  }, {\n    buffer: triangleColors,\n    type: gl.FLOAT,\n    size: 4\n  }, {\n    buffer: triangleUVs,\n    type: gl.FLOAT,\n    size: 2\n  }, {\n    buffer: triangleVectors,\n    type: gl.FLOAT,\n    size: 4\n  }]);\n  var mesh = new VectorMesh(gl, meshTexture, triShader, pickShader, trianglePositions, triangleVectors, triangleIds, triangleColors, triangleUVs, triangleVAO, opts.traceType || 'cone');\n  mesh.update(params);\n  return mesh;\n}\nmodule.exports = createVectorMesh;","map":{"version":3,"names":["createShader","require","createBuffer","createVAO","createTexture","multiply","invert","ndarray","colormap","IDENTITY","VectorMesh","gl","texture","triShader","pickShader","trianglePositions","triangleVectors","triangleIds","triangleColors","triangleUVs","triangleVAO","traceType","pixelRatio","cells","positions","intensity","dirty","triangleCount","pickId","bounds","Infinity","clipBounds","lightPosition","ambientLight","diffuseLight","specularLight","roughness","fresnel","opacity","tubeScale","coneScale","vectorScale","coneOffset","_model","_view","_projection","_resolution","proto","prototype","isOpaque","isTransparent","pickSlots","setPickBase","id","genColormap","param","colors","nshades","format","result","Uint8Array","i","c","j","takeZComponent","array","n","length","Array","update","params","ambient","diffuse","specular","undefined","shape","minFilter","LINEAR_MIPMAP_LINEAR","magFilter","LINEAR","setPixels","generateMipmap","vectors","tPos","tVec","tCol","tUVs","tIds","meshColor","vertexIntensity","intensityLo","intensityHi","vertexIntensityBounds","f","Math","min","max","p","isNaN","isFinite","fill_loop","cell","v","k","push","w","uv","Uint32Array","drawTransparent","draw","model","view","projection","uniforms","inverseModel","slice","kambient","kdiffuse","kspecular","eyePosition","disable","CULL_FACE","bind","invCameraMatrix","s","shader","drawArrays","TRIANGLES","unbind","drawPick","call","drawingBufferWidth","drawingBufferHeight","pick","pickData","cellId","value","pos","position","dataCoordinate","index","floor","velocity","divergence","dispose","createMeshShader","shaders","meshShader","vertex","fragment","attributes","location","color","vector","createPickShader","createVectorMesh","opts","arguments","meshTexture","buffer","type","FLOAT","size","UNSIGNED_BYTE","normalized","mesh","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-cone3d/create_mesh.js"],"sourcesContent":["'use strict'\n\nvar createShader  = require('gl-shader')\nvar createBuffer  = require('gl-buffer')\nvar createVAO     = require('gl-vao')\nvar createTexture = require('gl-texture2d')\nvar multiply      = require('gl-mat4/multiply')\nvar invert        = require('gl-mat4/invert')\nvar ndarray       = require('ndarray')\nvar colormap      = require('colormap')\n\nvar IDENTITY = [\n  1,0,0,0,\n  0,1,0,0,\n  0,0,1,0,\n  0,0,0,1]\n\nfunction VectorMesh(gl\n  , texture\n  , triShader\n  , pickShader\n  , trianglePositions\n  , triangleVectors\n  , triangleIds\n  , triangleColors\n  , triangleUVs\n  , triangleVAO\n  , traceType) {\n\n  this.gl                = gl\n  this.pixelRatio         = 1\n  this.cells             = []\n  this.positions         = []\n  this.intensity         = []\n  this.texture           = texture\n  this.dirty             = true\n\n  this.triShader         = triShader\n  this.pickShader        = pickShader\n\n  this.trianglePositions = trianglePositions\n  this.triangleVectors   = triangleVectors\n  this.triangleColors    = triangleColors\n  this.triangleUVs       = triangleUVs\n  this.triangleIds       = triangleIds\n  this.triangleVAO       = triangleVAO\n  this.triangleCount     = 0\n\n  this.pickId            = 1\n  this.bounds            = [\n    [ Infinity, Infinity, Infinity],\n    [-Infinity,-Infinity,-Infinity] ]\n  this.clipBounds        = [\n    [-Infinity,-Infinity,-Infinity],\n    [ Infinity, Infinity, Infinity] ]\n\n  this.lightPosition = [1e5, 1e5, 0]\n  this.ambientLight  = 0.8\n  this.diffuseLight  = 0.8\n  this.specularLight = 2.0\n  this.roughness     = 0.5\n  this.fresnel       = 1.5\n\n  this.opacity       = 1\n\n  this.traceType     = traceType\n  this.tubeScale     = 1 // used in streamtube\n  this.coneScale     = 2 // used in cone\n  this.vectorScale   = 1 // used in cone\n  this.coneOffset    = 0.25 // used in cone\n\n  this._model       = IDENTITY\n  this._view        = IDENTITY\n  this._projection  = IDENTITY\n  this._resolution  = [1,1]\n}\n\nvar proto = VectorMesh.prototype\n\nproto.isOpaque = function() {\n  return this.opacity >= 1\n}\n\nproto.isTransparent = function() {\n  return this.opacity < 1\n}\n\nproto.pickSlots = 1\n\nproto.setPickBase = function(id) {\n  this.pickId = id\n}\n\nfunction genColormap(param) {\n  var colors = colormap({\n      colormap: param\n    , nshades:  256\n    , format:  'rgba'\n  })\n\n  var result = new Uint8Array(256*4)\n  for(var i=0; i<256; ++i) {\n    var c = colors[i]\n    for(var j=0; j<3; ++j) {\n      result[4*i+j] = c[j]\n    }\n    result[4*i+3] = c[3]*255\n  }\n\n  return ndarray(result, [256,256,4], [4,0,1])\n}\n\nfunction takeZComponent(array) {\n  var n = array.length\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = array[i][2]\n  }\n  return result\n}\n\nproto.update = function(params) {\n  params = params || {}\n  var gl = this.gl\n\n  this.dirty = true\n\n  if('lightPosition' in params) {\n    this.lightPosition = params.lightPosition\n  }\n  if('opacity' in params) {\n    this.opacity = params.opacity\n  }\n  if('ambient' in params) {\n    this.ambientLight  = params.ambient\n  }\n  if('diffuse' in params) {\n    this.diffuseLight = params.diffuse\n  }\n  if('specular' in params) {\n    this.specularLight = params.specular\n  }\n  if('roughness' in params) {\n    this.roughness = params.roughness\n  }\n  if('fresnel' in params) {\n    this.fresnel = params.fresnel\n  }\n\n  // use in streamtube\n  if (params.tubeScale !== undefined) {\n    this.tubeScale = params.tubeScale\n  }\n\n  // used in cone\n  if (params.vectorScale !== undefined) {\n    this.vectorScale = params.vectorScale\n  }\n  if (params.coneScale !== undefined) {\n    this.coneScale = params.coneScale\n  }\n  if (params.coneOffset !== undefined) {\n    this.coneOffset = params.coneOffset\n  }\n\n  if (params.colormap) {\n    this.texture.shape = [256,256]\n    this.texture.minFilter = gl.LINEAR_MIPMAP_LINEAR\n    this.texture.magFilter = gl.LINEAR\n    this.texture.setPixels(genColormap(params.colormap))\n    this.texture.generateMipmap()\n  }\n\n  var cells = params.cells\n  var positions = params.positions\n  var vectors = params.vectors\n\n  if(!positions || !cells || !vectors) {\n    return\n  }\n\n  var tPos = []\n  var tVec = []\n  var tCol = []\n  var tUVs = []\n  var tIds = []\n\n  //Save geometry data for picking calculations\n  this.cells     = cells\n  this.positions = positions\n  this.vectors   = vectors\n\n  //Compute colors\n  var meshColor       = params.meshColor || [1,1,1,1]\n\n  //UVs\n  var vertexIntensity = params.vertexIntensity\n\n  var intensityLo     = Infinity\n  var intensityHi     = -Infinity\n\n  if(vertexIntensity) {\n    if(params.vertexIntensityBounds) {\n      intensityLo = +params.vertexIntensityBounds[0]\n      intensityHi = +params.vertexIntensityBounds[1]\n    } else {\n      for(var i=0; i<vertexIntensity.length; ++i) {\n        var f = vertexIntensity[i]\n        intensityLo = Math.min(intensityLo, f)\n        intensityHi = Math.max(intensityHi, f)\n      }\n    }\n  } else {\n    for(var i=0; i<positions.length; ++i) {\n      var f = positions[i][2]\n      intensityLo = Math.min(intensityLo, f)\n      intensityHi = Math.max(intensityHi, f)\n    }\n  }\n\n  if(vertexIntensity) {\n    this.intensity = vertexIntensity\n  } else {\n    this.intensity = takeZComponent(positions)\n  }\n\n  //Update bounds\n  this.bounds       = [[Infinity,Infinity,Infinity], [-Infinity,-Infinity,-Infinity]]\n  for(var i=0; i<positions.length; ++i) {\n    var p = positions[i]\n    for(var j=0; j<3; ++j) {\n      if(isNaN(p[j]) || !isFinite(p[j])) {\n        continue\n      }\n      this.bounds[0][j] = Math.min(this.bounds[0][j], p[j])\n      this.bounds[1][j] = Math.max(this.bounds[1][j], p[j])\n    }\n  }\n\n  //Pack cells into buffers\n  var triangleCount = 0\n\nfill_loop:\n  for(var i=0; i<cells.length; ++i) {\n    var cell = cells[i]\n    switch(cell.length) {\n      case 3:\n        //Check NaNs\n        for(var j=0; j<3; ++j) {\n          var v = cell[j]\n          var p = positions[v]\n          for(var k=0; k<3; ++k) {\n            if(isNaN(p[k]) || !isFinite(p[k])) {\n              continue fill_loop\n            }\n          }\n        }\n\n        for(var j=0; j<3; ++j) {\n          var v = cell[2 - j]\n\n          var p = positions[v]\n          tPos.push(p[0], p[1], p[2], p[3])\n\n          var w = vectors[v]\n          tVec.push(w[0], w[1], w[2], w[3] || 0)\n\n          var c = meshColor\n          if(c.length === 3) {\n            tCol.push(c[0], c[1], c[2], 1)\n          } else {\n            tCol.push(c[0], c[1], c[2], c[3])\n          }\n\n          var uv\n          if(vertexIntensity) {\n            uv = [\n              (vertexIntensity[v] - intensityLo) /\n              (intensityHi - intensityLo), 0]\n          } else {\n            uv = [\n              (p[2] - intensityLo) /\n              (intensityHi - intensityLo), 0]\n          }\n          tUVs.push(uv[0], uv[1])\n\n          tIds.push(i)\n        }\n        triangleCount += 1\n      break\n\n      default:\n      break\n    }\n  }\n\n  this.triangleCount  = triangleCount\n\n  this.trianglePositions.update(tPos)\n  this.triangleVectors.update(tVec)\n  this.triangleColors.update(tCol)\n  this.triangleUVs.update(tUVs)\n  this.triangleIds.update(new Uint32Array(tIds))\n}\n\nproto.drawTransparent = proto.draw = function(params) {\n  params = params || {}\n  var gl          = this.gl\n  var model       = params.model      || IDENTITY\n  var view        = params.view       || IDENTITY\n  var projection  = params.projection || IDENTITY\n\n  var clipBounds = [[-1e6,-1e6,-1e6],[1e6,1e6,1e6]]\n  for(var i=0; i<3; ++i) {\n    clipBounds[0][i] = Math.max(clipBounds[0][i], this.clipBounds[0][i])\n    clipBounds[1][i] = Math.min(clipBounds[1][i], this.clipBounds[1][i])\n  }\n\n  var uniforms = {\n    model:      model,\n    view:       view,\n    projection: projection,\n    inverseModel: IDENTITY.slice(),\n\n    clipBounds: clipBounds,\n\n    kambient:   this.ambientLight,\n    kdiffuse:   this.diffuseLight,\n    kspecular:  this.specularLight,\n    roughness:  this.roughness,\n    fresnel:    this.fresnel,\n\n    eyePosition:   [0,0,0],\n    lightPosition: [0,0,0],\n\n    opacity:  this.opacity,\n\n    tubeScale: this.tubeScale,\n\n    vectorScale: this.vectorScale,\n    coneScale: this.coneScale,\n    coneOffset: this.coneOffset,\n\n    texture:    0\n  }\n\n  uniforms.inverseModel = invert(uniforms.inverseModel, uniforms.model)\n\n  gl.disable(gl.CULL_FACE)\n\n  this.texture.bind(0)\n\n  var invCameraMatrix = new Array(16)\n  multiply(invCameraMatrix, uniforms.view, uniforms.model)\n  multiply(invCameraMatrix, uniforms.projection, invCameraMatrix)\n  invert(invCameraMatrix, invCameraMatrix)\n\n  for(var i=0; i<3; ++i) {\n    uniforms.eyePosition[i] = invCameraMatrix[12+i] / invCameraMatrix[15]\n  }\n\n  var w = invCameraMatrix[15]\n  for(var i=0; i<3; ++i) {\n    w += this.lightPosition[i] * invCameraMatrix[4*i+3]\n  }\n  for(var i=0; i<3; ++i) {\n    var s = invCameraMatrix[12+i]\n    for(var j=0; j<3; ++j) {\n      s += invCameraMatrix[4*j+i] * this.lightPosition[j]\n    }\n    uniforms.lightPosition[i] = s / w\n  }\n\n  if(this.triangleCount > 0) {\n    var shader = this.triShader\n    shader.bind()\n    shader.uniforms = uniforms\n\n    this.triangleVAO.bind()\n    gl.drawArrays(gl.TRIANGLES, 0, this.triangleCount*3)\n    this.triangleVAO.unbind()\n  }\n}\n\nproto.drawPick = function(params) {\n  params = params || {}\n\n  var gl         = this.gl\n\n  var model      = params.model      || IDENTITY\n  var view       = params.view       || IDENTITY\n  var projection = params.projection || IDENTITY\n\n  var clipBounds = [[-1e6,-1e6,-1e6],[1e6,1e6,1e6]]\n  for(var i=0; i<3; ++i) {\n    clipBounds[0][i] = Math.max(clipBounds[0][i], this.clipBounds[0][i])\n    clipBounds[1][i] = Math.min(clipBounds[1][i], this.clipBounds[1][i])\n  }\n\n  //Save camera parameters\n  this._model      = [].slice.call(model)\n  this._view       = [].slice.call(view)\n  this._projection = [].slice.call(projection)\n  this._resolution = [gl.drawingBufferWidth, gl.drawingBufferHeight]\n\n  var uniforms = {\n    model:      model,\n    view:       view,\n    projection: projection,\n    clipBounds: clipBounds,\n\n    tubeScale: this.tubeScale,\n    vectorScale: this.vectorScale,\n    coneScale: this.coneScale,\n    coneOffset: this.coneOffset,\n\n    pickId:     this.pickId / 255.0,\n  }\n\n  var shader = this.pickShader\n  shader.bind()\n  shader.uniforms = uniforms\n\n  if(this.triangleCount > 0) {\n    this.triangleVAO.bind()\n    gl.drawArrays(gl.TRIANGLES, 0, this.triangleCount*3)\n    this.triangleVAO.unbind()\n  }\n}\n\n\nproto.pick = function(pickData) {\n  if(!pickData) {\n    return null\n  }\n  if(pickData.id !== this.pickId) {\n    return null\n  }\n\n  var cellId    = pickData.value[0] + 256*pickData.value[1] + 65536*pickData.value[2]\n  var cell      = this.cells[cellId]\n  var pos =     this.positions[cell[1]].slice(0, 3)\n\n  var result = {\n    position: pos,\n    dataCoordinate: pos,\n    index: Math.floor(cell[1] / 48)\n  }\n\n\n  if(this.traceType === 'cone') {\n    result.index = Math.floor(cell[1] / 48)\n  } else if(this.traceType === 'streamtube') {\n    result.intensity = this.intensity[cell[1]]\n    result.velocity = this.vectors[cell[1]].slice(0, 3)\n    result.divergence = this.vectors[cell[1]][3]\n    result.index = cellId\n  }\n\n  return result\n}\n\n\nproto.dispose = function() {\n  this.texture.dispose()\n\n  this.triShader.dispose()\n  this.pickShader.dispose()\n\n  this.triangleVAO.dispose()\n  this.trianglePositions.dispose()\n  this.triangleVectors.dispose()\n  this.triangleColors.dispose()\n  this.triangleUVs.dispose()\n  this.triangleIds.dispose()\n}\n\nfunction createMeshShader(gl, shaders) {\n  var shader = createShader(gl,\n    shaders.meshShader.vertex,\n    shaders.meshShader.fragment,\n    null,\n    shaders.meshShader.attributes\n  )\n\n  shader.attributes.position.location = 0\n  shader.attributes.color.location    = 2\n  shader.attributes.uv.location       = 3\n  shader.attributes.vector.location   = 4\n  return shader\n}\n\n\nfunction createPickShader(gl, shaders) {\n  var shader = createShader(gl,\n    shaders.pickShader.vertex,\n    shaders.pickShader.fragment,\n    null,\n    shaders.pickShader.attributes\n  )\n\n  shader.attributes.position.location = 0\n  shader.attributes.id.location       = 1\n  shader.attributes.vector.location   = 4\n  return shader\n}\n\n\nfunction createVectorMesh(gl, params, opts) {\n  var shaders = opts.shaders\n\n  if (arguments.length === 1) {\n    params = gl\n    gl = params.gl\n  }\n\n\n  var triShader       = createMeshShader(gl, shaders)\n  var pickShader      = createPickShader(gl, shaders)\n  var meshTexture       = createTexture(gl,\n    ndarray(new Uint8Array([255,255,255,255]), [1,1,4]))\n  meshTexture.generateMipmap()\n  meshTexture.minFilter = gl.LINEAR_MIPMAP_LINEAR\n  meshTexture.magFilter = gl.LINEAR\n\n  var trianglePositions = createBuffer(gl)\n  var triangleVectors   = createBuffer(gl)\n  var triangleColors    = createBuffer(gl)\n  var triangleUVs       = createBuffer(gl)\n  var triangleIds       = createBuffer(gl)\n  var triangleVAO       = createVAO(gl, [\n    { buffer: trianglePositions,\n      type: gl.FLOAT,\n      size: 4\n    },\n    { buffer: triangleIds,\n      type: gl.UNSIGNED_BYTE,\n      size: 4,\n      normalized: true\n    },\n    { buffer: triangleColors,\n      type: gl.FLOAT,\n      size: 4\n    },\n    { buffer: triangleUVs,\n      type: gl.FLOAT,\n      size: 2\n    },\n    { buffer: triangleVectors,\n      type: gl.FLOAT,\n      size: 4\n    }\n  ])\n\n  var mesh = new VectorMesh(gl\n    , meshTexture\n    , triShader\n    , pickShader\n    , trianglePositions\n    , triangleVectors\n    , triangleIds\n    , triangleColors\n    , triangleUVs\n    , triangleVAO\n    , opts.traceType || 'cone'\n  )\n\n  mesh.update(params)\n\n  return mesh\n}\n\nmodule.exports = createVectorMesh\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cluster = require('point-cluster');\nvar isNumeric = require('fast-isnumeric');\nvar ScatterGl = require('../scattergl');\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar convert = require('../scattergl/convert');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar makeHoverPointText = require('../scatterpolar/hover').makeHoverPointText;\nvar TOO_MANY_POINTS = require('../scattergl/constants').TOO_MANY_POINTS;\nfunction calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var subplotId = trace.subplot;\n  var radialAxis = fullLayout[subplotId].radialaxis;\n  var angularAxis = fullLayout[subplotId].angularaxis;\n  var rArray = radialAxis.makeCalcdata(trace, 'r');\n  var thetaArray = angularAxis.makeCalcdata(trace, 'theta');\n  var len = trace._length;\n  var stash = {};\n  if (len < rArray.length) rArray = rArray.slice(0, len);\n  if (len < thetaArray.length) thetaArray = thetaArray.slice(0, len);\n  stash.r = rArray;\n  stash.theta = thetaArray;\n  calcColorscale(gd, trace);\n\n  // only compute 'style' options in calc, as position options\n  // depend on the radial range and must be set in plot\n  var opts = stash.opts = convert.style(gd, trace);\n\n  // For graphs with very large number of points and array marker.size,\n  // use average marker size instead to speed things up.\n  var ppad;\n  if (len < TOO_MANY_POINTS) {\n    ppad = calcMarkerSize(trace, len);\n  } else if (opts.marker) {\n    ppad = 2 * (opts.marker.sizeAvg || Math.max(opts.marker.size, 3));\n  }\n  trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {\n    ppad: ppad\n  });\n  return [{\n    x: false,\n    y: false,\n    t: stash,\n    trace: trace\n  }];\n}\nfunction plot(gd, subplot, cdata) {\n  if (!cdata.length) return;\n  var radialAxis = subplot.radialAxis;\n  var angularAxis = subplot.angularAxis;\n  var scene = ScatterGl.sceneUpdate(gd, subplot);\n  cdata.forEach(function (cdscatter) {\n    if (!cdscatter || !cdscatter[0] || !cdscatter[0].trace) return;\n    var cd = cdscatter[0];\n    var trace = cd.trace;\n    var stash = cd.t;\n    var len = trace._length;\n    var rArray = stash.r;\n    var thetaArray = stash.theta;\n    var opts = stash.opts;\n    var i;\n    var subRArray = rArray.slice();\n    var subThetaArray = thetaArray.slice();\n\n    // filter out by range\n    for (i = 0; i < rArray.length; i++) {\n      if (!subplot.isPtInside({\n        r: rArray[i],\n        theta: thetaArray[i]\n      })) {\n        subRArray[i] = NaN;\n        subThetaArray[i] = NaN;\n      }\n    }\n    var positions = new Array(len * 2);\n    var x = Array(len);\n    var y = Array(len);\n    for (i = 0; i < len; i++) {\n      var r = subRArray[i];\n      var xx, yy;\n      if (isNumeric(r)) {\n        var rg = radialAxis.c2g(r);\n        var thetag = angularAxis.c2g(subThetaArray[i], trace.thetaunit);\n        xx = rg * Math.cos(thetag);\n        yy = rg * Math.sin(thetag);\n      } else {\n        xx = yy = NaN;\n      }\n      x[i] = positions[i * 2] = xx;\n      y[i] = positions[i * 2 + 1] = yy;\n    }\n    stash.tree = cluster(positions);\n\n    // FIXME: see scattergl.js#109\n    if (opts.marker && len >= TOO_MANY_POINTS) {\n      opts.marker.cluster = stash.tree;\n    }\n    if (opts.marker) {\n      opts.markerSel.positions = opts.markerUnsel.positions = opts.marker.positions = positions;\n    }\n    if (opts.line && positions.length > 1) {\n      Lib.extendFlat(opts.line, convert.linePositions(gd, trace, positions));\n    }\n    if (opts.text) {\n      Lib.extendFlat(opts.text, {\n        positions: positions\n      }, convert.textPosition(gd, trace, opts.text, opts.marker));\n      Lib.extendFlat(opts.textSel, {\n        positions: positions\n      }, convert.textPosition(gd, trace, opts.text, opts.markerSel));\n      Lib.extendFlat(opts.textUnsel, {\n        positions: positions\n      }, convert.textPosition(gd, trace, opts.text, opts.markerUnsel));\n    }\n    if (opts.fill && !scene.fill2d) scene.fill2d = true;\n    if (opts.marker && !scene.scatter2d) scene.scatter2d = true;\n    if (opts.line && !scene.line2d) scene.line2d = true;\n    if (opts.text && !scene.glText) scene.glText = true;\n    scene.lineOptions.push(opts.line);\n    scene.fillOptions.push(opts.fill);\n    scene.markerOptions.push(opts.marker);\n    scene.markerSelectedOptions.push(opts.markerSel);\n    scene.markerUnselectedOptions.push(opts.markerUnsel);\n    scene.textOptions.push(opts.text);\n    scene.textSelectedOptions.push(opts.textSel);\n    scene.textUnselectedOptions.push(opts.textUnsel);\n    stash.x = x;\n    stash.y = y;\n    stash.rawx = x;\n    stash.rawy = y;\n    stash.r = rArray;\n    stash.theta = thetaArray;\n    stash.positions = positions;\n    stash._scene = scene;\n    stash.index = scene.count;\n    scene.count++;\n  });\n  return ScatterGl.plot(gd, subplot, cdata);\n}\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var stash = cd[0].t;\n  var rArray = stash.r;\n  var thetaArray = stash.theta;\n  var scatterPointData = ScatterGl.hoverPoints(pointData, xval, yval, hovermode);\n  if (!scatterPointData || scatterPointData[0].index === false) return;\n  var newPointData = scatterPointData[0];\n  if (newPointData.index === undefined) {\n    return scatterPointData;\n  }\n  var subplot = pointData.subplot;\n  var cdi = newPointData.cd[newPointData.index];\n  var trace = newPointData.trace;\n\n  // augment pointData with r/theta param\n  cdi.r = rArray[newPointData.index];\n  cdi.theta = thetaArray[newPointData.index];\n  if (!subplot.isPtInside(cdi)) return;\n  newPointData.xLabelVal = undefined;\n  newPointData.yLabelVal = undefined;\n  makeHoverPointText(cdi, trace, subplot, newPointData);\n  return scatterPointData;\n}\nmodule.exports = {\n  moduleType: 'trace',\n  name: 'scatterpolargl',\n  basePlotModule: require('../../plots/polar'),\n  categories: ['gl', 'regl', 'polar', 'symbols', 'showLegend', 'scatter-like'],\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  colorbar: require('../scatter/marker_colorbar'),\n  calc: calc,\n  plot: plot,\n  hoverPoints: hoverPoints,\n  selectPoints: ScatterGl.selectPoints,\n  meta: {\n    hrName: 'scatter_polar_gl',\n    description: ['The scatterpolargl trace type encompasses line charts, scatter charts, and bubble charts', 'in polar coordinates using the WebGL plotting engine.', 'The data visualized as scatter point or lines is set in', '`r` (radial) and `theta` (angular) coordinates', 'Bubble charts are achieved by setting `marker.size` and/or `marker.color`', 'to numerical arrays.'].join(' ')\n  }\n};","map":{"version":3,"names":["cluster","require","isNumeric","ScatterGl","calcColorscale","calcMarkerSize","convert","Lib","Axes","makeHoverPointText","TOO_MANY_POINTS","calc","gd","trace","fullLayout","_fullLayout","subplotId","subplot","radialAxis","radialaxis","angularAxis","angularaxis","rArray","makeCalcdata","thetaArray","len","_length","stash","length","slice","r","theta","opts","style","ppad","marker","sizeAvg","Math","max","size","_extremes","x","findExtremes","y","t","plot","cdata","scene","sceneUpdate","forEach","cdscatter","cd","i","subRArray","subThetaArray","isPtInside","NaN","positions","Array","xx","yy","rg","c2g","thetag","thetaunit","cos","sin","tree","markerSel","markerUnsel","line","extendFlat","linePositions","text","textPosition","textSel","textUnsel","fill","fill2d","scatter2d","line2d","glText","lineOptions","push","fillOptions","markerOptions","markerSelectedOptions","markerUnselectedOptions","textOptions","textSelectedOptions","textUnselectedOptions","rawx","rawy","_scene","index","count","hoverPoints","pointData","xval","yval","hovermode","scatterPointData","newPointData","undefined","cdi","xLabelVal","yLabelVal","module","exports","moduleType","name","basePlotModule","categories","attributes","supplyDefaults","colorbar","selectPoints","meta","hrName","description","join"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatterpolargl/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cluster = require('point-cluster');\nvar isNumeric = require('fast-isnumeric');\n\nvar ScatterGl = require('../scattergl');\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nvar convert = require('../scattergl/convert');\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar makeHoverPointText = require('../scatterpolar/hover').makeHoverPointText;\n\nvar TOO_MANY_POINTS = require('../scattergl/constants').TOO_MANY_POINTS;\n\nfunction calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var subplotId = trace.subplot;\n    var radialAxis = fullLayout[subplotId].radialaxis;\n    var angularAxis = fullLayout[subplotId].angularaxis;\n    var rArray = radialAxis.makeCalcdata(trace, 'r');\n    var thetaArray = angularAxis.makeCalcdata(trace, 'theta');\n    var len = trace._length;\n    var stash = {};\n\n    if(len < rArray.length) rArray = rArray.slice(0, len);\n    if(len < thetaArray.length) thetaArray = thetaArray.slice(0, len);\n\n    stash.r = rArray;\n    stash.theta = thetaArray;\n\n    calcColorscale(gd, trace);\n\n    // only compute 'style' options in calc, as position options\n    // depend on the radial range and must be set in plot\n    var opts = stash.opts = convert.style(gd, trace);\n\n    // For graphs with very large number of points and array marker.size,\n    // use average marker size instead to speed things up.\n    var ppad;\n    if(len < TOO_MANY_POINTS) {\n        ppad = calcMarkerSize(trace, len);\n    } else if(opts.marker) {\n        ppad = 2 * (opts.marker.sizeAvg || Math.max(opts.marker.size, 3));\n    }\n    trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {ppad: ppad});\n\n    return [{x: false, y: false, t: stash, trace: trace}];\n}\n\nfunction plot(gd, subplot, cdata) {\n    if(!cdata.length) return;\n\n    var radialAxis = subplot.radialAxis;\n    var angularAxis = subplot.angularAxis;\n    var scene = ScatterGl.sceneUpdate(gd, subplot);\n\n    cdata.forEach(function(cdscatter) {\n        if(!cdscatter || !cdscatter[0] || !cdscatter[0].trace) return;\n        var cd = cdscatter[0];\n        var trace = cd.trace;\n        var stash = cd.t;\n        var len = trace._length;\n        var rArray = stash.r;\n        var thetaArray = stash.theta;\n        var opts = stash.opts;\n        var i;\n\n        var subRArray = rArray.slice();\n        var subThetaArray = thetaArray.slice();\n\n        // filter out by range\n        for(i = 0; i < rArray.length; i++) {\n            if(!subplot.isPtInside({r: rArray[i], theta: thetaArray[i]})) {\n                subRArray[i] = NaN;\n                subThetaArray[i] = NaN;\n            }\n        }\n\n        var positions = new Array(len * 2);\n        var x = Array(len);\n        var y = Array(len);\n\n        for(i = 0; i < len; i++) {\n            var r = subRArray[i];\n            var xx, yy;\n\n            if(isNumeric(r)) {\n                var rg = radialAxis.c2g(r);\n                var thetag = angularAxis.c2g(subThetaArray[i], trace.thetaunit);\n                xx = rg * Math.cos(thetag);\n                yy = rg * Math.sin(thetag);\n            } else {\n                xx = yy = NaN;\n            }\n            x[i] = positions[i * 2] = xx;\n            y[i] = positions[i * 2 + 1] = yy;\n        }\n\n        stash.tree = cluster(positions);\n\n        // FIXME: see scattergl.js#109\n        if(opts.marker && len >= TOO_MANY_POINTS) {\n            opts.marker.cluster = stash.tree;\n        }\n\n        if(opts.marker) {\n            opts.markerSel.positions = opts.markerUnsel.positions = opts.marker.positions = positions;\n        }\n\n        if(opts.line && positions.length > 1) {\n            Lib.extendFlat(\n                opts.line,\n                convert.linePositions(gd, trace, positions)\n            );\n        }\n\n        if(opts.text) {\n            Lib.extendFlat(\n                opts.text,\n                {positions: positions},\n                convert.textPosition(gd, trace, opts.text, opts.marker)\n            );\n            Lib.extendFlat(\n                opts.textSel,\n                {positions: positions},\n                convert.textPosition(gd, trace, opts.text, opts.markerSel)\n            );\n            Lib.extendFlat(\n                opts.textUnsel,\n                {positions: positions},\n                convert.textPosition(gd, trace, opts.text, opts.markerUnsel)\n            );\n        }\n\n        if(opts.fill && !scene.fill2d) scene.fill2d = true;\n        if(opts.marker && !scene.scatter2d) scene.scatter2d = true;\n        if(opts.line && !scene.line2d) scene.line2d = true;\n        if(opts.text && !scene.glText) scene.glText = true;\n\n        scene.lineOptions.push(opts.line);\n        scene.fillOptions.push(opts.fill);\n        scene.markerOptions.push(opts.marker);\n        scene.markerSelectedOptions.push(opts.markerSel);\n        scene.markerUnselectedOptions.push(opts.markerUnsel);\n        scene.textOptions.push(opts.text);\n        scene.textSelectedOptions.push(opts.textSel);\n        scene.textUnselectedOptions.push(opts.textUnsel);\n\n        stash.x = x;\n        stash.y = y;\n        stash.rawx = x;\n        stash.rawy = y;\n        stash.r = rArray;\n        stash.theta = thetaArray;\n        stash.positions = positions;\n        stash._scene = scene;\n        stash.index = scene.count;\n        scene.count++;\n    });\n\n    return ScatterGl.plot(gd, subplot, cdata);\n}\n\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var stash = cd[0].t;\n    var rArray = stash.r;\n    var thetaArray = stash.theta;\n\n    var scatterPointData = ScatterGl.hoverPoints(pointData, xval, yval, hovermode);\n    if(!scatterPointData || scatterPointData[0].index === false) return;\n\n    var newPointData = scatterPointData[0];\n\n    if(newPointData.index === undefined) {\n        return scatterPointData;\n    }\n\n    var subplot = pointData.subplot;\n    var cdi = newPointData.cd[newPointData.index];\n    var trace = newPointData.trace;\n\n    // augment pointData with r/theta param\n    cdi.r = rArray[newPointData.index];\n    cdi.theta = thetaArray[newPointData.index];\n\n    if(!subplot.isPtInside(cdi)) return;\n\n    newPointData.xLabelVal = undefined;\n    newPointData.yLabelVal = undefined;\n    makeHoverPointText(cdi, trace, subplot, newPointData);\n\n    return scatterPointData;\n}\n\nmodule.exports = {\n    moduleType: 'trace',\n    name: 'scatterpolargl',\n    basePlotModule: require('../../plots/polar'),\n    categories: ['gl', 'regl', 'polar', 'symbols', 'showLegend', 'scatter-like'],\n\n    attributes: require('./attributes'),\n    supplyDefaults: require('./defaults'),\n    colorbar: require('../scatter/marker_colorbar'),\n\n    calc: calc,\n    plot: plot,\n    hoverPoints: hoverPoints,\n    selectPoints: ScatterGl.selectPoints,\n\n    meta: {\n        hrName: 'scatter_polar_gl',\n        description: [\n            'The scatterpolargl trace type encompasses line charts, scatter charts, and bubble charts',\n            'in polar coordinates using the WebGL plotting engine.',\n            'The data visualized as scatter point or lines is set in',\n            '`r` (radial) and `theta` (angular) coordinates',\n            'Bubble charts are achieved by setting `marker.size` and/or `marker.color`',\n            'to numerical arrays.'\n        ].join(' ')\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
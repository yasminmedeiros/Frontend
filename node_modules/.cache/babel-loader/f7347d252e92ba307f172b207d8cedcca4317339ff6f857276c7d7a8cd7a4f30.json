{"ast":null,"code":"'use strict';\n\nvar Font = require('css-font');\nvar pick = require('pick-by-alias');\nvar createRegl = require('regl');\nvar createGl = require('gl-util/context');\nvar WeakMap = require('es6-weak-map');\nvar rgba = require('color-normalize');\nvar fontAtlas = require('font-atlas');\nvar pool = require('typedarray-pool');\nvar parseRect = require('parse-rect');\nvar isObj = require('is-plain-obj');\nvar parseUnit = require('parse-unit');\nvar px = require('to-px');\nvar kerning = require('detect-kerning');\nvar extend = require('object-assign');\nvar metrics = require('font-measure');\nvar flatten = require('flatten-vertex-data');\nvar ref = require('bit-twiddle');\nvar nextPow2 = ref.nextPow2;\nvar shaderCache = new WeakMap();\n\n// Safari does not support font-stretch\nvar isStretchSupported = false;\nif (document.body) {\n  var el = document.body.appendChild(document.createElement('div'));\n  el.style.font = 'italic small-caps bold condensed 16px/2 cursive';\n  if (getComputedStyle(el).fontStretch) {\n    isStretchSupported = true;\n  }\n  document.body.removeChild(el);\n}\nvar GlText = function GlText(o) {\n  if (isRegl(o)) {\n    o = {\n      regl: o\n    };\n    this.gl = o.regl._gl;\n  } else {\n    this.gl = createGl(o);\n  }\n  this.shader = shaderCache.get(this.gl);\n  if (!this.shader) {\n    this.regl = o.regl || createRegl({\n      gl: this.gl\n    });\n  } else {\n    this.regl = this.shader.regl;\n  }\n  this.charBuffer = this.regl.buffer({\n    type: 'uint8',\n    usage: 'stream'\n  });\n  this.sizeBuffer = this.regl.buffer({\n    type: 'float',\n    usage: 'stream'\n  });\n  if (!this.shader) {\n    this.shader = this.createShader();\n    shaderCache.set(this.gl, this.shader);\n  }\n  this.batch = [];\n\n  // multiple options initial state\n  this.fontSize = [];\n  this.font = [];\n  this.fontAtlas = [];\n  this.draw = this.shader.draw.bind(this);\n  this.render = function () {\n    // FIXME: add Safari regl report here:\n    // charBuffer and width just do not trigger\n    this.regl._refresh();\n    this.draw(this.batch);\n  };\n  this.canvas = this.gl.canvas;\n  this.update(isObj(o) ? o : {});\n};\nGlText.prototype.createShader = function createShader() {\n  var regl = this.regl;\n\n  // FIXME: store 2 shader versions: with normal viewport and without\n  // draw texture method\n  var draw = regl({\n    blend: {\n      enable: true,\n      color: [0, 0, 0, 1],\n      func: {\n        srcRGB: 'src alpha',\n        dstRGB: 'one minus src alpha',\n        srcAlpha: 'one minus dst alpha',\n        dstAlpha: 'one'\n      }\n    },\n    stencil: {\n      enable: false\n    },\n    depth: {\n      enable: false\n    },\n    count: regl.prop('count'),\n    offset: regl.prop('offset'),\n    attributes: {\n      charOffset: {\n        offset: 4,\n        stride: 8,\n        buffer: regl.this('sizeBuffer')\n      },\n      width: {\n        offset: 0,\n        stride: 8,\n        buffer: regl.this('sizeBuffer')\n      },\n      char: regl.this('charBuffer'),\n      position: regl.this('position')\n    },\n    uniforms: {\n      atlasSize: function atlasSize(c, p) {\n        return [p.atlas.width, p.atlas.height];\n      },\n      atlasDim: function atlasDim(c, p) {\n        return [p.atlas.cols, p.atlas.rows];\n      },\n      atlas: function atlas(c, p) {\n        return p.atlas.texture;\n      },\n      charStep: function charStep(c, p) {\n        return p.atlas.step;\n      },\n      em: function em(c, p) {\n        return p.atlas.em;\n      },\n      color: regl.prop('color'),\n      opacity: regl.prop('opacity'),\n      viewport: regl.this('viewportArray'),\n      scale: regl.this('scale'),\n      align: regl.prop('align'),\n      baseline: regl.prop('baseline'),\n      translate: regl.this('translate'),\n      positionOffset: regl.prop('positionOffset')\n    },\n    primitive: 'points',\n    viewport: regl.this('viewport'),\n    vert: \"\\n\\t\\t\\tprecision highp float;\\n\\t\\t\\tattribute float width, charOffset, char;\\n\\t\\t\\tattribute vec2 position;\\n\\t\\t\\tuniform float fontSize, charStep, em, align, baseline;\\n\\t\\t\\tuniform vec4 viewport;\\n\\t\\t\\tuniform vec4 color;\\n\\t\\t\\tuniform vec2 atlasSize, atlasDim, scale, translate, positionOffset;\\n\\t\\t\\tvarying vec2 charCoord, charId;\\n\\t\\t\\tvarying float charWidth;\\n\\t\\t\\tvarying vec4 fontColor;\\n\\t\\t\\tvoid main () {\\n\\t\\t\\t\\t\" + (!GlText.normalViewport ? 'vec2 positionOffset = vec2(positionOffset.x,- positionOffset.y);' : '') + \"\\n\\n\\t\\t\\t\\tvec2 offset = floor(em * (vec2(align + charOffset, baseline)\\n\\t\\t\\t\\t\\t+ positionOffset))\\n\\t\\t\\t\\t\\t/ (viewport.zw * scale.xy);\\n\\n\\t\\t\\t\\tvec2 position = (position + translate) * scale;\\n\\t\\t\\t\\tposition += offset * scale;\\n\\n\\t\\t\\t\\t\" + (GlText.normalViewport ? 'position.y = 1. - position.y;' : '') + \"\\n\\n\\t\\t\\t\\tcharCoord = position * viewport.zw + viewport.xy;\\n\\n\\t\\t\\t\\tgl_Position = vec4(position * 2. - 1., 0, 1);\\n\\n\\t\\t\\t\\tgl_PointSize = charStep;\\n\\n\\t\\t\\t\\tcharId.x = mod(char, atlasDim.x);\\n\\t\\t\\t\\tcharId.y = floor(char / atlasDim.x);\\n\\n\\t\\t\\t\\tcharWidth = width * em;\\n\\n\\t\\t\\t\\tfontColor = color / 255.;\\n\\t\\t\\t}\",\n    frag: \"\\n\\t\\t\\tprecision highp float;\\n\\t\\t\\tuniform sampler2D atlas;\\n\\t\\t\\tuniform float fontSize, charStep, opacity;\\n\\t\\t\\tuniform vec2 atlasSize;\\n\\t\\t\\tuniform vec4 viewport;\\n\\t\\t\\tvarying vec4 fontColor;\\n\\t\\t\\tvarying vec2 charCoord, charId;\\n\\t\\t\\tvarying float charWidth;\\n\\n\\t\\t\\tfloat lightness(vec4 color) {\\n\\t\\t\\t\\treturn color.r * 0.299 + color.g * 0.587 + color.b * 0.114;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main () {\\n\\t\\t\\t\\tvec2 uv = gl_FragCoord.xy - charCoord + charStep * .5;\\n\\t\\t\\t\\tfloat halfCharStep = floor(charStep * .5 + .5);\\n\\n\\t\\t\\t\\t// invert y and shift by 1px (FF expecially needs that)\\n\\t\\t\\t\\tuv.y = charStep - uv.y;\\n\\n\\t\\t\\t\\t// ignore points outside of character bounding box\\n\\t\\t\\t\\tfloat halfCharWidth = ceil(charWidth * .5);\\n\\t\\t\\t\\tif (floor(uv.x) > halfCharStep + halfCharWidth ||\\n\\t\\t\\t\\t\\tfloor(uv.x) < halfCharStep - halfCharWidth) return;\\n\\n\\t\\t\\t\\tuv += charId * charStep;\\n\\t\\t\\t\\tuv = uv / atlasSize;\\n\\n\\t\\t\\t\\tvec4 color = fontColor;\\n\\t\\t\\t\\tvec4 mask = texture2D(atlas, uv);\\n\\n\\t\\t\\t\\tfloat maskY = lightness(mask);\\n\\t\\t\\t\\t// float colorY = lightness(color);\\n\\t\\t\\t\\tcolor.a *= maskY;\\n\\t\\t\\t\\tcolor.a *= opacity;\\n\\n\\t\\t\\t\\t// color.a += .1;\\n\\n\\t\\t\\t\\t// antialiasing, see yiq color space y-channel formula\\n\\t\\t\\t\\t// color.rgb += (1. - color.rgb) * (1. - mask.rgb);\\n\\n\\t\\t\\t\\tgl_FragColor = color;\\n\\t\\t\\t}\"\n  });\n\n  // per font-size atlas\n  var atlas = {};\n  return {\n    regl: regl,\n    draw: draw,\n    atlas: atlas\n  };\n};\nGlText.prototype.update = function update(o) {\n  var this$1 = this;\n  if (typeof o === 'string') {\n    o = {\n      text: o\n    };\n  } else if (!o) {\n    return;\n  }\n\n  // FIXME: make this a static transform or more general approact\n  o = pick(o, {\n    position: 'position positions coord coords coordinates',\n    font: 'font fontFace fontface typeface cssFont css-font family fontFamily',\n    fontSize: 'fontSize fontsize size font-size',\n    text: 'text texts chars characters value values symbols',\n    align: 'align alignment textAlign textbaseline',\n    baseline: 'baseline textBaseline textbaseline',\n    direction: 'dir direction textDirection',\n    color: 'color colour fill fill-color fillColor textColor textcolor',\n    kerning: 'kerning kern',\n    range: 'range dataBox',\n    viewport: 'vp viewport viewBox viewbox viewPort',\n    opacity: 'opacity alpha transparency visible visibility opaque',\n    offset: 'offset positionOffset padding shift indent indentation'\n  }, true);\n  if (o.opacity != null) {\n    if (Array.isArray(o.opacity)) {\n      this.opacity = o.opacity.map(function (o) {\n        return parseFloat(o);\n      });\n    } else {\n      this.opacity = parseFloat(o.opacity);\n    }\n  }\n  if (o.viewport != null) {\n    this.viewport = parseRect(o.viewport);\n    if (GlText.normalViewport) {\n      this.viewport.y = this.canvas.height - this.viewport.y - this.viewport.height;\n    }\n    this.viewportArray = [this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height];\n  }\n  if (this.viewport == null) {\n    this.viewport = {\n      x: 0,\n      y: 0,\n      width: this.gl.drawingBufferWidth,\n      height: this.gl.drawingBufferHeight\n    };\n    this.viewportArray = [this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height];\n  }\n  if (o.kerning != null) {\n    this.kerning = o.kerning;\n  }\n  if (o.offset != null) {\n    if (typeof o.offset === 'number') {\n      o.offset = [o.offset, 0];\n    }\n    this.positionOffset = flatten(o.offset);\n  }\n  if (o.direction) {\n    this.direction = o.direction;\n  }\n  if (o.range) {\n    this.range = o.range;\n    this.scale = [1 / (o.range[2] - o.range[0]), 1 / (o.range[3] - o.range[1])];\n    this.translate = [-o.range[0], -o.range[1]];\n  }\n  if (o.scale) {\n    this.scale = o.scale;\n  }\n  if (o.translate) {\n    this.translate = o.translate;\n  }\n\n  // default scale corresponds to viewport\n  if (!this.scale) {\n    this.scale = [1 / this.viewport.width, 1 / this.viewport.height];\n  }\n  if (!this.translate) {\n    this.translate = [0, 0];\n  }\n  if (!this.font.length && !o.font) {\n    o.font = GlText.baseFontSize + 'px sans-serif';\n  }\n\n  // normalize font caching string\n  var newFont = false,\n    newFontSize = false;\n\n  // obtain new font data\n  if (o.font) {\n    (Array.isArray(o.font) ? o.font : [o.font]).forEach(function (font, i) {\n      // normalize font\n      if (typeof font === 'string') {\n        try {\n          font = Font.parse(font);\n        } catch (e) {\n          font = Font.parse(GlText.baseFontSize + 'px ' + font);\n        }\n      } else {\n        font = Font.parse(Font.stringify(font));\n      }\n      var baseString = Font.stringify({\n        size: GlText.baseFontSize,\n        family: font.family,\n        stretch: isStretchSupported ? font.stretch : undefined,\n        variant: font.variant,\n        weight: font.weight,\n        style: font.style\n      });\n      var unit = parseUnit(font.size);\n      var fs = Math.round(unit[0] * px(unit[1]));\n      if (fs !== this$1.fontSize[i]) {\n        newFontSize = true;\n        this$1.fontSize[i] = fs;\n      }\n\n      // calc new font metrics/atlas\n      if (!this$1.font[i] || baseString != this$1.font[i].baseString) {\n        newFont = true;\n\n        // obtain font cache or create one\n        this$1.font[i] = GlText.fonts[baseString];\n        if (!this$1.font[i]) {\n          var family = font.family.join(', ');\n          var style = [font.style];\n          if (font.style != font.variant) {\n            style.push(font.variant);\n          }\n          if (font.variant != font.weight) {\n            style.push(font.weight);\n          }\n          if (isStretchSupported && font.weight != font.stretch) {\n            style.push(font.stretch);\n          }\n          this$1.font[i] = {\n            baseString: baseString,\n            // typeface\n            family: family,\n            weight: font.weight,\n            stretch: font.stretch,\n            style: font.style,\n            variant: font.variant,\n            // widths of characters\n            width: {},\n            // kernin pairs offsets\n            kerning: {},\n            metrics: metrics(family, {\n              origin: 'top',\n              fontSize: GlText.baseFontSize,\n              fontStyle: style.join(' ')\n            })\n          };\n          GlText.fonts[baseString] = this$1.font[i];\n        }\n      }\n    });\n  }\n\n  // FIXME: make independend font-size\n  // if (o.fontSize) {\n  // let unit = parseUnit(o.fontSize)\n  // let fs = Math.round(unit[0] * px(unit[1]))\n\n  // if (fs != this.fontSize) {\n  // \tnewFontSize = true\n  // \tthis.fontSize = fs\n  // }\n  // }\n\n  if (newFont || newFontSize) {\n    this.font.forEach(function (font, i) {\n      var fontString = Font.stringify({\n        size: this$1.fontSize[i],\n        family: font.family,\n        stretch: isStretchSupported ? font.stretch : undefined,\n        variant: font.variant,\n        weight: font.weight,\n        style: font.style\n      });\n\n      // calc new font size atlas\n      this$1.fontAtlas[i] = this$1.shader.atlas[fontString];\n      if (!this$1.fontAtlas[i]) {\n        var metrics = font.metrics;\n        this$1.shader.atlas[fontString] = this$1.fontAtlas[i] = {\n          fontString: fontString,\n          // even step is better for rendered characters\n          step: Math.ceil(this$1.fontSize[i] * metrics.bottom * .5) * 2,\n          em: this$1.fontSize[i],\n          cols: 0,\n          rows: 0,\n          height: 0,\n          width: 0,\n          chars: [],\n          ids: {},\n          texture: this$1.regl.texture()\n        };\n      }\n\n      // bump atlas characters\n      if (o.text == null) {\n        o.text = this$1.text;\n      }\n    });\n  }\n\n  // if multiple positions - duplicate text arguments\n  // FIXME: this possibly can be done better to avoid array spawn\n  if (typeof o.text === 'string' && o.position && o.position.length > 2) {\n    var textArray = Array(o.position.length * .5);\n    for (var i = 0; i < textArray.length; i++) {\n      textArray[i] = o.text;\n    }\n    o.text = textArray;\n  }\n\n  // calculate offsets for the new font/text\n  var newAtlasChars;\n  if (o.text != null || newFont) {\n    // FIXME: ignore spaces\n    // text offsets within the text buffer\n    this.textOffsets = [0];\n    if (Array.isArray(o.text)) {\n      this.count = o.text[0].length;\n      this.counts = [this.count];\n      for (var i$1 = 1; i$1 < o.text.length; i$1++) {\n        this.textOffsets[i$1] = this.textOffsets[i$1 - 1] + o.text[i$1 - 1].length;\n        this.count += o.text[i$1].length;\n        this.counts.push(o.text[i$1].length);\n      }\n      this.text = o.text.join('');\n    } else {\n      this.text = o.text;\n      this.count = this.text.length;\n      this.counts = [this.count];\n    }\n    newAtlasChars = [];\n\n    // detect & measure new characters\n    this.font.forEach(function (font, idx) {\n      GlText.atlasContext.font = font.baseString;\n      var atlas = this$1.fontAtlas[idx];\n      for (var i = 0; i < this$1.text.length; i++) {\n        var char = this$1.text.charAt(i);\n        if (atlas.ids[char] == null) {\n          atlas.ids[char] = atlas.chars.length;\n          atlas.chars.push(char);\n          newAtlasChars.push(char);\n        }\n        if (font.width[char] == null) {\n          font.width[char] = GlText.atlasContext.measureText(char).width / GlText.baseFontSize;\n\n          // measure kerning pairs for the new character\n          if (this$1.kerning) {\n            var pairs = [];\n            for (var baseChar in font.width) {\n              pairs.push(baseChar + char, char + baseChar);\n            }\n            extend(font.kerning, kerning(font.family, {\n              pairs: pairs\n            }));\n          }\n        }\n      }\n    });\n  }\n\n  // create single position buffer (faster than batch or multiple separate instances)\n  if (o.position) {\n    if (o.position.length > 2) {\n      var flat = !o.position[0].length;\n      var positionData = pool.mallocFloat(this.count * 2);\n      for (var i$2 = 0, ptr = 0; i$2 < this.counts.length; i$2++) {\n        var count = this.counts[i$2];\n        if (flat) {\n          for (var j = 0; j < count; j++) {\n            positionData[ptr++] = o.position[i$2 * 2];\n            positionData[ptr++] = o.position[i$2 * 2 + 1];\n          }\n        } else {\n          for (var j$1 = 0; j$1 < count; j$1++) {\n            positionData[ptr++] = o.position[i$2][0];\n            positionData[ptr++] = o.position[i$2][1];\n          }\n        }\n      }\n      if (this.position.call) {\n        this.position({\n          type: 'float',\n          data: positionData\n        });\n      } else {\n        this.position = this.regl.buffer({\n          type: 'float',\n          data: positionData\n        });\n      }\n      pool.freeFloat(positionData);\n    } else {\n      if (this.position.destroy) {\n        this.position.destroy();\n      }\n      this.position = {\n        constant: o.position\n      };\n    }\n  }\n\n  // populate text/offset buffers if font/text has changed\n  // as [charWidth, offset, charWidth, offset...]\n  // that is in em units since font-size can change often\n  if (o.text || newFont) {\n    var charIds = pool.mallocUint8(this.count);\n    var sizeData = pool.mallocFloat(this.count * 2);\n    this.textWidth = [];\n    for (var i$3 = 0, ptr$1 = 0; i$3 < this.counts.length; i$3++) {\n      var count$1 = this.counts[i$3];\n      var font = this.font[i$3] || this.font[0];\n      var atlas = this.fontAtlas[i$3] || this.fontAtlas[0];\n      for (var j$2 = 0; j$2 < count$1; j$2++) {\n        var char = this.text.charAt(ptr$1);\n        var prevChar = this.text.charAt(ptr$1 - 1);\n        charIds[ptr$1] = atlas.ids[char];\n        sizeData[ptr$1 * 2] = font.width[char];\n        if (j$2) {\n          var prevWidth = sizeData[ptr$1 * 2 - 2];\n          var currWidth = sizeData[ptr$1 * 2];\n          var prevOffset = sizeData[ptr$1 * 2 - 1];\n          var offset = prevOffset + prevWidth * .5 + currWidth * .5;\n          if (this.kerning) {\n            var kerning$1 = font.kerning[prevChar + char];\n            if (kerning$1) {\n              offset += kerning$1 * 1e-3;\n            }\n          }\n          sizeData[ptr$1 * 2 + 1] = offset;\n        } else {\n          sizeData[ptr$1 * 2 + 1] = sizeData[ptr$1 * 2] * .5;\n        }\n        ptr$1++;\n      }\n      this.textWidth.push(!sizeData.length ? 0 :\n      // last offset + half last width\n      sizeData[ptr$1 * 2 - 2] * .5 + sizeData[ptr$1 * 2 - 1]);\n    }\n\n    // bump recalc align offset\n    if (!o.align) {\n      o.align = this.align;\n    }\n    this.charBuffer({\n      data: charIds,\n      type: 'uint8',\n      usage: 'stream'\n    });\n    this.sizeBuffer({\n      data: sizeData,\n      type: 'float',\n      usage: 'stream'\n    });\n    pool.freeUint8(charIds);\n    pool.freeFloat(sizeData);\n\n    // udpate font atlas and texture\n    if (newAtlasChars.length) {\n      this.font.forEach(function (font, i) {\n        var atlas = this$1.fontAtlas[i];\n\n        // FIXME: insert metrics-based ratio here\n        var step = atlas.step;\n        var maxCols = Math.floor(GlText.maxAtlasSize / step);\n        var cols = Math.min(maxCols, atlas.chars.length);\n        var rows = Math.ceil(atlas.chars.length / cols);\n        var atlasWidth = nextPow2(cols * step);\n        // let atlasHeight = Math.min(rows * step + step * .5, GlText.maxAtlasSize);\n        var atlasHeight = nextPow2(rows * step);\n        atlas.width = atlasWidth;\n        atlas.height = atlasHeight;\n        atlas.rows = rows;\n        atlas.cols = cols;\n        if (!atlas.em) {\n          return;\n        }\n        atlas.texture({\n          data: fontAtlas({\n            canvas: GlText.atlasCanvas,\n            font: atlas.fontString,\n            chars: atlas.chars,\n            shape: [atlasWidth, atlasHeight],\n            step: [step, step]\n          })\n        });\n      });\n    }\n  }\n  if (o.align) {\n    this.align = o.align;\n    this.alignOffset = this.textWidth.map(function (textWidth, i) {\n      var align = !Array.isArray(this$1.align) ? this$1.align : this$1.align.length > 1 ? this$1.align[i] : this$1.align[0];\n      if (typeof align === 'number') {\n        return align;\n      }\n      switch (align) {\n        case 'right':\n        case 'end':\n          return -textWidth;\n        case 'center':\n        case 'centre':\n        case 'middle':\n          return -textWidth * .5;\n      }\n      return 0;\n    });\n  }\n  if (this.baseline == null && o.baseline == null) {\n    o.baseline = 0;\n  }\n  if (o.baseline != null) {\n    this.baseline = o.baseline;\n    if (!Array.isArray(this.baseline)) {\n      this.baseline = [this.baseline];\n    }\n    this.baselineOffset = this.baseline.map(function (baseline, i) {\n      var m = (this$1.font[i] || this$1.font[0]).metrics;\n      var base = 0;\n      base += m.bottom * .5;\n      if (typeof baseline === 'number') {\n        base += baseline - m.baseline;\n      } else {\n        base += -m[baseline];\n      }\n      if (!GlText.normalViewport) {\n        base *= -1;\n      }\n      return base;\n    });\n  }\n\n  // flatten colors to a single uint8 array\n  if (o.color != null) {\n    if (!o.color) {\n      o.color = 'transparent';\n    }\n\n    // single color\n    if (typeof o.color === 'string' || !isNaN(o.color)) {\n      this.color = rgba(o.color, 'uint8');\n    }\n    // array\n    else {\n      var colorData;\n\n      // flat array\n      if (typeof o.color[0] === 'number' && o.color.length > this.counts.length) {\n        var l = o.color.length;\n        colorData = pool.mallocUint8(l);\n        var sub = (o.color.subarray || o.color.slice).bind(o.color);\n        for (var i$4 = 0; i$4 < l; i$4 += 4) {\n          colorData.set(rgba(sub(i$4, i$4 + 4), 'uint8'), i$4);\n        }\n      }\n      // nested array\n      else {\n        var l$1 = o.color.length;\n        colorData = pool.mallocUint8(l$1 * 4);\n        for (var i$5 = 0; i$5 < l$1; i$5++) {\n          colorData.set(rgba(o.color[i$5] || 0, 'uint8'), i$5 * 4);\n        }\n      }\n      this.color = colorData;\n    }\n  }\n\n  // update render batch\n  if (o.position || o.text || o.color || o.baseline || o.align || o.font || o.offset || o.opacity) {\n    var isBatch = this.color.length > 4 || this.baselineOffset.length > 1 || this.align && this.align.length > 1 || this.fontAtlas.length > 1 || this.positionOffset.length > 2;\n    if (isBatch) {\n      var length = Math.max(this.position.length * .5 || 0, this.color.length * .25 || 0, this.baselineOffset.length || 0, this.alignOffset.length || 0, this.font.length || 0, this.opacity.length || 0, this.positionOffset.length * .5 || 0);\n      this.batch = Array(length);\n      for (var i$6 = 0; i$6 < this.batch.length; i$6++) {\n        this.batch[i$6] = {\n          count: this.counts.length > 1 ? this.counts[i$6] : this.counts[0],\n          offset: this.textOffsets.length > 1 ? this.textOffsets[i$6] : this.textOffsets[0],\n          color: !this.color ? [0, 0, 0, 255] : this.color.length <= 4 ? this.color : this.color.subarray(i$6 * 4, i$6 * 4 + 4),\n          opacity: Array.isArray(this.opacity) ? this.opacity[i$6] : this.opacity,\n          baseline: this.baselineOffset[i$6] != null ? this.baselineOffset[i$6] : this.baselineOffset[0],\n          align: !this.align ? 0 : this.alignOffset[i$6] != null ? this.alignOffset[i$6] : this.alignOffset[0],\n          atlas: this.fontAtlas[i$6] || this.fontAtlas[0],\n          positionOffset: this.positionOffset.length > 2 ? this.positionOffset.subarray(i$6 * 2, i$6 * 2 + 2) : this.positionOffset\n        };\n      }\n    }\n    // single-color, single-baseline, single-align batch is faster to render\n    else {\n      if (this.count) {\n        this.batch = [{\n          count: this.count,\n          offset: 0,\n          color: this.color || [0, 0, 0, 255],\n          opacity: Array.isArray(this.opacity) ? this.opacity[0] : this.opacity,\n          baseline: this.baselineOffset[0],\n          align: this.alignOffset ? this.alignOffset[0] : 0,\n          atlas: this.fontAtlas[0],\n          positionOffset: this.positionOffset\n        }];\n      } else {\n        this.batch = [];\n      }\n    }\n  }\n};\nGlText.prototype.destroy = function destroy() {\n  // TODO: count instances of atlases and destroy all on null\n};\n\n// defaults\nGlText.prototype.kerning = true;\nGlText.prototype.position = {\n  constant: new Float32Array(2)\n};\nGlText.prototype.translate = null;\nGlText.prototype.scale = null;\nGlText.prototype.font = null;\nGlText.prototype.text = '';\nGlText.prototype.positionOffset = [0, 0];\nGlText.prototype.opacity = 1;\nGlText.prototype.color = new Uint8Array([0, 0, 0, 255]);\nGlText.prototype.alignOffset = [0, 0];\n\n// whether viewport should be top↓bottom 2d one (true) or webgl one (false)\nGlText.normalViewport = false;\n\n// size of an atlas\nGlText.maxAtlasSize = 1024;\n\n// font atlas canvas is singleton\nGlText.atlasCanvas = document.createElement('canvas');\nGlText.atlasContext = GlText.atlasCanvas.getContext('2d', {\n  alpha: false\n});\n\n// font-size used for metrics, atlas step calculation\nGlText.baseFontSize = 64;\n\n// fonts storage\nGlText.fonts = {};\n\n// max number of different font atlases/textures cached\n// FIXME: enable atlas size limitation via LRU\n// GlText.atlasCacheSize = 64\n\nfunction isRegl(o) {\n  return typeof o === 'function' && o._gl && o.prop && o.texture && o.buffer;\n}\nmodule.exports = GlText;","map":{"version":3,"names":["Font","require","pick","createRegl","createGl","WeakMap","rgba","fontAtlas","pool","parseRect","isObj","parseUnit","px","kerning","extend","metrics","flatten","ref","nextPow2","shaderCache","isStretchSupported","document","body","el","appendChild","createElement","style","font","getComputedStyle","fontStretch","removeChild","GlText","o","isRegl","regl","gl","_gl","shader","get","charBuffer","buffer","type","usage","sizeBuffer","createShader","set","batch","fontSize","draw","bind","render","_refresh","canvas","update","prototype","blend","enable","color","func","srcRGB","dstRGB","srcAlpha","dstAlpha","stencil","depth","count","prop","offset","attributes","charOffset","stride","this","width","char","position","uniforms","atlasSize","c","p","atlas","height","atlasDim","cols","rows","texture","charStep","step","em","opacity","viewport","scale","align","baseline","translate","positionOffset","primitive","vert","normalViewport","frag","this$1","text","direction","range","Array","isArray","map","parseFloat","y","viewportArray","x","drawingBufferWidth","drawingBufferHeight","length","baseFontSize","newFont","newFontSize","forEach","i","parse","e","stringify","baseString","size","family","stretch","undefined","variant","weight","unit","fs","Math","round","fonts","join","push","origin","fontStyle","fontString","ceil","bottom","chars","ids","textArray","newAtlasChars","textOffsets","counts","i$1","idx","atlasContext","charAt","measureText","pairs","baseChar","flat","positionData","mallocFloat","i$2","ptr","j","j$1","call","data","freeFloat","destroy","constant","charIds","mallocUint8","sizeData","textWidth","i$3","ptr$1","count$1","j$2","prevChar","prevWidth","currWidth","prevOffset","kerning$1","freeUint8","maxCols","floor","maxAtlasSize","min","atlasWidth","atlasHeight","atlasCanvas","shape","alignOffset","baselineOffset","m","base","isNaN","colorData","l","sub","subarray","slice","i$4","l$1","i$5","isBatch","max","i$6","Float32Array","Uint8Array","getContext","alpha","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-text/dist.js"],"sourcesContent":["'use strict'\n\nvar Font = require('css-font')\nvar pick = require('pick-by-alias')\nvar createRegl = require('regl')\nvar createGl = require('gl-util/context')\nvar WeakMap = require('es6-weak-map')\nvar rgba = require('color-normalize')\nvar fontAtlas = require('font-atlas')\nvar pool = require('typedarray-pool')\nvar parseRect = require('parse-rect')\nvar isObj = require('is-plain-obj')\nvar parseUnit = require('parse-unit')\nvar px = require('to-px')\nvar kerning = require('detect-kerning')\nvar extend = require('object-assign')\nvar metrics = require('font-measure')\nvar flatten = require('flatten-vertex-data')\nvar ref = require('bit-twiddle');\nvar nextPow2 = ref.nextPow2;\n\nvar shaderCache = new WeakMap\n\n\n// Safari does not support font-stretch\nvar isStretchSupported = false\nif (document.body) {\n    var el = document.body.appendChild(document.createElement('div'))\n    el.style.font = 'italic small-caps bold condensed 16px/2 cursive'\n    if (getComputedStyle(el).fontStretch) {\n        isStretchSupported = true\n    }\n    document.body.removeChild(el)\n}\n\nvar GlText = function GlText (o) {\n\tif (isRegl(o)) {\n\t\to = {regl: o}\n\t\tthis.gl = o.regl._gl\n\t}\n\telse {\n\t\tthis.gl = createGl(o)\n\t}\n\n\tthis.shader = shaderCache.get(this.gl)\n\n\tif (!this.shader) {\n\t\tthis.regl = o.regl || createRegl({ gl: this.gl })\n\t}\n\telse {\n\t\tthis.regl = this.shader.regl\n\t}\n\n\tthis.charBuffer = this.regl.buffer({ type: 'uint8', usage: 'stream' })\n\tthis.sizeBuffer = this.regl.buffer({ type: 'float', usage: 'stream' })\n\n\tif (!this.shader) {\n\t\tthis.shader = this.createShader()\n\t\tshaderCache.set(this.gl, this.shader)\n\t}\n\n\tthis.batch = []\n\n\t// multiple options initial state\n\tthis.fontSize = []\n\tthis.font = []\n\tthis.fontAtlas = []\n\n\tthis.draw = this.shader.draw.bind(this)\n\tthis.render = function () {\n\t\t// FIXME: add Safari regl report here:\n\t\t// charBuffer and width just do not trigger\n\t\tthis.regl._refresh()\n\t\tthis.draw(this.batch)\n\t}\n\tthis.canvas = this.gl.canvas\n\n\tthis.update(isObj(o) ? o : {})\n};\n\nGlText.prototype.createShader = function createShader () {\n\tvar regl = this.regl\n\n\t// FIXME: store 2 shader versions: with normal viewport and without\n\t// draw texture method\n\tvar draw = regl({\n\t\tblend: {\n\t\t\tenable: true,\n\t\t\tcolor: [0,0,0,1],\n\n\t\t\tfunc: {\n\t\t\t\tsrcRGB: 'src alpha',\n\t\t\t\tdstRGB: 'one minus src alpha',\n\t\t\t\tsrcAlpha: 'one minus dst alpha',\n\t\t\t\tdstAlpha: 'one'\n\t\t\t}\n\t\t},\n\t\tstencil: {enable: false},\n\t\tdepth: {enable: false},\n\n\t\tcount: regl.prop('count'),\n\t\toffset: regl.prop('offset'),\n\t\tattributes: {\n\t\t\tcharOffset: {\n\t\t\t\toffset: 4,\n\t\t\t\tstride: 8,\n\t\t\t\tbuffer: regl.this('sizeBuffer')\n\t\t\t},\n\t\t\twidth: {\n\t\t\t\toffset: 0,\n\t\t\t\tstride: 8,\n\t\t\t\tbuffer: regl.this('sizeBuffer')\n\t\t\t},\n\t\t\tchar: regl.this('charBuffer'),\n\t\t\tposition: regl.this('position')\n\t\t},\n\t\tuniforms: {\n\t\t\tatlasSize: function (c, p) { return [p.atlas.width, p.atlas.height]; },\n\t\t\tatlasDim: function (c, p) { return [p.atlas.cols, p.atlas.rows]; },\n\t\t\tatlas: function (c, p) { return p.atlas.texture; },\n\t\t\tcharStep: function (c, p) { return p.atlas.step; },\n\t\t\tem: function (c, p) { return p.atlas.em; },\n\t\t\tcolor: regl.prop('color'),\n\t\t\topacity: regl.prop('opacity'),\n\t\t\tviewport: regl.this('viewportArray'),\n\t\t\tscale: regl.this('scale'),\n\t\t\talign: regl.prop('align'),\n\t\t\tbaseline: regl.prop('baseline'),\n\t\t\ttranslate: regl.this('translate'),\n\t\t\tpositionOffset: regl.prop('positionOffset')\n\t\t},\n\t\tprimitive: 'points',\n\t\tviewport: regl.this('viewport'),\n\n\t\tvert: (\"\\n\\t\\t\\tprecision highp float;\\n\\t\\t\\tattribute float width, charOffset, char;\\n\\t\\t\\tattribute vec2 position;\\n\\t\\t\\tuniform float fontSize, charStep, em, align, baseline;\\n\\t\\t\\tuniform vec4 viewport;\\n\\t\\t\\tuniform vec4 color;\\n\\t\\t\\tuniform vec2 atlasSize, atlasDim, scale, translate, positionOffset;\\n\\t\\t\\tvarying vec2 charCoord, charId;\\n\\t\\t\\tvarying float charWidth;\\n\\t\\t\\tvarying vec4 fontColor;\\n\\t\\t\\tvoid main () {\\n\\t\\t\\t\\t\" + (!GlText.normalViewport ? 'vec2 positionOffset = vec2(positionOffset.x,- positionOffset.y);' : '') + \"\\n\\n\\t\\t\\t\\tvec2 offset = floor(em * (vec2(align + charOffset, baseline)\\n\\t\\t\\t\\t\\t+ positionOffset))\\n\\t\\t\\t\\t\\t/ (viewport.zw * scale.xy);\\n\\n\\t\\t\\t\\tvec2 position = (position + translate) * scale;\\n\\t\\t\\t\\tposition += offset * scale;\\n\\n\\t\\t\\t\\t\" + (GlText.normalViewport ? 'position.y = 1. - position.y;' : '') + \"\\n\\n\\t\\t\\t\\tcharCoord = position * viewport.zw + viewport.xy;\\n\\n\\t\\t\\t\\tgl_Position = vec4(position * 2. - 1., 0, 1);\\n\\n\\t\\t\\t\\tgl_PointSize = charStep;\\n\\n\\t\\t\\t\\tcharId.x = mod(char, atlasDim.x);\\n\\t\\t\\t\\tcharId.y = floor(char / atlasDim.x);\\n\\n\\t\\t\\t\\tcharWidth = width * em;\\n\\n\\t\\t\\t\\tfontColor = color / 255.;\\n\\t\\t\\t}\"),\n\n\t\tfrag: \"\\n\\t\\t\\tprecision highp float;\\n\\t\\t\\tuniform sampler2D atlas;\\n\\t\\t\\tuniform float fontSize, charStep, opacity;\\n\\t\\t\\tuniform vec2 atlasSize;\\n\\t\\t\\tuniform vec4 viewport;\\n\\t\\t\\tvarying vec4 fontColor;\\n\\t\\t\\tvarying vec2 charCoord, charId;\\n\\t\\t\\tvarying float charWidth;\\n\\n\\t\\t\\tfloat lightness(vec4 color) {\\n\\t\\t\\t\\treturn color.r * 0.299 + color.g * 0.587 + color.b * 0.114;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main () {\\n\\t\\t\\t\\tvec2 uv = gl_FragCoord.xy - charCoord + charStep * .5;\\n\\t\\t\\t\\tfloat halfCharStep = floor(charStep * .5 + .5);\\n\\n\\t\\t\\t\\t// invert y and shift by 1px (FF expecially needs that)\\n\\t\\t\\t\\tuv.y = charStep - uv.y;\\n\\n\\t\\t\\t\\t// ignore points outside of character bounding box\\n\\t\\t\\t\\tfloat halfCharWidth = ceil(charWidth * .5);\\n\\t\\t\\t\\tif (floor(uv.x) > halfCharStep + halfCharWidth ||\\n\\t\\t\\t\\t\\tfloor(uv.x) < halfCharStep - halfCharWidth) return;\\n\\n\\t\\t\\t\\tuv += charId * charStep;\\n\\t\\t\\t\\tuv = uv / atlasSize;\\n\\n\\t\\t\\t\\tvec4 color = fontColor;\\n\\t\\t\\t\\tvec4 mask = texture2D(atlas, uv);\\n\\n\\t\\t\\t\\tfloat maskY = lightness(mask);\\n\\t\\t\\t\\t// float colorY = lightness(color);\\n\\t\\t\\t\\tcolor.a *= maskY;\\n\\t\\t\\t\\tcolor.a *= opacity;\\n\\n\\t\\t\\t\\t// color.a += .1;\\n\\n\\t\\t\\t\\t// antialiasing, see yiq color space y-channel formula\\n\\t\\t\\t\\t// color.rgb += (1. - color.rgb) * (1. - mask.rgb);\\n\\n\\t\\t\\t\\tgl_FragColor = color;\\n\\t\\t\\t}\"\n\t})\n\n\t// per font-size atlas\n\tvar atlas = {}\n\n\treturn { regl: regl, draw: draw, atlas: atlas }\n};\n\nGlText.prototype.update = function update (o) {\n\t\tvar this$1 = this;\n\n\tif (typeof o === 'string') { o = { text: o } }\n\telse if (!o) { return }\n\n\t// FIXME: make this a static transform or more general approact\n\to = pick(o, {\n\t\tposition: 'position positions coord coords coordinates',\n\t\tfont: 'font fontFace fontface typeface cssFont css-font family fontFamily',\n\t\tfontSize: 'fontSize fontsize size font-size',\n\t\ttext: 'text texts chars characters value values symbols',\n\t\talign: 'align alignment textAlign textbaseline',\n\t\tbaseline: 'baseline textBaseline textbaseline',\n\t\tdirection: 'dir direction textDirection',\n\t\tcolor: 'color colour fill fill-color fillColor textColor textcolor',\n\t\tkerning: 'kerning kern',\n\t\trange: 'range dataBox',\n\t\tviewport: 'vp viewport viewBox viewbox viewPort',\n\t\topacity: 'opacity alpha transparency visible visibility opaque',\n\t\toffset: 'offset positionOffset padding shift indent indentation'\n\t}, true)\n\n\n\tif (o.opacity != null) {\n\t\tif (Array.isArray(o.opacity)) {\n\t\t\tthis.opacity = o.opacity.map(function (o) { return parseFloat(o); })\n\t\t}\n\t\telse {\n\t\t\tthis.opacity = parseFloat(o.opacity)\n\t\t}\n\t}\n\n\tif (o.viewport != null) {\n\t\tthis.viewport = parseRect(o.viewport)\n\n\t\tif (GlText.normalViewport) {\n\t\t\tthis.viewport.y = this.canvas.height - this.viewport.y - this.viewport.height\n\t\t}\n\n\t\tthis.viewportArray = [this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height]\n\n\t}\n\tif (this.viewport == null) {\n\t\tthis.viewport = {\n\t\t\tx: 0, y: 0,\n\t\t\twidth: this.gl.drawingBufferWidth,\n\t\t\theight: this.gl.drawingBufferHeight\n\t\t}\n\t\tthis.viewportArray = [this.viewport.x, this.viewport.y, this.viewport.width, this.viewport.height]\n\t}\n\n\tif (o.kerning != null) { this.kerning = o.kerning }\n\n\tif (o.offset != null) {\n\t\tif (typeof o.offset === 'number') { o.offset = [o.offset, 0] }\n\n\t\tthis.positionOffset = flatten(o.offset)\n\t}\n\n\tif (o.direction) { this.direction = o.direction }\n\n\tif (o.range) {\n\t\tthis.range = o.range\n\t\tthis.scale = [1 / (o.range[2] - o.range[0]), 1 / (o.range[3] - o.range[1])]\n\t\tthis.translate = [-o.range[0], -o.range[1]]\n\t}\n\tif (o.scale) { this.scale = o.scale }\n\tif (o.translate) { this.translate = o.translate }\n\n\t// default scale corresponds to viewport\n\tif (!this.scale) { this.scale = [1 / this.viewport.width, 1 / this.viewport.height] }\n\n\tif (!this.translate) { this.translate = [0, 0] }\n\n\tif (!this.font.length && !o.font) { o.font = GlText.baseFontSize + 'px sans-serif' }\n\n\t// normalize font caching string\n\tvar newFont = false, newFontSize = false\n\n\t// obtain new font data\n\tif (o.font) {\n\t\t(Array.isArray(o.font) ? o.font : [o.font]).forEach(function (font, i) {\n\t\t\t// normalize font\n\t\t\tif (typeof font === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tfont = Font.parse(font)\n\t\t\t\t} catch (e) {\n\t\t\t\t\tfont = Font.parse(GlText.baseFontSize + 'px ' + font)\n\t\t\t\t}\n\t\t\t}\n\t\t\telse { font = Font.parse(Font.stringify(font)) }\n\n\t\t\tvar baseString = Font.stringify({\n\t\t\t\tsize: GlText.baseFontSize,\n\t\t\t\tfamily: font.family,\n\t\t\t\tstretch: isStretchSupported ? font.stretch : undefined,\n\t\t\t\tvariant: font.variant,\n\t\t\t\tweight: font.weight,\n\t\t\t\tstyle: font.style\n\t\t\t})\n\n\t\t\tvar unit = parseUnit(font.size)\n\t\t\tvar fs = Math.round(unit[0] * px(unit[1]))\n\t\t\tif (fs !== this$1.fontSize[i]) {\n\t\t\t\tnewFontSize = true\n\t\t\t\tthis$1.fontSize[i] = fs\n\t\t\t}\n\n\t\t\t// calc new font metrics/atlas\n\t\t\tif (!this$1.font[i] || baseString != this$1.font[i].baseString) {\n\t\t\t\tnewFont = true\n\n\t\t\t\t// obtain font cache or create one\n\t\t\t\tthis$1.font[i] = GlText.fonts[baseString]\n\t\t\t\tif (!this$1.font[i]) {\n\t\t\t\t\tvar family = font.family.join(', ')\n\t\t\t\t\tvar style = [font.style]\n\t\t\t\t\tif (font.style != font.variant) { style.push(font.variant) }\n\t\t\t\t\tif (font.variant != font.weight) { style.push(font.weight) }\n\t\t\t\t\tif (isStretchSupported && font.weight != font.stretch) { style.push(font.stretch) }\n\n\t\t\t\t\tthis$1.font[i] = {\n\t\t\t\t\t\tbaseString: baseString,\n\n\t\t\t\t\t\t// typeface\n\t\t\t\t\t\tfamily: family,\n\t\t\t\t\t\tweight: font.weight,\n\t\t\t\t\t\tstretch: font.stretch,\n\t\t\t\t\t\tstyle: font.style,\n\t\t\t\t\t\tvariant: font.variant,\n\n\t\t\t\t\t\t// widths of characters\n\t\t\t\t\t\twidth: {},\n\n\t\t\t\t\t\t// kernin pairs offsets\n\t\t\t\t\t\tkerning: {},\n\n\t\t\t\t\t\tmetrics: metrics(family, {\n\t\t\t\t\t\t\torigin: 'top',\n\t\t\t\t\t\t\tfontSize: GlText.baseFontSize,\n\t\t\t\t\t\t\tfontStyle: style.join(' ')\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\n\t\t\t\t\tGlText.fonts[baseString] = this$1.font[i]\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t// FIXME: make independend font-size\n\t// if (o.fontSize) {\n\t// let unit = parseUnit(o.fontSize)\n\t// let fs = Math.round(unit[0] * px(unit[1]))\n\n\t// if (fs != this.fontSize) {\n\t// \tnewFontSize = true\n\t// \tthis.fontSize = fs\n\t// }\n\t// }\n\n\tif (newFont || newFontSize) {\n\t\tthis.font.forEach(function (font, i) {\n\t\t\tvar fontString = Font.stringify({\n\t\t\t\tsize: this$1.fontSize[i],\n\t\t\t\tfamily: font.family,\n\t\t\t\tstretch: isStretchSupported ? font.stretch : undefined,\n\t\t\t\tvariant: font.variant,\n\t\t\t\tweight: font.weight,\n\t\t\t\tstyle: font.style\n\t\t\t})\n\n\t\t\t// calc new font size atlas\n\t\t\tthis$1.fontAtlas[i] = this$1.shader.atlas[fontString]\n\n\t\t\tif (!this$1.fontAtlas[i]) {\n\t\t\t\tvar metrics = font.metrics\n\n\t\t\t\tthis$1.shader.atlas[fontString] =\n\t\t\t\tthis$1.fontAtlas[i] = {\n\t\t\t\t\tfontString: fontString,\n\t\t\t\t\t// even step is better for rendered characters\n\t\t\t\t\tstep: Math.ceil(this$1.fontSize[i] * metrics.bottom * .5) * 2,\n\t\t\t\t\tem: this$1.fontSize[i],\n\t\t\t\t\tcols: 0,\n\t\t\t\t\trows: 0,\n\t\t\t\t\theight: 0,\n\t\t\t\t\twidth: 0,\n\t\t\t\t\tchars: [],\n\t\t\t\t\tids: {},\n\t\t\t\t\ttexture: this$1.regl.texture()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// bump atlas characters\n\t\t\tif (o.text == null) { o.text = this$1.text }\n\t\t})\n\t}\n\n\t// if multiple positions - duplicate text arguments\n\t// FIXME: this possibly can be done better to avoid array spawn\n\tif (typeof o.text === 'string' && o.position && o.position.length > 2) {\n\t\tvar textArray = Array(o.position.length * .5)\n\t\tfor (var i = 0; i < textArray.length; i++) {\n\t\t\ttextArray[i] = o.text\n\t\t}\n\t\to.text = textArray\n\t}\n\n\t// calculate offsets for the new font/text\n\tvar newAtlasChars\n\tif (o.text != null || newFont) {\n\t\t// FIXME: ignore spaces\n\t\t// text offsets within the text buffer\n\t\tthis.textOffsets = [0]\n\n\t\tif (Array.isArray(o.text)) {\n\t\t\tthis.count = o.text[0].length\n\t\t\tthis.counts = [this.count]\n\t\t\tfor (var i$1 = 1; i$1 < o.text.length; i$1++) {\n\t\t\t\tthis.textOffsets[i$1] = this.textOffsets[i$1 - 1] + o.text[i$1 - 1].length\n\t\t\t\tthis.count += o.text[i$1].length\n\t\t\t\tthis.counts.push(o.text[i$1].length)\n\t\t\t}\n\t\t\tthis.text = o.text.join('')\n\t\t}\n\t\telse {\n\t\t\tthis.text = o.text\n\t\t\tthis.count = this.text.length\n\t\t\tthis.counts = [this.count]\n\t\t}\n\n\t\tnewAtlasChars = []\n\n\t\t// detect & measure new characters\n\t\tthis.font.forEach(function (font, idx) {\n\t\t\tGlText.atlasContext.font = font.baseString\n\n\t\t\tvar atlas = this$1.fontAtlas[idx]\n\n\t\t\tfor (var i = 0; i < this$1.text.length; i++) {\n\t\t\t\tvar char = this$1.text.charAt(i)\n\n\t\t\t\tif (atlas.ids[char] == null) {\n\t\t\t\t\tatlas.ids[char] = atlas.chars.length\n\t\t\t\t\tatlas.chars.push(char)\n\t\t\t\t\tnewAtlasChars.push(char)\n\t\t\t\t}\n\n\t\t\t\tif (font.width[char] == null) {\n\t\t\t\t\tfont.width[char] = GlText.atlasContext.measureText(char).width / GlText.baseFontSize\n\n\t\t\t\t\t// measure kerning pairs for the new character\n\t\t\t\t\tif (this$1.kerning) {\n\t\t\t\t\t\tvar pairs = []\n\t\t\t\t\t\tfor (var baseChar in font.width) {\n\t\t\t\t\t\t\tpairs.push(baseChar + char, char + baseChar)\n\t\t\t\t\t\t}\n\t\t\t\t\t\textend(font.kerning, kerning(font.family, {\n\t\t\t\t\t\t\tpairs: pairs\n\t\t\t\t\t\t}))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n\n\t// create single position buffer (faster than batch or multiple separate instances)\n\tif (o.position) {\n\t\tif (o.position.length > 2) {\n\t\t\tvar flat = !o.position[0].length\n\t\t\tvar positionData = pool.mallocFloat(this.count * 2)\n\t\t\tfor (var i$2 = 0, ptr = 0; i$2 < this.counts.length; i$2++) {\n\t\t\t\tvar count = this.counts[i$2]\n\t\t\t\tif (flat) {\n\t\t\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\t\t\tpositionData[ptr++] = o.position[i$2 * 2]\n\t\t\t\t\t\tpositionData[ptr++] = o.position[i$2 * 2 + 1]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tfor (var j$1 = 0; j$1 < count; j$1++) {\n\t\t\t\t\t\tpositionData[ptr++] = o.position[i$2][0]\n\t\t\t\t\t\tpositionData[ptr++] = o.position[i$2][1]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this.position.call) {\n\t\t\t\tthis.position({\n\t\t\t\t\ttype: 'float',\n\t\t\t\t\tdata: positionData\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tthis.position = this.regl.buffer({\n\t\t\t\t\ttype: 'float',\n\t\t\t\t\tdata: positionData\n\t\t\t\t})\n\t\t\t}\n\t\t\tpool.freeFloat(positionData)\n\t\t}\n\t\telse {\n\t\t\tif (this.position.destroy) { this.position.destroy() }\n\t\t\tthis.position = {\n\t\t\t\tconstant: o.position\n\t\t\t}\n\t\t}\n\t}\n\n\t// populate text/offset buffers if font/text has changed\n\t// as [charWidth, offset, charWidth, offset...]\n\t// that is in em units since font-size can change often\n\tif (o.text || newFont) {\n\t\tvar charIds = pool.mallocUint8(this.count)\n\t\tvar sizeData = pool.mallocFloat(this.count * 2)\n\t\tthis.textWidth = []\n\n\t\tfor (var i$3 = 0, ptr$1 = 0; i$3 < this.counts.length; i$3++) {\n\t\t\tvar count$1 = this.counts[i$3]\n\t\t\tvar font = this.font[i$3] || this.font[0]\n\t\t\tvar atlas = this.fontAtlas[i$3] || this.fontAtlas[0]\n\n\t\t\tfor (var j$2 = 0; j$2 < count$1; j$2++) {\n\t\t\t\tvar char = this.text.charAt(ptr$1)\n\t\t\t\tvar prevChar = this.text.charAt(ptr$1 - 1)\n\n\t\t\t\tcharIds[ptr$1] = atlas.ids[char]\n\t\t\t\tsizeData[ptr$1 * 2] = font.width[char]\n\n\t\t\t\tif (j$2) {\n\t\t\t\t\tvar prevWidth = sizeData[ptr$1 * 2 - 2]\n\t\t\t\t\tvar currWidth = sizeData[ptr$1 * 2]\n\t\t\t\t\tvar prevOffset = sizeData[ptr$1 * 2 - 1]\n\t\t\t\t\tvar offset = prevOffset + prevWidth * .5 + currWidth * .5;\n\n\t\t\t\t\tif (this.kerning) {\n\t\t\t\t\t\tvar kerning$1 = font.kerning[prevChar + char]\n\t\t\t\t\t\tif (kerning$1) {\n\t\t\t\t\t\t\toffset += kerning$1 * 1e-3\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tsizeData[ptr$1 * 2 + 1] = offset\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tsizeData[ptr$1 * 2 + 1] = sizeData[ptr$1 * 2] * .5\n\t\t\t\t}\n\n\t\t\t\tptr$1++\n\t\t\t}\n\t\t\tthis.textWidth.push(\n\t\t\t\t!sizeData.length ? 0 :\n\t\t\t\t// last offset + half last width\n\t\t\t\tsizeData[ptr$1 * 2 - 2] * .5 + sizeData[ptr$1 * 2 - 1]\n\t\t\t)\n\t\t}\n\n\n\t\t// bump recalc align offset\n\t\tif (!o.align) { o.align = this.align }\n\t\tthis.charBuffer({data: charIds, type: 'uint8', usage: 'stream'})\n\t\tthis.sizeBuffer({data: sizeData, type: 'float', usage: 'stream'})\n\t\tpool.freeUint8(charIds)\n\t\tpool.freeFloat(sizeData)\n\n\t\t// udpate font atlas and texture\n\t\tif (newAtlasChars.length) {\n\t\t\tthis.font.forEach(function (font, i) {\n\t\t\t\tvar atlas = this$1.fontAtlas[i]\n\n\t\t\t\t// FIXME: insert metrics-based ratio here\n\t\t\t\tvar step = atlas.step\n\n\t\t\t\tvar maxCols = Math.floor(GlText.maxAtlasSize / step)\n\t\t\t\tvar cols = Math.min(maxCols, atlas.chars.length)\n\t\t\t\tvar rows = Math.ceil(atlas.chars.length / cols)\n\n\t\t\t\tvar atlasWidth = nextPow2( cols * step )\n\t\t\t\t// let atlasHeight = Math.min(rows * step + step * .5, GlText.maxAtlasSize);\n\t\t\t\tvar atlasHeight = nextPow2( rows * step );\n\n\t\t\t\tatlas.width = atlasWidth\n\t\t\t\tatlas.height = atlasHeight;\n\t\t\t\tatlas.rows = rows\n\t\t\t\tatlas.cols = cols\n\n\t\t\t\tif (!atlas.em) { return }\n\n\t\t\t\tatlas.texture({\n\t\t\t\t\tdata: fontAtlas({\n\t\t\t\t\t\tcanvas: GlText.atlasCanvas,\n\t\t\t\t\t\tfont: atlas.fontString,\n\t\t\t\t\t\tchars: atlas.chars,\n\t\t\t\t\t\tshape: [atlasWidth, atlasHeight],\n\t\t\t\t\t\tstep: [step, step]\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t})\n\t\t}\n\t}\n\n\tif (o.align) {\n\t\tthis.align = o.align\n\t\tthis.alignOffset = this.textWidth.map(function (textWidth, i) {\n\t\t\tvar align = !Array.isArray(this$1.align) ? this$1.align : this$1.align.length > 1 ? this$1.align[i] : this$1.align[0]\n\n\t\t\tif (typeof align === 'number') { return align }\n\t\t\tswitch (align) {\n\t\t\t\tcase 'right':\n\t\t\t\tcase 'end':\n\t\t\t\t\treturn -textWidth\n\t\t\t\tcase 'center':\n\t\t\t\tcase 'centre':\n\t\t\t\tcase 'middle':\n\t\t\t\t\treturn -textWidth * .5\n\t\t\t}\n\n\t\t\treturn 0\n\t\t})\n\t}\n\n\tif (this.baseline == null && o.baseline == null) {\n\t\to.baseline = 0\n\t}\n\tif (o.baseline != null) {\n\t\tthis.baseline = o.baseline\n\t\tif (!Array.isArray(this.baseline)) { this.baseline = [this.baseline] }\n\t\tthis.baselineOffset = this.baseline.map(function (baseline, i) {\n\t\t\tvar m = (this$1.font[i] || this$1.font[0]).metrics\n\t\t\tvar base = 0\n\n\t\t\tbase += m.bottom * .5\n\n\t\t\tif (typeof baseline === 'number') {\n\t\t\t\tbase += (baseline - m.baseline)\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbase += -m[baseline]\n\t\t\t}\n\n\t\t\tif (!GlText.normalViewport) { base *= -1 }\n\t\t\treturn base\n\t\t})\n\t}\n\n\t// flatten colors to a single uint8 array\n\tif (o.color != null) {\n\t\tif (!o.color) { o.color = 'transparent' }\n\n\t\t// single color\n\t\tif (typeof o.color === 'string' || !isNaN(o.color)) {\n\t\t\tthis.color = rgba(o.color, 'uint8')\n\t\t}\n\t\t// array\n\t\telse {\n\t\t\tvar colorData\n\n\t\t\t// flat array\n\t\t\tif (typeof o.color[0] === 'number' && o.color.length > this.counts.length) {\n\t\t\t\tvar l = o.color.length\n\t\t\t\tcolorData = pool.mallocUint8(l)\n\t\t\t\tvar sub = (o.color.subarray || o.color.slice).bind(o.color)\n\t\t\t\tfor (var i$4 = 0; i$4 < l; i$4 += 4) {\n\t\t\t\t\tcolorData.set(rgba(sub(i$4, i$4 + 4), 'uint8'), i$4)\n\t\t\t\t}\n\t\t\t}\n\t\t\t// nested array\n\t\t\telse {\n\t\t\t\tvar l$1 = o.color.length\n\t\t\t\tcolorData = pool.mallocUint8(l$1 * 4)\n\t\t\t\tfor (var i$5 = 0; i$5 < l$1; i$5++) {\n\t\t\t\t\tcolorData.set(rgba(o.color[i$5] || 0, 'uint8'), i$5 * 4)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.color = colorData\n\t\t}\n\t}\n\n\t// update render batch\n\tif (o.position || o.text || o.color || o.baseline || o.align || o.font || o.offset || o.opacity) {\n\t\tvar isBatch = (this.color.length > 4)\n\t\t\t|| (this.baselineOffset.length > 1)\n\t\t\t|| (this.align && this.align.length > 1)\n\t\t\t|| (this.fontAtlas.length > 1)\n\t\t\t|| (this.positionOffset.length > 2)\n\t\tif (isBatch) {\n\t\t\tvar length = Math.max(\n\t\t\t\tthis.position.length * .5 || 0,\n\t\t\t\tthis.color.length * .25 || 0,\n\t\t\t\tthis.baselineOffset.length || 0,\n\t\t\t\tthis.alignOffset.length || 0,\n\t\t\t\tthis.font.length || 0,\n\t\t\t\tthis.opacity.length || 0,\n\t\t\t\tthis.positionOffset.length * .5 || 0\n\t\t\t)\n\t\t\tthis.batch = Array(length)\n\t\t\tfor (var i$6 = 0; i$6 < this.batch.length; i$6++) {\n\t\t\t\tthis.batch[i$6] = {\n\t\t\t\t\tcount: this.counts.length > 1 ? this.counts[i$6] : this.counts[0],\n\t\t\t\t\toffset: this.textOffsets.length > 1 ? this.textOffsets[i$6] : this.textOffsets[0],\n\t\t\t\t\tcolor: !this.color ? [0,0,0,255] : this.color.length <= 4 ? this.color : this.color.subarray(i$6 * 4, i$6 * 4 + 4),\n\t\t\t\t\topacity: Array.isArray(this.opacity) ? this.opacity[i$6] : this.opacity,\n\t\t\t\t\tbaseline: this.baselineOffset[i$6] != null ? this.baselineOffset[i$6] : this.baselineOffset[0],\n\t\t\t\t\talign: !this.align ? 0 : this.alignOffset[i$6] != null ? this.alignOffset[i$6] : this.alignOffset[0],\n\t\t\t\t\tatlas: this.fontAtlas[i$6] || this.fontAtlas[0],\n\t\t\t\t\tpositionOffset: this.positionOffset.length > 2 ? this.positionOffset.subarray(i$6 * 2, i$6 * 2 + 2) : this.positionOffset\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// single-color, single-baseline, single-align batch is faster to render\n\t\telse {\n\t\t\tif (this.count) {\n\t\t\t\tthis.batch = [{\n\t\t\t\t\tcount: this.count,\n\t\t\t\t\toffset: 0,\n\t\t\t\t\tcolor: this.color || [0,0,0,255],\n\t\t\t\t\topacity: Array.isArray(this.opacity) ? this.opacity[0] : this.opacity,\n\t\t\t\t\tbaseline: this.baselineOffset[0],\n\t\t\t\t\talign: this.alignOffset ? this.alignOffset[0] : 0,\n\t\t\t\t\tatlas: this.fontAtlas[0],\n\t\t\t\t\tpositionOffset: this.positionOffset\n\t\t\t\t}]\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.batch = []\n\t\t\t}\n\t\t}\n\t}\n};\n\nGlText.prototype.destroy = function destroy () {\n\t// TODO: count instances of atlases and destroy all on null\n};\n\n\n// defaults\nGlText.prototype.kerning = true\nGlText.prototype.position = { constant: new Float32Array(2) }\nGlText.prototype.translate = null\nGlText.prototype.scale = null\nGlText.prototype.font = null\nGlText.prototype.text = ''\nGlText.prototype.positionOffset = [0, 0]\nGlText.prototype.opacity = 1\nGlText.prototype.color = new Uint8Array([0, 0, 0, 255])\nGlText.prototype.alignOffset = [0, 0]\n\n\n// whether viewport should be top↓bottom 2d one (true) or webgl one (false)\nGlText.normalViewport = false\n\n// size of an atlas\nGlText.maxAtlasSize = 1024\n\n// font atlas canvas is singleton\nGlText.atlasCanvas = document.createElement('canvas')\nGlText.atlasContext = GlText.atlasCanvas.getContext('2d', {alpha: false})\n\n// font-size used for metrics, atlas step calculation\nGlText.baseFontSize = 64\n\n// fonts storage\nGlText.fonts = {}\n\n// max number of different font atlases/textures cached\n// FIXME: enable atlas size limitation via LRU\n// GlText.atlasCacheSize = 64\n\nfunction isRegl (o) {\n\treturn typeof o === 'function' &&\n\to._gl &&\n\to.prop &&\n\to.texture &&\n\to.buffer\n}\n\n\nmodule.exports = GlText\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
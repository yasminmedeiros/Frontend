{"ast":null,"code":"'use strict';\n\nvar pick = require('pick-by-alias');\nmodule.exports = parseRect;\nfunction parseRect(arg) {\n  var rect;\n\n  // direct arguments sequence\n  if (arguments.length > 1) {\n    arg = arguments;\n  }\n\n  // svg viewbox\n  if (typeof arg === 'string') {\n    arg = arg.split(/\\s/).map(parseFloat);\n  } else if (typeof arg === 'number') {\n    arg = [arg];\n  }\n\n  // 0, 0, 100, 100 - array-like\n  if (arg.length && typeof arg[0] === 'number') {\n    // [w, w]\n    if (arg.length === 1) {\n      rect = {\n        width: arg[0],\n        height: arg[0],\n        x: 0,\n        y: 0\n      };\n    }\n    // [w, h]\n    else if (arg.length === 2) {\n      rect = {\n        width: arg[0],\n        height: arg[1],\n        x: 0,\n        y: 0\n      };\n    }\n    // [l, t, r, b]\n    else {\n      rect = {\n        x: arg[0],\n        y: arg[1],\n        width: arg[2] - arg[0] || 0,\n        height: arg[3] - arg[1] || 0\n      };\n    }\n  }\n  // {x, y, w, h} or {l, t, b, r}\n  else if (arg) {\n    arg = pick(arg, {\n      left: 'x l left Left',\n      top: 'y t top Top',\n      width: 'w width W Width',\n      height: 'h height W Width',\n      bottom: 'b bottom Bottom',\n      right: 'r right Right'\n    });\n    rect = {\n      x: arg.left || 0,\n      y: arg.top || 0\n    };\n    if (arg.width == null) {\n      if (arg.right) rect.width = arg.right - rect.x;else rect.width = 0;\n    } else {\n      rect.width = arg.width;\n    }\n    if (arg.height == null) {\n      if (arg.bottom) rect.height = arg.bottom - rect.y;else rect.height = 0;\n    } else {\n      rect.height = arg.height;\n    }\n  }\n  return rect;\n}","map":{"version":3,"names":["pick","require","module","exports","parseRect","arg","rect","arguments","length","split","map","parseFloat","width","height","x","y","left","top","bottom","right"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/parse-rect/index.js"],"sourcesContent":["'use strict'\r\n\r\nvar pick = require('pick-by-alias')\r\n\r\nmodule.exports = parseRect\r\n\r\nfunction parseRect (arg) {\r\n  var rect\r\n\r\n  // direct arguments sequence\r\n  if (arguments.length > 1) {\r\n    arg = arguments\r\n  }\r\n\r\n  // svg viewbox\r\n  if (typeof arg === 'string') {\r\n    arg = arg.split(/\\s/).map(parseFloat)\r\n  }\r\n  else if (typeof arg === 'number') {\r\n    arg = [arg]\r\n  }\r\n\r\n  // 0, 0, 100, 100 - array-like\r\n  if (arg.length && typeof arg[0] === 'number') {\r\n    // [w, w]\r\n    if (arg.length === 1) {\r\n      rect = {\r\n        width: arg[0],\r\n        height: arg[0],\r\n        x: 0, y: 0\r\n      }\r\n    }\r\n    // [w, h]\r\n    else if (arg.length === 2) {\r\n      rect = {\r\n        width: arg[0],\r\n        height: arg[1],\r\n        x: 0, y: 0\r\n      }\r\n    }\r\n    // [l, t, r, b]\r\n    else {\r\n      rect = {\r\n        x: arg[0],\r\n        y: arg[1],\r\n        width: (arg[2] - arg[0]) || 0,\r\n        height: (arg[3] - arg[1]) || 0\r\n      }\r\n    }\r\n  }\r\n  // {x, y, w, h} or {l, t, b, r}\r\n  else if (arg) {\r\n    arg = pick(arg, {\r\n      left: 'x l left Left',\r\n      top: 'y t top Top',\r\n      width: 'w width W Width',\r\n      height: 'h height W Width',\r\n      bottom: 'b bottom Bottom',\r\n      right: 'r right Right'\r\n    })\r\n\r\n    rect = {\r\n      x: arg.left || 0,\r\n      y: arg.top || 0\r\n    }\r\n\r\n    if (arg.width == null) {\r\n      if (arg.right) rect.width = arg.right - rect.x\r\n      else rect.width = 0\r\n    }\r\n    else {\r\n      rect.width = arg.width\r\n    }\r\n\r\n    if (arg.height == null) {\r\n      if (arg.bottom) rect.height = arg.bottom - rect.y\r\n      else rect.height = 0\r\n    }\r\n    else {\r\n      rect.height = arg.height\r\n    }\r\n  }\r\n\r\n  return rect\r\n}\r\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEnCC,MAAM,CAACC,OAAO,GAAGC,SAAS;AAE1B,SAASA,SAAS,CAAEC,GAAG,EAAE;EACvB,IAAIC,IAAI;;EAER;EACA,IAAIC,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;IACxBH,GAAG,GAAGE,SAAS;EACjB;;EAEA;EACA,IAAI,OAAOF,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAGA,GAAG,CAACI,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,UAAU,CAAC;EACvC,CAAC,MACI,IAAI,OAAON,GAAG,KAAK,QAAQ,EAAE;IAChCA,GAAG,GAAG,CAACA,GAAG,CAAC;EACb;;EAEA;EACA,IAAIA,GAAG,CAACG,MAAM,IAAI,OAAOH,GAAG,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;IAC5C;IACA,IAAIA,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;MACpBF,IAAI,GAAG;QACLM,KAAK,EAAEP,GAAG,CAAC,CAAC,CAAC;QACbQ,MAAM,EAAER,GAAG,CAAC,CAAC,CAAC;QACdS,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MACX,CAAC;IACH;IACA;IAAA,KACK,IAAIV,GAAG,CAACG,MAAM,KAAK,CAAC,EAAE;MACzBF,IAAI,GAAG;QACLM,KAAK,EAAEP,GAAG,CAAC,CAAC,CAAC;QACbQ,MAAM,EAAER,GAAG,CAAC,CAAC,CAAC;QACdS,CAAC,EAAE,CAAC;QAAEC,CAAC,EAAE;MACX,CAAC;IACH;IACA;IAAA,KACK;MACHT,IAAI,GAAG;QACLQ,CAAC,EAAET,GAAG,CAAC,CAAC,CAAC;QACTU,CAAC,EAAEV,GAAG,CAAC,CAAC,CAAC;QACTO,KAAK,EAAGP,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAK,CAAC;QAC7BQ,MAAM,EAAGR,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,IAAK;MAC/B,CAAC;IACH;EACF;EACA;EAAA,KACK,IAAIA,GAAG,EAAE;IACZA,GAAG,GAAGL,IAAI,CAACK,GAAG,EAAE;MACdW,IAAI,EAAE,eAAe;MACrBC,GAAG,EAAE,aAAa;MAClBL,KAAK,EAAE,iBAAiB;MACxBC,MAAM,EAAE,kBAAkB;MAC1BK,MAAM,EAAE,iBAAiB;MACzBC,KAAK,EAAE;IACT,CAAC,CAAC;IAEFb,IAAI,GAAG;MACLQ,CAAC,EAAET,GAAG,CAACW,IAAI,IAAI,CAAC;MAChBD,CAAC,EAAEV,GAAG,CAACY,GAAG,IAAI;IAChB,CAAC;IAED,IAAIZ,GAAG,CAACO,KAAK,IAAI,IAAI,EAAE;MACrB,IAAIP,GAAG,CAACc,KAAK,EAAEb,IAAI,CAACM,KAAK,GAAGP,GAAG,CAACc,KAAK,GAAGb,IAAI,CAACQ,CAAC,MACzCR,IAAI,CAACM,KAAK,GAAG,CAAC;IACrB,CAAC,MACI;MACHN,IAAI,CAACM,KAAK,GAAGP,GAAG,CAACO,KAAK;IACxB;IAEA,IAAIP,GAAG,CAACQ,MAAM,IAAI,IAAI,EAAE;MACtB,IAAIR,GAAG,CAACa,MAAM,EAAEZ,IAAI,CAACO,MAAM,GAAGR,GAAG,CAACa,MAAM,GAAGZ,IAAI,CAACS,CAAC,MAC5CT,IAAI,CAACO,MAAM,GAAG,CAAC;IACtB,CAAC,MACI;MACHP,IAAI,CAACO,MAAM,GAAGR,GAAG,CAACQ,MAAM;IAC1B;EACF;EAEA,OAAOP,IAAI;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}
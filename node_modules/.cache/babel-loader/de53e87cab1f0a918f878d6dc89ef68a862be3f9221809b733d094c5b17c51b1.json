{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar mapboxgl = require('mapbox-gl');\nvar Lib = require('../../lib');\nvar getSubplotCalcData = require('../../plots/get_data').getSubplotCalcData;\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar createMapbox = require('./mapbox');\nvar constants = require('./constants');\nvar MAPBOX = 'mapbox';\nfor (var k in constants.styleRules) {\n  Lib.addStyleRule('.mapboxgl-' + k, constants.styleRules[k]);\n}\nexports.name = MAPBOX;\nexports.attr = 'subplot';\nexports.idRoot = MAPBOX;\nexports.idRegex = exports.attrRegex = Lib.counterRegex(MAPBOX);\nexports.attributes = {\n  subplot: {\n    valType: 'subplotid',\n    role: 'info',\n    dflt: 'mapbox',\n    editType: 'calc',\n    description: ['Sets a reference between this trace\\'s data coordinates and', 'a mapbox subplot.', 'If *mapbox* (the default value), the data refer to `layout.mapbox`.', 'If *mapbox2*, the data refer to `layout.mapbox2`, and so on.'].join(' ')\n  }\n};\nexports.layoutAttributes = require('./layout_attributes');\nexports.supplyLayoutDefaults = require('./layout_defaults');\nexports.plot = function plotMapbox(gd) {\n  var fullLayout = gd._fullLayout;\n  var calcData = gd.calcdata;\n  var mapboxIds = fullLayout._subplots[MAPBOX];\n  if (mapboxgl.version !== constants.requiredVersion) {\n    throw new Error(constants.wrongVersionErrorMsg);\n  }\n  var accessToken = findAccessToken(gd, mapboxIds);\n  mapboxgl.accessToken = accessToken;\n  for (var i = 0; i < mapboxIds.length; i++) {\n    var id = mapboxIds[i];\n    var subplotCalcData = getSubplotCalcData(calcData, MAPBOX, id);\n    var opts = fullLayout[id];\n    var mapbox = opts._subplot;\n    if (!mapbox) {\n      mapbox = createMapbox({\n        gd: gd,\n        container: fullLayout._glcontainer.node(),\n        id: id,\n        fullLayout: fullLayout,\n        staticPlot: gd._context.staticPlot\n      });\n      fullLayout[id]._subplot = mapbox;\n    }\n    if (!mapbox.viewInitial) {\n      mapbox.viewInitial = {\n        center: Lib.extendFlat({}, opts.center),\n        zoom: opts.zoom,\n        bearing: opts.bearing,\n        pitch: opts.pitch\n      };\n    }\n    mapbox.plot(subplotCalcData, fullLayout, gd._promises);\n  }\n};\nexports.clean = function (newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldMapboxKeys = oldFullLayout._subplots[MAPBOX] || [];\n  for (var i = 0; i < oldMapboxKeys.length; i++) {\n    var oldMapboxKey = oldMapboxKeys[i];\n    if (!newFullLayout[oldMapboxKey] && !!oldFullLayout[oldMapboxKey]._subplot) {\n      oldFullLayout[oldMapboxKey]._subplot.destroy();\n    }\n  }\n};\nexports.toSVG = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[MAPBOX];\n  var size = fullLayout._size;\n  for (var i = 0; i < subplotIds.length; i++) {\n    var opts = fullLayout[subplotIds[i]];\n    var domain = opts.domain;\n    var mapbox = opts._subplot;\n    var imageData = mapbox.toImage('png');\n    var image = fullLayout._glimages.append('svg:image');\n    image.attr({\n      xmlns: xmlnsNamespaces.svg,\n      'xlink:href': imageData,\n      x: size.l + size.w * domain.x[0],\n      y: size.t + size.h * (1 - domain.y[1]),\n      width: size.w * (domain.x[1] - domain.x[0]),\n      height: size.h * (domain.y[1] - domain.y[0]),\n      preserveAspectRatio: 'none'\n    });\n    mapbox.destroy();\n  }\n};\nfunction findAccessToken(gd, mapboxIds) {\n  var fullLayout = gd._fullLayout;\n  var context = gd._context;\n\n  // special case for Mapbox Atlas users\n  if (context.mapboxAccessToken === '') return '';\n\n  // Take the first token we find in a mapbox subplot.\n  // These default to the context value but may be overridden.\n  for (var i = 0; i < mapboxIds.length; i++) {\n    var opts = fullLayout[mapboxIds[i]];\n    if (opts.accesstoken) {\n      return opts.accesstoken;\n    }\n  }\n  throw new Error(constants.noAccessTokenErrorMsg);\n}\nexports.updateFx = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[MAPBOX];\n  for (var i = 0; i < subplotIds.length; i++) {\n    var subplotObj = fullLayout[subplotIds[i]]._subplot;\n    subplotObj.updateFx(fullLayout);\n  }\n};","map":{"version":3,"names":["mapboxgl","require","Lib","getSubplotCalcData","xmlnsNamespaces","createMapbox","constants","MAPBOX","k","styleRules","addStyleRule","exports","name","attr","idRoot","idRegex","attrRegex","counterRegex","attributes","subplot","valType","role","dflt","editType","description","join","layoutAttributes","supplyLayoutDefaults","plot","plotMapbox","gd","fullLayout","_fullLayout","calcData","calcdata","mapboxIds","_subplots","version","requiredVersion","Error","wrongVersionErrorMsg","accessToken","findAccessToken","i","length","id","subplotCalcData","opts","mapbox","_subplot","container","_glcontainer","node","staticPlot","_context","viewInitial","center","extendFlat","zoom","bearing","pitch","_promises","clean","newFullData","newFullLayout","oldFullData","oldFullLayout","oldMapboxKeys","oldMapboxKey","destroy","toSVG","subplotIds","size","_size","domain","imageData","toImage","image","_glimages","append","xmlns","svg","x","l","w","y","t","h","width","height","preserveAspectRatio","context","mapboxAccessToken","accesstoken","noAccessTokenErrorMsg","updateFx","subplotObj"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/mapbox/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar mapboxgl = require('mapbox-gl');\n\nvar Lib = require('../../lib');\nvar getSubplotCalcData = require('../../plots/get_data').getSubplotCalcData;\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nvar createMapbox = require('./mapbox');\nvar constants = require('./constants');\n\nvar MAPBOX = 'mapbox';\n\nfor(var k in constants.styleRules) {\n    Lib.addStyleRule('.mapboxgl-' + k, constants.styleRules[k]);\n}\n\nexports.name = MAPBOX;\n\nexports.attr = 'subplot';\n\nexports.idRoot = MAPBOX;\n\nexports.idRegex = exports.attrRegex = Lib.counterRegex(MAPBOX);\n\nexports.attributes = {\n    subplot: {\n        valType: 'subplotid',\n        role: 'info',\n        dflt: 'mapbox',\n        editType: 'calc',\n        description: [\n            'Sets a reference between this trace\\'s data coordinates and',\n            'a mapbox subplot.',\n            'If *mapbox* (the default value), the data refer to `layout.mapbox`.',\n            'If *mapbox2*, the data refer to `layout.mapbox2`, and so on.'\n        ].join(' ')\n    }\n};\n\nexports.layoutAttributes = require('./layout_attributes');\n\nexports.supplyLayoutDefaults = require('./layout_defaults');\n\nexports.plot = function plotMapbox(gd) {\n    var fullLayout = gd._fullLayout;\n    var calcData = gd.calcdata;\n    var mapboxIds = fullLayout._subplots[MAPBOX];\n\n    if(mapboxgl.version !== constants.requiredVersion) {\n        throw new Error(constants.wrongVersionErrorMsg);\n    }\n\n    var accessToken = findAccessToken(gd, mapboxIds);\n    mapboxgl.accessToken = accessToken;\n\n    for(var i = 0; i < mapboxIds.length; i++) {\n        var id = mapboxIds[i];\n        var subplotCalcData = getSubplotCalcData(calcData, MAPBOX, id);\n        var opts = fullLayout[id];\n        var mapbox = opts._subplot;\n\n        if(!mapbox) {\n            mapbox = createMapbox({\n                gd: gd,\n                container: fullLayout._glcontainer.node(),\n                id: id,\n                fullLayout: fullLayout,\n                staticPlot: gd._context.staticPlot\n            });\n\n            fullLayout[id]._subplot = mapbox;\n        }\n\n        if(!mapbox.viewInitial) {\n            mapbox.viewInitial = {\n                center: Lib.extendFlat({}, opts.center),\n                zoom: opts.zoom,\n                bearing: opts.bearing,\n                pitch: opts.pitch\n            };\n        }\n\n        mapbox.plot(subplotCalcData, fullLayout, gd._promises);\n    }\n};\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldMapboxKeys = oldFullLayout._subplots[MAPBOX] || [];\n\n    for(var i = 0; i < oldMapboxKeys.length; i++) {\n        var oldMapboxKey = oldMapboxKeys[i];\n\n        if(!newFullLayout[oldMapboxKey] && !!oldFullLayout[oldMapboxKey]._subplot) {\n            oldFullLayout[oldMapboxKey]._subplot.destroy();\n        }\n    }\n};\n\nexports.toSVG = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[MAPBOX];\n    var size = fullLayout._size;\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var opts = fullLayout[subplotIds[i]];\n        var domain = opts.domain;\n        var mapbox = opts._subplot;\n\n        var imageData = mapbox.toImage('png');\n        var image = fullLayout._glimages.append('svg:image');\n\n        image.attr({\n            xmlns: xmlnsNamespaces.svg,\n            'xlink:href': imageData,\n            x: size.l + size.w * domain.x[0],\n            y: size.t + size.h * (1 - domain.y[1]),\n            width: size.w * (domain.x[1] - domain.x[0]),\n            height: size.h * (domain.y[1] - domain.y[0]),\n            preserveAspectRatio: 'none'\n        });\n\n        mapbox.destroy();\n    }\n};\n\nfunction findAccessToken(gd, mapboxIds) {\n    var fullLayout = gd._fullLayout;\n    var context = gd._context;\n\n    // special case for Mapbox Atlas users\n    if(context.mapboxAccessToken === '') return '';\n\n    // Take the first token we find in a mapbox subplot.\n    // These default to the context value but may be overridden.\n    for(var i = 0; i < mapboxIds.length; i++) {\n        var opts = fullLayout[mapboxIds[i]];\n\n        if(opts.accesstoken) {\n            return opts.accesstoken;\n        }\n    }\n\n    throw new Error(constants.noAccessTokenErrorMsg);\n}\n\nexports.updateFx = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[MAPBOX];\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var subplotObj = fullLayout[subplotIds[i]]._subplot;\n        subplotObj.updateFx(fullLayout);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
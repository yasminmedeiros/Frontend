{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Choropleth = {};\nChoropleth.attributes = require('./attributes');\nChoropleth.supplyDefaults = require('./defaults');\nChoropleth.colorbar = require('../heatmap/colorbar');\nChoropleth.calc = require('./calc');\nChoropleth.plot = require('./plot');\nChoropleth.style = require('./style').style;\nChoropleth.styleOnSelect = require('./style').styleOnSelect;\nChoropleth.hoverPoints = require('./hover');\nChoropleth.eventData = require('./event_data');\nChoropleth.selectPoints = require('./select');\nChoropleth.moduleType = 'trace';\nChoropleth.name = 'choropleth';\nChoropleth.basePlotModule = require('../../plots/geo');\nChoropleth.categories = ['geo', 'noOpacity'];\nChoropleth.meta = {\n  description: ['The data that describes the choropleth value-to-color mapping', 'is set in `z`.', 'The geographic locations corresponding to each value in `z`', 'are set in `locations`.'].join(' ')\n};\nmodule.exports = Choropleth;","map":{"version":3,"names":["Choropleth","attributes","require","supplyDefaults","colorbar","calc","plot","style","styleOnSelect","hoverPoints","eventData","selectPoints","moduleType","name","basePlotModule","categories","meta","description","join","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/choropleth/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Choropleth = {};\n\nChoropleth.attributes = require('./attributes');\nChoropleth.supplyDefaults = require('./defaults');\nChoropleth.colorbar = require('../heatmap/colorbar');\nChoropleth.calc = require('./calc');\nChoropleth.plot = require('./plot');\nChoropleth.style = require('./style').style;\nChoropleth.styleOnSelect = require('./style').styleOnSelect;\nChoropleth.hoverPoints = require('./hover');\nChoropleth.eventData = require('./event_data');\nChoropleth.selectPoints = require('./select');\n\nChoropleth.moduleType = 'trace';\nChoropleth.name = 'choropleth';\nChoropleth.basePlotModule = require('../../plots/geo');\nChoropleth.categories = ['geo', 'noOpacity'];\nChoropleth.meta = {\n    description: [\n        'The data that describes the choropleth value-to-color mapping',\n        'is set in `z`.',\n        'The geographic locations corresponding to each value in `z`',\n        'are set in `locations`.'\n    ].join(' ')\n};\n\nmodule.exports = Choropleth;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,UAAU,GAAG,CAAC,CAAC;AAEnBA,UAAU,CAACC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC/CF,UAAU,CAACG,cAAc,GAAGD,OAAO,CAAC,YAAY,CAAC;AACjDF,UAAU,CAACI,QAAQ,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACpDF,UAAU,CAACK,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AACnCF,UAAU,CAACM,IAAI,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AACnCF,UAAU,CAACO,KAAK,GAAGL,OAAO,CAAC,SAAS,CAAC,CAACK,KAAK;AAC3CP,UAAU,CAACQ,aAAa,GAAGN,OAAO,CAAC,SAAS,CAAC,CAACM,aAAa;AAC3DR,UAAU,CAACS,WAAW,GAAGP,OAAO,CAAC,SAAS,CAAC;AAC3CF,UAAU,CAACU,SAAS,GAAGR,OAAO,CAAC,cAAc,CAAC;AAC9CF,UAAU,CAACW,YAAY,GAAGT,OAAO,CAAC,UAAU,CAAC;AAE7CF,UAAU,CAACY,UAAU,GAAG,OAAO;AAC/BZ,UAAU,CAACa,IAAI,GAAG,YAAY;AAC9Bb,UAAU,CAACc,cAAc,GAAGZ,OAAO,CAAC,iBAAiB,CAAC;AACtDF,UAAU,CAACe,UAAU,GAAG,CAAC,KAAK,EAAE,WAAW,CAAC;AAC5Cf,UAAU,CAACgB,IAAI,GAAG;EACdC,WAAW,EAAE,CACT,+DAA+D,EAC/D,gBAAgB,EAChB,6DAA6D,EAC7D,yBAAyB,CAC5B,CAACC,IAAI,CAAC,GAAG;AACd,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGpB,UAAU"},"metadata":{},"sourceType":"script","externalDependencies":[]}
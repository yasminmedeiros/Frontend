{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/* global MathJax:false */\nvar d3 = require('d3');\nvar Lib = require('../lib');\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar LINE_SPACING = require('../constants/alignment').LINE_SPACING;\n\n// text converter\n\nfunction getSize(_selection, _dimension) {\n  return _selection.node().getBoundingClientRect()[_dimension];\n}\nvar FIND_TEX = /([^$]*)([$]+[^$]*[$]+)([^$]*)/;\nexports.convertToTspans = function (_context, gd, _callback) {\n  var str = _context.text();\n\n  // Until we get tex integrated more fully (so it can be used along with non-tex)\n  // allow some elements to prohibit it by attaching 'data-notex' to the original\n  var tex = !_context.attr('data-notex') && typeof MathJax !== 'undefined' && str.match(FIND_TEX);\n  var parent = d3.select(_context.node().parentNode);\n  if (parent.empty()) return;\n  var svgClass = _context.attr('class') ? _context.attr('class').split(' ')[0] : 'text';\n  svgClass += '-math';\n  parent.selectAll('svg.' + svgClass).remove();\n  parent.selectAll('g.' + svgClass + '-group').remove();\n  _context.style('display', null).attr({\n    // some callers use data-unformatted *from the <text> element* in 'cancel'\n    // so we need it here even if we're going to turn it into math\n    // these two (plus style and text-anchor attributes) form the key we're\n    // going to use for Drawing.bBox\n    'data-unformatted': str,\n    'data-math': 'N'\n  });\n  function showText() {\n    if (!parent.empty()) {\n      svgClass = _context.attr('class') + '-math';\n      parent.select('svg.' + svgClass).remove();\n    }\n    _context.text('').style('white-space', 'pre');\n    var hasLink = buildSVGText(_context.node(), str);\n    if (hasLink) {\n      // at least in Chrome, pointer-events does not seem\n      // to be honored in children of <text> elements\n      // so if we have an anchor, we have to make the\n      // whole element respond\n      _context.style('pointer-events', 'all');\n    }\n    exports.positionText(_context);\n    if (_callback) _callback.call(_context);\n  }\n  if (tex) {\n    (gd && gd._promises || []).push(new Promise(function (resolve) {\n      _context.style('display', 'none');\n      var fontSize = parseInt(_context.node().style.fontSize, 10);\n      var config = {\n        fontSize: fontSize\n      };\n      texToSVG(tex[2], config, function (_svgEl, _glyphDefs, _svgBBox) {\n        parent.selectAll('svg.' + svgClass).remove();\n        parent.selectAll('g.' + svgClass + '-group').remove();\n        var newSvg = _svgEl && _svgEl.select('svg');\n        if (!newSvg || !newSvg.node()) {\n          showText();\n          resolve();\n          return;\n        }\n        var mathjaxGroup = parent.append('g').classed(svgClass + '-group', true).attr({\n          'pointer-events': 'none',\n          'data-unformatted': str,\n          'data-math': 'Y'\n        });\n        mathjaxGroup.node().appendChild(newSvg.node());\n\n        // stitch the glyph defs\n        if (_glyphDefs && _glyphDefs.node()) {\n          newSvg.node().insertBefore(_glyphDefs.node().cloneNode(true), newSvg.node().firstChild);\n        }\n        newSvg.attr({\n          'class': svgClass,\n          height: _svgBBox.height,\n          preserveAspectRatio: 'xMinYMin meet'\n        }).style({\n          overflow: 'visible',\n          'pointer-events': 'none'\n        });\n        var fill = _context.node().style.fill || 'black';\n        newSvg.select('g').attr({\n          fill: fill,\n          stroke: fill\n        });\n        var newSvgW = getSize(newSvg, 'width');\n        var newSvgH = getSize(newSvg, 'height');\n        var newX = +_context.attr('x') - newSvgW * {\n          start: 0,\n          middle: 0.5,\n          end: 1\n        }[_context.attr('text-anchor') || 'start'];\n        // font baseline is about 1/4 fontSize below centerline\n        var textHeight = fontSize || getSize(_context, 'height');\n        var dy = -textHeight / 4;\n        if (svgClass[0] === 'y') {\n          mathjaxGroup.attr({\n            transform: 'rotate(' + [-90, +_context.attr('x'), +_context.attr('y')] + ') translate(' + [-newSvgW / 2, dy - newSvgH / 2] + ')'\n          });\n          newSvg.attr({\n            x: +_context.attr('x'),\n            y: +_context.attr('y')\n          });\n        } else if (svgClass[0] === 'l') {\n          newSvg.attr({\n            x: _context.attr('x'),\n            y: dy - newSvgH / 2\n          });\n        } else if (svgClass[0] === 'a' && svgClass.indexOf('atitle') !== 0) {\n          newSvg.attr({\n            x: 0,\n            y: dy\n          });\n        } else {\n          newSvg.attr({\n            x: newX,\n            y: +_context.attr('y') + dy - newSvgH / 2\n          });\n        }\n        if (_callback) _callback.call(_context, mathjaxGroup);\n        resolve(mathjaxGroup);\n      });\n    }));\n  } else showText();\n  return _context;\n};\n\n// MathJax\n\nvar LT_MATCH = /(<|&lt;|&#60;)/g;\nvar GT_MATCH = /(>|&gt;|&#62;)/g;\nfunction cleanEscapesForTex(s) {\n  return s.replace(LT_MATCH, '\\\\lt ').replace(GT_MATCH, '\\\\gt ');\n}\nfunction texToSVG(_texString, _config, _callback) {\n  var originalRenderer, originalConfig, originalProcessSectionDelay, tmpDiv;\n  MathJax.Hub.Queue(function () {\n    originalConfig = Lib.extendDeepAll({}, MathJax.Hub.config);\n    originalProcessSectionDelay = MathJax.Hub.processSectionDelay;\n    if (MathJax.Hub.processSectionDelay !== undefined) {\n      // MathJax 2.5+\n      MathJax.Hub.processSectionDelay = 0;\n    }\n    return MathJax.Hub.Config({\n      messageStyle: 'none',\n      tex2jax: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      displayAlign: 'left'\n    });\n  }, function () {\n    // Get original renderer\n    originalRenderer = MathJax.Hub.config.menuSettings.renderer;\n    if (originalRenderer !== 'SVG') {\n      return MathJax.Hub.setRenderer('SVG');\n    }\n  }, function () {\n    var randomID = 'math-output-' + Lib.randstr({}, 64);\n    tmpDiv = d3.select('body').append('div').attr({\n      id: randomID\n    }).style({\n      visibility: 'hidden',\n      position: 'absolute'\n    }).style({\n      'font-size': _config.fontSize + 'px'\n    }).text(cleanEscapesForTex(_texString));\n    return MathJax.Hub.Typeset(tmpDiv.node());\n  }, function () {\n    var glyphDefs = d3.select('body').select('#MathJax_SVG_glyphs');\n    if (tmpDiv.select('.MathJax_SVG').empty() || !tmpDiv.select('svg').node()) {\n      Lib.log('There was an error in the tex syntax.', _texString);\n      _callback();\n    } else {\n      var svgBBox = tmpDiv.select('svg').node().getBoundingClientRect();\n      _callback(tmpDiv.select('.MathJax_SVG'), glyphDefs, svgBBox);\n    }\n    tmpDiv.remove();\n    if (originalRenderer !== 'SVG') {\n      return MathJax.Hub.setRenderer(originalRenderer);\n    }\n  }, function () {\n    if (originalProcessSectionDelay !== undefined) {\n      MathJax.Hub.processSectionDelay = originalProcessSectionDelay;\n    }\n    return MathJax.Hub.Config(originalConfig);\n  });\n}\nvar TAG_STYLES = {\n  // would like to use baseline-shift for sub/sup but FF doesn't support it\n  // so we need to use dy along with the uber hacky shift-back-to\n  // baseline below\n  sup: 'font-size:70%',\n  sub: 'font-size:70%',\n  b: 'font-weight:bold',\n  i: 'font-style:italic',\n  a: 'cursor:pointer',\n  span: '',\n  em: 'font-style:italic;font-weight:bold'\n};\n\n// baseline shifts for sub and sup\nvar SHIFT_DY = {\n  sub: '0.3em',\n  sup: '-0.6em'\n};\n// reset baseline by adding a tspan (empty except for a zero-width space)\n// with dy of -70% * SHIFT_DY (because font-size=70%)\nvar RESET_DY = {\n  sub: '-0.21em',\n  sup: '0.42em'\n};\nvar ZERO_WIDTH_SPACE = \"\\u200B\";\n\n/*\n * Whitelist of protocols in user-supplied urls. Mostly we want to avoid javascript\n * and related attack vectors. The empty items are there for IE, that in various\n * versions treats relative paths as having different flavors of no protocol, while\n * other browsers have these explicitly inherit the protocol of the page they're in.\n */\nvar PROTOCOLS = ['http:', 'https:', 'mailto:', '', undefined, ':'];\nvar NEWLINES = /(\\r\\n?|\\n)/g;\nvar SPLIT_TAGS = /(<[^<>]*>)/;\nvar ONE_TAG = /<(\\/?)([^ >]*)(\\s+(.*))?>/i;\nvar BR_TAG = /<br(\\s+.*)?>/i;\n\n/*\n * style and href: pull them out of either single or double quotes. Also\n * - target: (_blank|_self|_parent|_top|framename)\n *     note that you can't use target to get a popup but if you use popup,\n *     a `framename` will be passed along as the name of the popup window.\n *     per the spec, cannot contain whitespace.\n *     for backward compatibility we default to '_blank'\n * - popup: a custom one for us to enable popup (new window) links. String\n *     for window.open -> strWindowFeatures, like 'menubar=yes,width=500,height=550'\n *     note that at least in Chrome, you need to give at least one property\n *     in this string or the page will open in a new tab anyway. We follow this\n *     convention and will not make a popup if this string is empty.\n *     per the spec, cannot contain whitespace.\n *\n * Because we hack in other attributes with style (sub & sup), drop any trailing\n * semicolon in user-supplied styles so we can consistently append the tag-dependent style\n *\n * These are for tag attributes; Chrome anyway will convert entities in\n * attribute values, but not in attribute names\n * you can test this by for example:\n * > p = document.createElement('p')\n * > p.innerHTML = '<span styl&#x65;=\"font-color:r&#x65;d;\">Hi</span>'\n * > p.innerHTML\n * <- '<span styl&#x65;=\"font-color:red;\">Hi</span>'\n */\nvar STYLEMATCH = /(^|[\\s\"'])style\\s*=\\s*(\"([^\"]*);?\"|'([^']*);?')/i;\nvar HREFMATCH = /(^|[\\s\"'])href\\s*=\\s*(\"([^\"]*)\"|'([^']*)')/i;\nvar TARGETMATCH = /(^|[\\s\"'])target\\s*=\\s*(\"([^\"\\s]*)\"|'([^'\\s]*)')/i;\nvar POPUPMATCH = /(^|[\\s\"'])popup\\s*=\\s*(\"([\\w=,]*)\"|'([\\w=,]*)')/i;\n\n// dedicated matcher for these quoted regexes, that can return their results\n// in two different places\nfunction getQuotedMatch(_str, re) {\n  if (!_str) return null;\n  var match = _str.match(re);\n  var result = match && (match[3] || match[4]);\n  return result && convertEntities(result);\n}\nvar COLORMATCH = /(^|;)\\s*color:/;\n\n/**\n * Strip string of tags\n *\n * @param {string} _str : input string\n * @param {object} opts :\n * - maxLen {number} max length of output string\n * - allowedTags {array} list of pseudo-html tags to NOT strip\n * @return {string}\n */\nexports.plainText = function (_str, opts) {\n  opts = opts || {};\n  var len = opts.len !== undefined && opts.len !== -1 ? opts.len : Infinity;\n  var allowedTags = opts.allowedTags !== undefined ? opts.allowedTags : ['br'];\n  var ellipsis = '...';\n  var eLen = ellipsis.length;\n  var oldParts = _str.split(SPLIT_TAGS);\n  var newParts = [];\n  var prevTag = '';\n  var l = 0;\n  for (var i = 0; i < oldParts.length; i++) {\n    var p = oldParts[i];\n    var match = p.match(ONE_TAG);\n    var tagType = match && match[2].toLowerCase();\n    if (tagType) {\n      // N.B. tags do not count towards string length\n      if (allowedTags.indexOf(tagType) !== -1) {\n        newParts.push(p);\n        prevTag = tagType;\n      }\n    } else {\n      var pLen = p.length;\n      if (l + pLen < len) {\n        newParts.push(p);\n        l += pLen;\n      } else if (l < len) {\n        var pLen2 = len - l;\n        if (prevTag && (prevTag !== 'br' || pLen2 <= eLen || pLen <= eLen)) {\n          newParts.pop();\n        }\n        if (len > eLen) {\n          newParts.push(p.substr(0, pLen2 - eLen) + ellipsis);\n        } else {\n          newParts.push(p.substr(0, pLen2));\n        }\n        break;\n      }\n      prevTag = '';\n    }\n  }\n  return newParts.join('');\n};\n\n/*\n * N.B. HTML entities are listed without the leading '&' and trailing ';'\n * https://www.freeformatter.com/html-entities.html\n *\n * FWIW if we wanted to support the full set, it has 2261 entries:\n * https://www.w3.org/TR/html5/entities.json\n * though I notice that some of these are duplicates and/or are missing \";\"\n * eg: \"&amp;\", \"&amp\", \"&AMP;\", and \"&AMP\" all map to \"&\"\n * We no longer need to include numeric entities here, these are now handled\n * by String.fromCodePoint/fromCharCode\n *\n * Anyway the only ones that are really important to allow are the HTML special\n * chars <, >, and &, because these ones can trigger special processing if not\n * replaced by the corresponding entity.\n */\nvar entityToUnicode = {\n  mu: 'μ',\n  amp: '&',\n  lt: '<',\n  gt: '>',\n  nbsp: ' ',\n  times: '×',\n  plusmn: '±',\n  deg: '°'\n};\n\n// NOTE: in general entities can contain uppercase too (so [a-zA-Z]) but all the\n// ones we support use only lowercase. If we ever change that, update the regex.\nvar ENTITY_MATCH = /&(#\\d+|#x[\\da-fA-F]+|[a-z]+);/g;\nfunction convertEntities(_str) {\n  return _str.replace(ENTITY_MATCH, function (fullMatch, innerMatch) {\n    var outChar;\n    if (innerMatch.charAt(0) === '#') {\n      // cannot use String.fromCodePoint in IE\n      outChar = fromCodePoint(innerMatch.charAt(1) === 'x' ? parseInt(innerMatch.substr(2), 16) : parseInt(innerMatch.substr(1), 10));\n    } else outChar = entityToUnicode[innerMatch];\n\n    // as in regular HTML, if we didn't decode the entity just\n    // leave the raw text in place.\n    return outChar || fullMatch;\n  });\n}\nexports.convertEntities = convertEntities;\nfunction fromCodePoint(code) {\n  // Don't allow overflow. In Chrome this turns into � but I feel like it's\n  // more useful to just not convert it at all.\n  if (code > 0x10FFFF) return;\n  var stringFromCodePoint = String.fromCodePoint;\n  if (stringFromCodePoint) return stringFromCodePoint(code);\n\n  // IE doesn't have String.fromCodePoint\n  // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\n  var stringFromCharCode = String.fromCharCode;\n  if (code <= 0xFFFF) return stringFromCharCode(code);\n  return stringFromCharCode((code >> 10) + 0xD7C0, code % 0x400 + 0xDC00);\n}\n\n/*\n * buildSVGText: convert our pseudo-html into SVG tspan elements, and attach these\n * to containerNode\n *\n * @param {svg text element} containerNode: the <text> node to insert this text into\n * @param {string} str: the pseudo-html string to convert to svg\n *\n * @returns {bool}: does the result contain any links? We need to handle the text element\n *   somewhat differently if it does, so just keep track of this when it happens.\n */\nfunction buildSVGText(containerNode, str) {\n  /*\n   * Normalize behavior between IE and others wrt newlines and whitespace:pre\n   * this combination makes IE barf https://github.com/plotly/plotly.js/issues/746\n   * Chrome and FF display \\n, \\r, or \\r\\n as a space in this mode.\n   * I feel like at some point we turned these into <br> but currently we don't so\n   * I'm just going to cement what we do now in Chrome and FF\n   */\n  str = str.replace(NEWLINES, ' ');\n  var hasLink = false;\n\n  // as we're building the text, keep track of what elements we're nested inside\n  // nodeStack will be an array of {node, type, style, href, target, popup}\n  // where only type: 'a' gets the last 3 and node is only added when it's created\n  var nodeStack = [];\n  var currentNode;\n  var currentLine = -1;\n  function newLine() {\n    currentLine++;\n    var lineNode = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n    d3.select(lineNode).attr({\n      class: 'line',\n      dy: currentLine * LINE_SPACING + 'em'\n    });\n    containerNode.appendChild(lineNode);\n    currentNode = lineNode;\n    var oldNodeStack = nodeStack;\n    nodeStack = [{\n      node: lineNode\n    }];\n    if (oldNodeStack.length > 1) {\n      for (var i = 1; i < oldNodeStack.length; i++) {\n        enterNode(oldNodeStack[i]);\n      }\n    }\n  }\n  function enterNode(nodeSpec) {\n    var type = nodeSpec.type;\n    var nodeAttrs = {};\n    var nodeType;\n    if (type === 'a') {\n      nodeType = 'a';\n      var target = nodeSpec.target;\n      var href = nodeSpec.href;\n      var popup = nodeSpec.popup;\n      if (href) {\n        nodeAttrs = {\n          'xlink:xlink:show': target === '_blank' || target.charAt(0) !== '_' ? 'new' : 'replace',\n          target: target,\n          'xlink:xlink:href': href\n        };\n        if (popup) {\n          // security: href and target are not inserted as code but\n          // as attributes. popup is, but limited to /[A-Za-z0-9_=,]/\n          nodeAttrs.onclick = 'window.open(this.href.baseVal,this.target.baseVal,\"' + popup + '\");return false;';\n        }\n      }\n    } else nodeType = 'tspan';\n    if (nodeSpec.style) nodeAttrs.style = nodeSpec.style;\n    var newNode = document.createElementNS(xmlnsNamespaces.svg, nodeType);\n    if (type === 'sup' || type === 'sub') {\n      addTextNode(currentNode, ZERO_WIDTH_SPACE);\n      currentNode.appendChild(newNode);\n      var resetter = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n      addTextNode(resetter, ZERO_WIDTH_SPACE);\n      d3.select(resetter).attr('dy', RESET_DY[type]);\n      nodeAttrs.dy = SHIFT_DY[type];\n      currentNode.appendChild(newNode);\n      currentNode.appendChild(resetter);\n    } else {\n      currentNode.appendChild(newNode);\n    }\n    d3.select(newNode).attr(nodeAttrs);\n    currentNode = nodeSpec.node = newNode;\n    nodeStack.push(nodeSpec);\n  }\n  function addTextNode(node, text) {\n    node.appendChild(document.createTextNode(text));\n  }\n  function exitNode(type) {\n    // A bare closing tag can't close the root node. If we encounter this it\n    // means there's an extra closing tag that can just be ignored:\n    if (nodeStack.length === 1) {\n      Lib.log('Ignoring unexpected end tag </' + type + '>.', str);\n      return;\n    }\n    var innerNode = nodeStack.pop();\n    if (type !== innerNode.type) {\n      Lib.log('Start tag <' + innerNode.type + '> doesnt match end tag <' + type + '>. Pretending it did match.', str);\n    }\n    currentNode = nodeStack[nodeStack.length - 1].node;\n  }\n  var hasLines = BR_TAG.test(str);\n  if (hasLines) newLine();else {\n    currentNode = containerNode;\n    nodeStack = [{\n      node: containerNode\n    }];\n  }\n  var parts = str.split(SPLIT_TAGS);\n  for (var i = 0; i < parts.length; i++) {\n    var parti = parts[i];\n    var match = parti.match(ONE_TAG);\n    var tagType = match && match[2].toLowerCase();\n    var tagStyle = TAG_STYLES[tagType];\n    if (tagType === 'br') {\n      newLine();\n    } else if (tagStyle === undefined) {\n      addTextNode(currentNode, convertEntities(parti));\n    } else {\n      // tag - open or close\n      if (match[1]) {\n        exitNode(tagType);\n      } else {\n        var extra = match[4];\n        var nodeSpec = {\n          type: tagType\n        };\n\n        // now add style, from both the tag name and any extra css\n        // Most of the svg css that users will care about is just like html,\n        // but font color is different (uses fill). Let our users ignore this.\n        var css = getQuotedMatch(extra, STYLEMATCH);\n        if (css) {\n          css = css.replace(COLORMATCH, '$1 fill:');\n          if (tagStyle) css += ';' + tagStyle;\n        } else if (tagStyle) css = tagStyle;\n        if (css) nodeSpec.style = css;\n        if (tagType === 'a') {\n          hasLink = true;\n          var href = getQuotedMatch(extra, HREFMATCH);\n          if (href) {\n            // check safe protocols\n            var dummyAnchor = document.createElement('a');\n            dummyAnchor.href = href;\n            if (PROTOCOLS.indexOf(dummyAnchor.protocol) !== -1) {\n              // Decode href to allow both already encoded and not encoded\n              // URIs. Without decoding prior encoding, an already encoded\n              // URI would be encoded twice producing a semantically different URI.\n              nodeSpec.href = encodeURI(decodeURI(href));\n              nodeSpec.target = getQuotedMatch(extra, TARGETMATCH) || '_blank';\n              nodeSpec.popup = getQuotedMatch(extra, POPUPMATCH);\n            }\n          }\n        }\n        enterNode(nodeSpec);\n      }\n    }\n  }\n  return hasLink;\n}\nexports.lineCount = function lineCount(s) {\n  return s.selectAll('tspan.line').size() || 1;\n};\nexports.positionText = function positionText(s, x, y) {\n  return s.each(function () {\n    var text = d3.select(this);\n    function setOrGet(attr, val) {\n      if (val === undefined) {\n        val = text.attr(attr);\n        if (val === null) {\n          text.attr(attr, 0);\n          val = 0;\n        }\n      } else text.attr(attr, val);\n      return val;\n    }\n    var thisX = setOrGet('x', x);\n    var thisY = setOrGet('y', y);\n    if (this.nodeName === 'text') {\n      text.selectAll('tspan.line').attr({\n        x: thisX,\n        y: thisY\n      });\n    }\n  });\n};\nfunction alignHTMLWith(_base, container, options) {\n  var alignH = options.horizontalAlign;\n  var alignV = options.verticalAlign || 'top';\n  var bRect = _base.node().getBoundingClientRect();\n  var cRect = container.node().getBoundingClientRect();\n  var thisRect;\n  var getTop;\n  var getLeft;\n  if (alignV === 'bottom') {\n    getTop = function getTop() {\n      return bRect.bottom - thisRect.height;\n    };\n  } else if (alignV === 'middle') {\n    getTop = function getTop() {\n      return bRect.top + (bRect.height - thisRect.height) / 2;\n    };\n  } else {\n    // default: top\n    getTop = function getTop() {\n      return bRect.top;\n    };\n  }\n  if (alignH === 'right') {\n    getLeft = function getLeft() {\n      return bRect.right - thisRect.width;\n    };\n  } else if (alignH === 'center') {\n    getLeft = function getLeft() {\n      return bRect.left + (bRect.width - thisRect.width) / 2;\n    };\n  } else {\n    // default: left\n    getLeft = function getLeft() {\n      return bRect.left;\n    };\n  }\n  return function () {\n    thisRect = this.node().getBoundingClientRect();\n    this.style({\n      top: getTop() - cRect.top + 'px',\n      left: getLeft() - cRect.left + 'px',\n      'z-index': 1000\n    });\n    return this;\n  };\n}\n\n/*\n * Editable title\n * @param {d3.selection} context: the element being edited. Normally text,\n *   but if it isn't, you should provide the styling options\n * @param {object} options:\n *   @param {div} options.gd: graphDiv\n *   @param {d3.selection} options.delegate: item to bind events to if not this\n *   @param {boolean} options.immediate: start editing now (true) or on click (false, default)\n *   @param {string} options.fill: font color if not as shown\n *   @param {string} options.background: background color if not as shown\n *   @param {string} options.text: initial text, if not as shown\n *   @param {string} options.horizontalAlign: alignment of the edit box wrt. the bound element\n *   @param {string} options.verticalAlign: alignment of the edit box wrt. the bound element\n */\n\nexports.makeEditable = function (context, options) {\n  var gd = options.gd;\n  var _delegate = options.delegate;\n  var dispatch = d3.dispatch('edit', 'input', 'cancel');\n  var handlerElement = _delegate || context;\n  context.style({\n    'pointer-events': _delegate ? 'none' : 'all'\n  });\n  if (context.size() !== 1) throw new Error('boo');\n  function handleClick() {\n    appendEditable();\n    context.style({\n      opacity: 0\n    });\n    // also hide any mathjax svg\n    var svgClass = handlerElement.attr('class');\n    var mathjaxClass;\n    if (svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';else mathjaxClass = '[class*=-math-group]';\n    if (mathjaxClass) {\n      d3.select(context.node().parentNode).select(mathjaxClass).style({\n        opacity: 0\n      });\n    }\n  }\n  function selectElementContents(_el) {\n    var el = _el.node();\n    var range = document.createRange();\n    range.selectNodeContents(el);\n    var sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n    el.focus();\n  }\n  function appendEditable() {\n    var plotDiv = d3.select(gd);\n    var container = plotDiv.select('.svg-container');\n    var div = container.append('div');\n    var cStyle = context.node().style;\n    var fontSize = parseFloat(cStyle.fontSize || 12);\n    var initialText = options.text;\n    if (initialText === undefined) initialText = context.attr('data-unformatted');\n    div.classed('plugin-editable editable', true).style({\n      position: 'absolute',\n      'font-family': cStyle.fontFamily || 'Arial',\n      'font-size': fontSize,\n      color: options.fill || cStyle.fill || 'black',\n      opacity: 1,\n      'background-color': options.background || 'transparent',\n      outline: '#ffffff33 1px solid',\n      margin: [-fontSize / 8 + 1, 0, 0, -1].join('px ') + 'px',\n      padding: '0',\n      'box-sizing': 'border-box'\n    }).attr({\n      contenteditable: true\n    }).text(initialText).call(alignHTMLWith(context, container, options)).on('blur', function () {\n      gd._editing = false;\n      context.text(this.textContent).style({\n        opacity: 1\n      });\n      var svgClass = d3.select(this).attr('class');\n      var mathjaxClass;\n      if (svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';else mathjaxClass = '[class*=-math-group]';\n      if (mathjaxClass) {\n        d3.select(context.node().parentNode).select(mathjaxClass).style({\n          opacity: 0\n        });\n      }\n      var text = this.textContent;\n      d3.select(this).transition().duration(0).remove();\n      d3.select(document).on('mouseup', null);\n      dispatch.edit.call(context, text);\n    }).on('focus', function () {\n      var editDiv = this;\n      gd._editing = true;\n      d3.select(document).on('mouseup', function () {\n        if (d3.event.target === editDiv) return false;\n        if (document.activeElement === div.node()) div.node().blur();\n      });\n    }).on('keyup', function () {\n      if (d3.event.which === 27) {\n        gd._editing = false;\n        context.style({\n          opacity: 1\n        });\n        d3.select(this).style({\n          opacity: 0\n        }).on('blur', function () {\n          return false;\n        }).transition().remove();\n        dispatch.cancel.call(context, this.textContent);\n      } else {\n        dispatch.input.call(context, this.textContent);\n        d3.select(this).call(alignHTMLWith(context, container, options));\n      }\n    }).on('keydown', function () {\n      if (d3.event.which === 13) this.blur();\n    }).call(selectElementContents);\n  }\n  if (options.immediate) handleClick();else handlerElement.on('click', handleClick);\n  return d3.rebind(context, dispatch, 'on');\n};","map":{"version":3,"names":["d3","require","Lib","xmlnsNamespaces","LINE_SPACING","getSize","_selection","_dimension","node","getBoundingClientRect","FIND_TEX","exports","convertToTspans","_context","gd","_callback","str","text","tex","attr","MathJax","match","parent","select","parentNode","empty","svgClass","split","selectAll","remove","style","showText","hasLink","buildSVGText","positionText","call","_promises","push","Promise","resolve","fontSize","parseInt","config","texToSVG","_svgEl","_glyphDefs","_svgBBox","newSvg","mathjaxGroup","append","classed","appendChild","insertBefore","cloneNode","firstChild","height","preserveAspectRatio","overflow","fill","stroke","newSvgW","newSvgH","newX","start","middle","end","textHeight","dy","transform","x","y","indexOf","LT_MATCH","GT_MATCH","cleanEscapesForTex","s","replace","_texString","_config","originalRenderer","originalConfig","originalProcessSectionDelay","tmpDiv","Hub","Queue","extendDeepAll","processSectionDelay","undefined","Config","messageStyle","tex2jax","inlineMath","displayAlign","menuSettings","renderer","setRenderer","randomID","randstr","id","visibility","position","Typeset","glyphDefs","log","svgBBox","TAG_STYLES","sup","sub","b","i","a","span","em","SHIFT_DY","RESET_DY","ZERO_WIDTH_SPACE","PROTOCOLS","NEWLINES","SPLIT_TAGS","ONE_TAG","BR_TAG","STYLEMATCH","HREFMATCH","TARGETMATCH","POPUPMATCH","getQuotedMatch","_str","re","result","convertEntities","COLORMATCH","plainText","opts","len","Infinity","allowedTags","ellipsis","eLen","length","oldParts","newParts","prevTag","l","p","tagType","toLowerCase","pLen","pLen2","pop","substr","join","entityToUnicode","mu","amp","lt","gt","nbsp","times","plusmn","deg","ENTITY_MATCH","fullMatch","innerMatch","outChar","charAt","fromCodePoint","code","stringFromCodePoint","String","stringFromCharCode","fromCharCode","containerNode","nodeStack","currentNode","currentLine","newLine","lineNode","document","createElementNS","svg","class","oldNodeStack","enterNode","nodeSpec","type","nodeAttrs","nodeType","target","href","popup","onclick","newNode","addTextNode","resetter","createTextNode","exitNode","innerNode","hasLines","test","parts","parti","tagStyle","extra","css","dummyAnchor","createElement","protocol","encodeURI","decodeURI","lineCount","size","each","setOrGet","val","thisX","thisY","nodeName","alignHTMLWith","_base","container","options","alignH","horizontalAlign","alignV","verticalAlign","bRect","cRect","thisRect","getTop","getLeft","bottom","top","right","width","left","makeEditable","context","_delegate","delegate","dispatch","handlerElement","Error","handleClick","appendEditable","opacity","mathjaxClass","selectElementContents","_el","el","range","createRange","selectNodeContents","sel","window","getSelection","removeAllRanges","addRange","focus","plotDiv","div","cStyle","parseFloat","initialText","fontFamily","color","background","outline","margin","padding","contenteditable","on","_editing","textContent","transition","duration","edit","editDiv","event","activeElement","blur","which","cancel","input","immediate","rebind"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/lib/svg_text_utils.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n/* global MathJax:false */\n\nvar d3 = require('d3');\n\nvar Lib = require('../lib');\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar LINE_SPACING = require('../constants/alignment').LINE_SPACING;\n\n// text converter\n\nfunction getSize(_selection, _dimension) {\n    return _selection.node().getBoundingClientRect()[_dimension];\n}\n\nvar FIND_TEX = /([^$]*)([$]+[^$]*[$]+)([^$]*)/;\n\nexports.convertToTspans = function(_context, gd, _callback) {\n    var str = _context.text();\n\n    // Until we get tex integrated more fully (so it can be used along with non-tex)\n    // allow some elements to prohibit it by attaching 'data-notex' to the original\n    var tex = (!_context.attr('data-notex')) &&\n        (typeof MathJax !== 'undefined') &&\n        str.match(FIND_TEX);\n\n    var parent = d3.select(_context.node().parentNode);\n    if(parent.empty()) return;\n    var svgClass = (_context.attr('class')) ? _context.attr('class').split(' ')[0] : 'text';\n    svgClass += '-math';\n    parent.selectAll('svg.' + svgClass).remove();\n    parent.selectAll('g.' + svgClass + '-group').remove();\n    _context.style('display', null)\n        .attr({\n            // some callers use data-unformatted *from the <text> element* in 'cancel'\n            // so we need it here even if we're going to turn it into math\n            // these two (plus style and text-anchor attributes) form the key we're\n            // going to use for Drawing.bBox\n            'data-unformatted': str,\n            'data-math': 'N'\n        });\n\n    function showText() {\n        if(!parent.empty()) {\n            svgClass = _context.attr('class') + '-math';\n            parent.select('svg.' + svgClass).remove();\n        }\n        _context.text('')\n            .style('white-space', 'pre');\n\n        var hasLink = buildSVGText(_context.node(), str);\n\n        if(hasLink) {\n            // at least in Chrome, pointer-events does not seem\n            // to be honored in children of <text> elements\n            // so if we have an anchor, we have to make the\n            // whole element respond\n            _context.style('pointer-events', 'all');\n        }\n\n        exports.positionText(_context);\n\n        if(_callback) _callback.call(_context);\n    }\n\n    if(tex) {\n        ((gd && gd._promises) || []).push(new Promise(function(resolve) {\n            _context.style('display', 'none');\n            var fontSize = parseInt(_context.node().style.fontSize, 10);\n            var config = {fontSize: fontSize};\n\n            texToSVG(tex[2], config, function(_svgEl, _glyphDefs, _svgBBox) {\n                parent.selectAll('svg.' + svgClass).remove();\n                parent.selectAll('g.' + svgClass + '-group').remove();\n\n                var newSvg = _svgEl && _svgEl.select('svg');\n                if(!newSvg || !newSvg.node()) {\n                    showText();\n                    resolve();\n                    return;\n                }\n\n                var mathjaxGroup = parent.append('g')\n                    .classed(svgClass + '-group', true)\n                    .attr({\n                        'pointer-events': 'none',\n                        'data-unformatted': str,\n                        'data-math': 'Y'\n                    });\n\n                mathjaxGroup.node().appendChild(newSvg.node());\n\n                // stitch the glyph defs\n                if(_glyphDefs && _glyphDefs.node()) {\n                    newSvg.node().insertBefore(_glyphDefs.node().cloneNode(true),\n                                               newSvg.node().firstChild);\n                }\n\n                newSvg.attr({\n                    'class': svgClass,\n                    height: _svgBBox.height,\n                    preserveAspectRatio: 'xMinYMin meet'\n                })\n                .style({overflow: 'visible', 'pointer-events': 'none'});\n\n                var fill = _context.node().style.fill || 'black';\n                newSvg.select('g').attr({fill: fill, stroke: fill});\n\n                var newSvgW = getSize(newSvg, 'width');\n                var newSvgH = getSize(newSvg, 'height');\n                var newX = +_context.attr('x') - newSvgW *\n                    {start: 0, middle: 0.5, end: 1}[_context.attr('text-anchor') || 'start'];\n                // font baseline is about 1/4 fontSize below centerline\n                var textHeight = fontSize || getSize(_context, 'height');\n                var dy = -textHeight / 4;\n\n                if(svgClass[0] === 'y') {\n                    mathjaxGroup.attr({\n                        transform: 'rotate(' + [-90, +_context.attr('x'), +_context.attr('y')] +\n                        ') translate(' + [-newSvgW / 2, dy - newSvgH / 2] + ')'\n                    });\n                    newSvg.attr({x: +_context.attr('x'), y: +_context.attr('y')});\n                }\n                else if(svgClass[0] === 'l') {\n                    newSvg.attr({x: _context.attr('x'), y: dy - (newSvgH / 2)});\n                }\n                else if(svgClass[0] === 'a' && svgClass.indexOf('atitle') !== 0) {\n                    newSvg.attr({x: 0, y: dy});\n                }\n                else {\n                    newSvg.attr({x: newX, y: (+_context.attr('y') + dy - newSvgH / 2)});\n                }\n\n                if(_callback) _callback.call(_context, mathjaxGroup);\n                resolve(mathjaxGroup);\n            });\n        }));\n    }\n    else showText();\n\n    return _context;\n};\n\n\n// MathJax\n\nvar LT_MATCH = /(<|&lt;|&#60;)/g;\nvar GT_MATCH = /(>|&gt;|&#62;)/g;\n\nfunction cleanEscapesForTex(s) {\n    return s.replace(LT_MATCH, '\\\\lt ')\n        .replace(GT_MATCH, '\\\\gt ');\n}\n\nfunction texToSVG(_texString, _config, _callback) {\n\n    var originalRenderer,\n        originalConfig,\n        originalProcessSectionDelay,\n        tmpDiv;\n\n    MathJax.Hub.Queue(\n    function() {\n        originalConfig = Lib.extendDeepAll({}, MathJax.Hub.config);\n\n        originalProcessSectionDelay = MathJax.Hub.processSectionDelay;\n        if(MathJax.Hub.processSectionDelay !== undefined) {\n            // MathJax 2.5+\n            MathJax.Hub.processSectionDelay = 0;\n        }\n\n        return MathJax.Hub.Config({\n            messageStyle: 'none',\n            tex2jax: {\n                inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n            },\n            displayAlign: 'left',\n        });\n    },\n    function() {\n        // Get original renderer\n        originalRenderer = MathJax.Hub.config.menuSettings.renderer;\n        if(originalRenderer !== 'SVG') {\n            return MathJax.Hub.setRenderer('SVG');\n        }\n    },\n    function() {\n        var randomID = 'math-output-' + Lib.randstr({}, 64);\n        tmpDiv = d3.select('body').append('div')\n            .attr({id: randomID})\n            .style({visibility: 'hidden', position: 'absolute'})\n            .style({'font-size': _config.fontSize + 'px'})\n            .text(cleanEscapesForTex(_texString));\n\n        return MathJax.Hub.Typeset(tmpDiv.node());\n    },\n    function() {\n        var glyphDefs = d3.select('body').select('#MathJax_SVG_glyphs');\n\n        if(tmpDiv.select('.MathJax_SVG').empty() || !tmpDiv.select('svg').node()) {\n            Lib.log('There was an error in the tex syntax.', _texString);\n            _callback();\n        }\n        else {\n            var svgBBox = tmpDiv.select('svg').node().getBoundingClientRect();\n            _callback(tmpDiv.select('.MathJax_SVG'), glyphDefs, svgBBox);\n        }\n\n        tmpDiv.remove();\n\n        if(originalRenderer !== 'SVG') {\n            return MathJax.Hub.setRenderer(originalRenderer);\n        }\n    },\n    function() {\n        if(originalProcessSectionDelay !== undefined) {\n            MathJax.Hub.processSectionDelay = originalProcessSectionDelay;\n        }\n        return MathJax.Hub.Config(originalConfig);\n    });\n}\n\nvar TAG_STYLES = {\n    // would like to use baseline-shift for sub/sup but FF doesn't support it\n    // so we need to use dy along with the uber hacky shift-back-to\n    // baseline below\n    sup: 'font-size:70%',\n    sub: 'font-size:70%',\n    b: 'font-weight:bold',\n    i: 'font-style:italic',\n    a: 'cursor:pointer',\n    span: '',\n    em: 'font-style:italic;font-weight:bold'\n};\n\n// baseline shifts for sub and sup\nvar SHIFT_DY = {\n    sub: '0.3em',\n    sup: '-0.6em'\n};\n// reset baseline by adding a tspan (empty except for a zero-width space)\n// with dy of -70% * SHIFT_DY (because font-size=70%)\nvar RESET_DY = {\n    sub: '-0.21em',\n    sup: '0.42em'\n};\nvar ZERO_WIDTH_SPACE = '\\u200b';\n\n/*\n * Whitelist of protocols in user-supplied urls. Mostly we want to avoid javascript\n * and related attack vectors. The empty items are there for IE, that in various\n * versions treats relative paths as having different flavors of no protocol, while\n * other browsers have these explicitly inherit the protocol of the page they're in.\n */\nvar PROTOCOLS = ['http:', 'https:', 'mailto:', '', undefined, ':'];\n\nvar NEWLINES = /(\\r\\n?|\\n)/g;\n\nvar SPLIT_TAGS = /(<[^<>]*>)/;\n\nvar ONE_TAG = /<(\\/?)([^ >]*)(\\s+(.*))?>/i;\n\nvar BR_TAG = /<br(\\s+.*)?>/i;\n\n/*\n * style and href: pull them out of either single or double quotes. Also\n * - target: (_blank|_self|_parent|_top|framename)\n *     note that you can't use target to get a popup but if you use popup,\n *     a `framename` will be passed along as the name of the popup window.\n *     per the spec, cannot contain whitespace.\n *     for backward compatibility we default to '_blank'\n * - popup: a custom one for us to enable popup (new window) links. String\n *     for window.open -> strWindowFeatures, like 'menubar=yes,width=500,height=550'\n *     note that at least in Chrome, you need to give at least one property\n *     in this string or the page will open in a new tab anyway. We follow this\n *     convention and will not make a popup if this string is empty.\n *     per the spec, cannot contain whitespace.\n *\n * Because we hack in other attributes with style (sub & sup), drop any trailing\n * semicolon in user-supplied styles so we can consistently append the tag-dependent style\n *\n * These are for tag attributes; Chrome anyway will convert entities in\n * attribute values, but not in attribute names\n * you can test this by for example:\n * > p = document.createElement('p')\n * > p.innerHTML = '<span styl&#x65;=\"font-color:r&#x65;d;\">Hi</span>'\n * > p.innerHTML\n * <- '<span styl&#x65;=\"font-color:red;\">Hi</span>'\n */\nvar STYLEMATCH = /(^|[\\s\"'])style\\s*=\\s*(\"([^\"]*);?\"|'([^']*);?')/i;\nvar HREFMATCH = /(^|[\\s\"'])href\\s*=\\s*(\"([^\"]*)\"|'([^']*)')/i;\nvar TARGETMATCH = /(^|[\\s\"'])target\\s*=\\s*(\"([^\"\\s]*)\"|'([^'\\s]*)')/i;\nvar POPUPMATCH = /(^|[\\s\"'])popup\\s*=\\s*(\"([\\w=,]*)\"|'([\\w=,]*)')/i;\n\n// dedicated matcher for these quoted regexes, that can return their results\n// in two different places\nfunction getQuotedMatch(_str, re) {\n    if(!_str) return null;\n    var match = _str.match(re);\n    var result = match && (match[3] || match[4]);\n    return result && convertEntities(result);\n}\n\nvar COLORMATCH = /(^|;)\\s*color:/;\n\n/**\n * Strip string of tags\n *\n * @param {string} _str : input string\n * @param {object} opts :\n * - maxLen {number} max length of output string\n * - allowedTags {array} list of pseudo-html tags to NOT strip\n * @return {string}\n */\nexports.plainText = function(_str, opts) {\n    opts = opts || {};\n\n    var len = (opts.len !== undefined && opts.len !== -1) ? opts.len : Infinity;\n    var allowedTags = opts.allowedTags !== undefined ? opts.allowedTags : ['br'];\n\n    var ellipsis = '...';\n    var eLen = ellipsis.length;\n\n    var oldParts = _str.split(SPLIT_TAGS);\n    var newParts = [];\n    var prevTag = '';\n    var l = 0;\n\n    for(var i = 0; i < oldParts.length; i++) {\n        var p = oldParts[i];\n        var match = p.match(ONE_TAG);\n        var tagType = match && match[2].toLowerCase();\n\n        if(tagType) {\n            // N.B. tags do not count towards string length\n            if(allowedTags.indexOf(tagType) !== -1) {\n                newParts.push(p);\n                prevTag = tagType;\n            }\n        } else {\n            var pLen = p.length;\n\n            if((l + pLen) < len) {\n                newParts.push(p);\n                l += pLen;\n            } else if(l < len) {\n                var pLen2 = len - l;\n\n                if(prevTag && (prevTag !== 'br' || pLen2 <= eLen || pLen <= eLen)) {\n                    newParts.pop();\n                }\n\n                if(len > eLen) {\n                    newParts.push(p.substr(0, pLen2 - eLen) + ellipsis);\n                } else {\n                    newParts.push(p.substr(0, pLen2));\n                }\n                break;\n            }\n\n            prevTag = '';\n        }\n    }\n\n    return newParts.join('');\n};\n\n/*\n * N.B. HTML entities are listed without the leading '&' and trailing ';'\n * https://www.freeformatter.com/html-entities.html\n *\n * FWIW if we wanted to support the full set, it has 2261 entries:\n * https://www.w3.org/TR/html5/entities.json\n * though I notice that some of these are duplicates and/or are missing \";\"\n * eg: \"&amp;\", \"&amp\", \"&AMP;\", and \"&AMP\" all map to \"&\"\n * We no longer need to include numeric entities here, these are now handled\n * by String.fromCodePoint/fromCharCode\n *\n * Anyway the only ones that are really important to allow are the HTML special\n * chars <, >, and &, because these ones can trigger special processing if not\n * replaced by the corresponding entity.\n */\nvar entityToUnicode = {\n    mu: 'μ',\n    amp: '&',\n    lt: '<',\n    gt: '>',\n    nbsp: ' ',\n    times: '×',\n    plusmn: '±',\n    deg: '°'\n};\n\n// NOTE: in general entities can contain uppercase too (so [a-zA-Z]) but all the\n// ones we support use only lowercase. If we ever change that, update the regex.\nvar ENTITY_MATCH = /&(#\\d+|#x[\\da-fA-F]+|[a-z]+);/g;\nfunction convertEntities(_str) {\n    return _str.replace(ENTITY_MATCH, function(fullMatch, innerMatch) {\n        var outChar;\n        if(innerMatch.charAt(0) === '#') {\n            // cannot use String.fromCodePoint in IE\n            outChar = fromCodePoint(\n                innerMatch.charAt(1) === 'x' ?\n                    parseInt(innerMatch.substr(2), 16) :\n                    parseInt(innerMatch.substr(1), 10)\n            );\n        }\n        else outChar = entityToUnicode[innerMatch];\n\n        // as in regular HTML, if we didn't decode the entity just\n        // leave the raw text in place.\n        return outChar || fullMatch;\n    });\n}\nexports.convertEntities = convertEntities;\n\nfunction fromCodePoint(code) {\n    // Don't allow overflow. In Chrome this turns into � but I feel like it's\n    // more useful to just not convert it at all.\n    if(code > 0x10FFFF) return;\n    var stringFromCodePoint = String.fromCodePoint;\n    if(stringFromCodePoint) return stringFromCodePoint(code);\n\n    // IE doesn't have String.fromCodePoint\n    // see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint\n    var stringFromCharCode = String.fromCharCode;\n    if(code <= 0xFFFF) return stringFromCharCode(code);\n    return stringFromCharCode(\n        (code >> 10) + 0xD7C0,\n        (code % 0x400) + 0xDC00\n    );\n}\n\n/*\n * buildSVGText: convert our pseudo-html into SVG tspan elements, and attach these\n * to containerNode\n *\n * @param {svg text element} containerNode: the <text> node to insert this text into\n * @param {string} str: the pseudo-html string to convert to svg\n *\n * @returns {bool}: does the result contain any links? We need to handle the text element\n *   somewhat differently if it does, so just keep track of this when it happens.\n */\nfunction buildSVGText(containerNode, str) {\n    /*\n     * Normalize behavior between IE and others wrt newlines and whitespace:pre\n     * this combination makes IE barf https://github.com/plotly/plotly.js/issues/746\n     * Chrome and FF display \\n, \\r, or \\r\\n as a space in this mode.\n     * I feel like at some point we turned these into <br> but currently we don't so\n     * I'm just going to cement what we do now in Chrome and FF\n     */\n    str = str.replace(NEWLINES, ' ');\n\n    var hasLink = false;\n\n    // as we're building the text, keep track of what elements we're nested inside\n    // nodeStack will be an array of {node, type, style, href, target, popup}\n    // where only type: 'a' gets the last 3 and node is only added when it's created\n    var nodeStack = [];\n    var currentNode;\n    var currentLine = -1;\n\n    function newLine() {\n        currentLine++;\n\n        var lineNode = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n        d3.select(lineNode).attr({\n            class: 'line',\n            dy: (currentLine * LINE_SPACING) + 'em'\n        });\n        containerNode.appendChild(lineNode);\n\n        currentNode = lineNode;\n\n        var oldNodeStack = nodeStack;\n        nodeStack = [{node: lineNode}];\n\n        if(oldNodeStack.length > 1) {\n            for(var i = 1; i < oldNodeStack.length; i++) {\n                enterNode(oldNodeStack[i]);\n            }\n        }\n    }\n\n    function enterNode(nodeSpec) {\n        var type = nodeSpec.type;\n        var nodeAttrs = {};\n        var nodeType;\n\n        if(type === 'a') {\n            nodeType = 'a';\n            var target = nodeSpec.target;\n            var href = nodeSpec.href;\n            var popup = nodeSpec.popup;\n            if(href) {\n                nodeAttrs = {\n                    'xlink:xlink:show': (target === '_blank' || target.charAt(0) !== '_') ? 'new' : 'replace',\n                    target: target,\n                    'xlink:xlink:href': href\n                };\n                if(popup) {\n                    // security: href and target are not inserted as code but\n                    // as attributes. popup is, but limited to /[A-Za-z0-9_=,]/\n                    nodeAttrs.onclick = 'window.open(this.href.baseVal,this.target.baseVal,\"' +\n                        popup + '\");return false;';\n                }\n            }\n        }\n        else nodeType = 'tspan';\n\n        if(nodeSpec.style) nodeAttrs.style = nodeSpec.style;\n\n        var newNode = document.createElementNS(xmlnsNamespaces.svg, nodeType);\n\n        if(type === 'sup' || type === 'sub') {\n            addTextNode(currentNode, ZERO_WIDTH_SPACE);\n            currentNode.appendChild(newNode);\n\n            var resetter = document.createElementNS(xmlnsNamespaces.svg, 'tspan');\n            addTextNode(resetter, ZERO_WIDTH_SPACE);\n            d3.select(resetter).attr('dy', RESET_DY[type]);\n            nodeAttrs.dy = SHIFT_DY[type];\n\n            currentNode.appendChild(newNode);\n            currentNode.appendChild(resetter);\n        }\n        else {\n            currentNode.appendChild(newNode);\n        }\n\n        d3.select(newNode).attr(nodeAttrs);\n\n        currentNode = nodeSpec.node = newNode;\n        nodeStack.push(nodeSpec);\n    }\n\n    function addTextNode(node, text) {\n        node.appendChild(document.createTextNode(text));\n    }\n\n    function exitNode(type) {\n        // A bare closing tag can't close the root node. If we encounter this it\n        // means there's an extra closing tag that can just be ignored:\n        if(nodeStack.length === 1) {\n            Lib.log('Ignoring unexpected end tag </' + type + '>.', str);\n            return;\n        }\n\n        var innerNode = nodeStack.pop();\n\n        if(type !== innerNode.type) {\n            Lib.log('Start tag <' + innerNode.type + '> doesnt match end tag <' +\n                type + '>. Pretending it did match.', str);\n        }\n        currentNode = nodeStack[nodeStack.length - 1].node;\n    }\n\n    var hasLines = BR_TAG.test(str);\n\n    if(hasLines) newLine();\n    else {\n        currentNode = containerNode;\n        nodeStack = [{node: containerNode}];\n    }\n\n    var parts = str.split(SPLIT_TAGS);\n    for(var i = 0; i < parts.length; i++) {\n        var parti = parts[i];\n        var match = parti.match(ONE_TAG);\n        var tagType = match && match[2].toLowerCase();\n        var tagStyle = TAG_STYLES[tagType];\n\n        if(tagType === 'br') {\n            newLine();\n        }\n        else if(tagStyle === undefined) {\n            addTextNode(currentNode, convertEntities(parti));\n        }\n        else {\n            // tag - open or close\n            if(match[1]) {\n                exitNode(tagType);\n            }\n            else {\n                var extra = match[4];\n\n                var nodeSpec = {type: tagType};\n\n                // now add style, from both the tag name and any extra css\n                // Most of the svg css that users will care about is just like html,\n                // but font color is different (uses fill). Let our users ignore this.\n                var css = getQuotedMatch(extra, STYLEMATCH);\n                if(css) {\n                    css = css.replace(COLORMATCH, '$1 fill:');\n                    if(tagStyle) css += ';' + tagStyle;\n                }\n                else if(tagStyle) css = tagStyle;\n\n                if(css) nodeSpec.style = css;\n\n                if(tagType === 'a') {\n                    hasLink = true;\n\n                    var href = getQuotedMatch(extra, HREFMATCH);\n\n                    if(href) {\n                        // check safe protocols\n                        var dummyAnchor = document.createElement('a');\n                        dummyAnchor.href = href;\n                        if(PROTOCOLS.indexOf(dummyAnchor.protocol) !== -1) {\n                            // Decode href to allow both already encoded and not encoded\n                            // URIs. Without decoding prior encoding, an already encoded\n                            // URI would be encoded twice producing a semantically different URI.\n                            nodeSpec.href = encodeURI(decodeURI(href));\n                            nodeSpec.target = getQuotedMatch(extra, TARGETMATCH) || '_blank';\n                            nodeSpec.popup = getQuotedMatch(extra, POPUPMATCH);\n                        }\n                    }\n                }\n\n                enterNode(nodeSpec);\n            }\n        }\n    }\n\n    return hasLink;\n}\n\nexports.lineCount = function lineCount(s) {\n    return s.selectAll('tspan.line').size() || 1;\n};\n\nexports.positionText = function positionText(s, x, y) {\n    return s.each(function() {\n        var text = d3.select(this);\n\n        function setOrGet(attr, val) {\n            if(val === undefined) {\n                val = text.attr(attr);\n                if(val === null) {\n                    text.attr(attr, 0);\n                    val = 0;\n                }\n            }\n            else text.attr(attr, val);\n            return val;\n        }\n\n        var thisX = setOrGet('x', x);\n        var thisY = setOrGet('y', y);\n\n        if(this.nodeName === 'text') {\n            text.selectAll('tspan.line').attr({x: thisX, y: thisY});\n        }\n    });\n};\n\nfunction alignHTMLWith(_base, container, options) {\n    var alignH = options.horizontalAlign;\n    var alignV = options.verticalAlign || 'top';\n    var bRect = _base.node().getBoundingClientRect();\n    var cRect = container.node().getBoundingClientRect();\n    var thisRect;\n    var getTop;\n    var getLeft;\n\n    if(alignV === 'bottom') {\n        getTop = function() { return bRect.bottom - thisRect.height; };\n    } else if(alignV === 'middle') {\n        getTop = function() { return bRect.top + (bRect.height - thisRect.height) / 2; };\n    } else { // default: top\n        getTop = function() { return bRect.top; };\n    }\n\n    if(alignH === 'right') {\n        getLeft = function() { return bRect.right - thisRect.width; };\n    } else if(alignH === 'center') {\n        getLeft = function() { return bRect.left + (bRect.width - thisRect.width) / 2; };\n    } else { // default: left\n        getLeft = function() { return bRect.left; };\n    }\n\n    return function() {\n        thisRect = this.node().getBoundingClientRect();\n        this.style({\n            top: (getTop() - cRect.top) + 'px',\n            left: (getLeft() - cRect.left) + 'px',\n            'z-index': 1000\n        });\n        return this;\n    };\n}\n\n/*\n * Editable title\n * @param {d3.selection} context: the element being edited. Normally text,\n *   but if it isn't, you should provide the styling options\n * @param {object} options:\n *   @param {div} options.gd: graphDiv\n *   @param {d3.selection} options.delegate: item to bind events to if not this\n *   @param {boolean} options.immediate: start editing now (true) or on click (false, default)\n *   @param {string} options.fill: font color if not as shown\n *   @param {string} options.background: background color if not as shown\n *   @param {string} options.text: initial text, if not as shown\n *   @param {string} options.horizontalAlign: alignment of the edit box wrt. the bound element\n *   @param {string} options.verticalAlign: alignment of the edit box wrt. the bound element\n */\n\nexports.makeEditable = function(context, options) {\n    var gd = options.gd;\n    var _delegate = options.delegate;\n    var dispatch = d3.dispatch('edit', 'input', 'cancel');\n    var handlerElement = _delegate || context;\n\n    context.style({'pointer-events': _delegate ? 'none' : 'all'});\n\n    if(context.size() !== 1) throw new Error('boo');\n\n    function handleClick() {\n        appendEditable();\n        context.style({opacity: 0});\n        // also hide any mathjax svg\n        var svgClass = handlerElement.attr('class');\n        var mathjaxClass;\n        if(svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';\n        else mathjaxClass = '[class*=-math-group]';\n        if(mathjaxClass) {\n            d3.select(context.node().parentNode).select(mathjaxClass).style({opacity: 0});\n        }\n    }\n\n    function selectElementContents(_el) {\n        var el = _el.node();\n        var range = document.createRange();\n        range.selectNodeContents(el);\n        var sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n        el.focus();\n    }\n\n    function appendEditable() {\n        var plotDiv = d3.select(gd);\n        var container = plotDiv.select('.svg-container');\n        var div = container.append('div');\n        var cStyle = context.node().style;\n        var fontSize = parseFloat(cStyle.fontSize || 12);\n\n        var initialText = options.text;\n        if(initialText === undefined) initialText = context.attr('data-unformatted');\n\n        div.classed('plugin-editable editable', true)\n            .style({\n                position: 'absolute',\n                'font-family': cStyle.fontFamily || 'Arial',\n                'font-size': fontSize,\n                color: options.fill || cStyle.fill || 'black',\n                opacity: 1,\n                'background-color': options.background || 'transparent',\n                outline: '#ffffff33 1px solid',\n                margin: [-fontSize / 8 + 1, 0, 0, -1].join('px ') + 'px',\n                padding: '0',\n                'box-sizing': 'border-box'\n            })\n            .attr({contenteditable: true})\n            .text(initialText)\n            .call(alignHTMLWith(context, container, options))\n            .on('blur', function() {\n                gd._editing = false;\n                context.text(this.textContent)\n                    .style({opacity: 1});\n                var svgClass = d3.select(this).attr('class');\n                var mathjaxClass;\n                if(svgClass) mathjaxClass = '.' + svgClass.split(' ')[0] + '-math-group';\n                else mathjaxClass = '[class*=-math-group]';\n                if(mathjaxClass) {\n                    d3.select(context.node().parentNode).select(mathjaxClass).style({opacity: 0});\n                }\n                var text = this.textContent;\n                d3.select(this).transition().duration(0).remove();\n                d3.select(document).on('mouseup', null);\n                dispatch.edit.call(context, text);\n            })\n            .on('focus', function() {\n                var editDiv = this;\n                gd._editing = true;\n                d3.select(document).on('mouseup', function() {\n                    if(d3.event.target === editDiv) return false;\n                    if(document.activeElement === div.node()) div.node().blur();\n                });\n            })\n            .on('keyup', function() {\n                if(d3.event.which === 27) {\n                    gd._editing = false;\n                    context.style({opacity: 1});\n                    d3.select(this)\n                        .style({opacity: 0})\n                        .on('blur', function() { return false; })\n                        .transition().remove();\n                    dispatch.cancel.call(context, this.textContent);\n                }\n                else {\n                    dispatch.input.call(context, this.textContent);\n                    d3.select(this).call(alignHTMLWith(context, container, options));\n                }\n            })\n            .on('keydown', function() {\n                if(d3.event.which === 13) this.blur();\n            })\n            .call(selectElementContents);\n    }\n\n    if(options.immediate) handleClick();\n    else handlerElement.on('click', handleClick);\n\n    return d3.rebind(context, dispatch, 'on');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
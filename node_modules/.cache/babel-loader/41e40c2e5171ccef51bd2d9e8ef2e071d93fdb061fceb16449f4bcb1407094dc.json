{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/* eslint-disable new-cap */\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../../lib');\nvar Color = require('../../../components/color');\nvar micropolar = require('./micropolar');\nvar UndoManager = require('./undo_manager');\nvar extendDeepAll = Lib.extendDeepAll;\nvar manager = module.exports = {};\nmanager.framework = function (_gd) {\n  var config, previousConfigClone, plot, convertedInput, container;\n  var undoManager = new UndoManager();\n  function exports(_inputConfig, _container) {\n    if (_container) container = _container;\n    d3.select(d3.select(container).node().parentNode).selectAll('.svg-container>*:not(.chart-root)').remove();\n    config = !config ? _inputConfig : extendDeepAll(config, _inputConfig);\n    if (!plot) plot = micropolar.Axis();\n    convertedInput = micropolar.adapter.plotly().convert(config);\n    plot.config(convertedInput).render(container);\n    _gd.data = config.data;\n    _gd.layout = config.layout;\n    manager.fillLayout(_gd);\n    return config;\n  }\n  exports.isPolar = true;\n  exports.svg = function () {\n    return plot.svg();\n  };\n  exports.getConfig = function () {\n    return config;\n  };\n  exports.getLiveConfig = function () {\n    return micropolar.adapter.plotly().convert(plot.getLiveConfig(), true);\n  };\n  exports.getLiveScales = function () {\n    return {\n      t: plot.angularScale(),\n      r: plot.radialScale()\n    };\n  };\n  exports.setUndoPoint = function () {\n    var that = this;\n    var configClone = micropolar.util.cloneJson(config);\n    (function (_configClone, _previousConfigClone) {\n      undoManager.add({\n        undo: function undo() {\n          if (_previousConfigClone) that(_previousConfigClone);\n        },\n        redo: function redo() {\n          that(_configClone);\n        }\n      });\n    })(configClone, previousConfigClone);\n    previousConfigClone = micropolar.util.cloneJson(configClone);\n  };\n  exports.undo = function () {\n    undoManager.undo();\n  };\n  exports.redo = function () {\n    undoManager.redo();\n  };\n  return exports;\n};\nmanager.fillLayout = function (_gd) {\n  var container = d3.select(_gd).selectAll('.plot-container');\n  var paperDiv = container.selectAll('.svg-container');\n  var paper = _gd.framework && _gd.framework.svg && _gd.framework.svg();\n  var dflts = {\n    width: 800,\n    height: 600,\n    paper_bgcolor: Color.background,\n    _container: container,\n    _paperdiv: paperDiv,\n    _paper: paper\n  };\n  _gd._fullLayout = extendDeepAll(dflts, _gd.layout);\n};","map":{"version":3,"names":["d3","require","Lib","Color","micropolar","UndoManager","extendDeepAll","manager","module","exports","framework","_gd","config","previousConfigClone","plot","convertedInput","container","undoManager","_inputConfig","_container","select","node","parentNode","selectAll","remove","Axis","adapter","plotly","convert","render","data","layout","fillLayout","isPolar","svg","getConfig","getLiveConfig","getLiveScales","t","angularScale","r","radialScale","setUndoPoint","that","configClone","util","cloneJson","_configClone","_previousConfigClone","add","undo","redo","paperDiv","paper","dflts","width","height","paper_bgcolor","background","_paperdiv","_paper","_fullLayout"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/polar/legacy/micropolar_manager.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n/* eslint-disable new-cap */\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../../lib');\nvar Color = require('../../../components/color');\n\nvar micropolar = require('./micropolar');\nvar UndoManager = require('./undo_manager');\nvar extendDeepAll = Lib.extendDeepAll;\n\nvar manager = module.exports = {};\n\nmanager.framework = function(_gd) {\n    var config, previousConfigClone, plot, convertedInput, container;\n    var undoManager = new UndoManager();\n\n    function exports(_inputConfig, _container) {\n        if(_container) container = _container;\n        d3.select(d3.select(container).node().parentNode).selectAll('.svg-container>*:not(.chart-root)').remove();\n\n        config = (!config) ?\n            _inputConfig :\n            extendDeepAll(config, _inputConfig);\n\n        if(!plot) plot = micropolar.Axis();\n        convertedInput = micropolar.adapter.plotly().convert(config);\n        plot.config(convertedInput).render(container);\n        _gd.data = config.data;\n        _gd.layout = config.layout;\n        manager.fillLayout(_gd);\n        return config;\n    }\n    exports.isPolar = true;\n    exports.svg = function() { return plot.svg(); };\n    exports.getConfig = function() { return config; };\n    exports.getLiveConfig = function() {\n        return micropolar.adapter.plotly().convert(plot.getLiveConfig(), true);\n    };\n    exports.getLiveScales = function() { return {t: plot.angularScale(), r: plot.radialScale()}; };\n    exports.setUndoPoint = function() {\n        var that = this;\n        var configClone = micropolar.util.cloneJson(config);\n        (function(_configClone, _previousConfigClone) {\n            undoManager.add({\n                undo: function() {\n                    if(_previousConfigClone) that(_previousConfigClone);\n                },\n                redo: function() {\n                    that(_configClone);\n                }\n            });\n        })(configClone, previousConfigClone);\n        previousConfigClone = micropolar.util.cloneJson(configClone);\n    };\n    exports.undo = function() { undoManager.undo(); };\n    exports.redo = function() { undoManager.redo(); };\n    return exports;\n};\n\nmanager.fillLayout = function(_gd) {\n    var container = d3.select(_gd).selectAll('.plot-container');\n    var paperDiv = container.selectAll('.svg-container');\n    var paper = _gd.framework && _gd.framework.svg && _gd.framework.svg();\n    var dflts = {\n        width: 800,\n        height: 600,\n        paper_bgcolor: Color.background,\n        _container: container,\n        _paperdiv: paperDiv,\n        _paper: paper\n    };\n\n    _gd._fullLayout = extendDeepAll(dflts, _gd.layout);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\nvar handleAnnotationCommonDefaults = require('./common_defaults');\nvar attributes = require('./attributes');\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n  handleArrayContainerDefaults(layoutIn, layoutOut, {\n    name: 'annotations',\n    handleItemDefaults: handleAnnotationDefaults\n  });\n};\nfunction handleAnnotationDefaults(annIn, annOut, fullLayout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n  }\n  var visible = coerce('visible');\n  var clickToShow = coerce('clicktoshow');\n  if (!(visible || clickToShow)) return;\n  handleAnnotationCommonDefaults(annIn, annOut, fullLayout, coerce);\n  var showArrow = annOut.showarrow;\n\n  // positioning\n  var axLetters = ['x', 'y'];\n  var arrowPosDflt = [-10, -30];\n  var gdMock = {\n    _fullLayout: fullLayout\n  };\n  for (var i = 0; i < 2; i++) {\n    var axLetter = axLetters[i];\n\n    // xref, yref\n    var axRef = Axes.coerceRef(annIn, annOut, gdMock, axLetter, '', 'paper');\n    if (axRef !== 'paper') {\n      var ax = Axes.getFromId(gdMock, axRef);\n      ax._annIndices.push(annOut._index);\n    }\n\n    // x, y\n    Axes.coercePosition(annOut, gdMock, coerce, axRef, axLetter, 0.5);\n    if (showArrow) {\n      var arrowPosAttr = 'a' + axLetter;\n      // axref, ayref\n      var aaxRef = Axes.coerceRef(annIn, annOut, gdMock, arrowPosAttr, 'pixel');\n\n      // for now the arrow can only be on the same axis or specified as pixels\n      // TODO: sometime it might be interesting to allow it to be on *any* axis\n      // but that would require updates to drawing & autorange code and maybe more\n      if (aaxRef !== 'pixel' && aaxRef !== axRef) {\n        aaxRef = annOut[arrowPosAttr] = 'pixel';\n      }\n\n      // ax, ay\n      var aDflt = aaxRef === 'pixel' ? arrowPosDflt[i] : 0.4;\n      Axes.coercePosition(annOut, gdMock, coerce, aaxRef, arrowPosAttr, aDflt);\n    }\n\n    // xanchor, yanchor\n    coerce(axLetter + 'anchor');\n\n    // xshift, yshift\n    coerce(axLetter + 'shift');\n  }\n\n  // if you have one coordinate you should have both\n  Lib.noneOrAll(annIn, annOut, ['x', 'y']);\n\n  // if you have one part of arrow length you should have both\n  if (showArrow) {\n    Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n  }\n  if (clickToShow) {\n    var xClick = coerce('xclick');\n    var yClick = coerce('yclick');\n\n    // put the actual click data to bind to into private attributes\n    // so we don't have to do this little bit of logic on every hover event\n    annOut._xclick = xClick === undefined ? annOut.x : Axes.cleanPosition(xClick, gdMock, annOut.xref);\n    annOut._yclick = yClick === undefined ? annOut.y : Axes.cleanPosition(yClick, gdMock, annOut.yref);\n  }\n}","map":{"version":3,"names":["Lib","require","Axes","handleArrayContainerDefaults","handleAnnotationCommonDefaults","attributes","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","name","handleItemDefaults","handleAnnotationDefaults","annIn","annOut","fullLayout","coerce","attr","dflt","visible","clickToShow","showArrow","showarrow","axLetters","arrowPosDflt","gdMock","_fullLayout","i","axLetter","axRef","coerceRef","ax","getFromId","_annIndices","push","_index","coercePosition","arrowPosAttr","aaxRef","aDflt","noneOrAll","xClick","yClick","_xclick","undefined","x","cleanPosition","xref","_yclick","y","yref"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/annotations/defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar handleAnnotationCommonDefaults = require('./common_defaults');\nvar attributes = require('./attributes');\n\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut) {\n    handleArrayContainerDefaults(layoutIn, layoutOut, {\n        name: 'annotations',\n        handleItemDefaults: handleAnnotationDefaults\n    });\n};\n\nfunction handleAnnotationDefaults(annIn, annOut, fullLayout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(annIn, annOut, attributes, attr, dflt);\n    }\n\n    var visible = coerce('visible');\n    var clickToShow = coerce('clicktoshow');\n\n    if(!(visible || clickToShow)) return;\n\n    handleAnnotationCommonDefaults(annIn, annOut, fullLayout, coerce);\n\n    var showArrow = annOut.showarrow;\n\n    // positioning\n    var axLetters = ['x', 'y'];\n    var arrowPosDflt = [-10, -30];\n    var gdMock = {_fullLayout: fullLayout};\n\n    for(var i = 0; i < 2; i++) {\n        var axLetter = axLetters[i];\n\n        // xref, yref\n        var axRef = Axes.coerceRef(annIn, annOut, gdMock, axLetter, '', 'paper');\n\n        if(axRef !== 'paper') {\n            var ax = Axes.getFromId(gdMock, axRef);\n            ax._annIndices.push(annOut._index);\n        }\n\n        // x, y\n        Axes.coercePosition(annOut, gdMock, coerce, axRef, axLetter, 0.5);\n\n        if(showArrow) {\n            var arrowPosAttr = 'a' + axLetter;\n            // axref, ayref\n            var aaxRef = Axes.coerceRef(annIn, annOut, gdMock, arrowPosAttr, 'pixel');\n\n            // for now the arrow can only be on the same axis or specified as pixels\n            // TODO: sometime it might be interesting to allow it to be on *any* axis\n            // but that would require updates to drawing & autorange code and maybe more\n            if(aaxRef !== 'pixel' && aaxRef !== axRef) {\n                aaxRef = annOut[arrowPosAttr] = 'pixel';\n            }\n\n            // ax, ay\n            var aDflt = (aaxRef === 'pixel') ? arrowPosDflt[i] : 0.4;\n            Axes.coercePosition(annOut, gdMock, coerce, aaxRef, arrowPosAttr, aDflt);\n        }\n\n        // xanchor, yanchor\n        coerce(axLetter + 'anchor');\n\n        // xshift, yshift\n        coerce(axLetter + 'shift');\n    }\n\n    // if you have one coordinate you should have both\n    Lib.noneOrAll(annIn, annOut, ['x', 'y']);\n\n    // if you have one part of arrow length you should have both\n    if(showArrow) {\n        Lib.noneOrAll(annIn, annOut, ['ax', 'ay']);\n    }\n\n    if(clickToShow) {\n        var xClick = coerce('xclick');\n        var yClick = coerce('yclick');\n\n        // put the actual click data to bind to into private attributes\n        // so we don't have to do this little bit of logic on every hover event\n        annOut._xclick = (xClick === undefined) ?\n            annOut.x :\n            Axes.cleanPosition(xClick, gdMock, annOut.xref);\n        annOut._yclick = (yClick === undefined) ?\n            annOut.y :\n            Axes.cleanPosition(yClick, gdMock, annOut.yref);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
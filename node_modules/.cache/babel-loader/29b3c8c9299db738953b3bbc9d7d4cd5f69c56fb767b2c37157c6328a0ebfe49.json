{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\nmodule.exports = function calc(gd, trace) {\n  var u = trace.u;\n  var v = trace.v;\n  var w = trace.w;\n  var len = Math.min(trace.x.length, trace.y.length, trace.z.length, u.length, v.length, w.length);\n  var normMax = -Infinity;\n  var normMin = Infinity;\n  for (var i = 0; i < len; i++) {\n    var uu = u[i];\n    var vv = v[i];\n    var ww = w[i];\n    var norm = Math.sqrt(uu * uu + vv * vv + ww * ww);\n    normMax = Math.max(normMax, norm);\n    normMin = Math.min(normMin, norm);\n  }\n  trace._len = len;\n  trace._normMax = normMax;\n  colorscaleCalc(gd, trace, {\n    vals: [normMin, normMax],\n    containerStr: '',\n    cLetter: 'c'\n  });\n};","map":{"version":3,"names":["colorscaleCalc","require","module","exports","calc","gd","trace","u","v","w","len","Math","min","x","length","y","z","normMax","Infinity","normMin","i","uu","vv","ww","norm","sqrt","max","_len","_normMax","vals","containerStr","cLetter"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/cone/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\n\nmodule.exports = function calc(gd, trace) {\n    var u = trace.u;\n    var v = trace.v;\n    var w = trace.w;\n    var len = Math.min(\n        trace.x.length, trace.y.length, trace.z.length,\n        u.length, v.length, w.length\n    );\n    var normMax = -Infinity;\n    var normMin = Infinity;\n\n    for(var i = 0; i < len; i++) {\n        var uu = u[i];\n        var vv = v[i];\n        var ww = w[i];\n        var norm = Math.sqrt(uu * uu + vv * vv + ww * ww);\n\n        normMax = Math.max(normMax, norm);\n        normMin = Math.min(normMin, norm);\n    }\n\n    trace._len = len;\n    trace._normMax = normMax;\n\n    colorscaleCalc(gd, trace, {\n        vals: [normMin, normMax],\n        containerStr: '',\n        cLetter: 'c'\n    });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AAEhEC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,CAAC,GAAGD,KAAK,CAACC,CAAC;EACf,IAAIC,CAAC,GAAGF,KAAK,CAACE,CAAC;EACf,IAAIC,CAAC,GAAGH,KAAK,CAACG,CAAC;EACf,IAAIC,GAAG,GAAGC,IAAI,CAACC,GAAG,CACdN,KAAK,CAACO,CAAC,CAACC,MAAM,EAAER,KAAK,CAACS,CAAC,CAACD,MAAM,EAAER,KAAK,CAACU,CAAC,CAACF,MAAM,EAC9CP,CAAC,CAACO,MAAM,EAAEN,CAAC,CAACM,MAAM,EAAEL,CAAC,CAACK,MAAM,CAC/B;EACD,IAAIG,OAAO,GAAG,CAACC,QAAQ;EACvB,IAAIC,OAAO,GAAGD,QAAQ;EAEtB,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGV,GAAG,EAAEU,CAAC,EAAE,EAAE;IACzB,IAAIC,EAAE,GAAGd,CAAC,CAACa,CAAC,CAAC;IACb,IAAIE,EAAE,GAAGd,CAAC,CAACY,CAAC,CAAC;IACb,IAAIG,EAAE,GAAGd,CAAC,CAACW,CAAC,CAAC;IACb,IAAII,IAAI,GAAGb,IAAI,CAACc,IAAI,CAACJ,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,GAAGC,EAAE,GAAGA,EAAE,CAAC;IAEjDN,OAAO,GAAGN,IAAI,CAACe,GAAG,CAACT,OAAO,EAAEO,IAAI,CAAC;IACjCL,OAAO,GAAGR,IAAI,CAACC,GAAG,CAACO,OAAO,EAAEK,IAAI,CAAC;EACrC;EAEAlB,KAAK,CAACqB,IAAI,GAAGjB,GAAG;EAChBJ,KAAK,CAACsB,QAAQ,GAAGX,OAAO;EAExBjB,cAAc,CAACK,EAAE,EAAEC,KAAK,EAAE;IACtBuB,IAAI,EAAE,CAACV,OAAO,EAAEF,OAAO,CAAC;IACxBa,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
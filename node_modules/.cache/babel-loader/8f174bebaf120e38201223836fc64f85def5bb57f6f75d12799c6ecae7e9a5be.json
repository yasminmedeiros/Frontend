{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function handleContourDefaults(traceIn, traceOut, coerce, coerce2) {\n  var contourStart = coerce2('contours.start');\n  var contourEnd = coerce2('contours.end');\n  var missingEnd = contourStart === false || contourEnd === false;\n\n  // normally we only need size if autocontour is off. But contour.calc\n  // pushes its calculated contour size back to the input trace, so for\n  // things like restyle that can call supplyDefaults without calc\n  // after the initial draw, we can just reuse the previous calculation\n  var contourSize = coerce('contours.size');\n  var autoContour;\n  if (missingEnd) autoContour = traceOut.autocontour = true;else autoContour = coerce('autocontour', false);\n  if (autoContour || !contourSize) coerce('ncontours');\n};","map":{"version":3,"names":["module","exports","handleContourDefaults","traceIn","traceOut","coerce","coerce2","contourStart","contourEnd","missingEnd","contourSize","autoContour","autocontour"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/contour/contours_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function handleContourDefaults(traceIn, traceOut, coerce, coerce2) {\n    var contourStart = coerce2('contours.start');\n    var contourEnd = coerce2('contours.end');\n    var missingEnd = (contourStart === false) || (contourEnd === false);\n\n    // normally we only need size if autocontour is off. But contour.calc\n    // pushes its calculated contour size back to the input trace, so for\n    // things like restyle that can call supplyDefaults without calc\n    // after the initial draw, we can just reuse the previous calculation\n    var contourSize = coerce('contours.size');\n    var autoContour;\n\n    if(missingEnd) autoContour = traceOut.autocontour = true;\n    else autoContour = coerce('autocontour', false);\n\n    if(autoContour || !contourSize) coerce('ncontours');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,qBAAqB,CAACC,OAAO,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,OAAO,EAAE;EAChF,IAAIC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;EAC5C,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;EACxC,IAAIG,UAAU,GAAIF,YAAY,KAAK,KAAK,IAAMC,UAAU,KAAK,KAAM;;EAEnE;EACA;EACA;EACA;EACA,IAAIE,WAAW,GAAGL,MAAM,CAAC,eAAe,CAAC;EACzC,IAAIM,WAAW;EAEf,IAAGF,UAAU,EAAEE,WAAW,GAAGP,QAAQ,CAACQ,WAAW,GAAG,IAAI,CAAC,KACpDD,WAAW,GAAGN,MAAM,CAAC,aAAa,EAAE,KAAK,CAAC;EAE/C,IAAGM,WAAW,IAAI,CAACD,WAAW,EAAEL,MAAM,CAAC,WAAW,CAAC;AACvD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
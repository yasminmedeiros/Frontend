{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Color = require('../color');\nvar ARROWPATHS = require('./arrow_paths');\n\n/**\n * Add arrowhead(s) to a path or line element\n *\n * @param {d3.selection} el3: a d3-selected line or path element\n *\n * @param {string} ends: 'none', 'start', 'end', or 'start+end' for which ends get arrowheads\n *\n * @param {object} options: style information. Must have all the following:\n * @param {number} options.arrowhead: end head style - see ./arrow_paths\n * @param {number} options.startarrowhead: start head style - see ./arrow_paths\n * @param {number} options.arrowsize: relative size of the end head vs line width\n * @param {number} options.startarrowsize: relative size of the start head vs line width\n * @param {number} options.standoff: distance in px to move the end arrow point from its target\n * @param {number} options.startstandoff: distance in px to move the start arrow point from its target\n * @param {number} options.arrowwidth: width of the arrow line\n * @param {string} options.arrowcolor: color of the arrow line, for the head to match\n *     Note that the opacity of this color is ignored, as it's assumed the container\n *     of both the line and head has opacity applied to it so there isn't greater opacity\n *     where they overlap.\n */\nmodule.exports = function drawArrowHead(el3, ends, options) {\n  var el = el3.node();\n  var headStyle = ARROWPATHS[options.arrowhead || 0];\n  var startHeadStyle = ARROWPATHS[options.startarrowhead || 0];\n  var scale = (options.arrowwidth || 1) * (options.arrowsize || 1);\n  var startScale = (options.arrowwidth || 1) * (options.startarrowsize || 1);\n  var doStart = ends.indexOf('start') >= 0;\n  var doEnd = ends.indexOf('end') >= 0;\n  var backOff = headStyle.backoff * scale + options.standoff;\n  var startBackOff = startHeadStyle.backoff * startScale + options.startstandoff;\n  var start, end, startRot, endRot;\n  if (el.nodeName === 'line') {\n    start = {\n      x: +el3.attr('x1'),\n      y: +el3.attr('y1')\n    };\n    end = {\n      x: +el3.attr('x2'),\n      y: +el3.attr('y2')\n    };\n    var dx = start.x - end.x;\n    var dy = start.y - end.y;\n    startRot = Math.atan2(dy, dx);\n    endRot = startRot + Math.PI;\n    if (backOff && startBackOff) {\n      if (backOff + startBackOff > Math.sqrt(dx * dx + dy * dy)) {\n        hideLine();\n        return;\n      }\n    }\n    if (backOff) {\n      if (backOff * backOff > dx * dx + dy * dy) {\n        hideLine();\n        return;\n      }\n      var backOffX = backOff * Math.cos(startRot);\n      var backOffY = backOff * Math.sin(startRot);\n      end.x += backOffX;\n      end.y += backOffY;\n      el3.attr({\n        x2: end.x,\n        y2: end.y\n      });\n    }\n    if (startBackOff) {\n      if (startBackOff * startBackOff > dx * dx + dy * dy) {\n        hideLine();\n        return;\n      }\n      var startBackOffX = startBackOff * Math.cos(startRot);\n      var startbackOffY = startBackOff * Math.sin(startRot);\n      start.x -= startBackOffX;\n      start.y -= startbackOffY;\n      el3.attr({\n        x1: start.x,\n        y1: start.y\n      });\n    }\n  } else if (el.nodeName === 'path') {\n    var pathlen = el.getTotalLength();\n    // using dash to hide the backOff region of the path.\n    // if we ever allow dash for the arrow we'll have to\n    // do better than this hack... maybe just manually\n    // combine the two\n    var dashArray = '';\n    if (pathlen < backOff + startBackOff) {\n      hideLine();\n      return;\n    }\n    var start0 = el.getPointAtLength(0);\n    var dstart = el.getPointAtLength(0.1);\n    startRot = Math.atan2(start0.y - dstart.y, start0.x - dstart.x);\n    start = el.getPointAtLength(Math.min(startBackOff, pathlen));\n    dashArray = '0px,' + startBackOff + 'px,';\n    var end0 = el.getPointAtLength(pathlen);\n    var dend = el.getPointAtLength(pathlen - 0.1);\n    endRot = Math.atan2(end0.y - dend.y, end0.x - dend.x);\n    end = el.getPointAtLength(Math.max(0, pathlen - backOff));\n    var shortening = dashArray ? startBackOff + backOff : backOff;\n    dashArray += pathlen - shortening + 'px,' + pathlen + 'px';\n    el3.style('stroke-dasharray', dashArray);\n  }\n  function hideLine() {\n    el3.style('stroke-dasharray', '0px,100px');\n  }\n  function drawhead(arrowHeadStyle, p, rot, arrowScale) {\n    if (!arrowHeadStyle.path) return;\n    if (arrowHeadStyle.noRotate) rot = 0;\n    d3.select(el.parentNode).append('path').attr({\n      'class': el3.attr('class'),\n      d: arrowHeadStyle.path,\n      transform: 'translate(' + p.x + ',' + p.y + ')' + (rot ? 'rotate(' + rot * 180 / Math.PI + ')' : '') + 'scale(' + arrowScale + ')'\n    }).style({\n      fill: Color.rgb(options.arrowcolor),\n      'stroke-width': 0\n    });\n  }\n  if (doStart) drawhead(startHeadStyle, start, startRot, startScale);\n  if (doEnd) drawhead(headStyle, end, endRot, scale);\n};","map":{"version":3,"names":["d3","require","Color","ARROWPATHS","module","exports","drawArrowHead","el3","ends","options","el","node","headStyle","arrowhead","startHeadStyle","startarrowhead","scale","arrowwidth","arrowsize","startScale","startarrowsize","doStart","indexOf","doEnd","backOff","backoff","standoff","startBackOff","startstandoff","start","end","startRot","endRot","nodeName","x","attr","y","dx","dy","Math","atan2","PI","sqrt","hideLine","backOffX","cos","backOffY","sin","x2","y2","startBackOffX","startbackOffY","x1","y1","pathlen","getTotalLength","dashArray","start0","getPointAtLength","dstart","min","end0","dend","max","shortening","style","drawhead","arrowHeadStyle","p","rot","arrowScale","path","noRotate","select","parentNode","append","d","transform","fill","rgb","arrowcolor"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/annotations/draw_arrow_head.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Color = require('../color');\n\nvar ARROWPATHS = require('./arrow_paths');\n\n/**\n * Add arrowhead(s) to a path or line element\n *\n * @param {d3.selection} el3: a d3-selected line or path element\n *\n * @param {string} ends: 'none', 'start', 'end', or 'start+end' for which ends get arrowheads\n *\n * @param {object} options: style information. Must have all the following:\n * @param {number} options.arrowhead: end head style - see ./arrow_paths\n * @param {number} options.startarrowhead: start head style - see ./arrow_paths\n * @param {number} options.arrowsize: relative size of the end head vs line width\n * @param {number} options.startarrowsize: relative size of the start head vs line width\n * @param {number} options.standoff: distance in px to move the end arrow point from its target\n * @param {number} options.startstandoff: distance in px to move the start arrow point from its target\n * @param {number} options.arrowwidth: width of the arrow line\n * @param {string} options.arrowcolor: color of the arrow line, for the head to match\n *     Note that the opacity of this color is ignored, as it's assumed the container\n *     of both the line and head has opacity applied to it so there isn't greater opacity\n *     where they overlap.\n */\nmodule.exports = function drawArrowHead(el3, ends, options) {\n    var el = el3.node();\n    var headStyle = ARROWPATHS[options.arrowhead || 0];\n    var startHeadStyle = ARROWPATHS[options.startarrowhead || 0];\n    var scale = (options.arrowwidth || 1) * (options.arrowsize || 1);\n    var startScale = (options.arrowwidth || 1) * (options.startarrowsize || 1);\n    var doStart = ends.indexOf('start') >= 0;\n    var doEnd = ends.indexOf('end') >= 0;\n    var backOff = headStyle.backoff * scale + options.standoff;\n    var startBackOff = startHeadStyle.backoff * startScale + options.startstandoff;\n\n    var start, end, startRot, endRot;\n\n    if(el.nodeName === 'line') {\n        start = {x: +el3.attr('x1'), y: +el3.attr('y1')};\n        end = {x: +el3.attr('x2'), y: +el3.attr('y2')};\n\n        var dx = start.x - end.x;\n        var dy = start.y - end.y;\n\n        startRot = Math.atan2(dy, dx);\n        endRot = startRot + Math.PI;\n        if(backOff && startBackOff) {\n            if(backOff + startBackOff > Math.sqrt(dx * dx + dy * dy)) {\n                hideLine();\n                return;\n            }\n        }\n\n        if(backOff) {\n            if(backOff * backOff > dx * dx + dy * dy) {\n                hideLine();\n                return;\n            }\n            var backOffX = backOff * Math.cos(startRot);\n            var backOffY = backOff * Math.sin(startRot);\n\n            end.x += backOffX;\n            end.y += backOffY;\n            el3.attr({x2: end.x, y2: end.y});\n\n        }\n\n        if(startBackOff) {\n            if(startBackOff * startBackOff > dx * dx + dy * dy) {\n                hideLine();\n                return;\n            }\n            var startBackOffX = startBackOff * Math.cos(startRot);\n            var startbackOffY = startBackOff * Math.sin(startRot);\n\n            start.x -= startBackOffX;\n            start.y -= startbackOffY;\n            el3.attr({x1: start.x, y1: start.y});\n\n        }\n    }\n    else if(el.nodeName === 'path') {\n        var pathlen = el.getTotalLength();\n        // using dash to hide the backOff region of the path.\n        // if we ever allow dash for the arrow we'll have to\n        // do better than this hack... maybe just manually\n        // combine the two\n        var dashArray = '';\n\n        if(pathlen < backOff + startBackOff) {\n            hideLine();\n            return;\n        }\n\n\n        var start0 = el.getPointAtLength(0);\n        var dstart = el.getPointAtLength(0.1);\n\n        startRot = Math.atan2(start0.y - dstart.y, start0.x - dstart.x);\n        start = el.getPointAtLength(Math.min(startBackOff, pathlen));\n\n        dashArray = '0px,' + startBackOff + 'px,';\n\n        var end0 = el.getPointAtLength(pathlen);\n        var dend = el.getPointAtLength(pathlen - 0.1);\n\n        endRot = Math.atan2(end0.y - dend.y, end0.x - dend.x);\n        end = el.getPointAtLength(Math.max(0, pathlen - backOff));\n\n        var shortening = dashArray ? startBackOff + backOff : backOff;\n        dashArray += (pathlen - shortening) + 'px,' + pathlen + 'px';\n\n        el3.style('stroke-dasharray', dashArray);\n    }\n\n    function hideLine() { el3.style('stroke-dasharray', '0px,100px'); }\n\n    function drawhead(arrowHeadStyle, p, rot, arrowScale) {\n        if(!arrowHeadStyle.path) return;\n        if(arrowHeadStyle.noRotate) rot = 0;\n\n        d3.select(el.parentNode).append('path')\n            .attr({\n                'class': el3.attr('class'),\n                d: arrowHeadStyle.path,\n                transform:\n                    'translate(' + p.x + ',' + p.y + ')' +\n                    (rot ? 'rotate(' + (rot * 180 / Math.PI) + ')' : '') +\n                    'scale(' + arrowScale + ')'\n            })\n            .style({\n                fill: Color.rgb(options.arrowcolor),\n                'stroke-width': 0\n            });\n    }\n\n    if(doStart) drawhead(startHeadStyle, start, startRot, startScale);\n    if(doEnd) drawhead(headStyle, end, endRot, scale);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
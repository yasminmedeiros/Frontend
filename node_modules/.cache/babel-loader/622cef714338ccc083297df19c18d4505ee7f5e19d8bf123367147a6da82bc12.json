{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Color = require('../../components/color');\nvar stylePoints = require('../scatter/style').stylePoints;\nmodule.exports = function style(gd, cd) {\n  var s = cd ? cd[0].node3 : d3.select(gd).selectAll('g.trace.violins');\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  s.each(function (d) {\n    var trace = d[0].trace;\n    var sel = d3.select(this);\n    var box = trace.box || {};\n    var boxLine = box.line || {};\n    var meanline = trace.meanline || {};\n    var meanLineWidth = meanline.width;\n    sel.selectAll('path.violin').style('stroke-width', trace.line.width + 'px').call(Color.stroke, trace.line.color).call(Color.fill, trace.fillcolor);\n    sel.selectAll('path.box').style('stroke-width', boxLine.width + 'px').call(Color.stroke, boxLine.color).call(Color.fill, box.fillcolor);\n    var meanLineStyle = {\n      'stroke-width': meanLineWidth + 'px',\n      'stroke-dasharray': 2 * meanLineWidth + 'px,' + meanLineWidth + 'px'\n    };\n    sel.selectAll('path.mean').style(meanLineStyle).call(Color.stroke, meanline.color);\n    sel.selectAll('path.meanline').style(meanLineStyle).call(Color.stroke, meanline.color);\n    stylePoints(sel, trace, gd);\n  });\n};","map":{"version":3,"names":["d3","require","Color","stylePoints","module","exports","style","gd","cd","s","node3","select","selectAll","d","trace","opacity","each","sel","box","boxLine","line","meanline","meanLineWidth","width","call","stroke","color","fill","fillcolor","meanLineStyle"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/violin/style.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Color = require('../../components/color');\nvar stylePoints = require('../scatter/style').stylePoints;\n\nmodule.exports = function style(gd, cd) {\n    var s = cd ? cd[0].node3 : d3.select(gd).selectAll('g.trace.violins');\n\n    s.style('opacity', function(d) { return d[0].trace.opacity; });\n\n    s.each(function(d) {\n        var trace = d[0].trace;\n        var sel = d3.select(this);\n        var box = trace.box || {};\n        var boxLine = box.line || {};\n        var meanline = trace.meanline || {};\n        var meanLineWidth = meanline.width;\n\n        sel.selectAll('path.violin')\n            .style('stroke-width', trace.line.width + 'px')\n            .call(Color.stroke, trace.line.color)\n            .call(Color.fill, trace.fillcolor);\n\n        sel.selectAll('path.box')\n            .style('stroke-width', boxLine.width + 'px')\n            .call(Color.stroke, boxLine.color)\n            .call(Color.fill, box.fillcolor);\n\n        var meanLineStyle = {\n            'stroke-width': meanLineWidth + 'px',\n            'stroke-dasharray': (2 * meanLineWidth) + 'px,' + meanLineWidth + 'px'\n        };\n\n        sel.selectAll('path.mean')\n            .style(meanLineStyle)\n            .call(Color.stroke, meanline.color);\n\n        sel.selectAll('path.meanline')\n            .style(meanLineStyle)\n            .call(Color.stroke, meanline.color);\n\n        stylePoints(sel, trace, gd);\n    });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,KAAK,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC7C,IAAIE,WAAW,GAAGF,OAAO,CAAC,kBAAkB,CAAC,CAACE,WAAW;AAEzDC,MAAM,CAACC,OAAO,GAAG,SAASC,KAAK,CAACC,EAAE,EAAEC,EAAE,EAAE;EACpC,IAAIC,CAAC,GAAGD,EAAE,GAAGA,EAAE,CAAC,CAAC,CAAC,CAACE,KAAK,GAAGV,EAAE,CAACW,MAAM,CAACJ,EAAE,CAAC,CAACK,SAAS,CAAC,iBAAiB,CAAC;EAErEH,CAAC,CAACH,KAAK,CAAC,SAAS,EAAE,UAASO,CAAC,EAAE;IAAE,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO;EAAE,CAAC,CAAC;EAE9DN,CAAC,CAACO,IAAI,CAAC,UAASH,CAAC,EAAE;IACf,IAAIC,KAAK,GAAGD,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;IACtB,IAAIG,GAAG,GAAGjB,EAAE,CAACW,MAAM,CAAC,IAAI,CAAC;IACzB,IAAIO,GAAG,GAAGJ,KAAK,CAACI,GAAG,IAAI,CAAC,CAAC;IACzB,IAAIC,OAAO,GAAGD,GAAG,CAACE,IAAI,IAAI,CAAC,CAAC;IAC5B,IAAIC,QAAQ,GAAGP,KAAK,CAACO,QAAQ,IAAI,CAAC,CAAC;IACnC,IAAIC,aAAa,GAAGD,QAAQ,CAACE,KAAK;IAElCN,GAAG,CAACL,SAAS,CAAC,aAAa,CAAC,CACvBN,KAAK,CAAC,cAAc,EAAEQ,KAAK,CAACM,IAAI,CAACG,KAAK,GAAG,IAAI,CAAC,CAC9CC,IAAI,CAACtB,KAAK,CAACuB,MAAM,EAAEX,KAAK,CAACM,IAAI,CAACM,KAAK,CAAC,CACpCF,IAAI,CAACtB,KAAK,CAACyB,IAAI,EAAEb,KAAK,CAACc,SAAS,CAAC;IAEtCX,GAAG,CAACL,SAAS,CAAC,UAAU,CAAC,CACpBN,KAAK,CAAC,cAAc,EAAEa,OAAO,CAACI,KAAK,GAAG,IAAI,CAAC,CAC3CC,IAAI,CAACtB,KAAK,CAACuB,MAAM,EAAEN,OAAO,CAACO,KAAK,CAAC,CACjCF,IAAI,CAACtB,KAAK,CAACyB,IAAI,EAAET,GAAG,CAACU,SAAS,CAAC;IAEpC,IAAIC,aAAa,GAAG;MAChB,cAAc,EAAEP,aAAa,GAAG,IAAI;MACpC,kBAAkB,EAAG,CAAC,GAAGA,aAAa,GAAI,KAAK,GAAGA,aAAa,GAAG;IACtE,CAAC;IAEDL,GAAG,CAACL,SAAS,CAAC,WAAW,CAAC,CACrBN,KAAK,CAACuB,aAAa,CAAC,CACpBL,IAAI,CAACtB,KAAK,CAACuB,MAAM,EAAEJ,QAAQ,CAACK,KAAK,CAAC;IAEvCT,GAAG,CAACL,SAAS,CAAC,eAAe,CAAC,CACzBN,KAAK,CAACuB,aAAa,CAAC,CACpBL,IAAI,CAACtB,KAAK,CAACuB,MAAM,EAAEJ,QAAQ,CAACK,KAAK,CAAC;IAEvCvB,WAAW,CAACc,GAAG,EAAEH,KAAK,EAAEP,EAAE,CAAC;EAC/B,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
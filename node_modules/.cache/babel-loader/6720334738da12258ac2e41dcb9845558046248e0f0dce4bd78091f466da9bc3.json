{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nmodule.exports = templatedArray('image', {\n  visible: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'arraydraw',\n    description: ['Determines whether or not this image is visible.'].join(' ')\n  },\n  source: {\n    valType: 'string',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Specifies the URL of the image to be used.', 'The URL must be accessible from the domain where the', 'plot code is run, and can be either relative or absolute.'].join(' ')\n  },\n  layer: {\n    valType: 'enumerated',\n    values: ['below', 'above'],\n    dflt: 'above',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Specifies whether images are drawn below or above traces.', 'When `xref` and `yref` are both set to `paper`,', 'image is drawn below the entire plot area.'].join(' ')\n  },\n  sizex: {\n    valType: 'number',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size horizontally.', 'The image will be sized based on the `position` value.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot width.'].join(' ')\n  },\n  sizey: {\n    valType: 'number',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image container size vertically.', 'The image will be sized based on the `position` value.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.'].join(' ')\n  },\n  sizing: {\n    valType: 'enumerated',\n    values: ['fill', 'contain', 'stretch'],\n    dflt: 'contain',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Specifies which dimension of the image to constrain.'].join(' ')\n  },\n  opacity: {\n    valType: 'number',\n    role: 'info',\n    min: 0,\n    max: 1,\n    dflt: 1,\n    editType: 'arraydraw',\n    description: 'Sets the opacity of the image.'\n  },\n  x: {\n    valType: 'any',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s x position.', 'When `xref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `xref` for more info'].join(' ')\n  },\n  y: {\n    valType: 'any',\n    role: 'info',\n    dflt: 0,\n    editType: 'arraydraw',\n    description: ['Sets the image\\'s y position.', 'When `yref` is set to `paper`, units are sized relative', 'to the plot height.', 'See `yref` for more info'].join(' ')\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['left', 'center', 'right'],\n    dflt: 'left',\n    role: 'info',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the x position'\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['top', 'middle', 'bottom'],\n    dflt: 'top',\n    role: 'info',\n    editType: 'arraydraw',\n    description: 'Sets the anchor for the y position.'\n  },\n  xref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.x.toString()],\n    dflt: 'paper',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s x coordinate axis.', 'If set to a x axis id (e.g. *x* or *x2*), the `x` position', 'refers to an x data coordinate', 'If set to *paper*, the `x` position refers to the distance from', 'the left of plot in normalized coordinates', 'where *0* (*1*) corresponds to the left (right).'].join(' ')\n  },\n  yref: {\n    valType: 'enumerated',\n    values: ['paper', cartesianConstants.idRegex.y.toString()],\n    dflt: 'paper',\n    role: 'info',\n    editType: 'arraydraw',\n    description: ['Sets the images\\'s y coordinate axis.', 'If set to a y axis id (e.g. *y* or *y2*), the `y` position', 'refers to a y data coordinate.', 'If set to *paper*, the `y` position refers to the distance from', 'the bottom of the plot in normalized coordinates', 'where *0* (*1*) corresponds to the bottom (top).'].join(' ')\n  },\n  editType: 'arraydraw'\n});","map":{"version":3,"names":["cartesianConstants","require","templatedArray","module","exports","visible","valType","role","dflt","editType","description","join","source","layer","values","sizex","sizey","sizing","opacity","min","max","x","y","xanchor","yanchor","xref","idRegex","toString","yref"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/components/images/attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cartesianConstants = require('../../plots/cartesian/constants');\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\n\nmodule.exports = templatedArray('image', {\n    visible: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'arraydraw',\n        description: [\n            'Determines whether or not this image is visible.'\n        ].join(' ')\n    },\n\n    source: {\n        valType: 'string',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies the URL of the image to be used.',\n            'The URL must be accessible from the domain where the',\n            'plot code is run, and can be either relative or absolute.'\n\n        ].join(' ')\n    },\n\n    layer: {\n        valType: 'enumerated',\n        values: ['below', 'above'],\n        dflt: 'above',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies whether images are drawn below or above traces.',\n            'When `xref` and `yref` are both set to `paper`,',\n            'image is drawn below the entire plot area.'\n        ].join(' ')\n    },\n\n    sizex: {\n        valType: 'number',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size horizontally.',\n            'The image will be sized based on the `position` value.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot width.'\n        ].join(' ')\n    },\n\n    sizey: {\n        valType: 'number',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image container size vertically.',\n            'The image will be sized based on the `position` value.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.'\n        ].join(' ')\n    },\n\n    sizing: {\n        valType: 'enumerated',\n        values: ['fill', 'contain', 'stretch'],\n        dflt: 'contain',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Specifies which dimension of the image to constrain.'\n        ].join(' ')\n    },\n\n    opacity: {\n        valType: 'number',\n        role: 'info',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        editType: 'arraydraw',\n        description: 'Sets the opacity of the image.'\n    },\n\n    x: {\n        valType: 'any',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s x position.',\n            'When `xref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `xref` for more info'\n        ].join(' ')\n    },\n\n    y: {\n        valType: 'any',\n        role: 'info',\n        dflt: 0,\n        editType: 'arraydraw',\n        description: [\n            'Sets the image\\'s y position.',\n            'When `yref` is set to `paper`, units are sized relative',\n            'to the plot height.',\n            'See `yref` for more info'\n        ].join(' ')\n    },\n\n    xanchor: {\n        valType: 'enumerated',\n        values: ['left', 'center', 'right'],\n        dflt: 'left',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the x position'\n    },\n\n    yanchor: {\n        valType: 'enumerated',\n        values: ['top', 'middle', 'bottom'],\n        dflt: 'top',\n        role: 'info',\n        editType: 'arraydraw',\n        description: 'Sets the anchor for the y position.'\n    },\n\n    xref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.x.toString()\n        ],\n        dflt: 'paper',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s x coordinate axis.',\n            'If set to a x axis id (e.g. *x* or *x2*), the `x` position',\n            'refers to an x data coordinate',\n            'If set to *paper*, the `x` position refers to the distance from',\n            'the left of plot in normalized coordinates',\n            'where *0* (*1*) corresponds to the left (right).'\n        ].join(' ')\n    },\n\n    yref: {\n        valType: 'enumerated',\n        values: [\n            'paper',\n            cartesianConstants.idRegex.y.toString()\n        ],\n        dflt: 'paper',\n        role: 'info',\n        editType: 'arraydraw',\n        description: [\n            'Sets the images\\'s y coordinate axis.',\n            'If set to a y axis id (e.g. *y* or *y2*), the `y` position',\n            'refers to a y data coordinate.',\n            'If set to *paper*, the `y` position refers to the distance from',\n            'the bottom of the plot in normalized coordinates',\n            'where *0* (*1*) corresponds to the bottom (top).'\n        ].join(' ')\n    },\n    editType: 'arraydraw'\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
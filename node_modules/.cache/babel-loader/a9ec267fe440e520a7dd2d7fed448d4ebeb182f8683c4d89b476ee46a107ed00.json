{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\nvar handleDomainDefaults = require('../../plots/domain').defaults;\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\nvar attributes = require('./attributes');\nvar axisBrush = require('./axisbrush');\nvar maxDimensionCount = require('./constants').maxDimensionCount;\nvar mergeLength = require('./merge_length');\nfunction handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce) {\n  var lineColor = coerce('line.color', defaultColor);\n  if (hasColorscale(traceIn, 'line') && Lib.isArrayOrTypedArray(lineColor)) {\n    if (lineColor.length) {\n      coerce('line.colorscale');\n      colorscaleDefaults(traceIn, traceOut, layout, coerce, {\n        prefix: 'line.',\n        cLetter: 'c'\n      });\n      // TODO: I think it would be better to keep showing lines beyond the last line color\n      // but I'm not sure what color to give these lines - probably black or white\n      // depending on the background color?\n      return lineColor.length;\n    } else {\n      traceOut.line.color = defaultColor;\n    }\n  }\n  return Infinity;\n}\nfunction dimensionDefaults(dimensionIn, dimensionOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(dimensionIn, dimensionOut, attributes.dimensions, attr, dflt);\n  }\n  var values = coerce('values');\n  var visible = coerce('visible');\n  if (!(values && values.length)) {\n    visible = dimensionOut.visible = false;\n  }\n  if (visible) {\n    coerce('label');\n    coerce('tickvals');\n    coerce('ticktext');\n    coerce('tickformat');\n    coerce('range');\n    coerce('multiselect');\n    var constraintRange = coerce('constraintrange');\n    if (constraintRange) {\n      dimensionOut.constraintrange = axisBrush.cleanRanges(constraintRange, dimensionOut);\n    }\n  }\n}\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n  var dimensionsIn = traceIn.dimensions;\n  if (Array.isArray(dimensionsIn) && dimensionsIn.length > maxDimensionCount) {\n    Lib.log('parcoords traces support up to ' + maxDimensionCount + ' dimensions at the moment');\n    dimensionsIn.splice(maxDimensionCount);\n  }\n  var dimensions = handleArrayContainerDefaults(traceIn, traceOut, {\n    name: 'dimensions',\n    handleItemDefaults: dimensionDefaults\n  });\n  var len = handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n  handleDomainDefaults(traceOut, layout, coerce);\n  if (!Array.isArray(dimensions) || !dimensions.length) {\n    traceOut.visible = false;\n  }\n  mergeLength(traceOut, dimensions, 'values', len);\n\n  // make default font size 10px (default is 12),\n  // scale linearly with global font size\n  var fontDflt = {\n    family: layout.font.family,\n    size: Math.round(layout.font.size / 1.2),\n    color: layout.font.color\n  };\n  Lib.coerceFont(coerce, 'labelfont', fontDflt);\n  Lib.coerceFont(coerce, 'tickfont', fontDflt);\n  Lib.coerceFont(coerce, 'rangefont', fontDflt);\n};","map":{"version":3,"names":["Lib","require","hasColorscale","colorscaleDefaults","handleDomainDefaults","defaults","handleArrayContainerDefaults","attributes","axisBrush","maxDimensionCount","mergeLength","handleLineDefaults","traceIn","traceOut","defaultColor","layout","coerce","lineColor","isArrayOrTypedArray","length","prefix","cLetter","line","color","Infinity","dimensionDefaults","dimensionIn","dimensionOut","attr","dflt","dimensions","values","visible","constraintRange","constraintrange","cleanRanges","module","exports","supplyDefaults","dimensionsIn","Array","isArray","log","splice","name","handleItemDefaults","len","fontDflt","family","font","size","Math","round","coerceFont"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/parcoords/defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\nvar handleDomainDefaults = require('../../plots/domain').defaults;\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nvar attributes = require('./attributes');\nvar axisBrush = require('./axisbrush');\nvar maxDimensionCount = require('./constants').maxDimensionCount;\nvar mergeLength = require('./merge_length');\n\nfunction handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce) {\n    var lineColor = coerce('line.color', defaultColor);\n\n    if(hasColorscale(traceIn, 'line') && Lib.isArrayOrTypedArray(lineColor)) {\n        if(lineColor.length) {\n            coerce('line.colorscale');\n            colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'line.', cLetter: 'c'});\n            // TODO: I think it would be better to keep showing lines beyond the last line color\n            // but I'm not sure what color to give these lines - probably black or white\n            // depending on the background color?\n            return lineColor.length;\n        }\n        else {\n            traceOut.line.color = defaultColor;\n        }\n    }\n    return Infinity;\n}\n\nfunction dimensionDefaults(dimensionIn, dimensionOut) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(dimensionIn, dimensionOut, attributes.dimensions, attr, dflt);\n    }\n\n    var values = coerce('values');\n    var visible = coerce('visible');\n    if(!(values && values.length)) {\n        visible = dimensionOut.visible = false;\n    }\n\n    if(visible) {\n        coerce('label');\n        coerce('tickvals');\n        coerce('ticktext');\n        coerce('tickformat');\n        coerce('range');\n\n        coerce('multiselect');\n        var constraintRange = coerce('constraintrange');\n        if(constraintRange) {\n            dimensionOut.constraintrange = axisBrush.cleanRanges(constraintRange, dimensionOut);\n        }\n    }\n}\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var dimensionsIn = traceIn.dimensions;\n    if(Array.isArray(dimensionsIn) && dimensionsIn.length > maxDimensionCount) {\n        Lib.log('parcoords traces support up to ' + maxDimensionCount + ' dimensions at the moment');\n        dimensionsIn.splice(maxDimensionCount);\n    }\n\n    var dimensions = handleArrayContainerDefaults(traceIn, traceOut, {\n        name: 'dimensions',\n        handleItemDefaults: dimensionDefaults\n    });\n\n    var len = handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n\n    handleDomainDefaults(traceOut, layout, coerce);\n\n    if(!Array.isArray(dimensions) || !dimensions.length) {\n        traceOut.visible = false;\n    }\n\n    mergeLength(traceOut, dimensions, 'values', len);\n\n    // make default font size 10px (default is 12),\n    // scale linearly with global font size\n    var fontDflt = {\n        family: layout.font.family,\n        size: Math.round(layout.font.size / 1.2),\n        color: layout.font.color\n    };\n\n    Lib.coerceFont(coerce, 'labelfont', fontDflt);\n    Lib.coerceFont(coerce, 'tickfont', fontDflt);\n    Lib.coerceFont(coerce, 'rangefont', fontDflt);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\nmodule.exports = function calc(gd, trace) {\n  trace._len = Math.min(trace.x.length, trace.y.length, trace.z.length, trace.value.length);\n  var min = Infinity;\n  var max = -Infinity;\n  var len = trace.value.length;\n  for (var i = 0; i < len; i++) {\n    var v = trace.value[i];\n    min = Math.min(min, v);\n    max = Math.max(max, v);\n  }\n  trace._minValues = min;\n  trace._maxValues = max;\n  trace._vMin = trace.isomin === undefined || trace.isomin === null ? min : trace.isomin;\n  trace._vMax = trace.isomax === undefined || trace.isomin === null ? max : trace.isomax;\n  colorscaleCalc(gd, trace, {\n    vals: [trace._vMin, trace._vMax],\n    containerStr: '',\n    cLetter: 'c'\n  });\n};","map":{"version":3,"names":["colorscaleCalc","require","module","exports","calc","gd","trace","_len","Math","min","x","length","y","z","value","Infinity","max","len","i","v","_minValues","_maxValues","_vMin","isomin","undefined","_vMax","isomax","vals","containerStr","cLetter"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/isosurface/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\n\nmodule.exports = function calc(gd, trace) {\n\n    trace._len = Math.min(trace.x.length, trace.y.length, trace.z.length, trace.value.length);\n\n    var min = Infinity;\n    var max = -Infinity;\n    var len = trace.value.length;\n    for(var i = 0; i < len; i++) {\n        var v = trace.value[i];\n        min = Math.min(min, v);\n        max = Math.max(max, v);\n    }\n\n    trace._minValues = min;\n    trace._maxValues = max;\n\n    trace._vMin = (trace.isomin === undefined || trace.isomin === null) ? min : trace.isomin;\n    trace._vMax = (trace.isomax === undefined || trace.isomin === null) ? max : trace.isomax;\n\n    colorscaleCalc(gd, trace, {\n        vals: [trace._vMin, trace._vMax],\n        containerStr: '',\n        cLetter: 'c'\n    });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,cAAc,GAAGC,OAAO,CAAC,kCAAkC,CAAC;AAEhEC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;EAEtCA,KAAK,CAACC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAACH,KAAK,CAACI,CAAC,CAACC,MAAM,EAAEL,KAAK,CAACM,CAAC,CAACD,MAAM,EAAEL,KAAK,CAACO,CAAC,CAACF,MAAM,EAAEL,KAAK,CAACQ,KAAK,CAACH,MAAM,CAAC;EAEzF,IAAIF,GAAG,GAAGM,QAAQ;EAClB,IAAIC,GAAG,GAAG,CAACD,QAAQ;EACnB,IAAIE,GAAG,GAAGX,KAAK,CAACQ,KAAK,CAACH,MAAM;EAC5B,KAAI,IAAIO,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,EAAEC,CAAC,EAAE,EAAE;IACzB,IAAIC,CAAC,GAAGb,KAAK,CAACQ,KAAK,CAACI,CAAC,CAAC;IACtBT,GAAG,GAAGD,IAAI,CAACC,GAAG,CAACA,GAAG,EAAEU,CAAC,CAAC;IACtBH,GAAG,GAAGR,IAAI,CAACQ,GAAG,CAACA,GAAG,EAAEG,CAAC,CAAC;EAC1B;EAEAb,KAAK,CAACc,UAAU,GAAGX,GAAG;EACtBH,KAAK,CAACe,UAAU,GAAGL,GAAG;EAEtBV,KAAK,CAACgB,KAAK,GAAIhB,KAAK,CAACiB,MAAM,KAAKC,SAAS,IAAIlB,KAAK,CAACiB,MAAM,KAAK,IAAI,GAAId,GAAG,GAAGH,KAAK,CAACiB,MAAM;EACxFjB,KAAK,CAACmB,KAAK,GAAInB,KAAK,CAACoB,MAAM,KAAKF,SAAS,IAAIlB,KAAK,CAACiB,MAAM,KAAK,IAAI,GAAIP,GAAG,GAAGV,KAAK,CAACoB,MAAM;EAExF1B,cAAc,CAACK,EAAE,EAAEC,KAAK,EAAE;IACtBqB,IAAI,EAAE,CAACrB,KAAK,CAACgB,KAAK,EAAEhB,KAAK,CAACmB,KAAK,CAAC;IAChCG,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
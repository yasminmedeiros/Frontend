{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorscaleAttrs = require('../../components/colorscale/attributes');\nvar colorbarAttrs = require('../../components/colorbar/attributes');\nvar surfaceAtts = require('../surface/attributes');\nvar meshAttrs = require('../mesh3d/attributes');\nvar baseAttrs = require('../../plots/attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nfunction makeSliceAttr(axLetter) {\n  return {\n    show: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: false,\n      description: ['Determines whether or not slice planes about the', axLetter, 'dimension are drawn.'].join(' ')\n    },\n    locations: {\n      valType: 'data_array',\n      dflt: [],\n      role: 'info',\n      description: ['Specifies the location(s) of slices on the axis.', 'When not locations specified slices would be created for', 'all points of the axis', axLetter, 'except start and end.'].join(' ')\n    },\n    fill: {\n      valType: 'number',\n      role: 'style',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      description: ['Sets the fill ratio of the `slices`. The default fill value of the', '`slices` is 1 meaning that they are entirely shaded. On the other hand', 'Applying a `fill` ratio less than one would allow the creation of', 'openings parallel to the edges.'].join(' ')\n    }\n  };\n}\nfunction makeCapAttr(axLetter) {\n  return {\n    show: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      description: ['Sets the fill ratio of the `slices`. The default fill value of the', axLetter, '`slices` is 1 meaning that they are entirely shaded. On the other hand', 'Applying a `fill` ratio less than one would allow the creation of', 'openings parallel to the edges.'].join(' ')\n    },\n    fill: {\n      valType: 'number',\n      role: 'style',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      description: ['Sets the fill ratio of the `caps`. The default fill value of the', '`caps` is 1 meaning that they are entirely shaded. On the other hand', 'Applying a `fill` ratio less than one would allow the creation of', 'openings parallel to the edges.'].join(' ')\n    }\n  };\n}\nvar attrs = module.exports = overrideAll(extendFlat({\n  x: {\n    valType: 'data_array',\n    role: 'info',\n    description: ['Sets the X coordinates of the vertices on X axis.'].join(' ')\n  },\n  y: {\n    valType: 'data_array',\n    role: 'info',\n    description: ['Sets the Y coordinates of the vertices on Y axis.'].join(' ')\n  },\n  z: {\n    valType: 'data_array',\n    role: 'info',\n    description: ['Sets the Z coordinates of the vertices on Z axis.'].join(' ')\n  },\n  value: {\n    valType: 'data_array',\n    role: 'info',\n    description: ['Sets the 4th dimension (value) of the vertices.'].join(' ')\n  },\n  isomin: {\n    valType: 'number',\n    role: 'info',\n    description: ['Sets the minimum boundary for iso-surface plot.'].join(' ')\n  },\n  isomax: {\n    valType: 'number',\n    role: 'info',\n    description: ['Sets the maximum boundary for iso-surface plot.'].join(' ')\n  },\n  surface: {\n    show: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      description: ['Hides/displays surfaces between minimum and maximum iso-values.'].join(' ')\n    },\n    count: {\n      valType: 'integer',\n      role: 'info',\n      dflt: 2,\n      min: 1,\n      description: ['Sets the number of iso-surfaces between minimum and maximum iso-values.', 'By default this value is 2 meaning that only minimum and maximum surfaces', 'would be drawn.'].join(' ')\n    },\n    fill: {\n      valType: 'number',\n      role: 'style',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      description: ['Sets the fill ratio of the iso-surface. The default fill value of the', 'surface is 1 meaning that they are entirely shaded. On the other hand', 'Applying a `fill` ratio less than one would allow the creation of', 'openings parallel to the edges.'].join(' ')\n    },\n    pattern: {\n      valType: 'flaglist',\n      flags: ['A', 'B', 'C', 'D', 'E'],\n      extras: ['all', 'odd', 'even'],\n      dflt: 'all',\n      role: 'style',\n      description: ['Sets the surface pattern of the iso-surface 3-D sections. The default pattern of', 'the surface is `all` meaning that the rest of surface elements would be shaded.', 'The check options (either 1 or 2) could be used to draw half of the squares', 'on the surface. Using various combinations of capital `A`, `B`, `C`, `D` and `E`', 'may also be used to reduce the number of triangles on the iso-surfaces and', 'creating other patterns of interest.'].join(' ')\n    }\n  },\n  spaceframe: {\n    show: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: false,\n      description: ['Displays/hides tetrahedron shapes between minimum and', 'maximum iso-values. Often useful when either caps or', 'surfaces are disabled or filled with values less than 1.'].join(' ')\n    },\n    fill: {\n      valType: 'number',\n      role: 'style',\n      min: 0,\n      max: 1,\n      dflt: 0.15,\n      description: ['Sets the fill ratio of the `spaceframe` elements. The default fill value', 'is 0.15 meaning that only 15% of the area of every faces of tetras would be', 'shaded. Applying a greater `fill` ratio would allow the creation of stronger', 'elements or could be sued to have entirely closed areas (in case of using 1).'].join(' ')\n    }\n  },\n  slices: {\n    x: makeSliceAttr('x'),\n    y: makeSliceAttr('y'),\n    z: makeSliceAttr('z')\n  },\n  caps: {\n    x: makeCapAttr('x'),\n    y: makeCapAttr('y'),\n    z: makeCapAttr('z')\n  },\n  text: {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    arrayOk: true,\n    description: ['Sets the text elements associated with the vertices.', 'If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,', 'these elements will be seen in the hover labels.'].join(' ')\n  }\n}, colorscaleAttrs('', {\n  colorAttr: '`value`',\n  showScaleDflt: true,\n  editTypeOverride: 'calc'\n}), {\n  colorbar: colorbarAttrs,\n  // Flat shaded mode\n  flatshading: {\n    valType: 'boolean',\n    role: 'style',\n    dflt: false,\n    description: ['Determines whether or not normal smoothing is applied to the isosurfaces,', 'creating isosurfaces with an angular, low-poly look via flat reflections.'].join(' ')\n  },\n  contour: {\n    show: extendFlat({}, surfaceAtts.contours.x.show, {\n      description: ['Sets whether or not dynamic contours are shown on hover.', 'Contours are more useful when hovering on caps and slices.'].join(' ')\n    }),\n    color: surfaceAtts.contours.x.color,\n    width: surfaceAtts.contours.x.width\n  },\n  lightposition: {\n    x: extendFlat({}, surfaceAtts.lightposition.x, {\n      dflt: 1e5\n    }),\n    y: extendFlat({}, surfaceAtts.lightposition.y, {\n      dflt: 1e5\n    }),\n    z: extendFlat({}, surfaceAtts.lightposition.z, {\n      dflt: 0\n    })\n  },\n  lighting: meshAttrs.lighting,\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo)\n}), 'calc', 'nested');\nattrs.x.editType = attrs.y.editType = attrs.z.editType = attrs.value.editType = 'calc+clearAxisTypes';\nattrs.transforms = undefined;","map":{"version":3,"names":["colorscaleAttrs","require","colorbarAttrs","surfaceAtts","meshAttrs","baseAttrs","extendFlat","overrideAll","makeSliceAttr","axLetter","show","valType","role","dflt","description","join","locations","fill","min","max","makeCapAttr","attrs","module","exports","x","y","z","value","isomin","isomax","surface","count","pattern","flags","extras","spaceframe","slices","caps","text","arrayOk","colorAttr","showScaleDflt","editTypeOverride","colorbar","flatshading","contour","contours","color","width","lightposition","lighting","hoverinfo","editType","transforms","undefined"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/isosurface/attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorscaleAttrs = require('../../components/colorscale/attributes');\nvar colorbarAttrs = require('../../components/colorbar/attributes');\nvar surfaceAtts = require('../surface/attributes');\nvar meshAttrs = require('../mesh3d/attributes');\nvar baseAttrs = require('../../plots/attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nfunction makeSliceAttr(axLetter) {\n    return {\n        show: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: false,\n            description: [\n                'Determines whether or not slice planes about the', axLetter,\n                'dimension are drawn.'\n            ].join(' ')\n        },\n        locations: {\n            valType: 'data_array',\n            dflt: [],\n            role: 'info',\n            description: [\n                'Specifies the location(s) of slices on the axis.',\n                'When not locations specified slices would be created for',\n                'all points of the axis', axLetter, 'except start and end.'\n            ].join(' ')\n        },\n        fill: {\n            valType: 'number',\n            role: 'style',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            description: [\n                'Sets the fill ratio of the `slices`. The default fill value of the',\n                '`slices` is 1 meaning that they are entirely shaded. On the other hand',\n                'Applying a `fill` ratio less than one would allow the creation of',\n                'openings parallel to the edges.'\n            ].join(' ')\n        }\n    };\n}\n\nfunction makeCapAttr(axLetter) {\n    return {\n        show: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Sets the fill ratio of the `slices`. The default fill value of the', axLetter,\n                '`slices` is 1 meaning that they are entirely shaded. On the other hand',\n                'Applying a `fill` ratio less than one would allow the creation of',\n                'openings parallel to the edges.'\n            ].join(' ')\n        },\n        fill: {\n            valType: 'number',\n            role: 'style',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            description: [\n                'Sets the fill ratio of the `caps`. The default fill value of the',\n                '`caps` is 1 meaning that they are entirely shaded. On the other hand',\n                'Applying a `fill` ratio less than one would allow the creation of',\n                'openings parallel to the edges.'\n            ].join(' ')\n        }\n    };\n}\n\nvar attrs = module.exports = overrideAll(extendFlat({\n    x: {\n        valType: 'data_array',\n        role: 'info',\n        description: [\n            'Sets the X coordinates of the vertices on X axis.'\n        ].join(' ')\n    },\n    y: {\n        valType: 'data_array',\n        role: 'info',\n        description: [\n            'Sets the Y coordinates of the vertices on Y axis.'\n        ].join(' ')\n    },\n    z: {\n        valType: 'data_array',\n        role: 'info',\n        description: [\n            'Sets the Z coordinates of the vertices on Z axis.'\n        ].join(' ')\n    },\n    value: {\n        valType: 'data_array',\n        role: 'info',\n        description: [\n            'Sets the 4th dimension (value) of the vertices.'\n        ].join(' ')\n    },\n    isomin: {\n        valType: 'number',\n        role: 'info',\n        description: [\n            'Sets the minimum boundary for iso-surface plot.'\n        ].join(' ')\n    },\n    isomax: {\n        valType: 'number',\n        role: 'info',\n        description: [\n            'Sets the maximum boundary for iso-surface plot.'\n        ].join(' ')\n    },\n\n    surface: {\n        show: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Hides/displays surfaces between minimum and maximum iso-values.'\n            ].join(' ')\n        },\n        count: {\n            valType: 'integer',\n            role: 'info',\n            dflt: 2,\n            min: 1,\n            description: [\n                'Sets the number of iso-surfaces between minimum and maximum iso-values.',\n                'By default this value is 2 meaning that only minimum and maximum surfaces',\n                'would be drawn.'\n            ].join(' ')\n        },\n        fill: {\n            valType: 'number',\n            role: 'style',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            description: [\n                'Sets the fill ratio of the iso-surface. The default fill value of the',\n                'surface is 1 meaning that they are entirely shaded. On the other hand',\n                'Applying a `fill` ratio less than one would allow the creation of',\n                'openings parallel to the edges.'\n            ].join(' ')\n        },\n        pattern: {\n            valType: 'flaglist',\n            flags: ['A', 'B', 'C', 'D', 'E'],\n            extras: ['all', 'odd', 'even'],\n            dflt: 'all',\n            role: 'style',\n            description: [\n                'Sets the surface pattern of the iso-surface 3-D sections. The default pattern of',\n                'the surface is `all` meaning that the rest of surface elements would be shaded.',\n                'The check options (either 1 or 2) could be used to draw half of the squares',\n                'on the surface. Using various combinations of capital `A`, `B`, `C`, `D` and `E`',\n                'may also be used to reduce the number of triangles on the iso-surfaces and',\n                'creating other patterns of interest.'\n            ].join(' ')\n        }\n    },\n\n    spaceframe: {\n        show: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: false,\n            description: [\n                'Displays/hides tetrahedron shapes between minimum and',\n                'maximum iso-values. Often useful when either caps or',\n                'surfaces are disabled or filled with values less than 1.'\n            ].join(' ')\n        },\n        fill: {\n            valType: 'number',\n            role: 'style',\n            min: 0,\n            max: 1,\n            dflt: 0.15,\n            description: [\n                'Sets the fill ratio of the `spaceframe` elements. The default fill value',\n                'is 0.15 meaning that only 15% of the area of every faces of tetras would be',\n                'shaded. Applying a greater `fill` ratio would allow the creation of stronger',\n                'elements or could be sued to have entirely closed areas (in case of using 1).'\n            ].join(' ')\n        }\n    },\n\n    slices: {\n        x: makeSliceAttr('x'),\n        y: makeSliceAttr('y'),\n        z: makeSliceAttr('z')\n    },\n\n    caps: {\n        x: makeCapAttr('x'),\n        y: makeCapAttr('y'),\n        z: makeCapAttr('z')\n    },\n\n    text: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        arrayOk: true,\n        description: [\n            'Sets the text elements associated with the vertices.',\n            'If trace `hoverinfo` contains a *text* flag and *hovertext* is not set,',\n            'these elements will be seen in the hover labels.'\n        ].join(' ')\n    },\n},\n\ncolorscaleAttrs('', {\n    colorAttr: '`value`',\n    showScaleDflt: true,\n    editTypeOverride: 'calc'\n}), {\n\n    colorbar: colorbarAttrs,\n\n    // Flat shaded mode\n    flatshading: {\n        valType: 'boolean',\n        role: 'style',\n        dflt: false,\n        description: [\n            'Determines whether or not normal smoothing is applied to the isosurfaces,',\n            'creating isosurfaces with an angular, low-poly look via flat reflections.'\n        ].join(' ')\n    },\n\n    contour: {\n        show: extendFlat({}, surfaceAtts.contours.x.show, {\n            description: [\n                'Sets whether or not dynamic contours are shown on hover.',\n                'Contours are more useful when hovering on caps and slices.'\n            ].join(' ')\n        }),\n        color: surfaceAtts.contours.x.color,\n        width: surfaceAtts.contours.x.width\n    },\n\n    lightposition: {\n        x: extendFlat({}, surfaceAtts.lightposition.x, {dflt: 1e5}),\n        y: extendFlat({}, surfaceAtts.lightposition.y, {dflt: 1e5}),\n        z: extendFlat({}, surfaceAtts.lightposition.z, {dflt: 0})\n    },\n    lighting: meshAttrs.lighting,\n\n    hoverinfo: extendFlat({}, baseAttrs.hoverinfo)\n}), 'calc', 'nested');\n\nattrs.x.editType = attrs.y.editType = attrs.z.editType = attrs.value.editType = 'calc+clearAxisTypes';\nattrs.transforms = undefined;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
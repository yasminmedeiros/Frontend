{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar defaultLine = require('../../components/color').defaultLine;\nvar domainAttrs = require('../domain').attributes;\nvar fontAttrs = require('../font_attributes');\nvar textposition = require('../../traces/scatter/attributes').textposition;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\nvar fontAttr = fontAttrs({\n  description: ['Sets the icon text font.', 'Has an effect only when `type` is set to *symbol*.'].join(' ')\n});\nfontAttr.family.dflt = 'Open Sans Regular, Arial Unicode MS Regular';\nvar attrs = module.exports = overrideAll({\n  _arrayAttrRegexps: [Lib.counterRegex('mapbox', '.layers', true)],\n  domain: domainAttrs({\n    name: 'mapbox'\n  }),\n  accesstoken: {\n    valType: 'string',\n    noBlank: true,\n    strict: true,\n    role: 'info',\n    description: ['Sets the mapbox access token to be used for this mapbox map.', 'Alternatively, the mapbox access token can be set in the', 'configuration options under `mapboxAccessToken`.'].join(' ')\n  },\n  style: {\n    valType: 'any',\n    values: ['basic', 'streets', 'outdoors', 'light', 'dark', 'satellite', 'satellite-streets'],\n    dflt: 'basic',\n    role: 'style',\n    description: ['Sets the Mapbox map style.', 'Either input one of the default Mapbox style names or the URL to a custom style', 'or a valid Mapbox style JSON.'].join(' ')\n  },\n  center: {\n    lon: {\n      valType: 'number',\n      dflt: 0,\n      role: 'info',\n      description: 'Sets the longitude of the center of the map (in degrees East).'\n    },\n    lat: {\n      valType: 'number',\n      dflt: 0,\n      role: 'info',\n      description: 'Sets the latitude of the center of the map (in degrees North).'\n    }\n  },\n  zoom: {\n    valType: 'number',\n    dflt: 1,\n    role: 'info',\n    description: 'Sets the zoom level of the map.'\n  },\n  bearing: {\n    valType: 'number',\n    dflt: 0,\n    role: 'info',\n    description: 'Sets the bearing angle of the map (in degrees counter-clockwise from North).'\n  },\n  pitch: {\n    valType: 'number',\n    dflt: 0,\n    role: 'info',\n    description: ['Sets the pitch angle of the map', '(in degrees, where *0* means perpendicular to the surface of the map).'].join(' ')\n  },\n  layers: templatedArray('layer', {\n    visible: {\n      valType: 'boolean',\n      role: 'info',\n      dflt: true,\n      description: ['Determines whether this layer is displayed'].join(' ')\n    },\n    sourcetype: {\n      valType: 'enumerated',\n      values: ['geojson', 'vector'],\n      dflt: 'geojson',\n      role: 'info',\n      description: ['Sets the source type for this layer.', 'Support for *raster*, *image* and *video* source types is coming soon.'].join(' ')\n    },\n    source: {\n      valType: 'any',\n      role: 'info',\n      description: ['Sets the source data for this layer.', 'Source can be either a URL,', 'a geojson object (with `sourcetype` set to *geojson*)', 'or an array of tile URLS (with `sourcetype` set to *vector*).'].join(' ')\n    },\n    sourcelayer: {\n      valType: 'string',\n      dflt: '',\n      role: 'info',\n      description: ['Specifies the layer to use from a vector tile source.', 'Required for *vector* source type that supports multiple layers.'].join(' ')\n    },\n    type: {\n      valType: 'enumerated',\n      values: ['circle', 'line', 'fill', 'symbol'],\n      dflt: 'circle',\n      role: 'info',\n      description: ['Sets the layer type.', 'Support for *raster*, *background* types is coming soon.', 'Note that *line* and *fill* are not compatible with Point', 'GeoJSON geometries.'].join(' ')\n    },\n    // attributes shared between all types\n    below: {\n      valType: 'string',\n      dflt: '',\n      role: 'info',\n      description: ['Determines if the layer will be inserted', 'before the layer with the specified ID.', 'If omitted or set to \\'\\',', 'the layer will be inserted above every existing layer.'].join(' ')\n    },\n    color: {\n      valType: 'color',\n      dflt: defaultLine,\n      role: 'style',\n      description: ['Sets the primary layer color.', 'If `type` is *circle*, color corresponds to the circle color', 'If `type` is *line*, color corresponds to the line color', 'If `type` is *fill*, color corresponds to the fill color', 'If `type` is *symbol*, color corresponds to the icon color'].join(' ')\n    },\n    opacity: {\n      valType: 'number',\n      min: 0,\n      max: 1,\n      dflt: 1,\n      role: 'info',\n      description: 'Sets the opacity of the layer.'\n    },\n    // type-specific style attributes\n    circle: {\n      radius: {\n        valType: 'number',\n        dflt: 15,\n        role: 'style',\n        description: ['Sets the circle radius.', 'Has an effect only when `type` is set to *circle*.'].join(' ')\n      }\n    },\n    line: {\n      width: {\n        valType: 'number',\n        dflt: 2,\n        role: 'style',\n        description: ['Sets the line width.', 'Has an effect only when `type` is set to *line*.'].join(' ')\n      }\n    },\n    fill: {\n      outlinecolor: {\n        valType: 'color',\n        dflt: defaultLine,\n        role: 'style',\n        description: ['Sets the fill outline color.', 'Has an effect only when `type` is set to *fill*.'].join(' ')\n      }\n    },\n    symbol: {\n      icon: {\n        valType: 'string',\n        dflt: 'marker',\n        role: 'style',\n        description: ['Sets the symbol icon image.', 'Full list: https://www.mapbox.com/maki-icons/'].join(' ')\n      },\n      iconsize: {\n        valType: 'number',\n        dflt: 10,\n        role: 'style',\n        description: ['Sets the symbol icon size.', 'Has an effect only when `type` is set to *symbol*.'].join(' ')\n      },\n      text: {\n        valType: 'string',\n        dflt: '',\n        role: 'info',\n        description: ['Sets the symbol text.'].join(' ')\n      },\n      textfont: fontAttr,\n      textposition: Lib.extendFlat({}, textposition, {\n        arrayOk: false\n      })\n    }\n  })\n}, 'plot', 'from-root');\n\n// set uirevision outside of overrideAll so it can be `editType: 'none'`\nattrs.uirevision = {\n  valType: 'any',\n  role: 'info',\n  editType: 'none',\n  description: ['Controls persistence of user-driven changes in the view:', '`center`, `zoom`, `bearing`, `pitch`. Defaults to `layout.uirevision`.'].join(' ')\n};","map":{"version":3,"names":["Lib","require","defaultLine","domainAttrs","attributes","fontAttrs","textposition","overrideAll","templatedArray","fontAttr","description","join","family","dflt","attrs","module","exports","_arrayAttrRegexps","counterRegex","domain","name","accesstoken","valType","noBlank","strict","role","style","values","center","lon","lat","zoom","bearing","pitch","layers","visible","sourcetype","source","sourcelayer","type","below","color","opacity","min","max","circle","radius","line","width","fill","outlinecolor","symbol","icon","iconsize","text","textfont","extendFlat","arrayOk","uirevision","editType"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/mapbox/layout_attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar defaultLine = require('../../components/color').defaultLine;\nvar domainAttrs = require('../domain').attributes;\nvar fontAttrs = require('../font_attributes');\nvar textposition = require('../../traces/scatter/attributes').textposition;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar fontAttr = fontAttrs({\n    description: [\n        'Sets the icon text font.',\n        'Has an effect only when `type` is set to *symbol*.'\n    ].join(' ')\n});\nfontAttr.family.dflt = 'Open Sans Regular, Arial Unicode MS Regular';\n\nvar attrs = module.exports = overrideAll({\n    _arrayAttrRegexps: [Lib.counterRegex('mapbox', '.layers', true)],\n\n    domain: domainAttrs({name: 'mapbox'}),\n\n    accesstoken: {\n        valType: 'string',\n        noBlank: true,\n        strict: true,\n        role: 'info',\n        description: [\n            'Sets the mapbox access token to be used for this mapbox map.',\n            'Alternatively, the mapbox access token can be set in the',\n            'configuration options under `mapboxAccessToken`.'\n        ].join(' ')\n    },\n    style: {\n        valType: 'any',\n        values: ['basic', 'streets', 'outdoors', 'light', 'dark', 'satellite', 'satellite-streets'],\n        dflt: 'basic',\n        role: 'style',\n        description: [\n            'Sets the Mapbox map style.',\n            'Either input one of the default Mapbox style names or the URL to a custom style',\n            'or a valid Mapbox style JSON.'\n        ].join(' ')\n    },\n\n    center: {\n        lon: {\n            valType: 'number',\n            dflt: 0,\n            role: 'info',\n            description: 'Sets the longitude of the center of the map (in degrees East).'\n        },\n        lat: {\n            valType: 'number',\n            dflt: 0,\n            role: 'info',\n            description: 'Sets the latitude of the center of the map (in degrees North).'\n        }\n    },\n    zoom: {\n        valType: 'number',\n        dflt: 1,\n        role: 'info',\n        description: 'Sets the zoom level of the map.'\n    },\n    bearing: {\n        valType: 'number',\n        dflt: 0,\n        role: 'info',\n        description: 'Sets the bearing angle of the map (in degrees counter-clockwise from North).'\n    },\n    pitch: {\n        valType: 'number',\n        dflt: 0,\n        role: 'info',\n        description: [\n            'Sets the pitch angle of the map',\n            '(in degrees, where *0* means perpendicular to the surface of the map).'\n        ].join(' ')\n    },\n\n    layers: templatedArray('layer', {\n        visible: {\n            valType: 'boolean',\n            role: 'info',\n            dflt: true,\n            description: [\n                'Determines whether this layer is displayed'\n            ].join(' ')\n        },\n        sourcetype: {\n            valType: 'enumerated',\n            values: ['geojson', 'vector'],\n            dflt: 'geojson',\n            role: 'info',\n            description: [\n                'Sets the source type for this layer.',\n                'Support for *raster*, *image* and *video* source types is coming soon.'\n            ].join(' ')\n        },\n\n        source: {\n            valType: 'any',\n            role: 'info',\n            description: [\n                'Sets the source data for this layer.',\n                'Source can be either a URL,',\n                'a geojson object (with `sourcetype` set to *geojson*)',\n                'or an array of tile URLS (with `sourcetype` set to *vector*).'\n            ].join(' ')\n        },\n\n        sourcelayer: {\n            valType: 'string',\n            dflt: '',\n            role: 'info',\n            description: [\n                'Specifies the layer to use from a vector tile source.',\n                'Required for *vector* source type that supports multiple layers.'\n            ].join(' ')\n        },\n\n        type: {\n            valType: 'enumerated',\n            values: ['circle', 'line', 'fill', 'symbol'],\n            dflt: 'circle',\n            role: 'info',\n            description: [\n                'Sets the layer type.',\n                'Support for *raster*, *background* types is coming soon.',\n                'Note that *line* and *fill* are not compatible with Point',\n                'GeoJSON geometries.'\n            ].join(' ')\n        },\n\n        // attributes shared between all types\n        below: {\n            valType: 'string',\n            dflt: '',\n            role: 'info',\n            description: [\n                'Determines if the layer will be inserted',\n                'before the layer with the specified ID.',\n                'If omitted or set to \\'\\',',\n                'the layer will be inserted above every existing layer.'\n            ].join(' ')\n        },\n        color: {\n            valType: 'color',\n            dflt: defaultLine,\n            role: 'style',\n            description: [\n                'Sets the primary layer color.',\n                'If `type` is *circle*, color corresponds to the circle color',\n                'If `type` is *line*, color corresponds to the line color',\n                'If `type` is *fill*, color corresponds to the fill color',\n                'If `type` is *symbol*, color corresponds to the icon color'\n            ].join(' ')\n        },\n        opacity: {\n            valType: 'number',\n            min: 0,\n            max: 1,\n            dflt: 1,\n            role: 'info',\n            description: 'Sets the opacity of the layer.'\n        },\n\n        // type-specific style attributes\n        circle: {\n            radius: {\n                valType: 'number',\n                dflt: 15,\n                role: 'style',\n                description: [\n                    'Sets the circle radius.',\n                    'Has an effect only when `type` is set to *circle*.'\n                ].join(' ')\n            }\n        },\n\n        line: {\n            width: {\n                valType: 'number',\n                dflt: 2,\n                role: 'style',\n                description: [\n                    'Sets the line width.',\n                    'Has an effect only when `type` is set to *line*.'\n                ].join(' ')\n            }\n        },\n\n        fill: {\n            outlinecolor: {\n                valType: 'color',\n                dflt: defaultLine,\n                role: 'style',\n                description: [\n                    'Sets the fill outline color.',\n                    'Has an effect only when `type` is set to *fill*.'\n                ].join(' ')\n            }\n        },\n\n        symbol: {\n            icon: {\n                valType: 'string',\n                dflt: 'marker',\n                role: 'style',\n                description: [\n                    'Sets the symbol icon image.',\n                    'Full list: https://www.mapbox.com/maki-icons/'\n                ].join(' ')\n            },\n            iconsize: {\n                valType: 'number',\n                dflt: 10,\n                role: 'style',\n                description: [\n                    'Sets the symbol icon size.',\n                    'Has an effect only when `type` is set to *symbol*.'\n                ].join(' ')\n            },\n            text: {\n                valType: 'string',\n                dflt: '',\n                role: 'info',\n                description: [\n                    'Sets the symbol text.'\n                ].join(' ')\n            },\n            textfont: fontAttr,\n            textposition: Lib.extendFlat({}, textposition, { arrayOk: false })\n        }\n    })\n}, 'plot', 'from-root');\n\n// set uirevision outside of overrideAll so it can be `editType: 'none'`\nattrs.uirevision = {\n    valType: 'any',\n    role: 'info',\n    editType: 'none',\n    description: [\n        'Controls persistence of user-driven changes in the view:',\n        '`center`, `zoom`, `bearing`, `pitch`. Defaults to `layout.uirevision`.'\n    ].join(' ')\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
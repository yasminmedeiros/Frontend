{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar histogram2dCalc = require('../histogram2d/calc');\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar convertColumnData = require('./convert_column_xyz');\nvar clean2dArray = require('./clean_2d_array');\nvar interp2d = require('./interp2d');\nvar findEmpties = require('./find_empties');\nvar makeBoundArray = require('./make_bound_array');\nmodule.exports = function calc(gd, trace) {\n  // prepare the raw data\n  // run makeCalcdata on x and y even for heatmaps, in case of category mappings\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var isContour = Registry.traceIs(trace, 'contour');\n  var isHist = Registry.traceIs(trace, 'histogram');\n  var isGL2D = Registry.traceIs(trace, 'gl2d');\n  var zsmooth = isContour ? 'best' : trace.zsmooth;\n  var x;\n  var x0;\n  var dx;\n  var y;\n  var y0;\n  var dy;\n  var z;\n  var i;\n  var binned;\n\n  // cancel minimum tick spacings (only applies to bars and boxes)\n  xa._minDtick = 0;\n  ya._minDtick = 0;\n  if (isHist) {\n    binned = histogram2dCalc(gd, trace);\n    x = binned.x;\n    x0 = binned.x0;\n    dx = binned.dx;\n    y = binned.y;\n    y0 = binned.y0;\n    dy = binned.dy;\n    z = binned.z;\n  } else {\n    var zIn = trace.z;\n    if (Lib.isArray1D(zIn)) {\n      convertColumnData(trace, xa, ya, 'x', 'y', ['z']);\n      x = trace._x;\n      y = trace._y;\n      zIn = trace._z;\n    } else {\n      x = trace.x ? xa.makeCalcdata(trace, 'x') : [];\n      y = trace.y ? ya.makeCalcdata(trace, 'y') : [];\n    }\n    x0 = trace.x0 || 0;\n    dx = trace.dx || 1;\n    y0 = trace.y0 || 0;\n    dy = trace.dy || 1;\n    z = clean2dArray(zIn, trace.transpose);\n    if (isContour || trace.connectgaps) {\n      trace._emptypoints = findEmpties(z);\n      interp2d(z, trace._emptypoints);\n    }\n  }\n  function noZsmooth(msg) {\n    zsmooth = trace._input.zsmooth = trace.zsmooth = false;\n    Lib.warn('cannot use zsmooth: \"fast\": ' + msg);\n  }\n\n  // check whether we really can smooth (ie all boxes are about the same size)\n  if (zsmooth === 'fast') {\n    if (xa.type === 'log' || ya.type === 'log') {\n      noZsmooth('log axis found');\n    } else if (!isHist) {\n      if (x.length) {\n        var avgdx = (x[x.length - 1] - x[0]) / (x.length - 1);\n        var maxErrX = Math.abs(avgdx / 100);\n        for (i = 0; i < x.length - 1; i++) {\n          if (Math.abs(x[i + 1] - x[i] - avgdx) > maxErrX) {\n            noZsmooth('x scale is not linear');\n            break;\n          }\n        }\n      }\n      if (y.length && zsmooth === 'fast') {\n        var avgdy = (y[y.length - 1] - y[0]) / (y.length - 1);\n        var maxErrY = Math.abs(avgdy / 100);\n        for (i = 0; i < y.length - 1; i++) {\n          if (Math.abs(y[i + 1] - y[i] - avgdy) > maxErrY) {\n            noZsmooth('y scale is not linear');\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // create arrays of brick boundaries, to be used by autorange and heatmap.plot\n  var xlen = Lib.maxRowLength(z);\n  var xIn = trace.xtype === 'scaled' ? '' : x;\n  var xArray = makeBoundArray(trace, xIn, x0, dx, xlen, xa);\n  var yIn = trace.ytype === 'scaled' ? '' : y;\n  var yArray = makeBoundArray(trace, yIn, y0, dy, z.length, ya);\n\n  // handled in gl2d convert step\n  if (!isGL2D) {\n    trace._extremes[xa._id] = Axes.findExtremes(xa, xArray);\n    trace._extremes[ya._id] = Axes.findExtremes(ya, yArray);\n  }\n  var cd0 = {\n    x: xArray,\n    y: yArray,\n    z: z,\n    text: trace._text || trace.text\n  };\n  if (xIn && xIn.length === xArray.length - 1) cd0.xCenter = xIn;\n  if (yIn && yIn.length === yArray.length - 1) cd0.yCenter = yIn;\n  if (isHist) {\n    cd0.xRanges = binned.xRanges;\n    cd0.yRanges = binned.yRanges;\n    cd0.pts = binned.pts;\n  }\n\n  // auto-z and autocolorscale if applicable\n  if (!isContour || trace.contours.type !== 'constraint') {\n    colorscaleCalc(gd, trace, {\n      vals: z,\n      containerStr: '',\n      cLetter: 'z'\n    });\n  }\n  if (isContour && trace.contours && trace.contours.coloring === 'heatmap') {\n    var dummyTrace = {\n      type: trace.type === 'contour' ? 'heatmap' : 'histogram2d',\n      xcalendar: trace.xcalendar,\n      ycalendar: trace.ycalendar\n    };\n    cd0.xfill = makeBoundArray(dummyTrace, xIn, x0, dx, xlen, xa);\n    cd0.yfill = makeBoundArray(dummyTrace, yIn, y0, dy, z.length, ya);\n  }\n  return [cd0];\n};","map":{"version":3,"names":["Registry","require","Lib","Axes","histogram2dCalc","colorscaleCalc","convertColumnData","clean2dArray","interp2d","findEmpties","makeBoundArray","module","exports","calc","gd","trace","xa","getFromId","xaxis","ya","yaxis","isContour","traceIs","isHist","isGL2D","zsmooth","x","x0","dx","y","y0","dy","z","i","binned","_minDtick","zIn","isArray1D","_x","_y","_z","makeCalcdata","transpose","connectgaps","_emptypoints","noZsmooth","msg","_input","warn","type","length","avgdx","maxErrX","Math","abs","avgdy","maxErrY","xlen","maxRowLength","xIn","xtype","xArray","yIn","ytype","yArray","_extremes","_id","findExtremes","cd0","text","_text","xCenter","yCenter","xRanges","yRanges","pts","contours","vals","containerStr","cLetter","coloring","dummyTrace","xcalendar","ycalendar","xfill","yfill"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/heatmap/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\n\nvar histogram2dCalc = require('../histogram2d/calc');\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar convertColumnData = require('./convert_column_xyz');\nvar clean2dArray = require('./clean_2d_array');\nvar interp2d = require('./interp2d');\nvar findEmpties = require('./find_empties');\nvar makeBoundArray = require('./make_bound_array');\n\n\nmodule.exports = function calc(gd, trace) {\n    // prepare the raw data\n    // run makeCalcdata on x and y even for heatmaps, in case of category mappings\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var isContour = Registry.traceIs(trace, 'contour');\n    var isHist = Registry.traceIs(trace, 'histogram');\n    var isGL2D = Registry.traceIs(trace, 'gl2d');\n    var zsmooth = isContour ? 'best' : trace.zsmooth;\n    var x;\n    var x0;\n    var dx;\n    var y;\n    var y0;\n    var dy;\n    var z;\n    var i;\n    var binned;\n\n    // cancel minimum tick spacings (only applies to bars and boxes)\n    xa._minDtick = 0;\n    ya._minDtick = 0;\n\n    if(isHist) {\n        binned = histogram2dCalc(gd, trace);\n        x = binned.x;\n        x0 = binned.x0;\n        dx = binned.dx;\n        y = binned.y;\n        y0 = binned.y0;\n        dy = binned.dy;\n        z = binned.z;\n    }\n    else {\n        var zIn = trace.z;\n        if(Lib.isArray1D(zIn)) {\n            convertColumnData(trace, xa, ya, 'x', 'y', ['z']);\n            x = trace._x;\n            y = trace._y;\n            zIn = trace._z;\n        } else {\n            x = trace.x ? xa.makeCalcdata(trace, 'x') : [];\n            y = trace.y ? ya.makeCalcdata(trace, 'y') : [];\n        }\n\n        x0 = trace.x0 || 0;\n        dx = trace.dx || 1;\n        y0 = trace.y0 || 0;\n        dy = trace.dy || 1;\n\n        z = clean2dArray(zIn, trace.transpose);\n\n        if(isContour || trace.connectgaps) {\n            trace._emptypoints = findEmpties(z);\n            interp2d(z, trace._emptypoints);\n        }\n    }\n\n    function noZsmooth(msg) {\n        zsmooth = trace._input.zsmooth = trace.zsmooth = false;\n        Lib.warn('cannot use zsmooth: \"fast\": ' + msg);\n    }\n\n    // check whether we really can smooth (ie all boxes are about the same size)\n    if(zsmooth === 'fast') {\n        if(xa.type === 'log' || ya.type === 'log') {\n            noZsmooth('log axis found');\n        }\n        else if(!isHist) {\n            if(x.length) {\n                var avgdx = (x[x.length - 1] - x[0]) / (x.length - 1);\n                var maxErrX = Math.abs(avgdx / 100);\n                for(i = 0; i < x.length - 1; i++) {\n                    if(Math.abs(x[i + 1] - x[i] - avgdx) > maxErrX) {\n                        noZsmooth('x scale is not linear');\n                        break;\n                    }\n                }\n            }\n            if(y.length && zsmooth === 'fast') {\n                var avgdy = (y[y.length - 1] - y[0]) / (y.length - 1);\n                var maxErrY = Math.abs(avgdy / 100);\n                for(i = 0; i < y.length - 1; i++) {\n                    if(Math.abs(y[i + 1] - y[i] - avgdy) > maxErrY) {\n                        noZsmooth('y scale is not linear');\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    // create arrays of brick boundaries, to be used by autorange and heatmap.plot\n    var xlen = Lib.maxRowLength(z);\n    var xIn = trace.xtype === 'scaled' ? '' : x;\n    var xArray = makeBoundArray(trace, xIn, x0, dx, xlen, xa);\n    var yIn = trace.ytype === 'scaled' ? '' : y;\n    var yArray = makeBoundArray(trace, yIn, y0, dy, z.length, ya);\n\n    // handled in gl2d convert step\n    if(!isGL2D) {\n        trace._extremes[xa._id] = Axes.findExtremes(xa, xArray);\n        trace._extremes[ya._id] = Axes.findExtremes(ya, yArray);\n    }\n\n    var cd0 = {\n        x: xArray,\n        y: yArray,\n        z: z,\n        text: trace._text || trace.text\n    };\n\n    if(xIn && xIn.length === xArray.length - 1) cd0.xCenter = xIn;\n    if(yIn && yIn.length === yArray.length - 1) cd0.yCenter = yIn;\n\n    if(isHist) {\n        cd0.xRanges = binned.xRanges;\n        cd0.yRanges = binned.yRanges;\n        cd0.pts = binned.pts;\n    }\n\n    // auto-z and autocolorscale if applicable\n    if(!isContour || trace.contours.type !== 'constraint') {\n        colorscaleCalc(gd, trace, {\n            vals: z,\n            containerStr: '',\n            cLetter: 'z'\n        });\n    }\n\n    if(isContour && trace.contours && trace.contours.coloring === 'heatmap') {\n        var dummyTrace = {\n            type: trace.type === 'contour' ? 'heatmap' : 'histogram2d',\n            xcalendar: trace.xcalendar,\n            ycalendar: trace.ycalendar\n        };\n        cd0.xfill = makeBoundArray(dummyTrace, xIn, x0, dx, xlen, xa);\n        cd0.yfill = makeBoundArray(dummyTrace, yIn, y0, dy, z.length, ya);\n    }\n\n    return [cd0];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
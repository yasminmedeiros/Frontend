{"ast":null,"code":"\"use strict\";\n\nmodule.exports = surfaceNets;\nvar generateContourExtractor = require(\"ndarray-extract-contour\");\nvar triangulateCube = require(\"triangulate-hypercube\");\nvar zeroCrossings = require(\"zero-crossings\");\nfunction buildSurfaceNets(order, dtype) {\n  var dimension = order.length;\n  var code = [\"'use strict';\"];\n  var funcName = \"surfaceNets\" + order.join(\"_\") + \"d\" + dtype;\n\n  //Contour extraction function\n  code.push(\"var contour=genContour({\", \"order:[\", order.join(), \"],\", \"scalarArguments: 3,\", \"phase:function phaseFunc(p,a,b,c) { return (p > c)|0 },\");\n  if (dtype === \"generic\") {\n    code.push(\"getters:[0],\");\n  }\n\n  //Generate vertex function\n  var cubeArgs = [];\n  var extraArgs = [];\n  for (var i = 0; i < dimension; ++i) {\n    cubeArgs.push(\"d\" + i);\n    extraArgs.push(\"d\" + i);\n  }\n  for (var i = 0; i < 1 << dimension; ++i) {\n    cubeArgs.push(\"v\" + i);\n    extraArgs.push(\"v\" + i);\n  }\n  for (var i = 0; i < 1 << dimension; ++i) {\n    cubeArgs.push(\"p\" + i);\n    extraArgs.push(\"p\" + i);\n  }\n  cubeArgs.push(\"a\", \"b\", \"c\");\n  extraArgs.push(\"a\", \"c\");\n  code.push(\"vertex:function vertexFunc(\", cubeArgs.join(), \"){\");\n  //Mask args together\n  var maskStr = [];\n  for (var i = 0; i < 1 << dimension; ++i) {\n    maskStr.push(\"(p\" + i + \"<<\" + i + \")\");\n  }\n  //Generate variables and giganto switch statement\n  code.push(\"var m=(\", maskStr.join(\"+\"), \")|0;if(m===0||m===\", (1 << (1 << dimension)) - 1, \"){return}\");\n  var extraFuncs = [];\n  var currentFunc = [];\n  if (1 << (1 << dimension) <= 128) {\n    code.push(\"switch(m){\");\n    currentFunc = code;\n  } else {\n    code.push(\"switch(m>>>7){\");\n  }\n  for (var i = 0; i < 1 << (1 << dimension); ++i) {\n    if (1 << (1 << dimension) > 128) {\n      if (i % 128 === 0) {\n        if (extraFuncs.length > 0) {\n          currentFunc.push(\"}}\");\n        }\n        var efName = \"vExtra\" + extraFuncs.length;\n        code.push(\"case \", i >>> 7, \":\", efName, \"(m&0x7f,\", extraArgs.join(), \");break;\");\n        currentFunc = [\"function \", efName, \"(m,\", extraArgs.join(), \"){switch(m){\"];\n        extraFuncs.push(currentFunc);\n      }\n    }\n    currentFunc.push(\"case \", i & 0x7f, \":\");\n    var crossings = new Array(dimension);\n    var denoms = new Array(dimension);\n    var crossingCount = new Array(dimension);\n    var bias = new Array(dimension);\n    var totalCrossings = 0;\n    for (var j = 0; j < dimension; ++j) {\n      crossings[j] = [];\n      denoms[j] = [];\n      crossingCount[j] = 0;\n      bias[j] = 0;\n    }\n    for (var j = 0; j < 1 << dimension; ++j) {\n      for (var k = 0; k < dimension; ++k) {\n        var u = j ^ 1 << k;\n        if (u > j) {\n          continue;\n        }\n        if (!(i & 1 << u) !== !(i & 1 << j)) {\n          var sign = 1;\n          if (i & 1 << u) {\n            denoms[k].push(\"v\" + u + \"-v\" + j);\n          } else {\n            denoms[k].push(\"v\" + j + \"-v\" + u);\n            sign = -sign;\n          }\n          if (sign < 0) {\n            crossings[k].push(\"-v\" + j + \"-v\" + u);\n            crossingCount[k] += 2;\n          } else {\n            crossings[k].push(\"v\" + j + \"+v\" + u);\n            crossingCount[k] -= 2;\n          }\n          totalCrossings += 1;\n          for (var l = 0; l < dimension; ++l) {\n            if (l === k) {\n              continue;\n            }\n            if (u & 1 << l) {\n              bias[l] += 1;\n            } else {\n              bias[l] -= 1;\n            }\n          }\n        }\n      }\n    }\n    var vertexStr = [];\n    for (var k = 0; k < dimension; ++k) {\n      if (crossings[k].length === 0) {\n        vertexStr.push(\"d\" + k + \"-0.5\");\n      } else {\n        var cStr = \"\";\n        if (crossingCount[k] < 0) {\n          cStr = crossingCount[k] + \"*c\";\n        } else if (crossingCount[k] > 0) {\n          cStr = \"+\" + crossingCount[k] + \"*c\";\n        }\n        var weight = 0.5 * (crossings[k].length / totalCrossings);\n        var shift = 0.5 + 0.5 * (bias[k] / totalCrossings);\n        vertexStr.push(\"d\" + k + \"-\" + shift + \"-\" + weight + \"*(\" + crossings[k].join(\"+\") + cStr + \")/(\" + denoms[k].join(\"+\") + \")\");\n      }\n    }\n    currentFunc.push(\"a.push([\", vertexStr.join(), \"]);\", \"break;\");\n  }\n  code.push(\"}},\");\n  if (extraFuncs.length > 0) {\n    currentFunc.push(\"}}\");\n  }\n\n  //Create face function\n  var faceArgs = [];\n  for (var i = 0; i < 1 << dimension - 1; ++i) {\n    faceArgs.push(\"v\" + i);\n  }\n  faceArgs.push(\"c0\", \"c1\", \"p0\", \"p1\", \"a\", \"b\", \"c\");\n  code.push(\"cell:function cellFunc(\", faceArgs.join(), \"){\");\n  var facets = triangulateCube(dimension - 1);\n  code.push(\"if(p0){b.push(\", facets.map(function (f) {\n    return \"[\" + f.map(function (v) {\n      return \"v\" + v;\n    }) + \"]\";\n  }).join(), \")}else{b.push(\", facets.map(function (f) {\n    var e = f.slice();\n    e.reverse();\n    return \"[\" + e.map(function (v) {\n      return \"v\" + v;\n    }) + \"]\";\n  }).join(), \")}}});function \", funcName, \"(array,level){var verts=[],cells=[];contour(array,verts,cells,level);return {positions:verts,cells:cells};} return \", funcName, \";\");\n  for (var i = 0; i < extraFuncs.length; ++i) {\n    code.push(extraFuncs[i].join(\"\"));\n  }\n\n  //Compile and link\n  var proc = new Function(\"genContour\", code.join(\"\"));\n  return proc(generateContourExtractor);\n}\n\n//1D case: Need to handle specially\nfunction mesh1D(array, level) {\n  var zc = zeroCrossings(array, level);\n  var n = zc.length;\n  var npos = new Array(n);\n  var ncel = new Array(n);\n  for (var i = 0; i < n; ++i) {\n    npos[i] = [zc[i]];\n    ncel[i] = [i];\n  }\n  return {\n    positions: npos,\n    cells: ncel\n  };\n}\nvar CACHE = {};\nfunction surfaceNets(array, level) {\n  if (array.dimension <= 0) {\n    return {\n      positions: [],\n      cells: []\n    };\n  } else if (array.dimension === 1) {\n    return mesh1D(array, level);\n  }\n  var typesig = array.order.join() + \"-\" + array.dtype;\n  var proc = CACHE[typesig];\n  var level = +level || 0.0;\n  if (!proc) {\n    proc = CACHE[typesig] = buildSurfaceNets(array.order, array.dtype);\n  }\n  return proc(array, level);\n}","map":{"version":3,"names":["module","exports","surfaceNets","generateContourExtractor","require","triangulateCube","zeroCrossings","buildSurfaceNets","order","dtype","dimension","length","code","funcName","join","push","cubeArgs","extraArgs","i","maskStr","extraFuncs","currentFunc","efName","crossings","Array","denoms","crossingCount","bias","totalCrossings","j","k","u","sign","l","vertexStr","cStr","weight","shift","faceArgs","facets","map","f","v","e","slice","reverse","proc","Function","mesh1D","array","level","zc","n","npos","ncel","positions","cells","CACHE","typesig"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/surface-nets/surfacenets.js"],"sourcesContent":["\"use strict\"\n\nmodule.exports = surfaceNets\n\nvar generateContourExtractor = require(\"ndarray-extract-contour\")\nvar triangulateCube = require(\"triangulate-hypercube\")\nvar zeroCrossings = require(\"zero-crossings\")\n\nfunction buildSurfaceNets(order, dtype) {\n  var dimension = order.length\n  var code = [\"'use strict';\"]\n  var funcName = \"surfaceNets\" + order.join(\"_\") + \"d\" + dtype\n\n  //Contour extraction function\n  code.push(\n    \"var contour=genContour({\",\n      \"order:[\", order.join(), \"],\",\n      \"scalarArguments: 3,\",\n      \"phase:function phaseFunc(p,a,b,c) { return (p > c)|0 },\")\n  if(dtype === \"generic\") {\n    code.push(\"getters:[0],\")\n  }\n\n  //Generate vertex function\n  var cubeArgs = []\n  var extraArgs = []\n  for(var i=0; i<dimension; ++i) {\n    cubeArgs.push(\"d\" + i)\n    extraArgs.push(\"d\" + i)\n  }\n  for(var i=0; i<(1<<dimension); ++i) {\n    cubeArgs.push(\"v\" + i)\n    extraArgs.push(\"v\" + i)\n  }\n  for(var i=0; i<(1<<dimension); ++i) {\n    cubeArgs.push(\"p\" + i)\n    extraArgs.push(\"p\" + i)\n  }\n  cubeArgs.push(\"a\", \"b\", \"c\")\n  extraArgs.push(\"a\", \"c\")\n  code.push(\"vertex:function vertexFunc(\", cubeArgs.join(), \"){\")\n  //Mask args together\n  var maskStr = []\n  for(var i=0; i<(1<<dimension); ++i) {\n    maskStr.push(\"(p\" + i + \"<<\" + i + \")\")\n  }\n  //Generate variables and giganto switch statement\n  code.push(\"var m=(\", maskStr.join(\"+\"), \")|0;if(m===0||m===\", (1<<(1<<dimension))-1, \"){return}\")\n  var extraFuncs = []\n  var currentFunc = []\n  if(1<<(1<<dimension) <= 128) {\n    code.push(\"switch(m){\")\n    currentFunc = code\n  } else {\n    code.push(\"switch(m>>>7){\")\n  }\n  for(var i=0; i<1<<(1<<dimension); ++i) {\n    if(1<<(1<<dimension) > 128) {\n      if((i%128)===0) {\n        if(extraFuncs.length > 0) {\n          currentFunc.push(\"}}\")\n        }\n        var efName = \"vExtra\" + extraFuncs.length\n        code.push(\"case \", (i>>>7), \":\", efName, \"(m&0x7f,\", extraArgs.join(), \");break;\")\n        currentFunc = [\n          \"function \", efName, \"(m,\", extraArgs.join(), \"){switch(m){\"\n        ]\n        extraFuncs.push(currentFunc)\n      }  \n    }\n    currentFunc.push(\"case \", (i&0x7f), \":\")\n    var crossings = new Array(dimension)\n    var denoms = new Array(dimension)\n    var crossingCount = new Array(dimension)\n    var bias = new Array(dimension)\n    var totalCrossings = 0\n    for(var j=0; j<dimension; ++j) {\n      crossings[j] = []\n      denoms[j] = []\n      crossingCount[j] = 0\n      bias[j] = 0\n    }\n    for(var j=0; j<(1<<dimension); ++j) {\n      for(var k=0; k<dimension; ++k) {\n        var u = j ^ (1<<k)\n        if(u > j) {\n          continue\n        }\n        if(!(i&(1<<u)) !== !(i&(1<<j))) {\n          var sign = 1\n          if(i&(1<<u)) {\n            denoms[k].push(\"v\" + u + \"-v\" + j)\n          } else {\n            denoms[k].push(\"v\" + j + \"-v\" + u)\n            sign = -sign\n          }\n          if(sign < 0) {\n            crossings[k].push(\"-v\" + j + \"-v\" + u)\n            crossingCount[k] += 2\n          } else {\n            crossings[k].push(\"v\" + j + \"+v\" + u)\n            crossingCount[k] -= 2            \n          }\n          totalCrossings += 1\n          for(var l=0; l<dimension; ++l) {\n            if(l === k) {\n              continue\n            }\n            if(u&(1<<l)) {\n              bias[l] += 1\n            } else {\n              bias[l] -= 1\n            }\n          }\n        }\n      }\n    }\n    var vertexStr = []\n    for(var k=0; k<dimension; ++k) {\n      if(crossings[k].length === 0) {\n        vertexStr.push(\"d\" + k + \"-0.5\")\n      } else {\n        var cStr = \"\"\n        if(crossingCount[k] < 0) {\n          cStr = crossingCount[k] + \"*c\"\n        } else if(crossingCount[k] > 0) {\n          cStr = \"+\" + crossingCount[k] + \"*c\"\n        }\n        var weight = 0.5 * (crossings[k].length / totalCrossings)\n        var shift = 0.5 + 0.5 * (bias[k] / totalCrossings)\n        vertexStr.push(\"d\" + k + \"-\" + shift + \"-\" + weight + \"*(\" + crossings[k].join(\"+\") + cStr + \")/(\" + denoms[k].join(\"+\") + \")\")\n        \n      }\n    }\n    currentFunc.push(\"a.push([\", vertexStr.join(), \"]);\",\n      \"break;\")\n  }\n  code.push(\"}},\")\n  if(extraFuncs.length > 0) {\n    currentFunc.push(\"}}\")\n  }\n\n  //Create face function\n  var faceArgs = []\n  for(var i=0; i<(1<<(dimension-1)); ++i) {\n    faceArgs.push(\"v\" + i)\n  }\n  faceArgs.push(\"c0\", \"c1\", \"p0\", \"p1\", \"a\", \"b\", \"c\")\n  code.push(\"cell:function cellFunc(\", faceArgs.join(), \"){\")\n\n  var facets = triangulateCube(dimension-1)\n  code.push(\"if(p0){b.push(\",\n    facets.map(function(f) {\n      return \"[\" + f.map(function(v) {\n        return \"v\" + v\n      }) + \"]\"\n    }).join(), \")}else{b.push(\",\n    facets.map(function(f) {\n      var e = f.slice()\n      e.reverse()\n      return \"[\" + e.map(function(v) {\n        return \"v\" + v\n      }) + \"]\"\n    }).join(),\n    \")}}});function \", funcName, \"(array,level){var verts=[],cells=[];contour(array,verts,cells,level);return {positions:verts,cells:cells};} return \", funcName, \";\")\n\n  for(var i=0; i<extraFuncs.length; ++i) {\n    code.push(extraFuncs[i].join(\"\"))\n  }\n\n  //Compile and link\n  var proc = new Function(\"genContour\", code.join(\"\"))\n  return proc(generateContourExtractor)\n}\n\n//1D case: Need to handle specially\nfunction mesh1D(array, level) {\n  var zc = zeroCrossings(array, level)\n  var n = zc.length\n  var npos = new Array(n)\n  var ncel = new Array(n)\n  for(var i=0; i<n; ++i) {\n    npos[i] = [ zc[i] ]\n    ncel[i] = [ i ]\n  }\n  return {\n    positions: npos,\n    cells: ncel\n  }\n}\n\nvar CACHE = {}\n\nfunction surfaceNets(array,level) {\n  if(array.dimension <= 0) {\n    return { positions: [], cells: [] }\n  } else if(array.dimension === 1) {\n    return mesh1D(array, level)\n  }\n  var typesig = array.order.join() + \"-\" + array.dtype\n  var proc = CACHE[typesig]\n  var level = (+level) || 0.0\n  if(!proc) {\n    proc = CACHE[typesig] = buildSurfaceNets(array.order, array.dtype)\n  }\n  return proc(array,level)\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
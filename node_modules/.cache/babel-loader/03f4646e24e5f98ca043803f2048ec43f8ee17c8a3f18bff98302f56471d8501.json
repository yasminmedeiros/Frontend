{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Surface = {};\nSurface.attributes = require('./attributes');\nSurface.supplyDefaults = require('./defaults');\nSurface.colorbar = {\n  min: 'cmin',\n  max: 'cmax'\n};\nSurface.calc = require('./calc');\nSurface.plot = require('./convert');\nSurface.moduleType = 'trace';\nSurface.name = 'surface';\nSurface.basePlotModule = require('../../plots/gl3d');\nSurface.categories = ['gl3d', '2dMap', 'noOpacity'];\nSurface.meta = {\n  description: ['The data the describes the coordinates of the surface is set in `z`.', 'Data in `z` should be a {2D array}.', 'Coordinates in `x` and `y` can either be 1D {arrays}', 'or {2D arrays} (e.g. to graph parametric surfaces).', 'If not provided in `x` and `y`, the x and y coordinates are assumed', 'to be linear starting at 0 with a unit step.', 'The color scale corresponds to the `z` values by default.', 'For custom color scales, use `surfacecolor` which should be a {2D array},', 'where its bounds can be controlled using `cmin` and `cmax`.'].join(' ')\n};\nmodule.exports = Surface;","map":{"version":3,"names":["Surface","attributes","require","supplyDefaults","colorbar","min","max","calc","plot","moduleType","name","basePlotModule","categories","meta","description","join","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/surface/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Surface = {};\n\nSurface.attributes = require('./attributes');\nSurface.supplyDefaults = require('./defaults');\nSurface.colorbar = {\n    min: 'cmin',\n    max: 'cmax'\n};\nSurface.calc = require('./calc');\nSurface.plot = require('./convert');\n\nSurface.moduleType = 'trace';\nSurface.name = 'surface';\nSurface.basePlotModule = require('../../plots/gl3d');\nSurface.categories = ['gl3d', '2dMap', 'noOpacity'];\nSurface.meta = {\n    description: [\n        'The data the describes the coordinates of the surface is set in `z`.',\n        'Data in `z` should be a {2D array}.',\n\n        'Coordinates in `x` and `y` can either be 1D {arrays}',\n        'or {2D arrays} (e.g. to graph parametric surfaces).',\n\n        'If not provided in `x` and `y`, the x and y coordinates are assumed',\n        'to be linear starting at 0 with a unit step.',\n\n        'The color scale corresponds to the `z` values by default.',\n        'For custom color scales, use `surfacecolor` which should be a {2D array},',\n        'where its bounds can be controlled using `cmin` and `cmax`.'\n    ].join(' ')\n};\n\nmodule.exports = Surface;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,OAAO,GAAG,CAAC,CAAC;AAEhBA,OAAO,CAACC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5CF,OAAO,CAACG,cAAc,GAAGD,OAAO,CAAC,YAAY,CAAC;AAC9CF,OAAO,CAACI,QAAQ,GAAG;EACfC,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE;AACT,CAAC;AACDN,OAAO,CAACO,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAChCF,OAAO,CAACQ,IAAI,GAAGN,OAAO,CAAC,WAAW,CAAC;AAEnCF,OAAO,CAACS,UAAU,GAAG,OAAO;AAC5BT,OAAO,CAACU,IAAI,GAAG,SAAS;AACxBV,OAAO,CAACW,cAAc,GAAGT,OAAO,CAAC,kBAAkB,CAAC;AACpDF,OAAO,CAACY,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW,CAAC;AACnDZ,OAAO,CAACa,IAAI,GAAG;EACXC,WAAW,EAAE,CACT,sEAAsE,EACtE,qCAAqC,EAErC,sDAAsD,EACtD,qDAAqD,EAErD,qEAAqE,EACrE,8CAA8C,EAE9C,2DAA2D,EAC3D,2EAA2E,EAC3E,6DAA6D,CAChE,CAACC,IAAI,CAAC,GAAG;AACd,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGjB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}
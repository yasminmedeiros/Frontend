{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar drawColorbar = require('./draw');\nvar flipScale = require('../colorscale/helpers').flipScale;\n\n/**\n * connectColorbar: create a colorbar from a trace, using its module to\n *   describe the connection.\n *\n * @param {DOM element} gd\n *\n * @param {Array} cd\n *   calcdata entry for this trace. cd[0].trace is the trace itself, and the\n *   colorbar object will be stashed in cd[0].t.cb\n *\n * @param {object|function} moduleOpts\n *   may be a function(gd, cd) to override the standard handling below. If\n *   an object, should have these keys:\n * @param {Optional(string)} moduleOpts.container\n *   name of the container inside the trace where the colorbar and colorscale\n *   attributes live (ie 'marker', 'line') - omit if they're at the trace root.\n * @param {string} moduleOpts.min\n *   name of the attribute holding the value of the minimum color\n * @param {string} moduleOpts.max\n *   name of the attribute holding the value of the maximum color\n * @param {Optional(string)} moduleOpts.vals\n *   name of the attribute holding the (numeric) color data\n *   used only if min/max fail. May be omitted if these are always\n *   pre-calculated.\n */\nmodule.exports = function connectColorbar(gd, cd, moduleOpts) {\n  if (typeof moduleOpts === 'function') return moduleOpts(gd, cd);\n  var trace = cd[0].trace;\n  var cbId = 'cb' + trace.uid;\n  moduleOpts = Array.isArray(moduleOpts) ? moduleOpts : [moduleOpts];\n  for (var i = 0; i < moduleOpts.length; i++) {\n    var containerName = moduleOpts[i].container;\n    var container = containerName ? trace[containerName] : trace;\n    gd._fullLayout._infolayer.selectAll('.' + cbId).remove();\n    if (!container || !container.showscale) continue;\n    var cb = cd[0].t.cb = drawColorbar(gd, cbId);\n    var scl = container.reversescale ? flipScale(container.colorscale) : container.colorscale;\n    cb.fillgradient(scl).zrange([container[moduleOpts[i].min], container[moduleOpts[i].max]]).options(container.colorbar)();\n    return;\n  }\n};","map":{"version":3,"names":["drawColorbar","require","flipScale","module","exports","connectColorbar","gd","cd","moduleOpts","trace","cbId","uid","Array","isArray","i","length","containerName","container","_fullLayout","_infolayer","selectAll","remove","showscale","cb","t","scl","reversescale","colorscale","fillgradient","zrange","min","max","options","colorbar"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/colorbar/connect.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar drawColorbar = require('./draw');\nvar flipScale = require('../colorscale/helpers').flipScale;\n\n/**\n * connectColorbar: create a colorbar from a trace, using its module to\n *   describe the connection.\n *\n * @param {DOM element} gd\n *\n * @param {Array} cd\n *   calcdata entry for this trace. cd[0].trace is the trace itself, and the\n *   colorbar object will be stashed in cd[0].t.cb\n *\n * @param {object|function} moduleOpts\n *   may be a function(gd, cd) to override the standard handling below. If\n *   an object, should have these keys:\n * @param {Optional(string)} moduleOpts.container\n *   name of the container inside the trace where the colorbar and colorscale\n *   attributes live (ie 'marker', 'line') - omit if they're at the trace root.\n * @param {string} moduleOpts.min\n *   name of the attribute holding the value of the minimum color\n * @param {string} moduleOpts.max\n *   name of the attribute holding the value of the maximum color\n * @param {Optional(string)} moduleOpts.vals\n *   name of the attribute holding the (numeric) color data\n *   used only if min/max fail. May be omitted if these are always\n *   pre-calculated.\n */\nmodule.exports = function connectColorbar(gd, cd, moduleOpts) {\n    if(typeof moduleOpts === 'function') return moduleOpts(gd, cd);\n\n    var trace = cd[0].trace;\n    var cbId = 'cb' + trace.uid;\n    moduleOpts = Array.isArray(moduleOpts) ? moduleOpts : [moduleOpts];\n\n    for(var i = 0; i < moduleOpts.length; i++) {\n        var containerName = moduleOpts[i].container;\n\n        var container = containerName ? trace[containerName] : trace;\n\n        gd._fullLayout._infolayer.selectAll('.' + cbId).remove();\n        if(!container || !container.showscale) continue;\n\n        var cb = cd[0].t.cb = drawColorbar(gd, cbId);\n\n        var scl = container.reversescale ?\n            flipScale(container.colorscale) :\n            container.colorscale;\n\n        cb.fillgradient(scl)\n            .zrange([container[moduleOpts[i].min], container[moduleOpts[i].max]])\n            .options(container.colorbar)();\n\n        return;\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACpC,IAAIC,SAAS,GAAGD,OAAO,CAAC,uBAAuB,CAAC,CAACC,SAAS;;AAE1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,eAAe,CAACC,EAAE,EAAEC,EAAE,EAAEC,UAAU,EAAE;EAC1D,IAAG,OAAOA,UAAU,KAAK,UAAU,EAAE,OAAOA,UAAU,CAACF,EAAE,EAAEC,EAAE,CAAC;EAE9D,IAAIE,KAAK,GAAGF,EAAE,CAAC,CAAC,CAAC,CAACE,KAAK;EACvB,IAAIC,IAAI,GAAG,IAAI,GAAGD,KAAK,CAACE,GAAG;EAC3BH,UAAU,GAAGI,KAAK,CAACC,OAAO,CAACL,UAAU,CAAC,GAAGA,UAAU,GAAG,CAACA,UAAU,CAAC;EAElE,KAAI,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,UAAU,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;IACvC,IAAIE,aAAa,GAAGR,UAAU,CAACM,CAAC,CAAC,CAACG,SAAS;IAE3C,IAAIA,SAAS,GAAGD,aAAa,GAAGP,KAAK,CAACO,aAAa,CAAC,GAAGP,KAAK;IAE5DH,EAAE,CAACY,WAAW,CAACC,UAAU,CAACC,SAAS,CAAC,GAAG,GAAGV,IAAI,CAAC,CAACW,MAAM,EAAE;IACxD,IAAG,CAACJ,SAAS,IAAI,CAACA,SAAS,CAACK,SAAS,EAAE;IAEvC,IAAIC,EAAE,GAAGhB,EAAE,CAAC,CAAC,CAAC,CAACiB,CAAC,CAACD,EAAE,GAAGvB,YAAY,CAACM,EAAE,EAAEI,IAAI,CAAC;IAE5C,IAAIe,GAAG,GAAGR,SAAS,CAACS,YAAY,GAC5BxB,SAAS,CAACe,SAAS,CAACU,UAAU,CAAC,GAC/BV,SAAS,CAACU,UAAU;IAExBJ,EAAE,CAACK,YAAY,CAACH,GAAG,CAAC,CACfI,MAAM,CAAC,CAACZ,SAAS,CAACT,UAAU,CAACM,CAAC,CAAC,CAACgB,GAAG,CAAC,EAAEb,SAAS,CAACT,UAAU,CAACM,CAAC,CAAC,CAACiB,GAAG,CAAC,CAAC,CAAC,CACpEC,OAAO,CAACf,SAAS,CAACgB,QAAQ,CAAC,EAAE;IAElC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
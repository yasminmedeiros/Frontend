{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar calendars = require('./calendars');\nvar Lib = require('../../lib');\nvar constants = require('../../constants/numerical');\nvar EPOCHJD = constants.EPOCHJD;\nvar ONEDAY = constants.ONEDAY;\nvar attributes = {\n  valType: 'enumerated',\n  values: Object.keys(calendars.calendars),\n  role: 'info',\n  editType: 'calc',\n  dflt: 'gregorian'\n};\nvar handleDefaults = function handleDefaults(contIn, contOut, attr, dflt) {\n  var attrs = {};\n  attrs[attr] = attributes;\n  return Lib.coerce(contIn, contOut, attrs, attr, dflt);\n};\nvar handleTraceDefaults = function handleTraceDefaults(traceIn, traceOut, coords, layout) {\n  for (var i = 0; i < coords.length; i++) {\n    handleDefaults(traceIn, traceOut, coords[i] + 'calendar', layout.calendar);\n  }\n};\n\n// each calendar needs its own default canonical tick. I would love to use\n// 2000-01-01 (or even 0000-01-01) for them all but they don't necessarily\n// all support either of those dates. Instead I'll use the most significant\n// number they *do* support, biased toward the present day.\nvar CANONICAL_TICK = {\n  chinese: '2000-01-01',\n  coptic: '2000-01-01',\n  discworld: '2000-01-01',\n  ethiopian: '2000-01-01',\n  hebrew: '5000-01-01',\n  islamic: '1000-01-01',\n  julian: '2000-01-01',\n  mayan: '5000-01-01',\n  nanakshahi: '1000-01-01',\n  nepali: '2000-01-01',\n  persian: '1000-01-01',\n  jalali: '1000-01-01',\n  taiwan: '1000-01-01',\n  thai: '2000-01-01',\n  ummalqura: '1400-01-01'\n};\n\n// Start on a Sunday - for week ticks\n// Discworld and Mayan calendars don't have 7-day weeks but we're going to give them\n// 7-day week ticks so start on our Sundays.\n// If anyone really cares we can customize the auto tick spacings for these calendars.\nvar CANONICAL_SUNDAY = {\n  chinese: '2000-01-02',\n  coptic: '2000-01-03',\n  discworld: '2000-01-03',\n  ethiopian: '2000-01-05',\n  hebrew: '5000-01-01',\n  islamic: '1000-01-02',\n  julian: '2000-01-03',\n  mayan: '5000-01-01',\n  nanakshahi: '1000-01-05',\n  nepali: '2000-01-05',\n  persian: '1000-01-01',\n  jalali: '1000-01-01',\n  taiwan: '1000-01-04',\n  thai: '2000-01-04',\n  ummalqura: '1400-01-06'\n};\nvar DFLTRANGE = {\n  chinese: ['2000-01-01', '2001-01-01'],\n  coptic: ['1700-01-01', '1701-01-01'],\n  discworld: ['1800-01-01', '1801-01-01'],\n  ethiopian: ['2000-01-01', '2001-01-01'],\n  hebrew: ['5700-01-01', '5701-01-01'],\n  islamic: ['1400-01-01', '1401-01-01'],\n  julian: ['2000-01-01', '2001-01-01'],\n  mayan: ['5200-01-01', '5201-01-01'],\n  nanakshahi: ['0500-01-01', '0501-01-01'],\n  nepali: ['2000-01-01', '2001-01-01'],\n  persian: ['1400-01-01', '1401-01-01'],\n  jalali: ['1400-01-01', '1401-01-01'],\n  taiwan: ['0100-01-01', '0101-01-01'],\n  thai: ['2500-01-01', '2501-01-01'],\n  ummalqura: ['1400-01-01', '1401-01-01']\n};\n\n/*\n * convert d3 templates to world-calendars templates, so our users only need\n * to know d3's specifiers. Map space padding to no padding, and unknown fields\n * to an ugly placeholder\n */\nvar UNKNOWN = '##';\nvar d3ToWorldCalendars = {\n  'd': {\n    '0': 'dd',\n    '-': 'd'\n  },\n  // 2-digit or unpadded day of month\n  'e': {\n    '0': 'd',\n    '-': 'd'\n  },\n  // alternate, always unpadded day of month\n  'a': {\n    '0': 'D',\n    '-': 'D'\n  },\n  // short weekday name\n  'A': {\n    '0': 'DD',\n    '-': 'DD'\n  },\n  // full weekday name\n  'j': {\n    '0': 'oo',\n    '-': 'o'\n  },\n  // 3-digit or unpadded day of the year\n  'W': {\n    '0': 'ww',\n    '-': 'w'\n  },\n  // 2-digit or unpadded week of the year (Monday first)\n  'm': {\n    '0': 'mm',\n    '-': 'm'\n  },\n  // 2-digit or unpadded month number\n  'b': {\n    '0': 'M',\n    '-': 'M'\n  },\n  // short month name\n  'B': {\n    '0': 'MM',\n    '-': 'MM'\n  },\n  // full month name\n  'y': {\n    '0': 'yy',\n    '-': 'yy'\n  },\n  // 2-digit year (map unpadded to zero-padded)\n  'Y': {\n    '0': 'yyyy',\n    '-': 'yyyy'\n  },\n  // 4-digit year (map unpadded to zero-padded)\n  'U': UNKNOWN,\n  // Sunday-first week of the year\n  'w': UNKNOWN,\n  // day of the week [0(sunday),6]\n  // combined format, we replace the date part with the world-calendar version\n  // and the %X stays there for d3 to handle with time parts\n  'c': {\n    '0': 'D M d %X yyyy',\n    '-': 'D M d %X yyyy'\n  },\n  'x': {\n    '0': 'mm/dd/yyyy',\n    '-': 'mm/dd/yyyy'\n  }\n};\nfunction worldCalFmt(fmt, x, calendar) {\n  var dateJD = Math.floor((x + 0.05) / ONEDAY) + EPOCHJD;\n  var cDate = getCal(calendar).fromJD(dateJD);\n  var i = 0;\n  var modifier, directive, directiveLen, directiveObj, replacementPart;\n  while ((i = fmt.indexOf('%', i)) !== -1) {\n    modifier = fmt.charAt(i + 1);\n    if (modifier === '0' || modifier === '-' || modifier === '_') {\n      directiveLen = 3;\n      directive = fmt.charAt(i + 2);\n      if (modifier === '_') modifier = '-';\n    } else {\n      directive = modifier;\n      modifier = '0';\n      directiveLen = 2;\n    }\n    directiveObj = d3ToWorldCalendars[directive];\n    if (!directiveObj) {\n      i += directiveLen;\n    } else {\n      // code is recognized as a date part but world-calendars doesn't support it\n      if (directiveObj === UNKNOWN) replacementPart = UNKNOWN;\n\n      // format the cDate according to the translated directive\n      else replacementPart = cDate.formatDate(directiveObj[modifier]);\n      fmt = fmt.substr(0, i) + replacementPart + fmt.substr(i + directiveLen);\n      i += replacementPart.length;\n    }\n  }\n  return fmt;\n}\n\n// cache world calendars, so we don't have to reinstantiate\n// during each date-time conversion\nvar allCals = {};\nfunction getCal(calendar) {\n  var calendarObj = allCals[calendar];\n  if (calendarObj) return calendarObj;\n  calendarObj = allCals[calendar] = calendars.instance(calendar);\n  return calendarObj;\n}\nfunction makeAttrs(description) {\n  return Lib.extendFlat({}, attributes, {\n    description: description\n  });\n}\nfunction makeTraceAttrsDescription(coord) {\n  return 'Sets the calendar system to use with `' + coord + '` date data.';\n}\nvar xAttrs = {\n  xcalendar: makeAttrs(makeTraceAttrsDescription('x'))\n};\nvar xyAttrs = Lib.extendFlat({}, xAttrs, {\n  ycalendar: makeAttrs(makeTraceAttrsDescription('y'))\n});\nvar xyzAttrs = Lib.extendFlat({}, xyAttrs, {\n  zcalendar: makeAttrs(makeTraceAttrsDescription('z'))\n});\nvar axisAttrs = makeAttrs(['Sets the calendar system to use for `range` and `tick0`', 'if this is a date axis. This does not set the calendar for', 'interpreting data on this axis, that\\'s specified in the trace', 'or via the global `layout.calendar`'].join(' '));\nmodule.exports = {\n  moduleType: 'component',\n  name: 'calendars',\n  schema: {\n    traces: {\n      scatter: xyAttrs,\n      bar: xyAttrs,\n      box: xyAttrs,\n      heatmap: xyAttrs,\n      contour: xyAttrs,\n      histogram: xyAttrs,\n      histogram2d: xyAttrs,\n      histogram2dcontour: xyAttrs,\n      scatter3d: xyzAttrs,\n      surface: xyzAttrs,\n      mesh3d: xyzAttrs,\n      scattergl: xyAttrs,\n      ohlc: xAttrs,\n      candlestick: xAttrs\n    },\n    layout: {\n      calendar: makeAttrs(['Sets the default calendar system to use for interpreting and', 'displaying dates throughout the plot.'].join(' '))\n    },\n    subplots: {\n      xaxis: {\n        calendar: axisAttrs\n      },\n      yaxis: {\n        calendar: axisAttrs\n      },\n      scene: {\n        xaxis: {\n          calendar: axisAttrs\n        },\n        // TODO: it's actually redundant to include yaxis and zaxis here\n        // because in the scene attributes these are the same object so merging\n        // into one merges into them all. However, I left them in for parity with\n        // cartesian, where yaxis is unused until we Plotschema.get() when we\n        // use its presence or absence to determine whether to delete attributes\n        // from yaxis if they only apply to x (rangeselector/rangeslider)\n        yaxis: {\n          calendar: axisAttrs\n        },\n        zaxis: {\n          calendar: axisAttrs\n        }\n      },\n      polar: {\n        radialaxis: {\n          calendar: axisAttrs\n        }\n      }\n    },\n    transforms: {\n      filter: {\n        valuecalendar: makeAttrs(['Sets the calendar system to use for `value`, if it is a date.'].join(' ')),\n        targetcalendar: makeAttrs(['Sets the calendar system to use for `target`, if it is an', 'array of dates. If `target` is a string (eg *x*) we use the', 'corresponding trace attribute (eg `xcalendar`) if it exists,', 'even if `targetcalendar` is provided.'].join(' '))\n      }\n    }\n  },\n  layoutAttributes: attributes,\n  handleDefaults: handleDefaults,\n  handleTraceDefaults: handleTraceDefaults,\n  CANONICAL_SUNDAY: CANONICAL_SUNDAY,\n  CANONICAL_TICK: CANONICAL_TICK,\n  DFLTRANGE: DFLTRANGE,\n  getCal: getCal,\n  worldCalFmt: worldCalFmt\n};","map":{"version":3,"names":["calendars","require","Lib","constants","EPOCHJD","ONEDAY","attributes","valType","values","Object","keys","role","editType","dflt","handleDefaults","contIn","contOut","attr","attrs","coerce","handleTraceDefaults","traceIn","traceOut","coords","layout","i","length","calendar","CANONICAL_TICK","chinese","coptic","discworld","ethiopian","hebrew","islamic","julian","mayan","nanakshahi","nepali","persian","jalali","taiwan","thai","ummalqura","CANONICAL_SUNDAY","DFLTRANGE","UNKNOWN","d3ToWorldCalendars","worldCalFmt","fmt","x","dateJD","Math","floor","cDate","getCal","fromJD","modifier","directive","directiveLen","directiveObj","replacementPart","indexOf","charAt","formatDate","substr","allCals","calendarObj","instance","makeAttrs","description","extendFlat","makeTraceAttrsDescription","coord","xAttrs","xcalendar","xyAttrs","ycalendar","xyzAttrs","zcalendar","axisAttrs","join","module","exports","moduleType","name","schema","traces","scatter","bar","box","heatmap","contour","histogram","histogram2d","histogram2dcontour","scatter3d","surface","mesh3d","scattergl","ohlc","candlestick","subplots","xaxis","yaxis","scene","zaxis","polar","radialaxis","transforms","filter","valuecalendar","targetcalendar","layoutAttributes"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/calendars/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar calendars = require('./calendars');\n\nvar Lib = require('../../lib');\nvar constants = require('../../constants/numerical');\n\nvar EPOCHJD = constants.EPOCHJD;\nvar ONEDAY = constants.ONEDAY;\n\nvar attributes = {\n    valType: 'enumerated',\n    values: Object.keys(calendars.calendars),\n    role: 'info',\n    editType: 'calc',\n    dflt: 'gregorian'\n};\n\nvar handleDefaults = function(contIn, contOut, attr, dflt) {\n    var attrs = {};\n    attrs[attr] = attributes;\n\n    return Lib.coerce(contIn, contOut, attrs, attr, dflt);\n};\n\nvar handleTraceDefaults = function(traceIn, traceOut, coords, layout) {\n    for(var i = 0; i < coords.length; i++) {\n        handleDefaults(traceIn, traceOut, coords[i] + 'calendar', layout.calendar);\n    }\n};\n\n// each calendar needs its own default canonical tick. I would love to use\n// 2000-01-01 (or even 0000-01-01) for them all but they don't necessarily\n// all support either of those dates. Instead I'll use the most significant\n// number they *do* support, biased toward the present day.\nvar CANONICAL_TICK = {\n    chinese: '2000-01-01',\n    coptic: '2000-01-01',\n    discworld: '2000-01-01',\n    ethiopian: '2000-01-01',\n    hebrew: '5000-01-01',\n    islamic: '1000-01-01',\n    julian: '2000-01-01',\n    mayan: '5000-01-01',\n    nanakshahi: '1000-01-01',\n    nepali: '2000-01-01',\n    persian: '1000-01-01',\n    jalali: '1000-01-01',\n    taiwan: '1000-01-01',\n    thai: '2000-01-01',\n    ummalqura: '1400-01-01'\n};\n\n// Start on a Sunday - for week ticks\n// Discworld and Mayan calendars don't have 7-day weeks but we're going to give them\n// 7-day week ticks so start on our Sundays.\n// If anyone really cares we can customize the auto tick spacings for these calendars.\nvar CANONICAL_SUNDAY = {\n    chinese: '2000-01-02',\n    coptic: '2000-01-03',\n    discworld: '2000-01-03',\n    ethiopian: '2000-01-05',\n    hebrew: '5000-01-01',\n    islamic: '1000-01-02',\n    julian: '2000-01-03',\n    mayan: '5000-01-01',\n    nanakshahi: '1000-01-05',\n    nepali: '2000-01-05',\n    persian: '1000-01-01',\n    jalali: '1000-01-01',\n    taiwan: '1000-01-04',\n    thai: '2000-01-04',\n    ummalqura: '1400-01-06'\n};\n\nvar DFLTRANGE = {\n    chinese: ['2000-01-01', '2001-01-01'],\n    coptic: ['1700-01-01', '1701-01-01'],\n    discworld: ['1800-01-01', '1801-01-01'],\n    ethiopian: ['2000-01-01', '2001-01-01'],\n    hebrew: ['5700-01-01', '5701-01-01'],\n    islamic: ['1400-01-01', '1401-01-01'],\n    julian: ['2000-01-01', '2001-01-01'],\n    mayan: ['5200-01-01', '5201-01-01'],\n    nanakshahi: ['0500-01-01', '0501-01-01'],\n    nepali: ['2000-01-01', '2001-01-01'],\n    persian: ['1400-01-01', '1401-01-01'],\n    jalali: ['1400-01-01', '1401-01-01'],\n    taiwan: ['0100-01-01', '0101-01-01'],\n    thai: ['2500-01-01', '2501-01-01'],\n    ummalqura: ['1400-01-01', '1401-01-01']\n};\n\n/*\n * convert d3 templates to world-calendars templates, so our users only need\n * to know d3's specifiers. Map space padding to no padding, and unknown fields\n * to an ugly placeholder\n */\nvar UNKNOWN = '##';\nvar d3ToWorldCalendars = {\n    'd': {'0': 'dd', '-': 'd'}, // 2-digit or unpadded day of month\n    'e': {'0': 'd', '-': 'd'}, // alternate, always unpadded day of month\n    'a': {'0': 'D', '-': 'D'}, // short weekday name\n    'A': {'0': 'DD', '-': 'DD'}, // full weekday name\n    'j': {'0': 'oo', '-': 'o'}, // 3-digit or unpadded day of the year\n    'W': {'0': 'ww', '-': 'w'}, // 2-digit or unpadded week of the year (Monday first)\n    'm': {'0': 'mm', '-': 'm'}, // 2-digit or unpadded month number\n    'b': {'0': 'M', '-': 'M'}, // short month name\n    'B': {'0': 'MM', '-': 'MM'}, // full month name\n    'y': {'0': 'yy', '-': 'yy'}, // 2-digit year (map unpadded to zero-padded)\n    'Y': {'0': 'yyyy', '-': 'yyyy'}, // 4-digit year (map unpadded to zero-padded)\n    'U': UNKNOWN, // Sunday-first week of the year\n    'w': UNKNOWN, // day of the week [0(sunday),6]\n    // combined format, we replace the date part with the world-calendar version\n    // and the %X stays there for d3 to handle with time parts\n    'c': {'0': 'D M d %X yyyy', '-': 'D M d %X yyyy'},\n    'x': {'0': 'mm/dd/yyyy', '-': 'mm/dd/yyyy'}\n};\n\nfunction worldCalFmt(fmt, x, calendar) {\n    var dateJD = Math.floor((x + 0.05) / ONEDAY) + EPOCHJD;\n    var cDate = getCal(calendar).fromJD(dateJD);\n    var i = 0;\n    var modifier, directive, directiveLen, directiveObj, replacementPart;\n\n    while((i = fmt.indexOf('%', i)) !== -1) {\n        modifier = fmt.charAt(i + 1);\n        if(modifier === '0' || modifier === '-' || modifier === '_') {\n            directiveLen = 3;\n            directive = fmt.charAt(i + 2);\n            if(modifier === '_') modifier = '-';\n        }\n        else {\n            directive = modifier;\n            modifier = '0';\n            directiveLen = 2;\n        }\n        directiveObj = d3ToWorldCalendars[directive];\n        if(!directiveObj) {\n            i += directiveLen;\n        }\n        else {\n            // code is recognized as a date part but world-calendars doesn't support it\n            if(directiveObj === UNKNOWN) replacementPart = UNKNOWN;\n\n            // format the cDate according to the translated directive\n            else replacementPart = cDate.formatDate(directiveObj[modifier]);\n\n            fmt = fmt.substr(0, i) + replacementPart + fmt.substr(i + directiveLen);\n            i += replacementPart.length;\n        }\n    }\n    return fmt;\n}\n\n// cache world calendars, so we don't have to reinstantiate\n// during each date-time conversion\nvar allCals = {};\nfunction getCal(calendar) {\n    var calendarObj = allCals[calendar];\n    if(calendarObj) return calendarObj;\n\n    calendarObj = allCals[calendar] = calendars.instance(calendar);\n    return calendarObj;\n}\n\nfunction makeAttrs(description) {\n    return Lib.extendFlat({}, attributes, { description: description });\n}\n\nfunction makeTraceAttrsDescription(coord) {\n    return 'Sets the calendar system to use with `' + coord + '` date data.';\n}\n\nvar xAttrs = {\n    xcalendar: makeAttrs(makeTraceAttrsDescription('x'))\n};\n\nvar xyAttrs = Lib.extendFlat({}, xAttrs, {\n    ycalendar: makeAttrs(makeTraceAttrsDescription('y'))\n});\n\nvar xyzAttrs = Lib.extendFlat({}, xyAttrs, {\n    zcalendar: makeAttrs(makeTraceAttrsDescription('z'))\n});\n\nvar axisAttrs = makeAttrs([\n    'Sets the calendar system to use for `range` and `tick0`',\n    'if this is a date axis. This does not set the calendar for',\n    'interpreting data on this axis, that\\'s specified in the trace',\n    'or via the global `layout.calendar`'\n].join(' '));\n\nmodule.exports = {\n    moduleType: 'component',\n    name: 'calendars',\n\n    schema: {\n        traces: {\n            scatter: xyAttrs,\n            bar: xyAttrs,\n            box: xyAttrs,\n            heatmap: xyAttrs,\n            contour: xyAttrs,\n            histogram: xyAttrs,\n            histogram2d: xyAttrs,\n            histogram2dcontour: xyAttrs,\n            scatter3d: xyzAttrs,\n            surface: xyzAttrs,\n            mesh3d: xyzAttrs,\n            scattergl: xyAttrs,\n            ohlc: xAttrs,\n            candlestick: xAttrs\n        },\n        layout: {\n            calendar: makeAttrs([\n                'Sets the default calendar system to use for interpreting and',\n                'displaying dates throughout the plot.'\n            ].join(' '))\n        },\n        subplots: {\n            xaxis: {calendar: axisAttrs},\n            yaxis: {calendar: axisAttrs},\n            scene: {\n                xaxis: {calendar: axisAttrs},\n                // TODO: it's actually redundant to include yaxis and zaxis here\n                // because in the scene attributes these are the same object so merging\n                // into one merges into them all. However, I left them in for parity with\n                // cartesian, where yaxis is unused until we Plotschema.get() when we\n                // use its presence or absence to determine whether to delete attributes\n                // from yaxis if they only apply to x (rangeselector/rangeslider)\n                yaxis: {calendar: axisAttrs},\n                zaxis: {calendar: axisAttrs}\n            },\n            polar: {\n                radialaxis: {calendar: axisAttrs}\n            }\n        },\n        transforms: {\n            filter: {\n                valuecalendar: makeAttrs([\n                    'Sets the calendar system to use for `value`, if it is a date.'\n                ].join(' ')),\n                targetcalendar: makeAttrs([\n                    'Sets the calendar system to use for `target`, if it is an',\n                    'array of dates. If `target` is a string (eg *x*) we use the',\n                    'corresponding trace attribute (eg `xcalendar`) if it exists,',\n                    'even if `targetcalendar` is provided.'\n                ].join(' '))\n            }\n        }\n    },\n\n    layoutAttributes: attributes,\n\n    handleDefaults: handleDefaults,\n    handleTraceDefaults: handleTraceDefaults,\n\n    CANONICAL_SUNDAY: CANONICAL_SUNDAY,\n    CANONICAL_TICK: CANONICAL_TICK,\n    DFLTRANGE: DFLTRANGE,\n\n    getCal: getCal,\n    worldCalFmt: worldCalFmt\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
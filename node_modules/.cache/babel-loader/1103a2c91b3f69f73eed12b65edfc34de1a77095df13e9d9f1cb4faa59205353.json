{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar tinycolor = require('tinycolor2');\nvar scales = {\n  'Greys': [[0, 'rgb(0,0,0)'], [1, 'rgb(255,255,255)']],\n  'YlGnBu': [[0, 'rgb(8,29,88)'], [0.125, 'rgb(37,52,148)'], [0.25, 'rgb(34,94,168)'], [0.375, 'rgb(29,145,192)'], [0.5, 'rgb(65,182,196)'], [0.625, 'rgb(127,205,187)'], [0.75, 'rgb(199,233,180)'], [0.875, 'rgb(237,248,217)'], [1, 'rgb(255,255,217)']],\n  'Greens': [[0, 'rgb(0,68,27)'], [0.125, 'rgb(0,109,44)'], [0.25, 'rgb(35,139,69)'], [0.375, 'rgb(65,171,93)'], [0.5, 'rgb(116,196,118)'], [0.625, 'rgb(161,217,155)'], [0.75, 'rgb(199,233,192)'], [0.875, 'rgb(229,245,224)'], [1, 'rgb(247,252,245)']],\n  'YlOrRd': [[0, 'rgb(128,0,38)'], [0.125, 'rgb(189,0,38)'], [0.25, 'rgb(227,26,28)'], [0.375, 'rgb(252,78,42)'], [0.5, 'rgb(253,141,60)'], [0.625, 'rgb(254,178,76)'], [0.75, 'rgb(254,217,118)'], [0.875, 'rgb(255,237,160)'], [1, 'rgb(255,255,204)']],\n  'Bluered': [[0, 'rgb(0,0,255)'], [1, 'rgb(255,0,0)']],\n  // modified RdBu based on\n  // www.sandia.gov/~kmorel/documents/ColorMaps/ColorMapsExpanded.pdf\n  'RdBu': [[0, 'rgb(5,10,172)'], [0.35, 'rgb(106,137,247)'], [0.5, 'rgb(190,190,190)'], [0.6, 'rgb(220,170,132)'], [0.7, 'rgb(230,145,90)'], [1, 'rgb(178,10,28)']],\n  // Scale for non-negative numeric values\n  'Reds': [[0, 'rgb(220,220,220)'], [0.2, 'rgb(245,195,157)'], [0.4, 'rgb(245,160,105)'], [1, 'rgb(178,10,28)']],\n  // Scale for non-positive numeric values\n  'Blues': [[0, 'rgb(5,10,172)'], [0.35, 'rgb(40,60,190)'], [0.5, 'rgb(70,100,245)'], [0.6, 'rgb(90,120,245)'], [0.7, 'rgb(106,137,247)'], [1, 'rgb(220,220,220)']],\n  'Picnic': [[0, 'rgb(0,0,255)'], [0.1, 'rgb(51,153,255)'], [0.2, 'rgb(102,204,255)'], [0.3, 'rgb(153,204,255)'], [0.4, 'rgb(204,204,255)'], [0.5, 'rgb(255,255,255)'], [0.6, 'rgb(255,204,255)'], [0.7, 'rgb(255,153,255)'], [0.8, 'rgb(255,102,204)'], [0.9, 'rgb(255,102,102)'], [1, 'rgb(255,0,0)']],\n  'Rainbow': [[0, 'rgb(150,0,90)'], [0.125, 'rgb(0,0,200)'], [0.25, 'rgb(0,25,255)'], [0.375, 'rgb(0,152,255)'], [0.5, 'rgb(44,255,150)'], [0.625, 'rgb(151,255,0)'], [0.75, 'rgb(255,234,0)'], [0.875, 'rgb(255,111,0)'], [1, 'rgb(255,0,0)']],\n  'Portland': [[0, 'rgb(12,51,131)'], [0.25, 'rgb(10,136,186)'], [0.5, 'rgb(242,211,56)'], [0.75, 'rgb(242,143,56)'], [1, 'rgb(217,30,30)']],\n  'Jet': [[0, 'rgb(0,0,131)'], [0.125, 'rgb(0,60,170)'], [0.375, 'rgb(5,255,255)'], [0.625, 'rgb(255,255,0)'], [0.875, 'rgb(250,0,0)'], [1, 'rgb(128,0,0)']],\n  'Hot': [[0, 'rgb(0,0,0)'], [0.3, 'rgb(230,0,0)'], [0.6, 'rgb(255,210,0)'], [1, 'rgb(255,255,255)']],\n  'Blackbody': [[0, 'rgb(0,0,0)'], [0.2, 'rgb(230,0,0)'], [0.4, 'rgb(230,210,0)'], [0.7, 'rgb(255,255,255)'], [1, 'rgb(160,200,255)']],\n  'Earth': [[0, 'rgb(0,0,130)'], [0.1, 'rgb(0,180,180)'], [0.2, 'rgb(40,210,40)'], [0.4, 'rgb(230,230,50)'], [0.6, 'rgb(120,70,20)'], [1, 'rgb(255,255,255)']],\n  'Electric': [[0, 'rgb(0,0,0)'], [0.15, 'rgb(30,0,100)'], [0.4, 'rgb(120,0,100)'], [0.6, 'rgb(160,90,0)'], [0.8, 'rgb(230,200,0)'], [1, 'rgb(255,250,220)']],\n  'Viridis': [[0, '#440154'], [0.06274509803921569, '#48186a'], [0.12549019607843137, '#472d7b'], [0.18823529411764706, '#424086'], [0.25098039215686274, '#3b528b'], [0.3137254901960784, '#33638d'], [0.3764705882352941, '#2c728e'], [0.4392156862745098, '#26828e'], [0.5019607843137255, '#21918c'], [0.5647058823529412, '#1fa088'], [0.6274509803921569, '#28ae80'], [0.6901960784313725, '#3fbc73'], [0.7529411764705882, '#5ec962'], [0.8156862745098039, '#84d44b'], [0.8784313725490196, '#addc30'], [0.9411764705882353, '#d8e219'], [1, '#fde725']],\n  'Cividis': [[0.000000, 'rgb(0,32,76)'], [0.058824, 'rgb(0,42,102)'], [0.117647, 'rgb(0,52,110)'], [0.176471, 'rgb(39,63,108)'], [0.235294, 'rgb(60,74,107)'], [0.294118, 'rgb(76,85,107)'], [0.352941, 'rgb(91,95,109)'], [0.411765, 'rgb(104,106,112)'], [0.470588, 'rgb(117,117,117)'], [0.529412, 'rgb(131,129,120)'], [0.588235, 'rgb(146,140,120)'], [0.647059, 'rgb(161,152,118)'], [0.705882, 'rgb(176,165,114)'], [0.764706, 'rgb(192,177,109)'], [0.823529, 'rgb(209,191,102)'], [0.882353, 'rgb(225,204,92)'], [0.941176, 'rgb(243,219,79)'], [1.000000, 'rgb(255,233,69)']]\n};\nvar defaultScale = scales.RdBu;\nfunction getScale(scl, dflt) {\n  if (!dflt) dflt = defaultScale;\n  if (!scl) return dflt;\n  function parseScale() {\n    try {\n      scl = scales[scl] || JSON.parse(scl);\n    } catch (e) {\n      scl = dflt;\n    }\n  }\n  if (typeof scl === 'string') {\n    parseScale();\n    // occasionally scl is double-JSON encoded...\n    if (typeof scl === 'string') parseScale();\n  }\n  if (!isValidScaleArray(scl)) return dflt;\n  return scl;\n}\nfunction isValidScaleArray(scl) {\n  var highestVal = 0;\n  if (!Array.isArray(scl) || scl.length < 2) return false;\n  if (!scl[0] || !scl[scl.length - 1]) return false;\n  if (+scl[0][0] !== 0 || +scl[scl.length - 1][0] !== 1) return false;\n  for (var i = 0; i < scl.length; i++) {\n    var si = scl[i];\n    if (si.length !== 2 || +si[0] < highestVal || !tinycolor(si[1]).isValid()) {\n      return false;\n    }\n    highestVal = +si[0];\n  }\n  return true;\n}\nfunction isValidScale(scl) {\n  if (scales[scl] !== undefined) return true;else return isValidScaleArray(scl);\n}\nmodule.exports = {\n  scales: scales,\n  defaultScale: defaultScale,\n  get: getScale,\n  isValid: isValidScale\n};","map":{"version":3,"names":["tinycolor","require","scales","defaultScale","RdBu","getScale","scl","dflt","parseScale","JSON","parse","e","isValidScaleArray","highestVal","Array","isArray","length","i","si","isValid","isValidScale","undefined","module","exports","get"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/colorscale/scales.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar tinycolor = require('tinycolor2');\n\nvar scales = {\n    'Greys': [\n        [0, 'rgb(0,0,0)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'YlGnBu': [\n        [0, 'rgb(8,29,88)'], [0.125, 'rgb(37,52,148)'],\n        [0.25, 'rgb(34,94,168)'], [0.375, 'rgb(29,145,192)'],\n        [0.5, 'rgb(65,182,196)'], [0.625, 'rgb(127,205,187)'],\n        [0.75, 'rgb(199,233,180)'], [0.875, 'rgb(237,248,217)'],\n        [1, 'rgb(255,255,217)']\n    ],\n\n    'Greens': [\n        [0, 'rgb(0,68,27)'], [0.125, 'rgb(0,109,44)'],\n        [0.25, 'rgb(35,139,69)'], [0.375, 'rgb(65,171,93)'],\n        [0.5, 'rgb(116,196,118)'], [0.625, 'rgb(161,217,155)'],\n        [0.75, 'rgb(199,233,192)'], [0.875, 'rgb(229,245,224)'],\n        [1, 'rgb(247,252,245)']\n    ],\n\n    'YlOrRd': [\n        [0, 'rgb(128,0,38)'], [0.125, 'rgb(189,0,38)'],\n        [0.25, 'rgb(227,26,28)'], [0.375, 'rgb(252,78,42)'],\n        [0.5, 'rgb(253,141,60)'], [0.625, 'rgb(254,178,76)'],\n        [0.75, 'rgb(254,217,118)'], [0.875, 'rgb(255,237,160)'],\n        [1, 'rgb(255,255,204)']\n    ],\n\n    'Bluered': [\n        [0, 'rgb(0,0,255)'], [1, 'rgb(255,0,0)']\n    ],\n\n    // modified RdBu based on\n    // www.sandia.gov/~kmorel/documents/ColorMaps/ColorMapsExpanded.pdf\n    'RdBu': [\n        [0, 'rgb(5,10,172)'], [0.35, 'rgb(106,137,247)'],\n        [0.5, 'rgb(190,190,190)'], [0.6, 'rgb(220,170,132)'],\n        [0.7, 'rgb(230,145,90)'], [1, 'rgb(178,10,28)']\n    ],\n\n    // Scale for non-negative numeric values\n    'Reds': [\n        [0, 'rgb(220,220,220)'], [0.2, 'rgb(245,195,157)'],\n        [0.4, 'rgb(245,160,105)'], [1, 'rgb(178,10,28)']\n    ],\n\n    // Scale for non-positive numeric values\n    'Blues': [\n        [0, 'rgb(5,10,172)'], [0.35, 'rgb(40,60,190)'],\n        [0.5, 'rgb(70,100,245)'], [0.6, 'rgb(90,120,245)'],\n        [0.7, 'rgb(106,137,247)'], [1, 'rgb(220,220,220)']\n    ],\n\n    'Picnic': [\n        [0, 'rgb(0,0,255)'], [0.1, 'rgb(51,153,255)'],\n        [0.2, 'rgb(102,204,255)'], [0.3, 'rgb(153,204,255)'],\n        [0.4, 'rgb(204,204,255)'], [0.5, 'rgb(255,255,255)'],\n        [0.6, 'rgb(255,204,255)'], [0.7, 'rgb(255,153,255)'],\n        [0.8, 'rgb(255,102,204)'], [0.9, 'rgb(255,102,102)'],\n        [1, 'rgb(255,0,0)']\n    ],\n\n    'Rainbow': [\n        [0, 'rgb(150,0,90)'], [0.125, 'rgb(0,0,200)'],\n        [0.25, 'rgb(0,25,255)'], [0.375, 'rgb(0,152,255)'],\n        [0.5, 'rgb(44,255,150)'], [0.625, 'rgb(151,255,0)'],\n        [0.75, 'rgb(255,234,0)'], [0.875, 'rgb(255,111,0)'],\n        [1, 'rgb(255,0,0)']\n    ],\n\n    'Portland': [\n        [0, 'rgb(12,51,131)'], [0.25, 'rgb(10,136,186)'],\n        [0.5, 'rgb(242,211,56)'], [0.75, 'rgb(242,143,56)'],\n        [1, 'rgb(217,30,30)']\n    ],\n\n    'Jet': [\n        [0, 'rgb(0,0,131)'], [0.125, 'rgb(0,60,170)'],\n        [0.375, 'rgb(5,255,255)'], [0.625, 'rgb(255,255,0)'],\n        [0.875, 'rgb(250,0,0)'], [1, 'rgb(128,0,0)']\n    ],\n\n    'Hot': [\n        [0, 'rgb(0,0,0)'], [0.3, 'rgb(230,0,0)'],\n        [0.6, 'rgb(255,210,0)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'Blackbody': [\n        [0, 'rgb(0,0,0)'], [0.2, 'rgb(230,0,0)'],\n        [0.4, 'rgb(230,210,0)'], [0.7, 'rgb(255,255,255)'],\n        [1, 'rgb(160,200,255)']\n    ],\n\n    'Earth': [\n        [0, 'rgb(0,0,130)'], [0.1, 'rgb(0,180,180)'],\n        [0.2, 'rgb(40,210,40)'], [0.4, 'rgb(230,230,50)'],\n        [0.6, 'rgb(120,70,20)'], [1, 'rgb(255,255,255)']\n    ],\n\n    'Electric': [\n        [0, 'rgb(0,0,0)'], [0.15, 'rgb(30,0,100)'],\n        [0.4, 'rgb(120,0,100)'], [0.6, 'rgb(160,90,0)'],\n        [0.8, 'rgb(230,200,0)'], [1, 'rgb(255,250,220)']\n    ],\n\n    'Viridis': [\n        [0, '#440154'], [0.06274509803921569, '#48186a'],\n        [0.12549019607843137, '#472d7b'], [0.18823529411764706, '#424086'],\n        [0.25098039215686274, '#3b528b'], [0.3137254901960784, '#33638d'],\n        [0.3764705882352941, '#2c728e'], [0.4392156862745098, '#26828e'],\n        [0.5019607843137255, '#21918c'], [0.5647058823529412, '#1fa088'],\n        [0.6274509803921569, '#28ae80'], [0.6901960784313725, '#3fbc73'],\n        [0.7529411764705882, '#5ec962'], [0.8156862745098039, '#84d44b'],\n        [0.8784313725490196, '#addc30'], [0.9411764705882353, '#d8e219'],\n        [1, '#fde725']\n    ],\n\n    'Cividis': [\n        [0.000000, 'rgb(0,32,76)'], [0.058824, 'rgb(0,42,102)'],\n        [0.117647, 'rgb(0,52,110)'], [0.176471, 'rgb(39,63,108)'],\n        [0.235294, 'rgb(60,74,107)'], [0.294118, 'rgb(76,85,107)'],\n        [0.352941, 'rgb(91,95,109)'], [0.411765, 'rgb(104,106,112)'],\n        [0.470588, 'rgb(117,117,117)'], [0.529412, 'rgb(131,129,120)'],\n        [0.588235, 'rgb(146,140,120)'], [0.647059, 'rgb(161,152,118)'],\n        [0.705882, 'rgb(176,165,114)'], [0.764706, 'rgb(192,177,109)'],\n        [0.823529, 'rgb(209,191,102)'], [0.882353, 'rgb(225,204,92)'],\n        [0.941176, 'rgb(243,219,79)'], [1.000000, 'rgb(255,233,69)']\n    ]\n};\n\nvar defaultScale = scales.RdBu;\n\nfunction getScale(scl, dflt) {\n    if(!dflt) dflt = defaultScale;\n    if(!scl) return dflt;\n\n    function parseScale() {\n        try {\n            scl = scales[scl] || JSON.parse(scl);\n        } catch(e) {\n            scl = dflt;\n        }\n    }\n\n    if(typeof scl === 'string') {\n        parseScale();\n        // occasionally scl is double-JSON encoded...\n        if(typeof scl === 'string') parseScale();\n    }\n\n    if(!isValidScaleArray(scl)) return dflt;\n    return scl;\n}\n\n\nfunction isValidScaleArray(scl) {\n    var highestVal = 0;\n\n    if(!Array.isArray(scl) || scl.length < 2) return false;\n\n    if(!scl[0] || !scl[scl.length - 1]) return false;\n\n    if(+scl[0][0] !== 0 || +scl[scl.length - 1][0] !== 1) return false;\n\n    for(var i = 0; i < scl.length; i++) {\n        var si = scl[i];\n\n        if(si.length !== 2 || +si[0] < highestVal || !tinycolor(si[1]).isValid()) {\n            return false;\n        }\n\n        highestVal = +si[0];\n    }\n\n    return true;\n}\n\nfunction isValidScale(scl) {\n    if(scales[scl] !== undefined) return true;\n    else return isValidScaleArray(scl);\n}\n\nmodule.exports = {\n    scales: scales,\n    defaultScale: defaultScale,\n\n    get: getScale,\n    isValid: isValidScale\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
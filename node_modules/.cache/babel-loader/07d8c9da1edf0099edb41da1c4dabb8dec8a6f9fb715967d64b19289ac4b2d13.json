{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Scatter3D = {};\nScatter3D.plot = require('./convert');\nScatter3D.attributes = require('./attributes');\nScatter3D.markerSymbols = require('../../constants/gl3d_markers');\nScatter3D.supplyDefaults = require('./defaults');\nScatter3D.colorbar = [{\n  container: 'marker',\n  min: 'cmin',\n  max: 'cmax'\n}, {\n  container: 'line',\n  min: 'cmin',\n  max: 'cmax'\n}];\nScatter3D.calc = require('./calc');\nScatter3D.moduleType = 'trace';\nScatter3D.name = 'scatter3d';\nScatter3D.basePlotModule = require('../../plots/gl3d');\nScatter3D.categories = ['gl3d', 'symbols', 'showLegend'];\nScatter3D.meta = {\n  hrName: 'scatter_3d',\n  description: ['The data visualized as scatter point or lines in 3D dimension', 'is set in `x`, `y`, `z`.', 'Text (appearing either on the chart or on hover only) is via `text`.', 'Bubble charts are achieved by setting `marker.size` and/or `marker.color`', 'Projections are achieved via `projection`.', 'Surface fills are achieved via `surfaceaxis`.'].join(' ')\n};\nmodule.exports = Scatter3D;","map":{"version":3,"names":["Scatter3D","plot","require","attributes","markerSymbols","supplyDefaults","colorbar","container","min","max","calc","moduleType","name","basePlotModule","categories","meta","hrName","description","join","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatter3d/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Scatter3D = {};\n\nScatter3D.plot = require('./convert');\nScatter3D.attributes = require('./attributes');\nScatter3D.markerSymbols = require('../../constants/gl3d_markers');\nScatter3D.supplyDefaults = require('./defaults');\nScatter3D.colorbar = [\n    {\n        container: 'marker',\n        min: 'cmin',\n        max: 'cmax'\n    }, {\n        container: 'line',\n        min: 'cmin',\n        max: 'cmax'\n    }\n];\nScatter3D.calc = require('./calc');\n\nScatter3D.moduleType = 'trace';\nScatter3D.name = 'scatter3d';\nScatter3D.basePlotModule = require('../../plots/gl3d');\nScatter3D.categories = ['gl3d', 'symbols', 'showLegend'];\nScatter3D.meta = {\n    hrName: 'scatter_3d',\n    description: [\n        'The data visualized as scatter point or lines in 3D dimension',\n        'is set in `x`, `y`, `z`.',\n        'Text (appearing either on the chart or on hover only) is via `text`.',\n        'Bubble charts are achieved by setting `marker.size` and/or `marker.color`',\n        'Projections are achieved via `projection`.',\n        'Surface fills are achieved via `surfaceaxis`.'\n    ].join(' ')\n};\n\nmodule.exports = Scatter3D;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,SAAS,GAAG,CAAC,CAAC;AAElBA,SAAS,CAACC,IAAI,GAAGC,OAAO,CAAC,WAAW,CAAC;AACrCF,SAAS,CAACG,UAAU,GAAGD,OAAO,CAAC,cAAc,CAAC;AAC9CF,SAAS,CAACI,aAAa,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACjEF,SAAS,CAACK,cAAc,GAAGH,OAAO,CAAC,YAAY,CAAC;AAChDF,SAAS,CAACM,QAAQ,GAAG,CACjB;EACIC,SAAS,EAAE,QAAQ;EACnBC,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE;AACT,CAAC,EAAE;EACCF,SAAS,EAAE,MAAM;EACjBC,GAAG,EAAE,MAAM;EACXC,GAAG,EAAE;AACT,CAAC,CACJ;AACDT,SAAS,CAACU,IAAI,GAAGR,OAAO,CAAC,QAAQ,CAAC;AAElCF,SAAS,CAACW,UAAU,GAAG,OAAO;AAC9BX,SAAS,CAACY,IAAI,GAAG,WAAW;AAC5BZ,SAAS,CAACa,cAAc,GAAGX,OAAO,CAAC,kBAAkB,CAAC;AACtDF,SAAS,CAACc,UAAU,GAAG,CAAC,MAAM,EAAE,SAAS,EAAE,YAAY,CAAC;AACxDd,SAAS,CAACe,IAAI,GAAG;EACbC,MAAM,EAAE,YAAY;EACpBC,WAAW,EAAE,CACT,+DAA+D,EAC/D,0BAA0B,EAC1B,sEAAsE,EACtE,2EAA2E,EAC3E,4CAA4C,EAC5C,+CAA+C,CAClD,CAACC,IAAI,CAAC,GAAG;AACd,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGpB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cleanTicks = require('./clean_ticks');\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType) {\n  var tickmode;\n  if (containerIn.tickmode === 'array' && (axType === 'log' || axType === 'date')) {\n    tickmode = containerOut.tickmode = 'auto';\n  } else {\n    var tickmodeDefault = Array.isArray(containerIn.tickvals) ? 'array' : containerIn.dtick ? 'linear' : 'auto';\n    tickmode = coerce('tickmode', tickmodeDefault);\n  }\n  if (tickmode === 'auto') coerce('nticks');else if (tickmode === 'linear') {\n    // dtick is usually a positive number, but there are some\n    // special strings available for log or date axes\n    // tick0 also has special logic\n    var dtick = containerOut.dtick = cleanTicks.dtick(containerIn.dtick, axType);\n    containerOut.tick0 = cleanTicks.tick0(containerIn.tick0, axType, containerOut.calendar, dtick);\n  } else if (axType !== 'multicategory') {\n    var tickvals = coerce('tickvals');\n    if (tickvals === undefined) containerOut.tickmode = 'auto';else coerce('ticktext');\n  }\n};","map":{"version":3,"names":["cleanTicks","require","module","exports","handleTickValueDefaults","containerIn","containerOut","coerce","axType","tickmode","tickmodeDefault","Array","isArray","tickvals","dtick","tick0","calendar","undefined"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/tick_value_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar cleanTicks = require('./clean_ticks');\n\nmodule.exports = function handleTickValueDefaults(containerIn, containerOut, coerce, axType) {\n    var tickmode;\n\n    if(containerIn.tickmode === 'array' &&\n            (axType === 'log' || axType === 'date')) {\n        tickmode = containerOut.tickmode = 'auto';\n    } else {\n        var tickmodeDefault = Array.isArray(containerIn.tickvals) ? 'array' :\n            containerIn.dtick ? 'linear' :\n            'auto';\n        tickmode = coerce('tickmode', tickmodeDefault);\n    }\n\n    if(tickmode === 'auto') coerce('nticks');\n    else if(tickmode === 'linear') {\n        // dtick is usually a positive number, but there are some\n        // special strings available for log or date axes\n        // tick0 also has special logic\n        var dtick = containerOut.dtick = cleanTicks.dtick(\n            containerIn.dtick, axType);\n        containerOut.tick0 = cleanTicks.tick0(\n            containerIn.tick0, axType, containerOut.calendar, dtick);\n    } else if(axType !== 'multicategory') {\n        var tickvals = coerce('tickvals');\n        if(tickvals === undefined) containerOut.tickmode = 'auto';\n        else coerce('ticktext');\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEzCC,MAAM,CAACC,OAAO,GAAG,SAASC,uBAAuB,CAACC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,MAAM,EAAE;EACzF,IAAIC,QAAQ;EAEZ,IAAGJ,WAAW,CAACI,QAAQ,KAAK,OAAO,KAC1BD,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,MAAM,CAAC,EAAE;IAC7CC,QAAQ,GAAGH,YAAY,CAACG,QAAQ,GAAG,MAAM;EAC7C,CAAC,MAAM;IACH,IAAIC,eAAe,GAAGC,KAAK,CAACC,OAAO,CAACP,WAAW,CAACQ,QAAQ,CAAC,GAAG,OAAO,GAC/DR,WAAW,CAACS,KAAK,GAAG,QAAQ,GAC5B,MAAM;IACVL,QAAQ,GAAGF,MAAM,CAAC,UAAU,EAAEG,eAAe,CAAC;EAClD;EAEA,IAAGD,QAAQ,KAAK,MAAM,EAAEF,MAAM,CAAC,QAAQ,CAAC,CAAC,KACpC,IAAGE,QAAQ,KAAK,QAAQ,EAAE;IAC3B;IACA;IACA;IACA,IAAIK,KAAK,GAAGR,YAAY,CAACQ,KAAK,GAAGd,UAAU,CAACc,KAAK,CAC7CT,WAAW,CAACS,KAAK,EAAEN,MAAM,CAAC;IAC9BF,YAAY,CAACS,KAAK,GAAGf,UAAU,CAACe,KAAK,CACjCV,WAAW,CAACU,KAAK,EAAEP,MAAM,EAAEF,YAAY,CAACU,QAAQ,EAAEF,KAAK,CAAC;EAChE,CAAC,MAAM,IAAGN,MAAM,KAAK,eAAe,EAAE;IAClC,IAAIK,QAAQ,GAAGN,MAAM,CAAC,UAAU,CAAC;IACjC,IAAGM,QAAQ,KAAKI,SAAS,EAAEX,YAAY,CAACG,QAAQ,GAAG,MAAM,CAAC,KACrDF,MAAM,CAAC,UAAU,CAAC;EAC3B;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
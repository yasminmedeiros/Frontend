{"ast":null,"code":"'use strict';\n\nvar coallesceUniforms = require('./reflect');\nvar GLError = require(\"./GLError\");\nmodule.exports = createUniformWrapper;\n\n//Binds a function and returns a value\nfunction identity(x) {\n  var c = new Function('y', 'return function(){return y}');\n  return c(x);\n}\nfunction makeVector(length, fill) {\n  var result = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    result[i] = fill;\n  }\n  return result;\n}\n\n//Create shims for uniforms\nfunction createUniformWrapper(gl, wrapper, uniforms, locations) {\n  function makeGetter(index) {\n    var proc = new Function('gl', 'wrapper', 'locations', 'return function(){return gl.getUniform(wrapper.program,locations[' + index + '])}');\n    return proc(gl, wrapper, locations);\n  }\n  function makePropSetter(path, index, type) {\n    switch (type) {\n      case 'bool':\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 'gl.uniform1i(locations[' + index + '],obj' + path + ')';\n      case 'float':\n        return 'gl.uniform1f(locations[' + index + '],obj' + path + ')';\n      default:\n        var vidx = type.indexOf('vec');\n        if (0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type');\n          }\n          switch (type.charAt(0)) {\n            case 'b':\n            case 'i':\n              return 'gl.uniform' + d + 'iv(locations[' + index + '],obj' + path + ')';\n            case 'v':\n              return 'gl.uniform' + d + 'fv(locations[' + index + '],obj' + path + ')';\n            default:\n              throw new GLError('', 'Unrecognized data type for vector ' + name + ': ' + type);\n          }\n        } else if (type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type);\n          }\n          return 'gl.uniformMatrix' + d + 'fv(locations[' + index + '],false,obj' + path + ')';\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type);\n        }\n        break;\n    }\n  }\n  function enumerateIndices(prefix, type) {\n    if (typeof type !== 'object') {\n      return [[prefix, type]];\n    }\n    var indices = [];\n    for (var id in type) {\n      var prop = type[id];\n      var tprefix = prefix;\n      if (parseInt(id) + '' === id) {\n        tprefix += '[' + id + ']';\n      } else {\n        tprefix += '.' + id;\n      }\n      if (typeof prop === 'object') {\n        indices.push.apply(indices, enumerateIndices(tprefix, prop));\n      } else {\n        indices.push([tprefix, prop]);\n      }\n    }\n    return indices;\n  }\n  function makeSetter(type) {\n    var code = ['return function updateProperty(obj){'];\n    var indices = enumerateIndices('', type);\n    for (var i = 0; i < indices.length; ++i) {\n      var item = indices[i];\n      var path = item[0];\n      var idx = item[1];\n      if (locations[idx]) {\n        code.push(makePropSetter(path, idx, uniforms[idx].type));\n      }\n    }\n    code.push('return obj}');\n    var proc = new Function('gl', 'locations', code.join('\\n'));\n    return proc(gl, locations);\n  }\n  function defaultValue(type) {\n    switch (type) {\n      case 'bool':\n        return false;\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 0;\n      case 'float':\n        return 0.0;\n      default:\n        var vidx = type.indexOf('vec');\n        if (0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type');\n          }\n          if (type.charAt(0) === 'b') {\n            return makeVector(d, false);\n          }\n          return makeVector(d, 0);\n        } else if (type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length - 1) - 48;\n          if (d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type);\n          }\n          return makeVector(d * d, 0);\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type);\n        }\n        break;\n    }\n  }\n  function storeProperty(obj, prop, type) {\n    if (typeof type === 'object') {\n      var child = processObject(type);\n      Object.defineProperty(obj, prop, {\n        get: identity(child),\n        set: makeSetter(type),\n        enumerable: true,\n        configurable: false\n      });\n    } else {\n      if (locations[type]) {\n        Object.defineProperty(obj, prop, {\n          get: makeGetter(type),\n          set: makeSetter(type),\n          enumerable: true,\n          configurable: false\n        });\n      } else {\n        obj[prop] = defaultValue(uniforms[type].type);\n      }\n    }\n  }\n  function processObject(obj) {\n    var result;\n    if (Array.isArray(obj)) {\n      result = new Array(obj.length);\n      for (var i = 0; i < obj.length; ++i) {\n        storeProperty(result, i, obj[i]);\n      }\n    } else {\n      result = {};\n      for (var id in obj) {\n        storeProperty(result, id, obj[id]);\n      }\n    }\n    return result;\n  }\n\n  //Return data\n  var coallesced = coallesceUniforms(uniforms, true);\n  return {\n    get: identity(processObject(coallesced)),\n    set: makeSetter(coallesced),\n    enumerable: true,\n    configurable: true\n  };\n}","map":{"version":3,"names":["coallesceUniforms","require","GLError","module","exports","createUniformWrapper","identity","x","c","Function","makeVector","length","fill","result","Array","i","gl","wrapper","uniforms","locations","makeGetter","index","proc","makePropSetter","path","type","vidx","indexOf","d","charCodeAt","charAt","name","enumerateIndices","prefix","indices","id","prop","tprefix","parseInt","push","apply","makeSetter","code","item","idx","join","defaultValue","storeProperty","obj","child","processObject","Object","defineProperty","get","set","enumerable","configurable","isArray","coallesced"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-shader/lib/create-uniforms.js"],"sourcesContent":["'use strict'\n\nvar coallesceUniforms = require('./reflect')\nvar GLError = require(\"./GLError\")\n\nmodule.exports = createUniformWrapper\n\n//Binds a function and returns a value\nfunction identity(x) {\n  var c = new Function('y', 'return function(){return y}')\n  return c(x)\n}\n\nfunction makeVector(length, fill) {\n  var result = new Array(length)\n  for(var i=0; i<length; ++i) {\n    result[i] = fill\n  }\n  return result\n}\n\n//Create shims for uniforms\nfunction createUniformWrapper(gl, wrapper, uniforms, locations) {\n\n  function makeGetter(index) {\n    var proc = new Function(\n        'gl'\n      , 'wrapper'\n      , 'locations'\n      , 'return function(){return gl.getUniform(wrapper.program,locations[' + index + '])}')\n    return proc(gl, wrapper, locations)\n  }\n\n  function makePropSetter(path, index, type) {\n    switch(type) {\n      case 'bool':\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 'gl.uniform1i(locations[' + index + '],obj' + path + ')'\n      case 'float':\n        return 'gl.uniform1f(locations[' + index + '],obj' + path + ')'\n      default:\n        var vidx = type.indexOf('vec')\n        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type')\n          }\n          switch(type.charAt(0)) {\n            case 'b':\n            case 'i':\n              return 'gl.uniform' + d + 'iv(locations[' + index + '],obj' + path + ')'\n            case 'v':\n              return 'gl.uniform' + d + 'fv(locations[' + index + '],obj' + path + ')'\n            default:\n              throw new GLError('', 'Unrecognized data type for vector ' + name + ': ' + type)\n          }\n        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n          }\n          return 'gl.uniformMatrix' + d + 'fv(locations[' + index + '],false,obj' + path + ')'\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n\n  function enumerateIndices(prefix, type) {\n    if(typeof type !== 'object') {\n      return [ [prefix, type] ]\n    }\n    var indices = []\n    for(var id in type) {\n      var prop = type[id]\n      var tprefix = prefix\n      if(parseInt(id) + '' === id) {\n        tprefix += '[' + id + ']'\n      } else {\n        tprefix += '.' + id\n      }\n      if(typeof prop === 'object') {\n        indices.push.apply(indices, enumerateIndices(tprefix, prop))\n      } else {\n        indices.push([tprefix, prop])\n      }\n    }\n    return indices\n  }\n\n  function makeSetter(type) {\n    var code = [ 'return function updateProperty(obj){' ]\n    var indices = enumerateIndices('', type)\n    for(var i=0; i<indices.length; ++i) {\n      var item = indices[i]\n      var path = item[0]\n      var idx  = item[1]\n      if(locations[idx]) {\n        code.push(makePropSetter(path, idx, uniforms[idx].type))\n      }\n    }\n    code.push('return obj}')\n    var proc = new Function('gl', 'locations', code.join('\\n'))\n    return proc(gl, locations)\n  }\n\n  function defaultValue(type) {\n    switch(type) {\n      case 'bool':\n        return false\n      case 'int':\n      case 'sampler2D':\n      case 'samplerCube':\n        return 0\n      case 'float':\n        return 0.0\n      default:\n        var vidx = type.indexOf('vec')\n        if(0 <= vidx && vidx <= 1 && type.length === 4 + vidx) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid data type')\n          }\n          if(type.charAt(0) === 'b') {\n            return makeVector(d, false)\n          }\n          return makeVector(d, 0)\n        } else if(type.indexOf('mat') === 0 && type.length === 4) {\n          var d = type.charCodeAt(type.length-1) - 48\n          if(d < 2 || d > 4) {\n            throw new GLError('', 'Invalid uniform dimension type for matrix ' + name + ': ' + type)\n          }\n          return makeVector(d*d, 0)\n        } else {\n          throw new GLError('', 'Unknown uniform data type for ' + name + ': ' + type)\n        }\n      break\n    }\n  }\n\n  function storeProperty(obj, prop, type) {\n    if(typeof type === 'object') {\n      var child = processObject(type)\n      Object.defineProperty(obj, prop, {\n        get: identity(child),\n        set: makeSetter(type),\n        enumerable: true,\n        configurable: false\n      })\n    } else {\n      if(locations[type]) {\n        Object.defineProperty(obj, prop, {\n          get: makeGetter(type),\n          set: makeSetter(type),\n          enumerable: true,\n          configurable: false\n        })\n      } else {\n        obj[prop] = defaultValue(uniforms[type].type)\n      }\n    }\n  }\n\n  function processObject(obj) {\n    var result\n    if(Array.isArray(obj)) {\n      result = new Array(obj.length)\n      for(var i=0; i<obj.length; ++i) {\n        storeProperty(result, i, obj[i])\n      }\n    } else {\n      result = {}\n      for(var id in obj) {\n        storeProperty(result, id, obj[id])\n      }\n    }\n    return result\n  }\n\n  //Return data\n  var coallesced = coallesceUniforms(uniforms, true)\n  return {\n    get: identity(processObject(coallesced)),\n    set: makeSetter(coallesced),\n    enumerable: true,\n    configurable: true\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nmodule.exports = createErrorBars;\nvar createBuffer = require('gl-buffer');\nvar createVAO = require('gl-vao');\nvar createShader = require('./shaders/index');\nvar IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nfunction ErrorBars(gl, buffer, vao, shader) {\n  this.gl = gl;\n  this.shader = shader;\n  this.buffer = buffer;\n  this.vao = vao;\n  this.pixelRatio = 1;\n  this.bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  this.clipBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.lineWidth = [1, 1, 1];\n  this.capSize = [10, 10, 10];\n  this.lineCount = [0, 0, 0];\n  this.lineOffset = [0, 0, 0];\n  this.opacity = 1;\n  this.hasAlpha = false;\n}\nvar proto = ErrorBars.prototype;\nproto.isOpaque = function () {\n  return !this.hasAlpha;\n};\nproto.isTransparent = function () {\n  return this.hasAlpha;\n};\nproto.drawTransparent = proto.draw = function (cameraParams) {\n  var gl = this.gl;\n  var uniforms = this.shader.uniforms;\n  this.shader.bind();\n  var view = uniforms.view = cameraParams.view || IDENTITY;\n  var projection = uniforms.projection = cameraParams.projection || IDENTITY;\n  uniforms.model = cameraParams.model || IDENTITY;\n  uniforms.clipBounds = this.clipBounds;\n  uniforms.opacity = this.opacity;\n  var cx = view[12];\n  var cy = view[13];\n  var cz = view[14];\n  var cw = view[15];\n  var isOrtho = cameraParams._ortho || false;\n  var orthoFix = isOrtho ? 2 : 1; // double up padding for orthographic ticks & labels\n  var pixelScaleF = orthoFix * this.pixelRatio * (projection[3] * cx + projection[7] * cy + projection[11] * cz + projection[15] * cw) / gl.drawingBufferHeight;\n  this.vao.bind();\n  for (var i = 0; i < 3; ++i) {\n    gl.lineWidth(this.lineWidth[i] * this.pixelRatio);\n    uniforms.capSize = this.capSize[i] * pixelScaleF;\n    if (this.lineCount[i]) {\n      gl.drawArrays(gl.LINES, this.lineOffset[i], this.lineCount[i]);\n    }\n  }\n  this.vao.unbind();\n};\nfunction updateBounds(bounds, point) {\n  for (var i = 0; i < 3; ++i) {\n    bounds[0][i] = Math.min(bounds[0][i], point[i]);\n    bounds[1][i] = Math.max(bounds[1][i], point[i]);\n  }\n}\nvar FACE_TABLE = function () {\n  var table = new Array(3);\n  for (var d = 0; d < 3; ++d) {\n    var row = [];\n    for (var j = 1; j <= 2; ++j) {\n      for (var s = -1; s <= 1; s += 2) {\n        var u = (j + d) % 3;\n        var y = [0, 0, 0];\n        y[u] = s;\n        row.push(y);\n      }\n    }\n    table[d] = row;\n  }\n  return table;\n}();\nfunction emitFace(verts, x, c, d) {\n  var offsets = FACE_TABLE[d];\n  for (var i = 0; i < offsets.length; ++i) {\n    var o = offsets[i];\n    verts.push(x[0], x[1], x[2], c[0], c[1], c[2], c[3], o[0], o[1], o[2]);\n  }\n  return offsets.length;\n}\nproto.update = function (options) {\n  options = options || {};\n  if ('lineWidth' in options) {\n    this.lineWidth = options.lineWidth;\n    if (!Array.isArray(this.lineWidth)) {\n      this.lineWidth = [this.lineWidth, this.lineWidth, this.lineWidth];\n    }\n  }\n  if ('capSize' in options) {\n    this.capSize = options.capSize;\n    if (!Array.isArray(this.capSize)) {\n      this.capSize = [this.capSize, this.capSize, this.capSize];\n    }\n  }\n  this.hasAlpha = false; // default to no transparent draw\n  if ('opacity' in options) {\n    this.opacity = +options.opacity;\n    if (this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n  var color = options.color || [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n  var position = options.position;\n  var error = options.error;\n  if (!Array.isArray(color[0])) {\n    color = [color, color, color];\n  }\n  if (position && error) {\n    var verts = [];\n    var n = position.length;\n    var vertexCount = 0;\n    this.bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n    this.lineCount = [0, 0, 0];\n\n    //Build geometry for lines\n    for (var j = 0; j < 3; ++j) {\n      this.lineOffset[j] = vertexCount;\n      i_loop: for (var i = 0; i < n; ++i) {\n        var p = position[i];\n        for (var k = 0; k < 3; ++k) {\n          if (isNaN(p[k]) || !isFinite(p[k])) {\n            continue i_loop;\n          }\n        }\n        var e = error[i];\n        var c = color[j];\n        if (Array.isArray(c[0])) {\n          c = color[i];\n        }\n        if (c.length === 3) {\n          c = [c[0], c[1], c[2], 1];\n        } else if (c.length === 4) {\n          c = [c[0], c[1], c[2], c[3]];\n          if (!this.hasAlpha && c[3] < 1) this.hasAlpha = true;\n        }\n        if (isNaN(e[0][j]) || isNaN(e[1][j])) {\n          continue;\n        }\n        if (e[0][j] < 0) {\n          var x = p.slice();\n          x[j] += e[0][j];\n          verts.push(p[0], p[1], p[2], c[0], c[1], c[2], c[3], 0, 0, 0, x[0], x[1], x[2], c[0], c[1], c[2], c[3], 0, 0, 0);\n          updateBounds(this.bounds, x);\n          vertexCount += 2 + emitFace(verts, x, c, j);\n        }\n        if (e[1][j] > 0) {\n          var x = p.slice();\n          x[j] += e[1][j];\n          verts.push(p[0], p[1], p[2], c[0], c[1], c[2], c[3], 0, 0, 0, x[0], x[1], x[2], c[0], c[1], c[2], c[3], 0, 0, 0);\n          updateBounds(this.bounds, x);\n          vertexCount += 2 + emitFace(verts, x, c, j);\n        }\n      }\n      this.lineCount[j] = vertexCount - this.lineOffset[j];\n    }\n    this.buffer.update(verts);\n  }\n};\nproto.dispose = function () {\n  this.shader.dispose();\n  this.buffer.dispose();\n  this.vao.dispose();\n};\nfunction createErrorBars(options) {\n  var gl = options.gl;\n  var buffer = createBuffer(gl);\n  var vao = createVAO(gl, [{\n    buffer: buffer,\n    type: gl.FLOAT,\n    size: 3,\n    offset: 0,\n    stride: 40\n  }, {\n    buffer: buffer,\n    type: gl.FLOAT,\n    size: 4,\n    offset: 12,\n    stride: 40\n  }, {\n    buffer: buffer,\n    type: gl.FLOAT,\n    size: 3,\n    offset: 28,\n    stride: 40\n  }]);\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  shader.attributes.color.location = 1;\n  shader.attributes.offset.location = 2;\n  var result = new ErrorBars(gl, buffer, vao, shader);\n  result.update(options);\n  return result;\n}","map":{"version":3,"names":["module","exports","createErrorBars","createBuffer","require","createVAO","createShader","IDENTITY","ErrorBars","gl","buffer","vao","shader","pixelRatio","bounds","Infinity","clipBounds","lineWidth","capSize","lineCount","lineOffset","opacity","hasAlpha","proto","prototype","isOpaque","isTransparent","drawTransparent","draw","cameraParams","uniforms","bind","view","projection","model","cx","cy","cz","cw","isOrtho","_ortho","orthoFix","pixelScaleF","drawingBufferHeight","i","drawArrays","LINES","unbind","updateBounds","point","Math","min","max","FACE_TABLE","table","Array","d","row","j","s","u","y","push","emitFace","verts","x","c","offsets","length","o","update","options","isArray","color","position","error","n","vertexCount","i_loop","p","k","isNaN","isFinite","e","slice","dispose","type","FLOAT","size","offset","stride","attributes","location","result"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/gl-error3d/errorbars.js"],"sourcesContent":["'use strict'\n\nmodule.exports = createErrorBars\n\nvar createBuffer  = require('gl-buffer')\nvar createVAO     = require('gl-vao')\nvar createShader  = require('./shaders/index')\n\nvar IDENTITY = [1,0,0,0,\n                0,1,0,0,\n                0,0,1,0,\n                0,0,0,1]\n\nfunction ErrorBars(gl, buffer, vao, shader) {\n  this.gl           = gl\n  this.shader       = shader\n  this.buffer       = buffer\n  this.vao          = vao\n  this.pixelRatio   = 1\n  this.bounds       = [[ Infinity, Infinity, Infinity], [-Infinity,-Infinity,-Infinity]]\n  this.clipBounds   = [[-Infinity,-Infinity,-Infinity], [ Infinity, Infinity, Infinity]]\n  this.lineWidth    = [1,1,1]\n  this.capSize      = [10,10,10]\n  this.lineCount    = [0,0,0]\n  this.lineOffset   = [0,0,0]\n  this.opacity      = 1\n  this.hasAlpha     = false\n}\n\nvar proto = ErrorBars.prototype\n\nproto.isOpaque = function() {\n  return !this.hasAlpha\n}\n\nproto.isTransparent = function() {\n  return this.hasAlpha\n}\n\nproto.drawTransparent = proto.draw = function(cameraParams) {\n  var gl = this.gl\n  var uniforms        = this.shader.uniforms\n\n  this.shader.bind()\n  var view       = uniforms.view       = cameraParams.view       || IDENTITY\n  var projection = uniforms.projection = cameraParams.projection || IDENTITY\n  uniforms.model      = cameraParams.model      || IDENTITY\n  uniforms.clipBounds = this.clipBounds\n  uniforms.opacity    = this.opacity\n\n\n  var cx = view[12]\n  var cy = view[13]\n  var cz = view[14]\n  var cw = view[15]\n\n  var isOrtho = cameraParams._ortho || false\n  var orthoFix = (isOrtho) ? 2 : 1 // double up padding for orthographic ticks & labels\n  var pixelScaleF = orthoFix * this.pixelRatio * (projection[3]*cx + projection[7]*cy + projection[11]*cz + projection[15]*cw) / gl.drawingBufferHeight\n\n  this.vao.bind()\n  for(var i=0; i<3; ++i) {\n    gl.lineWidth(this.lineWidth[i] * this.pixelRatio)\n    uniforms.capSize = this.capSize[i] * pixelScaleF\n    if (this.lineCount[i]) {\n      gl.drawArrays(gl.LINES, this.lineOffset[i], this.lineCount[i])\n    }\n  }\n  this.vao.unbind()\n}\n\nfunction updateBounds(bounds, point) {\n  for(var i=0; i<3; ++i) {\n    bounds[0][i] = Math.min(bounds[0][i], point[i])\n    bounds[1][i] = Math.max(bounds[1][i], point[i])\n  }\n}\n\nvar FACE_TABLE = (function(){\n  var table = new Array(3)\n  for(var d=0; d<3; ++d) {\n    var row = []\n    for(var j=1; j<=2; ++j) {\n      for(var s=-1; s<=1; s+=2) {\n        var u = (j+d) % 3\n        var y = [0,0,0]\n        y[u] = s\n        row.push(y)\n      }\n    }\n    table[d] = row\n  }\n  return table\n})()\n\n\nfunction emitFace(verts, x, c, d) {\n  var offsets = FACE_TABLE[d]\n  for(var i=0; i<offsets.length; ++i) {\n    var o = offsets[i]\n    verts.push(x[0], x[1], x[2],\n               c[0], c[1], c[2], c[3],\n               o[0], o[1], o[2])\n  }\n  return offsets.length\n}\n\nproto.update = function(options) {\n  options = options || {}\n\n  if('lineWidth' in options) {\n    this.lineWidth = options.lineWidth\n    if(!Array.isArray(this.lineWidth)) {\n      this.lineWidth = [this.lineWidth, this.lineWidth, this.lineWidth]\n    }\n  }\n  if('capSize' in options) {\n    this.capSize = options.capSize\n    if(!Array.isArray(this.capSize)) {\n      this.capSize = [this.capSize, this.capSize, this.capSize]\n    }\n  }\n\n  this.hasAlpha = false // default to no transparent draw\n  if('opacity' in options) {\n    this.opacity = +options.opacity\n    if(this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n\n  var color    = options.color || [[0,0,0],[0,0,0],[0,0,0]]\n  var position = options.position\n  var error    = options.error\n  if(!Array.isArray(color[0])) {\n    color = [color,color,color]\n  }\n\n  if(position && error) {\n\n    var verts       = []\n    var n           = position.length\n    var vertexCount = 0\n    this.bounds     = [[ Infinity, Infinity, Infinity],\n                       [-Infinity,-Infinity,-Infinity]]\n    this.lineCount  = [0,0,0]\n\n    //Build geometry for lines\n    for(var j=0; j<3; ++j) {\n      this.lineOffset[j] = vertexCount\n\ni_loop:\n      for(var i=0; i<n; ++i) {\n        var p = position[i]\n\n        for(var k=0; k<3; ++k) {\n          if(isNaN(p[k]) || !isFinite(p[k])) {\n            continue i_loop\n          }\n        }\n\n        var e = error[i]\n        var c = color[j]\n        if(Array.isArray(c[0])) {\n          c = color[i]\n        }\n        if(c.length === 3) {\n          c = [c[0], c[1], c[2], 1]\n        } else if(c.length === 4) {\n          c = [c[0], c[1], c[2], c[3]]\n          if(!this.hasAlpha && c[3] < 1) this.hasAlpha = true\n        }\n\n        if(isNaN(e[0][j]) || isNaN(e[1][j])) {\n          continue\n        }\n        if(e[0][j] < 0) {\n          var x = p.slice()\n          x[j] += e[0][j]\n          verts.push(p[0], p[1], p[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0,\n                     x[0], x[1], x[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0)\n          updateBounds(this.bounds, x)\n          vertexCount += 2 + emitFace(verts, x, c, j)\n        }\n        if(e[1][j] > 0) {\n          var x = p.slice()\n          x[j] += e[1][j]\n          verts.push(p[0], p[1], p[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0,\n                     x[0], x[1], x[2],\n                     c[0], c[1], c[2], c[3],\n                        0,    0,    0)\n          updateBounds(this.bounds, x)\n          vertexCount += 2 + emitFace(verts, x, c, j)\n        }\n      }\n      this.lineCount[j] = vertexCount - this.lineOffset[j]\n    }\n    this.buffer.update(verts)\n  }\n}\n\nproto.dispose = function() {\n  this.shader.dispose()\n  this.buffer.dispose()\n  this.vao.dispose()\n}\n\nfunction createErrorBars(options) {\n  var gl = options.gl\n  var buffer = createBuffer(gl)\n  var vao = createVAO(gl, [\n      {\n        buffer: buffer,\n        type:   gl.FLOAT,\n        size:   3,\n        offset: 0,\n        stride: 40\n      },\n      {\n        buffer: buffer,\n        type:   gl.FLOAT,\n        size:   4,\n        offset: 12,\n        stride: 40\n      },\n      {\n        buffer: buffer,\n        type:   gl.FLOAT,\n        size:   3,\n        offset: 28,\n        stride: 40\n      }\n    ])\n\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  shader.attributes.color.location    = 1\n  shader.attributes.offset.location   = 2\n\n  var result = new ErrorBars(gl, buffer, vao, shader)\n  result.update(options)\n  return result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nmodule.exports = function autoType(array, calendar, opts) {\n  opts = opts || {};\n  if (!opts.noMultiCategory && multiCategory(array)) return 'multicategory';\n  if (moreDates(array, calendar)) return 'date';\n  if (category(array)) return 'category';\n  if (linearOK(array)) return 'linear';else return '-';\n};\n\n// is there at least one number in array? If not, we should leave\n// ax.type empty so it can be autoset later\nfunction linearOK(array) {\n  if (!array) return false;\n  for (var i = 0; i < array.length; i++) {\n    if (isNumeric(array[i])) return true;\n  }\n  return false;\n}\n\n// does the array a have mostly dates rather than numbers?\n// note: some values can be neither (such as blanks, text)\n// 2- or 4-digit integers can be both, so require twice as many\n// dates as non-dates, to exclude cases with mostly 2 & 4 digit\n// numbers and a few dates\n// as with categories, consider DISTINCT values only.\nfunction moreDates(a, calendar) {\n  // test at most 1000 points, evenly spaced\n  var inc = Math.max(1, (a.length - 1) / 1000);\n  var dcnt = 0;\n  var ncnt = 0;\n  var seen = {};\n  for (var i = 0; i < a.length; i += inc) {\n    var ai = a[Math.round(i)];\n    var stri = String(ai);\n    if (seen[stri]) continue;\n    seen[stri] = 1;\n    if (Lib.isDateTime(ai, calendar)) dcnt += 1;\n    if (isNumeric(ai)) ncnt += 1;\n  }\n  return dcnt > ncnt * 2;\n}\n\n// are the (x,y)-values in gd.data mostly text?\n// require twice as many DISTINCT categories as distinct numbers\nfunction category(a) {\n  // test at most 1000 points\n  var inc = Math.max(1, (a.length - 1) / 1000);\n  var curvenums = 0;\n  var curvecats = 0;\n  var seen = {};\n  for (var i = 0; i < a.length; i += inc) {\n    var ai = a[Math.round(i)];\n    var stri = String(ai);\n    if (seen[stri]) continue;\n    seen[stri] = 1;\n    if (typeof ai === 'boolean') curvecats++;else if (Lib.cleanNumber(ai) !== BADNUM) curvenums++;else if (typeof ai === 'string') curvecats++;\n  }\n  return curvecats > curvenums * 2;\n}\n\n// very-loose requirements for multicategory,\n// trace modules that should never auto-type to multicategory\n// should be declared with 'noMultiCategory'\nfunction multiCategory(a) {\n  return Lib.isArrayOrTypedArray(a[0]) && Lib.isArrayOrTypedArray(a[1]);\n}","map":{"version":3,"names":["isNumeric","require","Lib","BADNUM","module","exports","autoType","array","calendar","opts","noMultiCategory","multiCategory","moreDates","category","linearOK","i","length","a","inc","Math","max","dcnt","ncnt","seen","ai","round","stri","String","isDateTime","curvenums","curvecats","cleanNumber","isArrayOrTypedArray"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/axis_autotype.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function autoType(array, calendar, opts) {\n    opts = opts || {};\n\n    if(!opts.noMultiCategory && multiCategory(array)) return 'multicategory';\n    if(moreDates(array, calendar)) return 'date';\n    if(category(array)) return 'category';\n    if(linearOK(array)) return 'linear';\n    else return '-';\n};\n\n// is there at least one number in array? If not, we should leave\n// ax.type empty so it can be autoset later\nfunction linearOK(array) {\n    if(!array) return false;\n\n    for(var i = 0; i < array.length; i++) {\n        if(isNumeric(array[i])) return true;\n    }\n\n    return false;\n}\n\n// does the array a have mostly dates rather than numbers?\n// note: some values can be neither (such as blanks, text)\n// 2- or 4-digit integers can be both, so require twice as many\n// dates as non-dates, to exclude cases with mostly 2 & 4 digit\n// numbers and a few dates\n// as with categories, consider DISTINCT values only.\nfunction moreDates(a, calendar) {\n    // test at most 1000 points, evenly spaced\n    var inc = Math.max(1, (a.length - 1) / 1000);\n    var dcnt = 0;\n    var ncnt = 0;\n    var seen = {};\n\n    for(var i = 0; i < a.length; i += inc) {\n        var ai = a[Math.round(i)];\n        var stri = String(ai);\n        if(seen[stri]) continue;\n        seen[stri] = 1;\n\n        if(Lib.isDateTime(ai, calendar)) dcnt += 1;\n        if(isNumeric(ai)) ncnt += 1;\n    }\n\n    return (dcnt > ncnt * 2);\n}\n\n// are the (x,y)-values in gd.data mostly text?\n// require twice as many DISTINCT categories as distinct numbers\nfunction category(a) {\n    // test at most 1000 points\n    var inc = Math.max(1, (a.length - 1) / 1000);\n    var curvenums = 0;\n    var curvecats = 0;\n    var seen = {};\n\n    for(var i = 0; i < a.length; i += inc) {\n        var ai = a[Math.round(i)];\n        var stri = String(ai);\n        if(seen[stri]) continue;\n        seen[stri] = 1;\n\n        if(typeof ai === 'boolean') curvecats++;\n        else if(Lib.cleanNumber(ai) !== BADNUM) curvenums++;\n        else if(typeof ai === 'string') curvecats++;\n    }\n\n    return curvecats > curvenums * 2;\n}\n\n// very-loose requirements for multicategory,\n// trace modules that should never auto-type to multicategory\n// should be declared with 'noMultiCategory'\nfunction multiCategory(a) {\n    return Lib.isArrayOrTypedArray(a[0]) && Lib.isArrayOrTypedArray(a[1]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
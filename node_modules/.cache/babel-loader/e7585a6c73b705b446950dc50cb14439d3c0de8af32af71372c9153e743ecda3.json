{"ast":null,"code":"var identity = require('./identity');\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n  var x0,\n    x1,\n    x2,\n    y0,\n    y1,\n    y2,\n    z0,\n    z1,\n    z2,\n    len,\n    eyex = eye[0],\n    eyey = eye[1],\n    eyez = eye[2],\n    upx = up[0],\n    upy = up[1],\n    upz = up[2],\n    centerx = center[0],\n    centery = center[1],\n    centerz = center[2];\n  if (Math.abs(eyex - centerx) < 0.000001 && Math.abs(eyey - centery) < 0.000001 && Math.abs(eyez - centerz) < 0.000001) {\n    return identity(out);\n  }\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n;","map":{"version":3,"names":["identity","require","module","exports","lookAt","out","eye","center","up","x0","x1","x2","y0","y1","y2","z0","z1","z2","len","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","Math","abs","sqrt"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-mat4/lookAt.js"],"sourcesContent":["var identity = require('./identity');\n\nmodule.exports = lookAt;\n\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} center Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nfunction lookAt(out, eye, center, up) {\n    var x0, x1, x2, y0, y1, y2, z0, z1, z2, len,\n        eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2],\n        centerx = center[0],\n        centery = center[1],\n        centerz = center[2];\n\n    if (Math.abs(eyex - centerx) < 0.000001 &&\n        Math.abs(eyey - centery) < 0.000001 &&\n        Math.abs(eyez - centerz) < 0.000001) {\n        return identity(out);\n    }\n\n    z0 = eyex - centerx;\n    z1 = eyey - centery;\n    z2 = eyez - centerz;\n\n    len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n\n    x0 = upy * z2 - upz * z1;\n    x1 = upz * z0 - upx * z2;\n    x2 = upx * z1 - upy * z0;\n    len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\n    if (!len) {\n        x0 = 0;\n        x1 = 0;\n        x2 = 0;\n    } else {\n        len = 1 / len;\n        x0 *= len;\n        x1 *= len;\n        x2 *= len;\n    }\n\n    y0 = z1 * x2 - z2 * x1;\n    y1 = z2 * x0 - z0 * x2;\n    y2 = z0 * x1 - z1 * x0;\n\n    len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\n    if (!len) {\n        y0 = 0;\n        y1 = 0;\n        y2 = 0;\n    } else {\n        len = 1 / len;\n        y0 *= len;\n        y1 *= len;\n        y2 *= len;\n    }\n\n    out[0] = x0;\n    out[1] = y0;\n    out[2] = z0;\n    out[3] = 0;\n    out[4] = x1;\n    out[5] = y1;\n    out[6] = z1;\n    out[7] = 0;\n    out[8] = x2;\n    out[9] = y2;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n    out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n    out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n    out[15] = 1;\n\n    return out;\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
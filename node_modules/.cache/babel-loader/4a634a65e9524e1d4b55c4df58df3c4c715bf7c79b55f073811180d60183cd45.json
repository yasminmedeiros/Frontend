{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar Color = require('../color');\nvar isValidScale = require('./scales').isValid;\nfunction hasColorscale(trace, containerStr) {\n  var container = containerStr ? Lib.nestedProperty(trace, containerStr).get() || {} : trace;\n  var color = container.color;\n  var isArrayWithOneNumber = false;\n  if (Lib.isArrayOrTypedArray(color)) {\n    for (var i = 0; i < color.length; i++) {\n      if (isNumeric(color[i])) {\n        isArrayWithOneNumber = true;\n        break;\n      }\n    }\n  }\n  return Lib.isPlainObject(container) && (isArrayWithOneNumber || container.showscale === true || isNumeric(container.cmin) && isNumeric(container.cmax) || isValidScale(container.colorscale) || Lib.isPlainObject(container.colorbar));\n}\n\n/**\n * Extract colorscale into numeric domain and color range.\n *\n * @param {object} cont colorscale container (e.g. trace, marker)\n *  - colorscale {array of arrays}\n *  - cmin/zmin {number}\n *  - cmax/zmax {number}\n *  - reversescale {boolean}\n * @param {object} opts\n *  - cLetter {string} 'c' (for cmin/cmax) or 'z' (for zmin/zmax)\n *\n * @return {object}\n *  - domain {array}\n *  - range {array}\n */\nfunction extractScale(cont, opts) {\n  var cLetter = opts.cLetter;\n  var scl = cont.reversescale ? flipScale(cont.colorscale) : cont.colorscale;\n\n  // minimum color value (used to clamp scale)\n  var cmin = cont[cLetter + 'min'];\n  // maximum color value (used to clamp scale)\n  var cmax = cont[cLetter + 'max'];\n  var N = scl.length;\n  var domain = new Array(N);\n  var range = new Array(N);\n  for (var i = 0; i < N; i++) {\n    var si = scl[i];\n    domain[i] = cmin + si[0] * (cmax - cmin);\n    range[i] = si[1];\n  }\n  return {\n    domain: domain,\n    range: range\n  };\n}\nfunction flipScale(scl) {\n  var N = scl.length;\n  var sclNew = new Array(N);\n  for (var i = N - 1, j = 0; i >= 0; i--, j++) {\n    var si = scl[i];\n    sclNew[j] = [1 - si[0], si[1]];\n  }\n  return sclNew;\n}\n\n/**\n * General colorscale function generator.\n *\n * @param {object} specs output of Colorscale.extractScale or precomputed domain, range.\n *  - domain {array}\n *  - range {array}\n *\n * @param {object} opts\n *  - noNumericCheck {boolean} if true, scale func bypasses numeric checks\n *  - returnArray {boolean} if true, scale func return 4-item array instead of color strings\n *\n * @return {function}\n */\nfunction makeColorScaleFunc(specs, opts) {\n  opts = opts || {};\n  var domain = specs.domain;\n  var range = specs.range;\n  var N = range.length;\n  var _range = new Array(N);\n  for (var i = 0; i < N; i++) {\n    var rgba = tinycolor(range[i]).toRgb();\n    _range[i] = [rgba.r, rgba.g, rgba.b, rgba.a];\n  }\n  var _sclFunc = d3.scale.linear().domain(domain).range(_range).clamp(true);\n  var noNumericCheck = opts.noNumericCheck;\n  var returnArray = opts.returnArray;\n  var sclFunc;\n  if (noNumericCheck && returnArray) {\n    sclFunc = _sclFunc;\n  } else if (noNumericCheck) {\n    sclFunc = function sclFunc(v) {\n      return colorArray2rbga(_sclFunc(v));\n    };\n  } else if (returnArray) {\n    sclFunc = function sclFunc(v) {\n      if (isNumeric(v)) return _sclFunc(v);else if (tinycolor(v).isValid()) return v;else return Color.defaultLine;\n    };\n  } else {\n    sclFunc = function sclFunc(v) {\n      if (isNumeric(v)) return colorArray2rbga(_sclFunc(v));else if (tinycolor(v).isValid()) return v;else return Color.defaultLine;\n    };\n  }\n\n  // colorbar draw looks into the d3 scale closure for domain and range\n\n  sclFunc.domain = _sclFunc.domain;\n  sclFunc.range = function () {\n    return range;\n  };\n  return sclFunc;\n}\nfunction colorArray2rbga(colorArray) {\n  var colorObj = {\n    r: colorArray[0],\n    g: colorArray[1],\n    b: colorArray[2],\n    a: colorArray[3]\n  };\n  return tinycolor(colorObj).toRgbString();\n}\nmodule.exports = {\n  hasColorscale: hasColorscale,\n  extractScale: extractScale,\n  flipScale: flipScale,\n  makeColorScaleFunc: makeColorScaleFunc\n};","map":{"version":3,"names":["d3","require","tinycolor","isNumeric","Lib","Color","isValidScale","isValid","hasColorscale","trace","containerStr","container","nestedProperty","get","color","isArrayWithOneNumber","isArrayOrTypedArray","i","length","isPlainObject","showscale","cmin","cmax","colorscale","colorbar","extractScale","cont","opts","cLetter","scl","reversescale","flipScale","N","domain","Array","range","si","sclNew","j","makeColorScaleFunc","specs","_range","rgba","toRgb","r","g","b","a","_sclFunc","scale","linear","clamp","noNumericCheck","returnArray","sclFunc","v","colorArray2rbga","defaultLine","colorArray","colorObj","toRgbString","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/colorscale/helpers.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar Color = require('../color');\n\nvar isValidScale = require('./scales').isValid;\n\nfunction hasColorscale(trace, containerStr) {\n    var container = containerStr ?\n        Lib.nestedProperty(trace, containerStr).get() || {} :\n        trace;\n    var color = container.color;\n\n    var isArrayWithOneNumber = false;\n    if(Lib.isArrayOrTypedArray(color)) {\n        for(var i = 0; i < color.length; i++) {\n            if(isNumeric(color[i])) {\n                isArrayWithOneNumber = true;\n                break;\n            }\n        }\n    }\n\n    return (\n        Lib.isPlainObject(container) && (\n            isArrayWithOneNumber ||\n            container.showscale === true ||\n            (isNumeric(container.cmin) && isNumeric(container.cmax)) ||\n            isValidScale(container.colorscale) ||\n            Lib.isPlainObject(container.colorbar)\n        )\n    );\n}\n\n/**\n * Extract colorscale into numeric domain and color range.\n *\n * @param {object} cont colorscale container (e.g. trace, marker)\n *  - colorscale {array of arrays}\n *  - cmin/zmin {number}\n *  - cmax/zmax {number}\n *  - reversescale {boolean}\n * @param {object} opts\n *  - cLetter {string} 'c' (for cmin/cmax) or 'z' (for zmin/zmax)\n *\n * @return {object}\n *  - domain {array}\n *  - range {array}\n */\nfunction extractScale(cont, opts) {\n    var cLetter = opts.cLetter;\n\n    var scl = cont.reversescale ?\n        flipScale(cont.colorscale) :\n        cont.colorscale;\n\n    // minimum color value (used to clamp scale)\n    var cmin = cont[cLetter + 'min'];\n    // maximum color value (used to clamp scale)\n    var cmax = cont[cLetter + 'max'];\n\n    var N = scl.length;\n    var domain = new Array(N);\n    var range = new Array(N);\n\n    for(var i = 0; i < N; i++) {\n        var si = scl[i];\n        domain[i] = cmin + si[0] * (cmax - cmin);\n        range[i] = si[1];\n    }\n\n    return {\n        domain: domain,\n        range: range\n    };\n}\n\nfunction flipScale(scl) {\n    var N = scl.length;\n    var sclNew = new Array(N);\n\n    for(var i = N - 1, j = 0; i >= 0; i--, j++) {\n        var si = scl[i];\n        sclNew[j] = [1 - si[0], si[1]];\n    }\n    return sclNew;\n}\n\n/**\n * General colorscale function generator.\n *\n * @param {object} specs output of Colorscale.extractScale or precomputed domain, range.\n *  - domain {array}\n *  - range {array}\n *\n * @param {object} opts\n *  - noNumericCheck {boolean} if true, scale func bypasses numeric checks\n *  - returnArray {boolean} if true, scale func return 4-item array instead of color strings\n *\n * @return {function}\n */\nfunction makeColorScaleFunc(specs, opts) {\n    opts = opts || {};\n\n    var domain = specs.domain;\n    var range = specs.range;\n    var N = range.length;\n    var _range = new Array(N);\n\n    for(var i = 0; i < N; i++) {\n        var rgba = tinycolor(range[i]).toRgb();\n        _range[i] = [rgba.r, rgba.g, rgba.b, rgba.a];\n    }\n\n    var _sclFunc = d3.scale.linear()\n        .domain(domain)\n        .range(_range)\n        .clamp(true);\n\n    var noNumericCheck = opts.noNumericCheck;\n    var returnArray = opts.returnArray;\n    var sclFunc;\n\n    if(noNumericCheck && returnArray) {\n        sclFunc = _sclFunc;\n    }\n    else if(noNumericCheck) {\n        sclFunc = function(v) {\n            return colorArray2rbga(_sclFunc(v));\n        };\n    }\n    else if(returnArray) {\n        sclFunc = function(v) {\n            if(isNumeric(v)) return _sclFunc(v);\n            else if(tinycolor(v).isValid()) return v;\n            else return Color.defaultLine;\n        };\n    }\n    else {\n        sclFunc = function(v) {\n            if(isNumeric(v)) return colorArray2rbga(_sclFunc(v));\n            else if(tinycolor(v).isValid()) return v;\n            else return Color.defaultLine;\n        };\n    }\n\n    // colorbar draw looks into the d3 scale closure for domain and range\n\n    sclFunc.domain = _sclFunc.domain;\n\n    sclFunc.range = function() { return range; };\n\n    return sclFunc;\n}\n\nfunction colorArray2rbga(colorArray) {\n    var colorObj = {\n        r: colorArray[0],\n        g: colorArray[1],\n        b: colorArray[2],\n        a: colorArray[3]\n    };\n\n    return tinycolor(colorObj).toRgbString();\n}\n\nmodule.exports = {\n    hasColorscale: hasColorscale,\n    extractScale: extractScale,\n    flipScale: flipScale,\n    makeColorScaleFunc: makeColorScaleFunc\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
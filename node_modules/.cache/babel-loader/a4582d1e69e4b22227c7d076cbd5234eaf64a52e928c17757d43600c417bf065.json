{"ast":null,"code":"'use strict';\n\nvar createShader = require('gl-shader');\nvar createBuffer = require('gl-buffer');\nvar pool = require('typedarray-pool');\nvar SHADERS = require('./lib/shader');\nmodule.exports = createPointcloud2D;\nfunction Pointcloud2D(plot, offsetBuffer, pickBuffer, shader, pickShader) {\n  this.plot = plot;\n  this.offsetBuffer = offsetBuffer;\n  this.pickBuffer = pickBuffer;\n  this.shader = shader;\n  this.pickShader = pickShader;\n  this.sizeMin = 0.5;\n  this.sizeMinCap = 2;\n  this.sizeMax = 20;\n  this.areaRatio = 1.0;\n  this.pointCount = 0;\n  this.color = [1, 0, 0, 1];\n  this.borderColor = [0, 0, 0, 1];\n  this.blend = false;\n  this.pickOffset = 0;\n  this.points = null;\n}\nvar proto = Pointcloud2D.prototype;\nproto.dispose = function () {\n  this.shader.dispose();\n  this.pickShader.dispose();\n  this.offsetBuffer.dispose();\n  this.pickBuffer.dispose();\n  this.plot.removeObject(this);\n};\nproto.update = function (options) {\n  var i;\n  options = options || {};\n  function dflt(opt, value) {\n    if (opt in options) {\n      return options[opt];\n    }\n    return value;\n  }\n  this.sizeMin = dflt('sizeMin', 0.5);\n  // this.sizeMinCap      = dflt('sizeMinCap', 2)\n  this.sizeMax = dflt('sizeMax', 20);\n  this.color = dflt('color', [1, 0, 0, 1]).slice();\n  this.areaRatio = dflt('areaRatio', 1);\n  this.borderColor = dflt('borderColor', [0, 0, 0, 1]).slice();\n  this.blend = dflt('blend', false);\n\n  //Update point data\n\n  // Attempt straight-through processing (STP) to avoid allocation and copy\n  // TODO eventually abstract out STP logic, maybe into `pool` or a layer above\n  var pointCount = options.positions.length >>> 1;\n  var dataStraightThrough = options.positions instanceof Float32Array;\n  var idStraightThrough = options.idToIndex instanceof Int32Array && options.idToIndex.length >= pointCount; // permit larger to help reuse\n\n  var data = options.positions;\n  var packed = dataStraightThrough ? data : pool.mallocFloat32(data.length);\n  var packedId = idStraightThrough ? options.idToIndex : pool.mallocInt32(pointCount);\n  if (!dataStraightThrough) {\n    packed.set(data);\n  }\n  if (!idStraightThrough) {\n    packed.set(data);\n    for (i = 0; i < pointCount; i++) {\n      packedId[i] = i;\n    }\n  }\n  this.points = data;\n  this.offsetBuffer.update(packed);\n  this.pickBuffer.update(packedId);\n  if (!dataStraightThrough) {\n    pool.free(packed);\n  }\n  if (!idStraightThrough) {\n    pool.free(packedId);\n  }\n  this.pointCount = pointCount;\n  this.pickOffset = 0;\n};\nfunction count(points, dataBox) {\n  var visiblePointCountEstimate = 0;\n  var length = points.length >>> 1;\n  var i;\n  for (i = 0; i < length; i++) {\n    var x = points[i * 2];\n    var y = points[i * 2 + 1];\n    if (x >= dataBox[0] && x <= dataBox[2] && y >= dataBox[1] && y <= dataBox[3]) visiblePointCountEstimate++;\n  }\n  return visiblePointCountEstimate;\n}\nproto.unifiedDraw = function () {\n  var MATRIX = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n  var PICK_VEC4 = [0, 0, 0, 0];\n  return function (pickOffset) {\n    var pick = pickOffset !== void 0;\n    var shader = pick ? this.pickShader : this.shader;\n    var gl = this.plot.gl;\n    var dataBox = this.plot.dataBox;\n    if (this.pointCount === 0) {\n      return pickOffset;\n    }\n    var dataX = dataBox[2] - dataBox[0];\n    var dataY = dataBox[3] - dataBox[1];\n    var visiblePointCountEstimate = count(this.points, dataBox);\n    var basicPointSize = this.plot.pickPixelRatio * Math.max(Math.min(this.sizeMinCap, this.sizeMin), Math.min(this.sizeMax, this.sizeMax / Math.pow(visiblePointCountEstimate, 0.33333)));\n    MATRIX[0] = 2.0 / dataX;\n    MATRIX[4] = 2.0 / dataY;\n    MATRIX[6] = -2.0 * dataBox[0] / dataX - 1.0;\n    MATRIX[7] = -2.0 * dataBox[1] / dataY - 1.0;\n    this.offsetBuffer.bind();\n    shader.bind();\n    shader.attributes.position.pointer();\n    shader.uniforms.matrix = MATRIX;\n    shader.uniforms.color = this.color;\n    shader.uniforms.borderColor = this.borderColor;\n    shader.uniforms.pointCloud = basicPointSize < 5;\n    shader.uniforms.pointSize = basicPointSize;\n    shader.uniforms.centerFraction = Math.min(1, Math.max(0, Math.sqrt(1 - this.areaRatio)));\n    if (pick) {\n      PICK_VEC4[0] = pickOffset & 0xff;\n      PICK_VEC4[1] = pickOffset >> 8 & 0xff;\n      PICK_VEC4[2] = pickOffset >> 16 & 0xff;\n      PICK_VEC4[3] = pickOffset >> 24 & 0xff;\n      this.pickBuffer.bind();\n      shader.attributes.pickId.pointer(gl.UNSIGNED_BYTE);\n      shader.uniforms.pickOffset = PICK_VEC4;\n      this.pickOffset = pickOffset;\n    }\n\n    // Worth switching these off, but we can't make assumptions about other\n    // renderers, so let's restore it after each draw\n    var blend = gl.getParameter(gl.BLEND);\n    var dither = gl.getParameter(gl.DITHER);\n    if (blend && !this.blend) gl.disable(gl.BLEND);\n    if (dither) gl.disable(gl.DITHER);\n    gl.drawArrays(gl.POINTS, 0, this.pointCount);\n    if (blend && !this.blend) gl.enable(gl.BLEND);\n    if (dither) gl.enable(gl.DITHER);\n    return pickOffset + this.pointCount;\n  };\n}();\nproto.draw = proto.unifiedDraw;\nproto.drawPick = proto.unifiedDraw;\nproto.pick = function (x, y, value) {\n  var pickOffset = this.pickOffset;\n  var pointCount = this.pointCount;\n  if (value < pickOffset || value >= pickOffset + pointCount) {\n    return null;\n  }\n  var pointId = value - pickOffset;\n  var points = this.points;\n  return {\n    object: this,\n    pointId: pointId,\n    dataCoord: [points[2 * pointId], points[2 * pointId + 1]]\n  };\n};\nfunction createPointcloud2D(plot, options) {\n  var gl = plot.gl;\n  var buffer = createBuffer(gl);\n  var pickBuffer = createBuffer(gl);\n  var shader = createShader(gl, SHADERS.pointVertex, SHADERS.pointFragment);\n  var pickShader = createShader(gl, SHADERS.pickVertex, SHADERS.pickFragment);\n  var result = new Pointcloud2D(plot, buffer, pickBuffer, shader, pickShader);\n  result.update(options);\n\n  //Register with plot\n  plot.addObject(result);\n  return result;\n}","map":{"version":3,"names":["createShader","require","createBuffer","pool","SHADERS","module","exports","createPointcloud2D","Pointcloud2D","plot","offsetBuffer","pickBuffer","shader","pickShader","sizeMin","sizeMinCap","sizeMax","areaRatio","pointCount","color","borderColor","blend","pickOffset","points","proto","prototype","dispose","removeObject","update","options","i","dflt","opt","value","slice","positions","length","dataStraightThrough","Float32Array","idStraightThrough","idToIndex","Int32Array","data","packed","mallocFloat32","packedId","mallocInt32","set","free","count","dataBox","visiblePointCountEstimate","x","y","unifiedDraw","MATRIX","PICK_VEC4","pick","gl","dataX","dataY","basicPointSize","pickPixelRatio","Math","max","min","pow","bind","attributes","position","pointer","uniforms","matrix","pointCloud","pointSize","centerFraction","sqrt","pickId","UNSIGNED_BYTE","getParameter","BLEND","dither","DITHER","disable","drawArrays","POINTS","enable","draw","drawPick","pointId","object","dataCoord","buffer","pointVertex","pointFragment","pickVertex","pickFragment","result","addObject"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-pointcloud2d/pointcloud2d.js"],"sourcesContent":["'use strict'\n\nvar createShader = require('gl-shader')\nvar createBuffer = require('gl-buffer')\n\nvar pool = require('typedarray-pool')\n\nvar SHADERS = require('./lib/shader')\n\nmodule.exports = createPointcloud2D\n\nfunction Pointcloud2D(plot, offsetBuffer, pickBuffer, shader, pickShader) {\n  this.plot           = plot\n  this.offsetBuffer   = offsetBuffer\n  this.pickBuffer     = pickBuffer\n  this.shader         = shader\n  this.pickShader     = pickShader\n  this.sizeMin        = 0.5\n  this.sizeMinCap     = 2\n  this.sizeMax        = 20\n  this.areaRatio      = 1.0\n  this.pointCount     = 0\n  this.color          = [1, 0, 0, 1]\n  this.borderColor    = [0, 0, 0, 1]\n  this.blend          = false\n  this.pickOffset     = 0\n  this.points         = null\n}\n\nvar proto = Pointcloud2D.prototype\n\nproto.dispose = function() {\n  this.shader.dispose()\n  this.pickShader.dispose()\n  this.offsetBuffer.dispose()\n  this.pickBuffer.dispose()\n  this.plot.removeObject(this)\n}\n\nproto.update = function(options) {\n\n  var i\n\n  options = options || {}\n\n  function dflt(opt, value) {\n    if(opt in options) {\n      return options[opt]\n    }\n    return value\n  }\n\n  this.sizeMin      = dflt('sizeMin', 0.5)\n  // this.sizeMinCap      = dflt('sizeMinCap', 2)\n  this.sizeMax      = dflt('sizeMax', 20)\n  this.color        = dflt('color', [1, 0, 0, 1]).slice()\n  this.areaRatio    = dflt('areaRatio', 1)\n  this.borderColor  = dflt('borderColor', [0, 0, 0, 1]).slice()\n  this.blend        = dflt('blend', false)\n\n  //Update point data\n\n  // Attempt straight-through processing (STP) to avoid allocation and copy\n  // TODO eventually abstract out STP logic, maybe into `pool` or a layer above\n  var pointCount = options.positions.length >>> 1\n  var dataStraightThrough = options.positions instanceof Float32Array\n  var idStraightThrough = options.idToIndex instanceof Int32Array && options.idToIndex.length >= pointCount // permit larger to help reuse\n\n  var data          = options.positions\n  var packed        = dataStraightThrough ? data : pool.mallocFloat32(data.length)\n  var packedId      = idStraightThrough ? options.idToIndex : pool.mallocInt32(pointCount)\n\n  if(!dataStraightThrough) {\n    packed.set(data)\n  }\n\n  if(!idStraightThrough) {\n    packed.set(data)\n    for(i = 0; i < pointCount; i++) {\n      packedId[i] = i\n    }\n  }\n\n  this.points       = data\n\n  this.offsetBuffer.update(packed)\n  this.pickBuffer.update(packedId)\n\n  if(!dataStraightThrough) {\n    pool.free(packed)\n  }\n\n  if(!idStraightThrough) {\n    pool.free(packedId)\n  }\n\n  this.pointCount = pointCount\n  this.pickOffset = 0\n}\n\nfunction count(points, dataBox) {\n  var visiblePointCountEstimate = 0\n  var length = points.length >>> 1\n  var i\n  for(i = 0; i < length; i++) {\n    var x = points[i * 2]\n    var y = points[i * 2 + 1]\n    if(x >= dataBox[0] && x <= dataBox[2] && y >= dataBox[1] && y <= dataBox[3])\n      visiblePointCountEstimate++\n  }\n  return visiblePointCountEstimate\n}\n\nproto.unifiedDraw = (function() {\n  var MATRIX = [1, 0, 0,\n                0, 1, 0,\n                0, 0, 1]\n  var PICK_VEC4 = [0, 0, 0, 0]\nreturn function(pickOffset) {\n  var pick = pickOffset !== void(0)\n\n  var shader        = pick ? this.pickShader : this.shader\n  var gl            = this.plot.gl\n  var dataBox       = this.plot.dataBox\n\n  if(this.pointCount === 0) {\n    return pickOffset\n  }\n\n  var dataX   = dataBox[2] - dataBox[0]\n  var dataY   = dataBox[3] - dataBox[1]\n\n  var visiblePointCountEstimate = count(this.points, dataBox)\n  var basicPointSize =  this.plot.pickPixelRatio * Math.max(Math.min(this.sizeMinCap, this.sizeMin), Math.min(this.sizeMax, this.sizeMax / Math.pow(visiblePointCountEstimate, 0.33333)))\n\n  MATRIX[0] = 2.0 / dataX\n  MATRIX[4] = 2.0 / dataY\n  MATRIX[6] = -2.0 * dataBox[0] / dataX - 1.0\n  MATRIX[7] = -2.0 * dataBox[1] / dataY - 1.0\n\n  this.offsetBuffer.bind()\n\n  shader.bind()\n  shader.attributes.position.pointer()\n  shader.uniforms.matrix      = MATRIX\n  shader.uniforms.color       = this.color\n  shader.uniforms.borderColor = this.borderColor\n  shader.uniforms.pointCloud = basicPointSize < 5\n  shader.uniforms.pointSize = basicPointSize\n  shader.uniforms.centerFraction = Math.min(1, Math.max(0, Math.sqrt(1 - this.areaRatio)))\n\n  if(pick) {\n\n    PICK_VEC4[0] = ( pickOffset        & 0xff)\n    PICK_VEC4[1] = ((pickOffset >> 8)  & 0xff)\n    PICK_VEC4[2] = ((pickOffset >> 16) & 0xff)\n    PICK_VEC4[3] = ((pickOffset >> 24) & 0xff)\n\n    this.pickBuffer.bind()\n    shader.attributes.pickId.pointer(gl.UNSIGNED_BYTE)\n    shader.uniforms.pickOffset = PICK_VEC4\n    this.pickOffset = pickOffset\n  }\n\n  // Worth switching these off, but we can't make assumptions about other\n  // renderers, so let's restore it after each draw\n  var blend = gl.getParameter(gl.BLEND)\n  var dither = gl.getParameter(gl.DITHER)\n\n  if(blend && !this.blend)\n    gl.disable(gl.BLEND)\n  if(dither)\n    gl.disable(gl.DITHER)\n\n  gl.drawArrays(gl.POINTS, 0, this.pointCount)\n\n  if(blend && !this.blend)\n    gl.enable(gl.BLEND)\n  if(dither)\n    gl.enable(gl.DITHER)\n\n  return pickOffset + this.pointCount\n}\n})()\n\nproto.draw = proto.unifiedDraw\nproto.drawPick = proto.unifiedDraw\n\nproto.pick = function(x, y, value) {\n  var pickOffset = this.pickOffset\n  var pointCount = this.pointCount\n  if(value < pickOffset || value >= pickOffset + pointCount) {\n    return null\n  }\n  var pointId = value - pickOffset\n  var points = this.points\n  return {\n    object: this,\n    pointId: pointId,\n    dataCoord: [points[2 * pointId], points[2 * pointId + 1] ]\n  }\n}\n\nfunction createPointcloud2D(plot, options) {\n  var gl = plot.gl\n  var buffer = createBuffer(gl)\n  var pickBuffer = createBuffer(gl)\n  var shader = createShader(gl, SHADERS.pointVertex, SHADERS.pointFragment)\n  var pickShader = createShader(gl, SHADERS.pickVertex, SHADERS.pickFragment)\n\n  var result = new Pointcloud2D(plot, buffer, pickBuffer, shader, pickShader)\n  result.update(options)\n\n  //Register with plot\n  plot.addObject(result)\n\n  return result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Heatmap = {};\nHeatmap.attributes = require('./attributes');\nHeatmap.supplyDefaults = require('./defaults');\nHeatmap.calc = require('./calc');\nHeatmap.plot = require('./plot');\nHeatmap.colorbar = require('./colorbar');\nHeatmap.style = require('./style');\nHeatmap.hoverPoints = require('./hover');\nHeatmap.moduleType = 'trace';\nHeatmap.name = 'heatmap';\nHeatmap.basePlotModule = require('../../plots/cartesian');\nHeatmap.categories = ['cartesian', 'svg', '2dMap'];\nHeatmap.meta = {\n  description: ['The data that describes the heatmap value-to-color mapping', 'is set in `z`.', 'Data in `z` can either be a {2D array} of values (ragged or not)', 'or a 1D array of values.', 'In the case where `z` is a {2D array},', 'say that `z` has N rows and M columns.', 'Then, by default, the resulting heatmap will have N partitions along', 'the y axis and M partitions along the x axis.', 'In other words, the i-th row/ j-th column cell in `z`', 'is mapped to the i-th partition of the y axis', '(starting from the bottom of the plot) and the j-th partition', 'of the x-axis (starting from the left of the plot).', 'This behavior can be flipped by using `transpose`.', 'Moreover, `x` (`y`) can be provided with M or M+1 (N or N+1) elements.', 'If M (N), then the coordinates correspond to the center of the', 'heatmap cells and the cells have equal width.', 'If M+1 (N+1), then the coordinates correspond to the edges of the', 'heatmap cells.', 'In the case where `z` is a 1D {array}, the x and y coordinates must be', 'provided in `x` and `y` respectively to form data triplets.'].join(' ')\n};\nmodule.exports = Heatmap;","map":{"version":3,"names":["Heatmap","attributes","require","supplyDefaults","calc","plot","colorbar","style","hoverPoints","moduleType","name","basePlotModule","categories","meta","description","join","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/heatmap/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Heatmap = {};\n\nHeatmap.attributes = require('./attributes');\nHeatmap.supplyDefaults = require('./defaults');\nHeatmap.calc = require('./calc');\nHeatmap.plot = require('./plot');\nHeatmap.colorbar = require('./colorbar');\nHeatmap.style = require('./style');\nHeatmap.hoverPoints = require('./hover');\n\nHeatmap.moduleType = 'trace';\nHeatmap.name = 'heatmap';\nHeatmap.basePlotModule = require('../../plots/cartesian');\nHeatmap.categories = ['cartesian', 'svg', '2dMap'];\nHeatmap.meta = {\n    description: [\n        'The data that describes the heatmap value-to-color mapping',\n        'is set in `z`.',\n        'Data in `z` can either be a {2D array} of values (ragged or not)',\n        'or a 1D array of values.',\n\n        'In the case where `z` is a {2D array},',\n        'say that `z` has N rows and M columns.',\n        'Then, by default, the resulting heatmap will have N partitions along',\n        'the y axis and M partitions along the x axis.',\n        'In other words, the i-th row/ j-th column cell in `z`',\n        'is mapped to the i-th partition of the y axis',\n        '(starting from the bottom of the plot) and the j-th partition',\n        'of the x-axis (starting from the left of the plot).',\n        'This behavior can be flipped by using `transpose`.',\n        'Moreover, `x` (`y`) can be provided with M or M+1 (N or N+1) elements.',\n        'If M (N), then the coordinates correspond to the center of the',\n        'heatmap cells and the cells have equal width.',\n        'If M+1 (N+1), then the coordinates correspond to the edges of the',\n        'heatmap cells.',\n\n        'In the case where `z` is a 1D {array}, the x and y coordinates must be',\n        'provided in `x` and `y` respectively to form data triplets.'\n    ].join(' ')\n};\n\nmodule.exports = Heatmap;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,OAAO,GAAG,CAAC,CAAC;AAEhBA,OAAO,CAACC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC5CF,OAAO,CAACG,cAAc,GAAGD,OAAO,CAAC,YAAY,CAAC;AAC9CF,OAAO,CAACI,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAChCF,OAAO,CAACK,IAAI,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChCF,OAAO,CAACM,QAAQ,GAAGJ,OAAO,CAAC,YAAY,CAAC;AACxCF,OAAO,CAACO,KAAK,GAAGL,OAAO,CAAC,SAAS,CAAC;AAClCF,OAAO,CAACQ,WAAW,GAAGN,OAAO,CAAC,SAAS,CAAC;AAExCF,OAAO,CAACS,UAAU,GAAG,OAAO;AAC5BT,OAAO,CAACU,IAAI,GAAG,SAAS;AACxBV,OAAO,CAACW,cAAc,GAAGT,OAAO,CAAC,uBAAuB,CAAC;AACzDF,OAAO,CAACY,UAAU,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,OAAO,CAAC;AAClDZ,OAAO,CAACa,IAAI,GAAG;EACXC,WAAW,EAAE,CACT,4DAA4D,EAC5D,gBAAgB,EAChB,kEAAkE,EAClE,0BAA0B,EAE1B,wCAAwC,EACxC,wCAAwC,EACxC,sEAAsE,EACtE,+CAA+C,EAC/C,uDAAuD,EACvD,+CAA+C,EAC/C,+DAA+D,EAC/D,qDAAqD,EACrD,oDAAoD,EACpD,wEAAwE,EACxE,gEAAgE,EAChE,+CAA+C,EAC/C,mEAAmE,EACnE,gBAAgB,EAEhB,wEAAwE,EACxE,6DAA6D,CAChE,CAACC,IAAI,CAAC,GAAG;AACd,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGjB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function (opts, extra) {\n  opts = opts || {};\n  extra = extra || {};\n  var descPart = extra.description ? ' ' + extra.description : '';\n  var keys = extra.keys || [];\n  if (keys.length > 0) {\n    var quotedKeys = [];\n    for (var i = 0; i < keys.length; i++) {\n      quotedKeys[i] = '`' + keys[i] + '`';\n    }\n    descPart = descPart + 'Finally, the template string has access to ';\n    if (keys.length === 1) {\n      descPart = 'variable ' + quotedKeys[0];\n    } else {\n      descPart = 'variables ' + quotedKeys.slice(0, -1).join(', ') + ' and ' + quotedKeys.slice(-1) + '.';\n    }\n  }\n  var hovertemplate = {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    arrayOk: true,\n    editType: 'none',\n    description: ['Template string used for rendering the information that appear on hover box.', 'Note that this will override `hoverinfo`.', 'Variables are inserted using %{variable}, for example \"y: %{y}\".', 'Numbers are formatted using d3-format\\'s syntax %{variable:d3-format}, for example \"Price: %{y:$.2f}\".', 'See https://github.com/d3/d3-format/blob/master/README.md#locale_format for details on the formatting syntax.', 'The variables available in `hovertemplate` are the ones emitted as event data described at this link https://plot.ly/javascript/plotlyjs-events/#event-data.', 'Additionally, every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.', descPart, 'Anything contained in tag `<extra>` is displayed in the secondary box, for example \"<extra>{fullData.name}</extra>\".'].join(' ')\n  };\n  return hovertemplate;\n};","map":{"version":3,"names":["module","exports","opts","extra","descPart","description","keys","length","quotedKeys","i","slice","join","hovertemplate","valType","role","dflt","arrayOk","editType"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/fx/hovertemplate_attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function(opts, extra) {\n    opts = opts || {};\n    extra = extra || {};\n\n    var descPart = extra.description ? ' ' + extra.description : '';\n    var keys = extra.keys || [];\n    if(keys.length > 0) {\n        var quotedKeys = [];\n        for(var i = 0; i < keys.length; i++) {\n            quotedKeys[i] = '`' + keys[i] + '`';\n        }\n        descPart = descPart + 'Finally, the template string has access to ';\n        if(keys.length === 1) {\n            descPart = 'variable ' + quotedKeys[0];\n        } else {\n            descPart = 'variables ' + quotedKeys.slice(0, -1).join(', ') + ' and ' + quotedKeys.slice(-1) + '.';\n        }\n    }\n\n    var hovertemplate = {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        arrayOk: true,\n        editType: 'none',\n        description: [\n            'Template string used for rendering the information that appear on hover box.',\n            'Note that this will override `hoverinfo`.',\n            'Variables are inserted using %{variable}, for example \"y: %{y}\".',\n            'Numbers are formatted using d3-format\\'s syntax %{variable:d3-format}, for example \"Price: %{y:$.2f}\".',\n            'See https://github.com/d3/d3-format/blob/master/README.md#locale_format for details on the formatting syntax.',\n            'The variables available in `hovertemplate` are the ones emitted as event data described at this link https://plot.ly/javascript/plotlyjs-events/#event-data.',\n            'Additionally, every attributes that can be specified per-point (the ones that are `arrayOk: true`) are available.',\n            descPart,\n            'Anything contained in tag `<extra>` is displayed in the secondary box, for example \"<extra>{fullData.name}</extra>\".'\n        ].join(' ')\n    };\n\n    return hovertemplate;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,UAASC,IAAI,EAAEC,KAAK,EAAE;EACnCD,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EACjBC,KAAK,GAAGA,KAAK,IAAI,CAAC,CAAC;EAEnB,IAAIC,QAAQ,GAAGD,KAAK,CAACE,WAAW,GAAG,GAAG,GAAGF,KAAK,CAACE,WAAW,GAAG,EAAE;EAC/D,IAAIC,IAAI,GAAGH,KAAK,CAACG,IAAI,IAAI,EAAE;EAC3B,IAAGA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;IAChB,IAAIC,UAAU,GAAG,EAAE;IACnB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,IAAI,CAACC,MAAM,EAAEE,CAAC,EAAE,EAAE;MACjCD,UAAU,CAACC,CAAC,CAAC,GAAG,GAAG,GAAGH,IAAI,CAACG,CAAC,CAAC,GAAG,GAAG;IACvC;IACAL,QAAQ,GAAGA,QAAQ,GAAG,6CAA6C;IACnE,IAAGE,IAAI,CAACC,MAAM,KAAK,CAAC,EAAE;MAClBH,QAAQ,GAAG,WAAW,GAAGI,UAAU,CAAC,CAAC,CAAC;IAC1C,CAAC,MAAM;MACHJ,QAAQ,GAAG,YAAY,GAAGI,UAAU,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,GAAG,OAAO,GAAGH,UAAU,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG;IACvG;EACJ;EAEA,IAAIE,aAAa,GAAG;IAChBC,OAAO,EAAE,QAAQ;IACjBC,IAAI,EAAE,MAAM;IACZC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,IAAI;IACbC,QAAQ,EAAE,MAAM;IAChBZ,WAAW,EAAE,CACT,8EAA8E,EAC9E,2CAA2C,EAC3C,kEAAkE,EAClE,wGAAwG,EACxG,+GAA+G,EAC/G,8JAA8J,EAC9J,mHAAmH,EACnHD,QAAQ,EACR,sHAAsH,CACzH,CAACO,IAAI,CAAC,GAAG;EACd,CAAC;EAED,OAAOC,aAAa;AACxB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar barycentric = require('barycentric');\nvar closestPointToTriangle = require('polytope-closest-point/lib/closest_point_2d.js');\nmodule.exports = closestPointToPickLocation;\nfunction xformMatrix(m, v) {\n  var out = [0, 0, 0, 0];\n  for (var i = 0; i < 4; ++i) {\n    for (var j = 0; j < 4; ++j) {\n      out[j] += m[4 * i + j] * v[i];\n    }\n  }\n  return out;\n}\nfunction projectVertex(v, model, view, projection, resolution) {\n  var p = xformMatrix(projection, xformMatrix(view, xformMatrix(model, [v[0], v[1], v[2], 1])));\n  for (var i = 0; i < 3; ++i) {\n    p[i] /= p[3];\n  }\n  return [0.5 * resolution[0] * (1.0 + p[0]), 0.5 * resolution[1] * (1.0 - p[1])];\n}\nfunction barycentricCoord(simplex, point) {\n  if (simplex.length === 2) {\n    var d0 = 0.0;\n    var d1 = 0.0;\n    for (var i = 0; i < 2; ++i) {\n      d0 += Math.pow(point[i] - simplex[0][i], 2);\n      d1 += Math.pow(point[i] - simplex[1][i], 2);\n    }\n    d0 = Math.sqrt(d0);\n    d1 = Math.sqrt(d1);\n    if (d0 + d1 < 1e-6) {\n      return [1, 0];\n    }\n    return [d1 / (d0 + d1), d0 / (d1 + d0)];\n  } else if (simplex.length === 3) {\n    var closestPoint = [0, 0];\n    closestPointToTriangle(simplex[0], simplex[1], simplex[2], point, closestPoint);\n    return barycentric(simplex, closestPoint);\n  }\n  return [];\n}\nfunction interpolate(simplex, weights) {\n  var result = [0, 0, 0];\n  for (var i = 0; i < simplex.length; ++i) {\n    var p = simplex[i];\n    var w = weights[i];\n    for (var j = 0; j < 3; ++j) {\n      result[j] += w * p[j];\n    }\n  }\n  return result;\n}\nfunction closestPointToPickLocation(simplex, pixelCoord, model, view, projection, resolution) {\n  if (simplex.length === 1) {\n    return [0, simplex[0].slice()];\n  }\n  var simplex2D = new Array(simplex.length);\n  for (var i = 0; i < simplex.length; ++i) {\n    simplex2D[i] = projectVertex(simplex[i], model, view, projection, resolution);\n  }\n  var closestIndex = 0;\n  var closestDist = Infinity;\n  for (var i = 0; i < simplex2D.length; ++i) {\n    var d2 = 0.0;\n    for (var j = 0; j < 2; ++j) {\n      d2 += Math.pow(simplex2D[i][j] - pixelCoord[j], 2);\n    }\n    if (d2 < closestDist) {\n      closestDist = d2;\n      closestIndex = i;\n    }\n  }\n  var weights = barycentricCoord(simplex2D, pixelCoord);\n  var s = 0.0;\n  for (var i = 0; i < 3; ++i) {\n    if (weights[i] < -0.001 || weights[i] > 1.0001) {\n      return null;\n    }\n    s += weights[i];\n  }\n  if (Math.abs(s - 1.0) > 0.001) {\n    return null;\n  }\n  return [closestIndex, interpolate(simplex, weights), weights];\n}","map":{"version":3,"names":["barycentric","require","closestPointToTriangle","module","exports","closestPointToPickLocation","xformMatrix","m","v","out","i","j","projectVertex","model","view","projection","resolution","p","barycentricCoord","simplex","point","length","d0","d1","Math","pow","sqrt","closestPoint","interpolate","weights","result","w","pixelCoord","slice","simplex2D","Array","closestIndex","closestDist","Infinity","d2","s","abs"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/gl-mesh3d/lib/closest-point.js"],"sourcesContent":["'use strict'\n\nvar barycentric            = require('barycentric')\nvar closestPointToTriangle = require('polytope-closest-point/lib/closest_point_2d.js')\n\nmodule.exports = closestPointToPickLocation\n\nfunction xformMatrix(m, v) {\n  var out = [0,0,0,0]\n  for(var i=0; i<4; ++i) {\n    for(var j=0; j<4; ++j) {\n      out[j] += m[4*i + j] * v[i]\n    }\n  }\n  return out\n}\n\nfunction projectVertex(v, model, view, projection, resolution) {\n  var p = xformMatrix(projection,\n            xformMatrix(view,\n              xformMatrix(model, [v[0], v[1], v[2], 1])))\n  for(var i=0; i<3; ++i) {\n    p[i] /= p[3]\n  }\n  return [ 0.5 * resolution[0] * (1.0+p[0]), 0.5 * resolution[1] * (1.0-p[1]) ]\n}\n\nfunction barycentricCoord(simplex, point) {\n  if(simplex.length === 2) {\n    var d0 = 0.0\n    var d1 = 0.0\n    for(var i=0; i<2; ++i) {\n      d0 += Math.pow(point[i] - simplex[0][i], 2)\n      d1 += Math.pow(point[i] - simplex[1][i], 2)\n    }\n    d0 = Math.sqrt(d0)\n    d1 = Math.sqrt(d1)\n    if(d0+d1 < 1e-6) {\n      return [1,0]\n    }\n    return [d1/(d0+d1),d0/(d1+d0)]\n  } else if(simplex.length === 3) {\n    var closestPoint = [0,0]\n    closestPointToTriangle(simplex[0], simplex[1], simplex[2], point, closestPoint)\n    return barycentric(simplex, closestPoint)\n  }\n  return []\n}\n\nfunction interpolate(simplex, weights) {\n  var result = [0,0,0]\n  for(var i=0; i<simplex.length; ++i) {\n    var p = simplex[i]\n    var w = weights[i]\n    for(var j=0; j<3; ++j) {\n      result[j] += w * p[j]\n    }\n  }\n  return result\n}\n\nfunction closestPointToPickLocation(simplex, pixelCoord, model, view, projection, resolution) {\n  if(simplex.length === 1) {\n    return [0, simplex[0].slice()]\n  }\n  var simplex2D = new Array(simplex.length)\n  for(var i=0; i<simplex.length; ++i) {\n    simplex2D[i] = projectVertex(simplex[i], model, view, projection, resolution);\n  }\n\n  var closestIndex = 0\n  var closestDist  = Infinity\n  for(var i=0; i<simplex2D.length; ++i) {\n    var d2 = 0.0\n    for(var j=0; j<2; ++j) {\n      d2 += Math.pow(simplex2D[i][j] - pixelCoord[j], 2)\n    }\n    if(d2 < closestDist) {\n      closestDist  = d2\n      closestIndex = i\n    }\n  }\n\n  var weights = barycentricCoord(simplex2D, pixelCoord)\n  var s = 0.0\n  for(var i=0; i<3; ++i) {\n    if(weights[i] < -0.001 ||\n       weights[i] > 1.0001) {\n      return null\n    }\n    s += weights[i]\n  }\n  if(Math.abs(s - 1.0) > 0.001) {\n    return null\n  }\n  return [closestIndex, interpolate(simplex, weights), weights]\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"var glslify = require('glslify');\nvar triVertSrc = glslify('./triangle-vertex.glsl');\nvar triFragSrc = glslify('./triangle-fragment.glsl');\nvar edgeVertSrc = glslify('./edge-vertex.glsl');\nvar edgeFragSrc = glslify('./edge-fragment.glsl');\nvar pointVertSrc = glslify('./point-vertex.glsl');\nvar pointFragSrc = glslify('./point-fragment.glsl');\nvar pickVertSrc = glslify('./pick-vertex.glsl');\nvar pickFragSrc = glslify('./pick-fragment.glsl');\nvar pickPointVertSrc = glslify('./pick-point-vertex.glsl');\nvar contourVertSrc = glslify('./contour-vertex.glsl');\nvar contourFragSrc = glslify('./contour-fragment.glsl');\nexports.meshShader = {\n  vertex: triVertSrc,\n  fragment: triFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'normal',\n    type: 'vec3'\n  }, {\n    name: 'color',\n    type: 'vec4'\n  }, {\n    name: 'uv',\n    type: 'vec2'\n  }]\n};\nexports.wireShader = {\n  vertex: edgeVertSrc,\n  fragment: edgeFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'color',\n    type: 'vec4'\n  }, {\n    name: 'uv',\n    type: 'vec2'\n  }]\n};\nexports.pointShader = {\n  vertex: pointVertSrc,\n  fragment: pointFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'color',\n    type: 'vec4'\n  }, {\n    name: 'uv',\n    type: 'vec2'\n  }, {\n    name: 'pointSize',\n    type: 'float'\n  }]\n};\nexports.pickShader = {\n  vertex: pickVertSrc,\n  fragment: pickFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'id',\n    type: 'vec4'\n  }]\n};\nexports.pointPickShader = {\n  vertex: pickPointVertSrc,\n  fragment: pickFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }, {\n    name: 'pointSize',\n    type: 'float'\n  }, {\n    name: 'id',\n    type: 'vec4'\n  }]\n};\nexports.contourShader = {\n  vertex: contourVertSrc,\n  fragment: contourFragSrc,\n  attributes: [{\n    name: 'position',\n    type: 'vec3'\n  }]\n};","map":{"version":3,"names":["glslify","require","triVertSrc","triFragSrc","edgeVertSrc","edgeFragSrc","pointVertSrc","pointFragSrc","pickVertSrc","pickFragSrc","pickPointVertSrc","contourVertSrc","contourFragSrc","exports","meshShader","vertex","fragment","attributes","name","type","wireShader","pointShader","pickShader","pointPickShader","contourShader"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/gl-mesh3d/lib/shaders.js"],"sourcesContent":["var glslify       = require('glslify')\n\nvar triVertSrc = glslify('./triangle-vertex.glsl')\nvar triFragSrc = glslify('./triangle-fragment.glsl')\nvar edgeVertSrc = glslify('./edge-vertex.glsl')\nvar edgeFragSrc = glslify('./edge-fragment.glsl')\nvar pointVertSrc = glslify('./point-vertex.glsl')\nvar pointFragSrc = glslify('./point-fragment.glsl')\nvar pickVertSrc = glslify('./pick-vertex.glsl')\nvar pickFragSrc = glslify('./pick-fragment.glsl')\nvar pickPointVertSrc = glslify('./pick-point-vertex.glsl')\nvar contourVertSrc = glslify('./contour-vertex.glsl')\nvar contourFragSrc = glslify('./contour-fragment.glsl')\n\nexports.meshShader = {\n  vertex:   triVertSrc,\n  fragment: triFragSrc,\n  attributes: [\n    {name: 'position', type: 'vec3'},\n    {name: 'normal', type: 'vec3'},\n    {name: 'color', type: 'vec4'},\n    {name: 'uv', type: 'vec2'}\n  ]\n}\nexports.wireShader = {\n  vertex:   edgeVertSrc,\n  fragment: edgeFragSrc,\n  attributes: [\n    {name: 'position', type: 'vec3'},\n    {name: 'color', type: 'vec4'},\n    {name: 'uv', type: 'vec2'}\n  ]\n}\nexports.pointShader = {\n  vertex:   pointVertSrc,\n  fragment: pointFragSrc,\n  attributes: [\n    {name: 'position', type: 'vec3'},\n    {name: 'color', type: 'vec4'},\n    {name: 'uv', type: 'vec2'},\n    {name: 'pointSize', type: 'float'}\n  ]\n}\nexports.pickShader = {\n  vertex:   pickVertSrc,\n  fragment: pickFragSrc,\n  attributes: [\n    {name: 'position', type: 'vec3'},\n    {name: 'id', type: 'vec4'}\n  ]\n}\nexports.pointPickShader = {\n  vertex:   pickPointVertSrc,\n  fragment: pickFragSrc,\n  attributes: [\n    {name: 'position', type: 'vec3'},\n    {name: 'pointSize', type: 'float'},\n    {name: 'id', type: 'vec4'}\n  ]\n}\nexports.contourShader = {\n  vertex:   contourVertSrc,\n  fragment: contourFragSrc,\n  attributes: [\n    {name: 'position', type: 'vec3'}\n  ]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
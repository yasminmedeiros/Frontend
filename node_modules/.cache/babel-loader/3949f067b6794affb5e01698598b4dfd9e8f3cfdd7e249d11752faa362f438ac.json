{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Registry = require('../../registry');\nvar Drawing = require('../../components/drawing');\nvar Axes = require('./axes');\n\n/**\n * transitionAxes\n *\n * transition axes from one set of ranges to another, using a svg\n * transformations, similar to during panning.\n *\n * @param {DOM element | object} gd\n * @param {array} edits : array of 'edits', each item with\n * - plotinfo {object} subplot object\n * - xr0 {array} initial x-range\n * - xr1 {array} end x-range\n * - yr0 {array} initial y-range\n * - yr1 {array} end y-range\n * @param {object} transitionOpts\n * @param {function} makeOnCompleteCallback\n */\nmodule.exports = function transitionAxes(gd, edits, transitionOpts, makeOnCompleteCallback) {\n  var fullLayout = gd._fullLayout;\n\n  // special case for redraw:false Plotly.animate that relies on this\n  // to update axis-referenced layout components\n  if (edits.length === 0) {\n    Axes.redrawComponents(gd);\n    return;\n  }\n  function unsetSubplotTransform(subplot) {\n    var xa = subplot.xaxis;\n    var ya = subplot.yaxis;\n    fullLayout._defs.select('#' + subplot.clipId + '> rect').call(Drawing.setTranslate, 0, 0).call(Drawing.setScale, 1, 1);\n    subplot.plot.call(Drawing.setTranslate, xa._offset, ya._offset).call(Drawing.setScale, 1, 1);\n    var traceGroups = subplot.plot.selectAll('.scatterlayer .trace');\n\n    // This is specifically directed at scatter traces, applying an inverse\n    // scale to individual points to counteract the scale of the trace\n    // as a whole:\n    traceGroups.selectAll('.point').call(Drawing.setPointGroupScale, 1, 1);\n    traceGroups.selectAll('.textpoint').call(Drawing.setTextPointsScale, 1, 1);\n    traceGroups.call(Drawing.hideOutsideRangePoints, subplot);\n  }\n  function updateSubplot(edit, progress) {\n    var plotinfo = edit.plotinfo;\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n    var xr0 = edit.xr0;\n    var xr1 = edit.xr1;\n    var xlen = xa._length;\n    var yr0 = edit.yr0;\n    var yr1 = edit.yr1;\n    var ylen = ya._length;\n    var editX = !!xr1;\n    var editY = !!yr1;\n    var viewBox = [];\n    if (editX) {\n      var dx0 = xr0[1] - xr0[0];\n      var dx1 = xr1[1] - xr1[0];\n      viewBox[0] = (xr0[0] * (1 - progress) + progress * xr1[0] - xr0[0]) / (xr0[1] - xr0[0]) * xlen;\n      viewBox[2] = xlen * (1 - progress + progress * dx1 / dx0);\n      xa.range[0] = xr0[0] * (1 - progress) + progress * xr1[0];\n      xa.range[1] = xr0[1] * (1 - progress) + progress * xr1[1];\n    } else {\n      viewBox[0] = 0;\n      viewBox[2] = xlen;\n    }\n    if (editY) {\n      var dy0 = yr0[1] - yr0[0];\n      var dy1 = yr1[1] - yr1[0];\n      viewBox[1] = (yr0[1] * (1 - progress) + progress * yr1[1] - yr0[1]) / (yr0[0] - yr0[1]) * ylen;\n      viewBox[3] = ylen * (1 - progress + progress * dy1 / dy0);\n      ya.range[0] = yr0[0] * (1 - progress) + progress * yr1[0];\n      ya.range[1] = yr0[1] * (1 - progress) + progress * yr1[1];\n    } else {\n      viewBox[1] = 0;\n      viewBox[3] = ylen;\n    }\n    Axes.drawOne(gd, xa, {\n      skipTitle: true\n    });\n    Axes.drawOne(gd, ya, {\n      skipTitle: true\n    });\n    Axes.redrawComponents(gd, [xa._id, ya._id]);\n    var xScaleFactor = editX ? xlen / viewBox[2] : 1;\n    var yScaleFactor = editY ? ylen / viewBox[3] : 1;\n    var clipDx = editX ? viewBox[0] : 0;\n    var clipDy = editY ? viewBox[1] : 0;\n    var fracDx = editX ? viewBox[0] / viewBox[2] * xlen : 0;\n    var fracDy = editY ? viewBox[1] / viewBox[3] * ylen : 0;\n    var plotDx = xa._offset - fracDx;\n    var plotDy = ya._offset - fracDy;\n    plotinfo.clipRect.call(Drawing.setTranslate, clipDx, clipDy).call(Drawing.setScale, 1 / xScaleFactor, 1 / yScaleFactor);\n    plotinfo.plot.call(Drawing.setTranslate, plotDx, plotDy).call(Drawing.setScale, xScaleFactor, yScaleFactor);\n\n    // apply an inverse scale to individual points to counteract\n    // the scale of the trace group.\n    Drawing.setPointGroupScale(plotinfo.zoomScalePts, 1 / xScaleFactor, 1 / yScaleFactor);\n    Drawing.setTextPointsScale(plotinfo.zoomScaleTxt, 1 / xScaleFactor, 1 / yScaleFactor);\n  }\n  var onComplete;\n  if (makeOnCompleteCallback) {\n    // This module makes the choice whether or not it notifies Plotly.transition\n    // about completion:\n    onComplete = makeOnCompleteCallback();\n  }\n  function transitionComplete() {\n    var aobj = {};\n    for (var i = 0; i < edits.length; i++) {\n      var edit = edits[i];\n      if (edit.xr1) aobj[edit.plotinfo.xaxis._name + '.range'] = edit.xr1.slice();\n      if (edit.yr1) aobj[edit.plotinfo.yaxis._name + '.range'] = edit.yr1.slice();\n    }\n\n    // Signal that this transition has completed:\n    onComplete && onComplete();\n    return Registry.call('relayout', gd, aobj).then(function () {\n      for (var i = 0; i < edits.length; i++) {\n        unsetSubplotTransform(edits[i].plotinfo);\n      }\n    });\n  }\n  function transitionInterrupt() {\n    var aobj = {};\n    for (var i = 0; i < edits.length; i++) {\n      var edit = edits[i];\n      if (edit.xr0) aobj[edit.plotinfo.xaxis._name + '.range'] = edit.xr0.slice();\n      if (edit.yr0) aobj[edit.plotinfo.yaxis._name + '.range'] = edit.yr0.slice();\n    }\n    return Registry.call('relayout', gd, aobj).then(function () {\n      for (var i = 0; i < edits.length; i++) {\n        unsetSubplotTransform(edits[i].plotinfo);\n      }\n    });\n  }\n  var t1, t2, raf;\n  var easeFn = d3.ease(transitionOpts.easing);\n  gd._transitionData._interruptCallbacks.push(function () {\n    window.cancelAnimationFrame(raf);\n    raf = null;\n    return transitionInterrupt();\n  });\n  function doFrame() {\n    t2 = Date.now();\n    var tInterp = Math.min(1, (t2 - t1) / transitionOpts.duration);\n    var progress = easeFn(tInterp);\n    for (var i = 0; i < edits.length; i++) {\n      updateSubplot(edits[i], progress);\n    }\n    if (t2 - t1 > transitionOpts.duration) {\n      transitionComplete();\n      raf = window.cancelAnimationFrame(doFrame);\n    } else {\n      raf = window.requestAnimationFrame(doFrame);\n    }\n  }\n  t1 = Date.now();\n  raf = window.requestAnimationFrame(doFrame);\n  return Promise.resolve();\n};","map":{"version":3,"names":["d3","require","Registry","Drawing","Axes","module","exports","transitionAxes","gd","edits","transitionOpts","makeOnCompleteCallback","fullLayout","_fullLayout","length","redrawComponents","unsetSubplotTransform","subplot","xa","xaxis","ya","yaxis","_defs","select","clipId","call","setTranslate","setScale","plot","_offset","traceGroups","selectAll","setPointGroupScale","setTextPointsScale","hideOutsideRangePoints","updateSubplot","edit","progress","plotinfo","xr0","xr1","xlen","_length","yr0","yr1","ylen","editX","editY","viewBox","dx0","dx1","range","dy0","dy1","drawOne","skipTitle","_id","xScaleFactor","yScaleFactor","clipDx","clipDy","fracDx","fracDy","plotDx","plotDy","clipRect","zoomScalePts","zoomScaleTxt","onComplete","transitionComplete","aobj","i","_name","slice","then","transitionInterrupt","t1","t2","raf","easeFn","ease","easing","_transitionData","_interruptCallbacks","push","window","cancelAnimationFrame","doFrame","Date","now","tInterp","Math","min","duration","requestAnimationFrame","Promise","resolve"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/transition_axes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\nvar Drawing = require('../../components/drawing');\nvar Axes = require('./axes');\n\n/**\n * transitionAxes\n *\n * transition axes from one set of ranges to another, using a svg\n * transformations, similar to during panning.\n *\n * @param {DOM element | object} gd\n * @param {array} edits : array of 'edits', each item with\n * - plotinfo {object} subplot object\n * - xr0 {array} initial x-range\n * - xr1 {array} end x-range\n * - yr0 {array} initial y-range\n * - yr1 {array} end y-range\n * @param {object} transitionOpts\n * @param {function} makeOnCompleteCallback\n */\nmodule.exports = function transitionAxes(gd, edits, transitionOpts, makeOnCompleteCallback) {\n    var fullLayout = gd._fullLayout;\n\n    // special case for redraw:false Plotly.animate that relies on this\n    // to update axis-referenced layout components\n    if(edits.length === 0) {\n        Axes.redrawComponents(gd);\n        return;\n    }\n\n    function unsetSubplotTransform(subplot) {\n        var xa = subplot.xaxis;\n        var ya = subplot.yaxis;\n\n        fullLayout._defs.select('#' + subplot.clipId + '> rect')\n            .call(Drawing.setTranslate, 0, 0)\n            .call(Drawing.setScale, 1, 1);\n\n        subplot.plot\n            .call(Drawing.setTranslate, xa._offset, ya._offset)\n            .call(Drawing.setScale, 1, 1);\n\n        var traceGroups = subplot.plot.selectAll('.scatterlayer .trace');\n\n        // This is specifically directed at scatter traces, applying an inverse\n        // scale to individual points to counteract the scale of the trace\n        // as a whole:\n        traceGroups.selectAll('.point')\n            .call(Drawing.setPointGroupScale, 1, 1);\n        traceGroups.selectAll('.textpoint')\n            .call(Drawing.setTextPointsScale, 1, 1);\n        traceGroups\n            .call(Drawing.hideOutsideRangePoints, subplot);\n    }\n\n    function updateSubplot(edit, progress) {\n        var plotinfo = edit.plotinfo;\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n\n        var xr0 = edit.xr0;\n        var xr1 = edit.xr1;\n        var xlen = xa._length;\n        var yr0 = edit.yr0;\n        var yr1 = edit.yr1;\n        var ylen = ya._length;\n\n        var editX = !!xr1;\n        var editY = !!yr1;\n        var viewBox = [];\n\n        if(editX) {\n            var dx0 = xr0[1] - xr0[0];\n            var dx1 = xr1[1] - xr1[0];\n            viewBox[0] = (xr0[0] * (1 - progress) + progress * xr1[0] - xr0[0]) / (xr0[1] - xr0[0]) * xlen;\n            viewBox[2] = xlen * ((1 - progress) + progress * dx1 / dx0);\n            xa.range[0] = xr0[0] * (1 - progress) + progress * xr1[0];\n            xa.range[1] = xr0[1] * (1 - progress) + progress * xr1[1];\n        } else {\n            viewBox[0] = 0;\n            viewBox[2] = xlen;\n        }\n\n        if(editY) {\n            var dy0 = yr0[1] - yr0[0];\n            var dy1 = yr1[1] - yr1[0];\n            viewBox[1] = (yr0[1] * (1 - progress) + progress * yr1[1] - yr0[1]) / (yr0[0] - yr0[1]) * ylen;\n            viewBox[3] = ylen * ((1 - progress) + progress * dy1 / dy0);\n            ya.range[0] = yr0[0] * (1 - progress) + progress * yr1[0];\n            ya.range[1] = yr0[1] * (1 - progress) + progress * yr1[1];\n        } else {\n            viewBox[1] = 0;\n            viewBox[3] = ylen;\n        }\n\n        Axes.drawOne(gd, xa, {skipTitle: true});\n        Axes.drawOne(gd, ya, {skipTitle: true});\n        Axes.redrawComponents(gd, [xa._id, ya._id]);\n\n        var xScaleFactor = editX ? xlen / viewBox[2] : 1;\n        var yScaleFactor = editY ? ylen / viewBox[3] : 1;\n        var clipDx = editX ? viewBox[0] : 0;\n        var clipDy = editY ? viewBox[1] : 0;\n        var fracDx = editX ? (viewBox[0] / viewBox[2] * xlen) : 0;\n        var fracDy = editY ? (viewBox[1] / viewBox[3] * ylen) : 0;\n        var plotDx = xa._offset - fracDx;\n        var plotDy = ya._offset - fracDy;\n\n        plotinfo.clipRect\n            .call(Drawing.setTranslate, clipDx, clipDy)\n            .call(Drawing.setScale, 1 / xScaleFactor, 1 / yScaleFactor);\n\n        plotinfo.plot\n            .call(Drawing.setTranslate, plotDx, plotDy)\n            .call(Drawing.setScale, xScaleFactor, yScaleFactor);\n\n        // apply an inverse scale to individual points to counteract\n        // the scale of the trace group.\n        Drawing.setPointGroupScale(plotinfo.zoomScalePts, 1 / xScaleFactor, 1 / yScaleFactor);\n        Drawing.setTextPointsScale(plotinfo.zoomScaleTxt, 1 / xScaleFactor, 1 / yScaleFactor);\n    }\n\n    var onComplete;\n    if(makeOnCompleteCallback) {\n        // This module makes the choice whether or not it notifies Plotly.transition\n        // about completion:\n        onComplete = makeOnCompleteCallback();\n    }\n\n    function transitionComplete() {\n        var aobj = {};\n\n        for(var i = 0; i < edits.length; i++) {\n            var edit = edits[i];\n            if(edit.xr1) aobj[edit.plotinfo.xaxis._name + '.range'] = edit.xr1.slice();\n            if(edit.yr1) aobj[edit.plotinfo.yaxis._name + '.range'] = edit.yr1.slice();\n        }\n\n        // Signal that this transition has completed:\n        onComplete && onComplete();\n\n        return Registry.call('relayout', gd, aobj).then(function() {\n            for(var i = 0; i < edits.length; i++) {\n                unsetSubplotTransform(edits[i].plotinfo);\n            }\n        });\n    }\n\n    function transitionInterrupt() {\n        var aobj = {};\n\n        for(var i = 0; i < edits.length; i++) {\n            var edit = edits[i];\n            if(edit.xr0) aobj[edit.plotinfo.xaxis._name + '.range'] = edit.xr0.slice();\n            if(edit.yr0) aobj[edit.plotinfo.yaxis._name + '.range'] = edit.yr0.slice();\n        }\n\n        return Registry.call('relayout', gd, aobj).then(function() {\n            for(var i = 0; i < edits.length; i++) {\n                unsetSubplotTransform(edits[i].plotinfo);\n            }\n        });\n    }\n\n    var t1, t2, raf;\n    var easeFn = d3.ease(transitionOpts.easing);\n\n    gd._transitionData._interruptCallbacks.push(function() {\n        window.cancelAnimationFrame(raf);\n        raf = null;\n        return transitionInterrupt();\n    });\n\n    function doFrame() {\n        t2 = Date.now();\n\n        var tInterp = Math.min(1, (t2 - t1) / transitionOpts.duration);\n        var progress = easeFn(tInterp);\n\n        for(var i = 0; i < edits.length; i++) {\n            updateSubplot(edits[i], progress);\n        }\n\n        if(t2 - t1 > transitionOpts.duration) {\n            transitionComplete();\n            raf = window.cancelAnimationFrame(doFrame);\n        } else {\n            raf = window.requestAnimationFrame(doFrame);\n        }\n    }\n\n    t1 = Date.now();\n    raf = window.requestAnimationFrame(doFrame);\n\n    return Promise.resolve();\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
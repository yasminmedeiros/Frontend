{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar Icons = require('../../../build/ploticon');\nvar Parser = new DOMParser();\n\n/**\n * UI controller for interactive plots\n * @Class\n * @Param {object} opts\n * @Param {object} opts.buttons    nested arrays of grouped buttons config objects\n * @Param {object} opts.container  container div to append modeBar\n * @Param {object} opts.graphInfo  primary plot object containing data and layout\n */\nfunction ModeBar(opts) {\n  this.container = opts.container;\n  this.element = document.createElement('div');\n  this.update(opts.graphInfo, opts.buttons);\n  this.container.appendChild(this.element);\n}\nvar proto = ModeBar.prototype;\n\n/**\n * Update modeBar (buttons and logo)\n *\n * @param {object} graphInfo  primary plot object containing data and layout\n * @param {array of arrays} buttons nested arrays of grouped buttons to initialize\n *\n */\nproto.update = function (graphInfo, buttons) {\n  this.graphInfo = graphInfo;\n  var context = this.graphInfo._context;\n  var fullLayout = this.graphInfo._fullLayout;\n  var modeBarId = 'modebar-' + fullLayout._uid;\n  this.element.setAttribute('id', modeBarId);\n  this._uid = modeBarId;\n  this.element.className = 'modebar';\n  if (context.displayModeBar === 'hover') this.element.className += ' modebar--hover ease-bg';\n  if (fullLayout.modebar.orientation === 'v') {\n    this.element.className += ' vertical';\n    buttons = buttons.reverse();\n  }\n  var style = fullLayout.modebar;\n  var bgSelector = context.displayModeBar === 'hover' ? '.js-plotly-plot .plotly:hover ' : '';\n  Lib.deleteRelatedStyleRule(modeBarId);\n  Lib.addRelatedStyleRule(modeBarId, bgSelector + '#' + modeBarId, 'background-color: ' + style.bgcolor);\n  Lib.addRelatedStyleRule(modeBarId, '#' + modeBarId + ' .modebar-btn .icon path', 'fill: ' + style.color);\n  Lib.addRelatedStyleRule(modeBarId, '#' + modeBarId + ' .modebar-btn:hover .icon path', 'fill: ' + style.activecolor);\n  Lib.addRelatedStyleRule(modeBarId, '#' + modeBarId + ' .modebar-btn.active .icon path', 'fill: ' + style.activecolor);\n\n  // if buttons or logo have changed, redraw modebar interior\n  var needsNewButtons = !this.hasButtons(buttons);\n  var needsNewLogo = this.hasLogo !== context.displaylogo;\n  var needsNewLocale = this.locale !== context.locale;\n  this.locale = context.locale;\n  if (needsNewButtons || needsNewLogo || needsNewLocale) {\n    this.removeAllButtons();\n    this.updateButtons(buttons);\n    if (context.watermark || context.displaylogo) {\n      var logoGroup = this.getLogo();\n      if (context.watermark) {\n        logoGroup.className = logoGroup.className + ' watermark';\n      }\n      if (fullLayout.modebar.orientation === 'v') {\n        this.element.insertBefore(logoGroup, this.element.childNodes[0]);\n      } else {\n        this.element.appendChild(logoGroup);\n      }\n      this.hasLogo = true;\n    }\n  }\n  this.updateActiveButton();\n};\nproto.updateButtons = function (buttons) {\n  var _this = this;\n  this.buttons = buttons;\n  this.buttonElements = [];\n  this.buttonsNames = [];\n  this.buttons.forEach(function (buttonGroup) {\n    var group = _this.createGroup();\n    buttonGroup.forEach(function (buttonConfig) {\n      var buttonName = buttonConfig.name;\n      if (!buttonName) {\n        throw new Error('must provide button \\'name\\' in button config');\n      }\n      if (_this.buttonsNames.indexOf(buttonName) !== -1) {\n        throw new Error('button name \\'' + buttonName + '\\' is taken');\n      }\n      _this.buttonsNames.push(buttonName);\n      var button = _this.createButton(buttonConfig);\n      _this.buttonElements.push(button);\n      group.appendChild(button);\n    });\n    _this.element.appendChild(group);\n  });\n};\n\n/**\n * Empty div for containing a group of buttons\n * @Return {HTMLelement}\n */\nproto.createGroup = function () {\n  var group = document.createElement('div');\n  group.className = 'modebar-group';\n  return group;\n};\n\n/**\n * Create a new button div and set constant and configurable attributes\n * @Param {object} config (see ./buttons.js for more info)\n * @Return {HTMLelement}\n */\nproto.createButton = function (config) {\n  var _this = this;\n  var button = document.createElement('a');\n  button.setAttribute('rel', 'tooltip');\n  button.className = 'modebar-btn';\n  var title = config.title;\n  if (title === undefined) title = config.name;\n  // for localization: allow title to be a callable that takes gd as arg\n  else if (typeof title === 'function') title = title(this.graphInfo);\n  if (title || title === 0) button.setAttribute('data-title', title);\n  if (config.attr !== undefined) button.setAttribute('data-attr', config.attr);\n  var val = config.val;\n  if (val !== undefined) {\n    if (typeof val === 'function') val = val(this.graphInfo);\n    button.setAttribute('data-val', val);\n  }\n  var click = config.click;\n  if (typeof click !== 'function') {\n    throw new Error('must provide button \\'click\\' function in button config');\n  } else {\n    button.addEventListener('click', function (ev) {\n      config.click(_this.graphInfo, ev);\n\n      // only needed for 'hoverClosestGeo' which does not call relayout\n      _this.updateActiveButton(ev.currentTarget);\n    });\n  }\n  button.setAttribute('data-toggle', config.toggle || false);\n  if (config.toggle) d3.select(button).classed('active', true);\n  var icon = config.icon;\n  if (typeof icon === 'function') {\n    button.appendChild(icon());\n  } else {\n    button.appendChild(this.createIcon(icon || Icons.question));\n  }\n  button.setAttribute('data-gravity', config.gravity || 'n');\n  return button;\n};\n\n/**\n * Add an icon to a button\n * @Param {object} thisIcon\n * @Param {number} thisIcon.width\n * @Param {string} thisIcon.path\n * @Param {string} thisIcon.color\n * @Return {HTMLelement}\n */\nproto.createIcon = function (thisIcon) {\n  var iconHeight = isNumeric(thisIcon.height) ? Number(thisIcon.height) : thisIcon.ascent - thisIcon.descent;\n  var svgNS = 'http://www.w3.org/2000/svg';\n  var icon;\n  if (thisIcon.path) {\n    icon = document.createElementNS(svgNS, 'svg');\n    icon.setAttribute('viewBox', [0, 0, thisIcon.width, iconHeight].join(' '));\n    icon.setAttribute('class', 'icon');\n    var path = document.createElementNS(svgNS, 'path');\n    path.setAttribute('d', thisIcon.path);\n    if (thisIcon.transform) {\n      path.setAttribute('transform', thisIcon.transform);\n    } else if (thisIcon.ascent !== undefined) {\n      // Legacy icon transform calculation\n      path.setAttribute('transform', 'matrix(1 0 0 -1 0 ' + thisIcon.ascent + ')');\n    }\n    icon.appendChild(path);\n  }\n  if (thisIcon.svg) {\n    var svgDoc = Parser.parseFromString(thisIcon.svg, 'application/xml');\n    icon = svgDoc.childNodes[0];\n  }\n  icon.setAttribute('height', '1em');\n  icon.setAttribute('width', '1em');\n  return icon;\n};\n\n/**\n * Updates active button with attribute specified in layout\n * @Param {object} graphInfo plot object containing data and layout\n * @Return {HTMLelement}\n */\nproto.updateActiveButton = function (buttonClicked) {\n  var fullLayout = this.graphInfo._fullLayout;\n  var dataAttrClicked = buttonClicked !== undefined ? buttonClicked.getAttribute('data-attr') : null;\n  this.buttonElements.forEach(function (button) {\n    var thisval = button.getAttribute('data-val') || true;\n    var dataAttr = button.getAttribute('data-attr');\n    var isToggleButton = button.getAttribute('data-toggle') === 'true';\n    var button3 = d3.select(button);\n\n    // Use 'data-toggle' and 'buttonClicked' to toggle buttons\n    // that have no one-to-one equivalent in fullLayout\n    if (isToggleButton) {\n      if (dataAttr === dataAttrClicked) {\n        button3.classed('active', !button3.classed('active'));\n      }\n    } else {\n      var val = dataAttr === null ? dataAttr : Lib.nestedProperty(fullLayout, dataAttr).get();\n      button3.classed('active', val === thisval);\n    }\n  });\n};\n\n/**\n * Check if modeBar is configured as button configuration argument\n *\n * @Param {object} buttons 2d array of grouped button config objects\n * @Return {boolean}\n */\nproto.hasButtons = function (buttons) {\n  var currentButtons = this.buttons;\n  if (!currentButtons) return false;\n  if (buttons.length !== currentButtons.length) return false;\n  for (var i = 0; i < buttons.length; ++i) {\n    if (buttons[i].length !== currentButtons[i].length) return false;\n    for (var j = 0; j < buttons[i].length; j++) {\n      if (buttons[i][j].name !== currentButtons[i][j].name) return false;\n    }\n  }\n  return true;\n};\n\n/**\n * @return {HTMLDivElement} The logo image wrapped in a group\n */\nproto.getLogo = function () {\n  var group = this.createGroup();\n  var a = document.createElement('a');\n  a.href = 'https://plot.ly/';\n  a.target = '_blank';\n  a.setAttribute('data-title', Lib._(this.graphInfo, 'Produced with Plotly'));\n  a.className = 'modebar-btn plotlyjsicon modebar-btn--logo';\n  a.appendChild(this.createIcon(Icons.newplotlylogo));\n  group.appendChild(a);\n  return group;\n};\nproto.removeAllButtons = function () {\n  while (this.element.firstChild) {\n    this.element.removeChild(this.element.firstChild);\n  }\n  this.hasLogo = false;\n};\nproto.destroy = function () {\n  Lib.removeElement(this.container.querySelector('.modebar'));\n  Lib.deleteRelatedStyleRule(this._uid);\n};\nfunction createModeBar(gd, buttons) {\n  var fullLayout = gd._fullLayout;\n  var modeBar = new ModeBar({\n    graphInfo: gd,\n    container: fullLayout._paperdiv.node(),\n    buttons: buttons\n  });\n  if (fullLayout._privateplot) {\n    d3.select(modeBar.element).append('span').classed('badge-private float--left', true).text('PRIVATE');\n  }\n  return modeBar;\n}\nmodule.exports = createModeBar;","map":{"version":3,"names":["d3","require","isNumeric","Lib","Icons","Parser","DOMParser","ModeBar","opts","container","element","document","createElement","update","graphInfo","buttons","appendChild","proto","prototype","context","_context","fullLayout","_fullLayout","modeBarId","_uid","setAttribute","className","displayModeBar","modebar","orientation","reverse","style","bgSelector","deleteRelatedStyleRule","addRelatedStyleRule","bgcolor","color","activecolor","needsNewButtons","hasButtons","needsNewLogo","hasLogo","displaylogo","needsNewLocale","locale","removeAllButtons","updateButtons","watermark","logoGroup","getLogo","insertBefore","childNodes","updateActiveButton","_this","buttonElements","buttonsNames","forEach","buttonGroup","group","createGroup","buttonConfig","buttonName","name","Error","indexOf","push","button","createButton","config","title","undefined","attr","val","click","addEventListener","ev","currentTarget","toggle","select","classed","icon","createIcon","question","gravity","thisIcon","iconHeight","height","Number","ascent","descent","svgNS","path","createElementNS","width","join","transform","svg","svgDoc","parseFromString","buttonClicked","dataAttrClicked","getAttribute","thisval","dataAttr","isToggleButton","button3","nestedProperty","get","currentButtons","length","i","j","a","href","target","_","newplotlylogo","firstChild","removeChild","destroy","removeElement","querySelector","createModeBar","gd","modeBar","_paperdiv","node","_privateplot","append","text","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/modebar/modebar.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar Icons = require('../../../build/ploticon');\nvar Parser = new DOMParser();\n\n/**\n * UI controller for interactive plots\n * @Class\n * @Param {object} opts\n * @Param {object} opts.buttons    nested arrays of grouped buttons config objects\n * @Param {object} opts.container  container div to append modeBar\n * @Param {object} opts.graphInfo  primary plot object containing data and layout\n */\nfunction ModeBar(opts) {\n    this.container = opts.container;\n    this.element = document.createElement('div');\n\n    this.update(opts.graphInfo, opts.buttons);\n\n    this.container.appendChild(this.element);\n}\n\nvar proto = ModeBar.prototype;\n\n/**\n * Update modeBar (buttons and logo)\n *\n * @param {object} graphInfo  primary plot object containing data and layout\n * @param {array of arrays} buttons nested arrays of grouped buttons to initialize\n *\n */\nproto.update = function(graphInfo, buttons) {\n    this.graphInfo = graphInfo;\n\n    var context = this.graphInfo._context;\n    var fullLayout = this.graphInfo._fullLayout;\n    var modeBarId = 'modebar-' + fullLayout._uid;\n\n    this.element.setAttribute('id', modeBarId);\n    this._uid = modeBarId;\n\n    this.element.className = 'modebar';\n    if(context.displayModeBar === 'hover') this.element.className += ' modebar--hover ease-bg';\n\n    if(fullLayout.modebar.orientation === 'v') {\n        this.element.className += ' vertical';\n        buttons = buttons.reverse();\n    }\n\n    var style = fullLayout.modebar;\n    var bgSelector = context.displayModeBar === 'hover' ? '.js-plotly-plot .plotly:hover ' : '';\n\n    Lib.deleteRelatedStyleRule(modeBarId);\n    Lib.addRelatedStyleRule(modeBarId, bgSelector + '#' + modeBarId, 'background-color: ' + style.bgcolor);\n    Lib.addRelatedStyleRule(modeBarId, '#' + modeBarId + ' .modebar-btn .icon path', 'fill: ' + style.color);\n    Lib.addRelatedStyleRule(modeBarId, '#' + modeBarId + ' .modebar-btn:hover .icon path', 'fill: ' + style.activecolor);\n    Lib.addRelatedStyleRule(modeBarId, '#' + modeBarId + ' .modebar-btn.active .icon path', 'fill: ' + style.activecolor);\n\n    // if buttons or logo have changed, redraw modebar interior\n    var needsNewButtons = !this.hasButtons(buttons);\n    var needsNewLogo = (this.hasLogo !== context.displaylogo);\n    var needsNewLocale = (this.locale !== context.locale);\n\n    this.locale = context.locale;\n\n    if(needsNewButtons || needsNewLogo || needsNewLocale) {\n        this.removeAllButtons();\n\n        this.updateButtons(buttons);\n\n        if(context.watermark || context.displaylogo) {\n            var logoGroup = this.getLogo();\n            if(context.watermark) {\n                logoGroup.className = logoGroup.className + ' watermark';\n            }\n\n            if(fullLayout.modebar.orientation === 'v') {\n                this.element.insertBefore(logoGroup, this.element.childNodes[0]);\n            } else {\n                this.element.appendChild(logoGroup);\n            }\n\n            this.hasLogo = true;\n        }\n    }\n\n    this.updateActiveButton();\n};\n\nproto.updateButtons = function(buttons) {\n    var _this = this;\n\n    this.buttons = buttons;\n    this.buttonElements = [];\n    this.buttonsNames = [];\n\n    this.buttons.forEach(function(buttonGroup) {\n        var group = _this.createGroup();\n\n        buttonGroup.forEach(function(buttonConfig) {\n            var buttonName = buttonConfig.name;\n            if(!buttonName) {\n                throw new Error('must provide button \\'name\\' in button config');\n            }\n            if(_this.buttonsNames.indexOf(buttonName) !== -1) {\n                throw new Error('button name \\'' + buttonName + '\\' is taken');\n            }\n            _this.buttonsNames.push(buttonName);\n\n            var button = _this.createButton(buttonConfig);\n            _this.buttonElements.push(button);\n            group.appendChild(button);\n        });\n\n        _this.element.appendChild(group);\n    });\n};\n\n/**\n * Empty div for containing a group of buttons\n * @Return {HTMLelement}\n */\nproto.createGroup = function() {\n    var group = document.createElement('div');\n    group.className = 'modebar-group';\n    return group;\n};\n\n/**\n * Create a new button div and set constant and configurable attributes\n * @Param {object} config (see ./buttons.js for more info)\n * @Return {HTMLelement}\n */\nproto.createButton = function(config) {\n    var _this = this;\n    var button = document.createElement('a');\n\n    button.setAttribute('rel', 'tooltip');\n    button.className = 'modebar-btn';\n\n    var title = config.title;\n    if(title === undefined) title = config.name;\n    // for localization: allow title to be a callable that takes gd as arg\n    else if(typeof title === 'function') title = title(this.graphInfo);\n\n    if(title || title === 0) button.setAttribute('data-title', title);\n\n    if(config.attr !== undefined) button.setAttribute('data-attr', config.attr);\n\n    var val = config.val;\n    if(val !== undefined) {\n        if(typeof val === 'function') val = val(this.graphInfo);\n        button.setAttribute('data-val', val);\n    }\n\n    var click = config.click;\n    if(typeof click !== 'function') {\n        throw new Error('must provide button \\'click\\' function in button config');\n    }\n    else {\n        button.addEventListener('click', function(ev) {\n            config.click(_this.graphInfo, ev);\n\n            // only needed for 'hoverClosestGeo' which does not call relayout\n            _this.updateActiveButton(ev.currentTarget);\n        });\n    }\n\n    button.setAttribute('data-toggle', config.toggle || false);\n    if(config.toggle) d3.select(button).classed('active', true);\n\n    var icon = config.icon;\n    if(typeof icon === 'function') {\n        button.appendChild(icon());\n    }\n    else {\n        button.appendChild(this.createIcon(icon || Icons.question));\n    }\n    button.setAttribute('data-gravity', config.gravity || 'n');\n\n    return button;\n};\n\n/**\n * Add an icon to a button\n * @Param {object} thisIcon\n * @Param {number} thisIcon.width\n * @Param {string} thisIcon.path\n * @Param {string} thisIcon.color\n * @Return {HTMLelement}\n */\nproto.createIcon = function(thisIcon) {\n    var iconHeight = isNumeric(thisIcon.height) ?\n        Number(thisIcon.height) :\n        thisIcon.ascent - thisIcon.descent;\n    var svgNS = 'http://www.w3.org/2000/svg';\n    var icon;\n\n    if(thisIcon.path) {\n        icon = document.createElementNS(svgNS, 'svg');\n        icon.setAttribute('viewBox', [0, 0, thisIcon.width, iconHeight].join(' '));\n        icon.setAttribute('class', 'icon');\n\n        var path = document.createElementNS(svgNS, 'path');\n        path.setAttribute('d', thisIcon.path);\n\n        if(thisIcon.transform) {\n            path.setAttribute('transform', thisIcon.transform);\n        }\n        else if(thisIcon.ascent !== undefined) {\n            // Legacy icon transform calculation\n            path.setAttribute('transform', 'matrix(1 0 0 -1 0 ' + thisIcon.ascent + ')');\n        }\n\n        icon.appendChild(path);\n    }\n\n    if(thisIcon.svg) {\n        var svgDoc = Parser.parseFromString(thisIcon.svg, 'application/xml');\n        icon = svgDoc.childNodes[0];\n    }\n\n    icon.setAttribute('height', '1em');\n    icon.setAttribute('width', '1em');\n\n    return icon;\n};\n\n/**\n * Updates active button with attribute specified in layout\n * @Param {object} graphInfo plot object containing data and layout\n * @Return {HTMLelement}\n */\nproto.updateActiveButton = function(buttonClicked) {\n    var fullLayout = this.graphInfo._fullLayout;\n    var dataAttrClicked = (buttonClicked !== undefined) ?\n        buttonClicked.getAttribute('data-attr') :\n        null;\n\n    this.buttonElements.forEach(function(button) {\n        var thisval = button.getAttribute('data-val') || true;\n        var dataAttr = button.getAttribute('data-attr');\n        var isToggleButton = (button.getAttribute('data-toggle') === 'true');\n        var button3 = d3.select(button);\n\n        // Use 'data-toggle' and 'buttonClicked' to toggle buttons\n        // that have no one-to-one equivalent in fullLayout\n        if(isToggleButton) {\n            if(dataAttr === dataAttrClicked) {\n                button3.classed('active', !button3.classed('active'));\n            }\n        }\n        else {\n            var val = (dataAttr === null) ?\n                dataAttr :\n                Lib.nestedProperty(fullLayout, dataAttr).get();\n\n            button3.classed('active', val === thisval);\n        }\n\n    });\n};\n\n/**\n * Check if modeBar is configured as button configuration argument\n *\n * @Param {object} buttons 2d array of grouped button config objects\n * @Return {boolean}\n */\nproto.hasButtons = function(buttons) {\n    var currentButtons = this.buttons;\n\n    if(!currentButtons) return false;\n\n    if(buttons.length !== currentButtons.length) return false;\n\n    for(var i = 0; i < buttons.length; ++i) {\n        if(buttons[i].length !== currentButtons[i].length) return false;\n        for(var j = 0; j < buttons[i].length; j++) {\n            if(buttons[i][j].name !== currentButtons[i][j].name) return false;\n        }\n    }\n\n    return true;\n};\n\n/**\n * @return {HTMLDivElement} The logo image wrapped in a group\n */\nproto.getLogo = function() {\n    var group = this.createGroup();\n    var a = document.createElement('a');\n\n    a.href = 'https://plot.ly/';\n    a.target = '_blank';\n    a.setAttribute('data-title', Lib._(this.graphInfo, 'Produced with Plotly'));\n    a.className = 'modebar-btn plotlyjsicon modebar-btn--logo';\n\n    a.appendChild(this.createIcon(Icons.newplotlylogo));\n\n    group.appendChild(a);\n    return group;\n};\n\nproto.removeAllButtons = function() {\n    while(this.element.firstChild) {\n        this.element.removeChild(this.element.firstChild);\n    }\n\n    this.hasLogo = false;\n};\n\nproto.destroy = function() {\n    Lib.removeElement(this.container.querySelector('.modebar'));\n    Lib.deleteRelatedStyleRule(this._uid);\n};\n\nfunction createModeBar(gd, buttons) {\n    var fullLayout = gd._fullLayout;\n\n    var modeBar = new ModeBar({\n        graphInfo: gd,\n        container: fullLayout._paperdiv.node(),\n        buttons: buttons\n    });\n\n    if(fullLayout._privateplot) {\n        d3.select(modeBar.element).append('span')\n            .classed('badge-private float--left', true)\n            .text('PRIVATE');\n    }\n\n    return modeBar;\n}\n\nmodule.exports = createModeBar;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
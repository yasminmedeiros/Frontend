{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Fx = require('../../components/fx');\nvar dragElement = require('../../components/dragelement');\nvar setCursor = require('../../lib/setcursor');\nvar makeDragBox = require('./dragbox').makeDragBox;\nvar DRAGGERSIZE = require('./constants').DRAGGERSIZE;\nexports.initInteractions = function initInteractions(gd) {\n  var fullLayout = gd._fullLayout;\n  if (gd._context.staticPlot) {\n    // this sweeps up more than just cartesian drag elements...\n    d3.select(gd).selectAll('.drag').remove();\n    return;\n  }\n  if (!fullLayout._has('cartesian') && !fullLayout._has('splom')) return;\n  var subplots = Object.keys(fullLayout._plots || {}).sort(function (a, b) {\n    // sort overlays last, then by x axis number, then y axis number\n    if ((fullLayout._plots[a].mainplot && true) === (fullLayout._plots[b].mainplot && true)) {\n      var aParts = a.split('y');\n      var bParts = b.split('y');\n      return aParts[0] === bParts[0] ? Number(aParts[1] || 1) - Number(bParts[1] || 1) : Number(aParts[0] || 1) - Number(bParts[0] || 1);\n    }\n    return fullLayout._plots[a].mainplot ? 1 : -1;\n  });\n  subplots.forEach(function (subplot) {\n    var plotinfo = fullLayout._plots[subplot];\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    // main and corner draggers need not be repeated for\n    // overlaid subplots - these draggers drag them all\n    if (!plotinfo.mainplot) {\n      // main dragger goes over the grids and data, so we use its\n      // mousemove events for all data hover effects\n      var maindrag = makeDragBox(gd, plotinfo, xa._offset, ya._offset, xa._length, ya._length, 'ns', 'ew');\n      maindrag.onmousemove = function (evt) {\n        // This is on `gd._fullLayout`, *not* fullLayout because the reference\n        // changes by the time this is called again.\n        gd._fullLayout._rehover = function () {\n          if (gd._fullLayout._hoversubplot === subplot) {\n            Fx.hover(gd, evt, subplot);\n          }\n        };\n        Fx.hover(gd, evt, subplot);\n\n        // Note that we have *not* used the cached fullLayout variable here\n        // since that may be outdated when this is called as a callback later on\n        gd._fullLayout._lasthover = maindrag;\n        gd._fullLayout._hoversubplot = subplot;\n      };\n\n      /*\n       * IMPORTANT:\n       * We must check for the presence of the drag cover here.\n       * If we don't, a 'mouseout' event is triggered on the\n       * maindrag before each 'click' event, which has the effect\n       * of clearing the hoverdata; thus, cancelling the click event.\n       */\n      maindrag.onmouseout = function (evt) {\n        if (gd._dragging) return;\n\n        // When the mouse leaves this maindrag, unset the hovered subplot.\n        // This may cause problems if it leaves the subplot directly *onto*\n        // another subplot, but that's a tiny corner case at the moment.\n        gd._fullLayout._hoversubplot = null;\n        dragElement.unhover(gd, evt);\n      };\n\n      // corner draggers\n      if (gd._context.showAxisDragHandles) {\n        makeDragBox(gd, plotinfo, xa._offset - DRAGGERSIZE, ya._offset - DRAGGERSIZE, DRAGGERSIZE, DRAGGERSIZE, 'n', 'w');\n        makeDragBox(gd, plotinfo, xa._offset + xa._length, ya._offset - DRAGGERSIZE, DRAGGERSIZE, DRAGGERSIZE, 'n', 'e');\n        makeDragBox(gd, plotinfo, xa._offset - DRAGGERSIZE, ya._offset + ya._length, DRAGGERSIZE, DRAGGERSIZE, 's', 'w');\n        makeDragBox(gd, plotinfo, xa._offset + xa._length, ya._offset + ya._length, DRAGGERSIZE, DRAGGERSIZE, 's', 'e');\n      }\n    }\n    if (gd._context.showAxisDragHandles) {\n      // x axis draggers - if you have overlaid plots,\n      // these drag each axis separately\n      if (subplot === xa._mainSubplot) {\n        // the y position of the main x axis line\n        var y0 = xa._mainLinePosition;\n        if (xa.side === 'top') y0 -= DRAGGERSIZE;\n        makeDragBox(gd, plotinfo, xa._offset + xa._length * 0.1, y0, xa._length * 0.8, DRAGGERSIZE, '', 'ew');\n        makeDragBox(gd, plotinfo, xa._offset, y0, xa._length * 0.1, DRAGGERSIZE, '', 'w');\n        makeDragBox(gd, plotinfo, xa._offset + xa._length * 0.9, y0, xa._length * 0.1, DRAGGERSIZE, '', 'e');\n      }\n      // y axis draggers\n      if (subplot === ya._mainSubplot) {\n        // the x position of the main y axis line\n        var x0 = ya._mainLinePosition;\n        if (ya.side !== 'right') x0 -= DRAGGERSIZE;\n        makeDragBox(gd, plotinfo, x0, ya._offset + ya._length * 0.1, DRAGGERSIZE, ya._length * 0.8, 'ns', '');\n        makeDragBox(gd, plotinfo, x0, ya._offset + ya._length * 0.9, DRAGGERSIZE, ya._length * 0.1, 's', '');\n        makeDragBox(gd, plotinfo, x0, ya._offset, DRAGGERSIZE, ya._length * 0.1, 'n', '');\n      }\n    }\n  });\n\n  // In case you mousemove over some hovertext, send it to Fx.hover too\n  // we do this so that we can put the hover text in front of everything,\n  // but still be able to interact with everything as if it isn't there\n  var hoverLayer = fullLayout._hoverlayer.node();\n  hoverLayer.onmousemove = function (evt) {\n    evt.target = gd._fullLayout._lasthover;\n    Fx.hover(gd, evt, fullLayout._hoversubplot);\n  };\n  hoverLayer.onclick = function (evt) {\n    evt.target = gd._fullLayout._lasthover;\n    Fx.click(gd, evt);\n  };\n\n  // also delegate mousedowns... TODO: does this actually work?\n  hoverLayer.onmousedown = function (evt) {\n    gd._fullLayout._lasthover.onmousedown(evt);\n  };\n  exports.updateFx(gd);\n};\n\n// Minimal set of update needed on 'modebar' edits.\n// We only need to update the <g .draglayer> cursor style.\n//\n// Note that changing the axis configuration and/or the fixedrange attribute\n// should trigger a full initInteractions.\nexports.updateFx = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var cursor = fullLayout.dragmode === 'pan' ? 'move' : 'crosshair';\n  setCursor(fullLayout._draggers, cursor);\n};","map":{"version":3,"names":["d3","require","Fx","dragElement","setCursor","makeDragBox","DRAGGERSIZE","exports","initInteractions","gd","fullLayout","_fullLayout","_context","staticPlot","select","selectAll","remove","_has","subplots","Object","keys","_plots","sort","a","b","mainplot","aParts","split","bParts","Number","forEach","subplot","plotinfo","xa","xaxis","ya","yaxis","maindrag","_offset","_length","onmousemove","evt","_rehover","_hoversubplot","hover","_lasthover","onmouseout","_dragging","unhover","showAxisDragHandles","_mainSubplot","y0","_mainLinePosition","side","x0","hoverLayer","_hoverlayer","node","target","onclick","click","onmousedown","updateFx","cursor","dragmode","_draggers"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/graph_interact.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Fx = require('../../components/fx');\nvar dragElement = require('../../components/dragelement');\nvar setCursor = require('../../lib/setcursor');\n\nvar makeDragBox = require('./dragbox').makeDragBox;\nvar DRAGGERSIZE = require('./constants').DRAGGERSIZE;\n\nexports.initInteractions = function initInteractions(gd) {\n    var fullLayout = gd._fullLayout;\n\n    if(gd._context.staticPlot) {\n        // this sweeps up more than just cartesian drag elements...\n        d3.select(gd).selectAll('.drag').remove();\n        return;\n    }\n\n    if(!fullLayout._has('cartesian') && !fullLayout._has('splom')) return;\n\n    var subplots = Object.keys(fullLayout._plots || {}).sort(function(a, b) {\n        // sort overlays last, then by x axis number, then y axis number\n        if((fullLayout._plots[a].mainplot && true) ===\n            (fullLayout._plots[b].mainplot && true)) {\n            var aParts = a.split('y');\n            var bParts = b.split('y');\n            return (aParts[0] === bParts[0]) ?\n                (Number(aParts[1] || 1) - Number(bParts[1] || 1)) :\n                (Number(aParts[0] || 1) - Number(bParts[0] || 1));\n        }\n        return fullLayout._plots[a].mainplot ? 1 : -1;\n    });\n\n    subplots.forEach(function(subplot) {\n        var plotinfo = fullLayout._plots[subplot];\n        var xa = plotinfo.xaxis;\n        var ya = plotinfo.yaxis;\n\n        // main and corner draggers need not be repeated for\n        // overlaid subplots - these draggers drag them all\n        if(!plotinfo.mainplot) {\n            // main dragger goes over the grids and data, so we use its\n            // mousemove events for all data hover effects\n            var maindrag = makeDragBox(gd, plotinfo, xa._offset, ya._offset,\n                xa._length, ya._length, 'ns', 'ew');\n\n            maindrag.onmousemove = function(evt) {\n                // This is on `gd._fullLayout`, *not* fullLayout because the reference\n                // changes by the time this is called again.\n                gd._fullLayout._rehover = function() {\n                    if(gd._fullLayout._hoversubplot === subplot) {\n                        Fx.hover(gd, evt, subplot);\n                    }\n                };\n\n                Fx.hover(gd, evt, subplot);\n\n                // Note that we have *not* used the cached fullLayout variable here\n                // since that may be outdated when this is called as a callback later on\n                gd._fullLayout._lasthover = maindrag;\n                gd._fullLayout._hoversubplot = subplot;\n            };\n\n            /*\n             * IMPORTANT:\n             * We must check for the presence of the drag cover here.\n             * If we don't, a 'mouseout' event is triggered on the\n             * maindrag before each 'click' event, which has the effect\n             * of clearing the hoverdata; thus, cancelling the click event.\n             */\n            maindrag.onmouseout = function(evt) {\n                if(gd._dragging) return;\n\n                // When the mouse leaves this maindrag, unset the hovered subplot.\n                // This may cause problems if it leaves the subplot directly *onto*\n                // another subplot, but that's a tiny corner case at the moment.\n                gd._fullLayout._hoversubplot = null;\n\n                dragElement.unhover(gd, evt);\n            };\n\n            // corner draggers\n            if(gd._context.showAxisDragHandles) {\n                makeDragBox(gd, plotinfo, xa._offset - DRAGGERSIZE, ya._offset - DRAGGERSIZE,\n                    DRAGGERSIZE, DRAGGERSIZE, 'n', 'w');\n                makeDragBox(gd, plotinfo, xa._offset + xa._length, ya._offset - DRAGGERSIZE,\n                    DRAGGERSIZE, DRAGGERSIZE, 'n', 'e');\n                makeDragBox(gd, plotinfo, xa._offset - DRAGGERSIZE, ya._offset + ya._length,\n                    DRAGGERSIZE, DRAGGERSIZE, 's', 'w');\n                makeDragBox(gd, plotinfo, xa._offset + xa._length, ya._offset + ya._length,\n                    DRAGGERSIZE, DRAGGERSIZE, 's', 'e');\n            }\n        }\n        if(gd._context.showAxisDragHandles) {\n            // x axis draggers - if you have overlaid plots,\n            // these drag each axis separately\n            if(subplot === xa._mainSubplot) {\n                // the y position of the main x axis line\n                var y0 = xa._mainLinePosition;\n                if(xa.side === 'top') y0 -= DRAGGERSIZE;\n                makeDragBox(gd, plotinfo, xa._offset + xa._length * 0.1, y0,\n                    xa._length * 0.8, DRAGGERSIZE, '', 'ew');\n                makeDragBox(gd, plotinfo, xa._offset, y0,\n                    xa._length * 0.1, DRAGGERSIZE, '', 'w');\n                makeDragBox(gd, plotinfo, xa._offset + xa._length * 0.9, y0,\n                    xa._length * 0.1, DRAGGERSIZE, '', 'e');\n            }\n            // y axis draggers\n            if(subplot === ya._mainSubplot) {\n                // the x position of the main y axis line\n                var x0 = ya._mainLinePosition;\n                if(ya.side !== 'right') x0 -= DRAGGERSIZE;\n                makeDragBox(gd, plotinfo, x0, ya._offset + ya._length * 0.1,\n                    DRAGGERSIZE, ya._length * 0.8, 'ns', '');\n                makeDragBox(gd, plotinfo, x0, ya._offset + ya._length * 0.9,\n                    DRAGGERSIZE, ya._length * 0.1, 's', '');\n                makeDragBox(gd, plotinfo, x0, ya._offset,\n                    DRAGGERSIZE, ya._length * 0.1, 'n', '');\n            }\n        }\n    });\n\n    // In case you mousemove over some hovertext, send it to Fx.hover too\n    // we do this so that we can put the hover text in front of everything,\n    // but still be able to interact with everything as if it isn't there\n    var hoverLayer = fullLayout._hoverlayer.node();\n\n    hoverLayer.onmousemove = function(evt) {\n        evt.target = gd._fullLayout._lasthover;\n        Fx.hover(gd, evt, fullLayout._hoversubplot);\n    };\n\n    hoverLayer.onclick = function(evt) {\n        evt.target = gd._fullLayout._lasthover;\n        Fx.click(gd, evt);\n    };\n\n    // also delegate mousedowns... TODO: does this actually work?\n    hoverLayer.onmousedown = function(evt) {\n        gd._fullLayout._lasthover.onmousedown(evt);\n    };\n\n    exports.updateFx(gd);\n};\n\n// Minimal set of update needed on 'modebar' edits.\n// We only need to update the <g .draglayer> cursor style.\n//\n// Note that changing the axis configuration and/or the fixedrange attribute\n// should trigger a full initInteractions.\nexports.updateFx = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var cursor = fullLayout.dragmode === 'pan' ? 'move' : 'crosshair';\n    setCursor(fullLayout._draggers, cursor);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
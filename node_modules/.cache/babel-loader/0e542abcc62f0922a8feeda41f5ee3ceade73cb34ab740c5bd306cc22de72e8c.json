{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../../components/drawing');\nvar heatmapStyle = require('../heatmap/style');\nvar makeColorMap = require('./make_color_map');\nmodule.exports = function style(gd) {\n  var contours = d3.select(gd).selectAll('g.contour');\n  contours.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  contours.each(function (d) {\n    var c = d3.select(this);\n    var trace = d[0].trace;\n    var contours = trace.contours;\n    var line = trace.line;\n    var cs = contours.size || 1;\n    var start = contours.start;\n\n    // for contourcarpet only - is this a constraint-type contour trace?\n    var isConstraintType = contours.type === 'constraint';\n    var colorLines = !isConstraintType && contours.coloring === 'lines';\n    var colorFills = !isConstraintType && contours.coloring === 'fill';\n    var colorMap = colorLines || colorFills ? makeColorMap(trace) : null;\n    c.selectAll('g.contourlevel').each(function (d) {\n      d3.select(this).selectAll('path').call(Drawing.lineGroupStyle, line.width, colorLines ? colorMap(d.level) : line.color, line.dash);\n    });\n    var labelFont = contours.labelfont;\n    c.selectAll('g.contourlabels text').each(function (d) {\n      Drawing.font(d3.select(this), {\n        family: labelFont.family,\n        size: labelFont.size,\n        color: labelFont.color || (colorLines ? colorMap(d.level) : line.color)\n      });\n    });\n    if (isConstraintType) {\n      c.selectAll('g.contourfill path').style('fill', trace.fillcolor);\n    } else if (colorFills) {\n      var firstFill;\n      c.selectAll('g.contourfill path').style('fill', function (d) {\n        if (firstFill === undefined) firstFill = d.level;\n        return colorMap(d.level + 0.5 * cs);\n      });\n      if (firstFill === undefined) firstFill = start;\n      c.selectAll('g.contourbg path').style('fill', colorMap(firstFill - 0.5 * cs));\n    }\n  });\n  heatmapStyle(gd);\n};","map":{"version":3,"names":["d3","require","Drawing","heatmapStyle","makeColorMap","module","exports","style","gd","contours","select","selectAll","d","trace","opacity","each","c","line","cs","size","start","isConstraintType","type","colorLines","coloring","colorFills","colorMap","call","lineGroupStyle","width","level","color","dash","labelFont","labelfont","font","family","fillcolor","firstFill","undefined"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/contour/style.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Drawing = require('../../components/drawing');\nvar heatmapStyle = require('../heatmap/style');\n\nvar makeColorMap = require('./make_color_map');\n\n\nmodule.exports = function style(gd) {\n    var contours = d3.select(gd).selectAll('g.contour');\n\n    contours.style('opacity', function(d) {\n        return d[0].trace.opacity;\n    });\n\n    contours.each(function(d) {\n        var c = d3.select(this);\n        var trace = d[0].trace;\n        var contours = trace.contours;\n        var line = trace.line;\n        var cs = contours.size || 1;\n        var start = contours.start;\n\n        // for contourcarpet only - is this a constraint-type contour trace?\n        var isConstraintType = contours.type === 'constraint';\n        var colorLines = !isConstraintType && contours.coloring === 'lines';\n        var colorFills = !isConstraintType && contours.coloring === 'fill';\n\n        var colorMap = (colorLines || colorFills) ? makeColorMap(trace) : null;\n\n        c.selectAll('g.contourlevel').each(function(d) {\n            d3.select(this).selectAll('path')\n                .call(Drawing.lineGroupStyle,\n                    line.width,\n                    colorLines ? colorMap(d.level) : line.color,\n                    line.dash);\n        });\n\n        var labelFont = contours.labelfont;\n        c.selectAll('g.contourlabels text').each(function(d) {\n            Drawing.font(d3.select(this), {\n                family: labelFont.family,\n                size: labelFont.size,\n                color: labelFont.color || (colorLines ? colorMap(d.level) : line.color)\n            });\n        });\n\n        if(isConstraintType) {\n            c.selectAll('g.contourfill path')\n                .style('fill', trace.fillcolor);\n        }\n        else if(colorFills) {\n            var firstFill;\n\n            c.selectAll('g.contourfill path')\n                .style('fill', function(d) {\n                    if(firstFill === undefined) firstFill = d.level;\n                    return colorMap(d.level + 0.5 * cs);\n                });\n\n            if(firstFill === undefined) firstFill = start;\n\n            c.selectAll('g.contourbg path')\n                .style('fill', colorMap(firstFill - 0.5 * cs));\n        }\n    });\n\n    heatmapStyle(gd);\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEtB,IAAIC,OAAO,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AACjD,IAAIE,YAAY,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAE9C,IAAIG,YAAY,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAG9CI,MAAM,CAACC,OAAO,GAAG,SAASC,KAAK,CAACC,EAAE,EAAE;EAChC,IAAIC,QAAQ,GAAGT,EAAE,CAACU,MAAM,CAACF,EAAE,CAAC,CAACG,SAAS,CAAC,WAAW,CAAC;EAEnDF,QAAQ,CAACF,KAAK,CAAC,SAAS,EAAE,UAASK,CAAC,EAAE;IAClC,OAAOA,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO;EAC7B,CAAC,CAAC;EAEFL,QAAQ,CAACM,IAAI,CAAC,UAASH,CAAC,EAAE;IACtB,IAAII,CAAC,GAAGhB,EAAE,CAACU,MAAM,CAAC,IAAI,CAAC;IACvB,IAAIG,KAAK,GAAGD,CAAC,CAAC,CAAC,CAAC,CAACC,KAAK;IACtB,IAAIJ,QAAQ,GAAGI,KAAK,CAACJ,QAAQ;IAC7B,IAAIQ,IAAI,GAAGJ,KAAK,CAACI,IAAI;IACrB,IAAIC,EAAE,GAAGT,QAAQ,CAACU,IAAI,IAAI,CAAC;IAC3B,IAAIC,KAAK,GAAGX,QAAQ,CAACW,KAAK;;IAE1B;IACA,IAAIC,gBAAgB,GAAGZ,QAAQ,CAACa,IAAI,KAAK,YAAY;IACrD,IAAIC,UAAU,GAAG,CAACF,gBAAgB,IAAIZ,QAAQ,CAACe,QAAQ,KAAK,OAAO;IACnE,IAAIC,UAAU,GAAG,CAACJ,gBAAgB,IAAIZ,QAAQ,CAACe,QAAQ,KAAK,MAAM;IAElE,IAAIE,QAAQ,GAAIH,UAAU,IAAIE,UAAU,GAAIrB,YAAY,CAACS,KAAK,CAAC,GAAG,IAAI;IAEtEG,CAAC,CAACL,SAAS,CAAC,gBAAgB,CAAC,CAACI,IAAI,CAAC,UAASH,CAAC,EAAE;MAC3CZ,EAAE,CAACU,MAAM,CAAC,IAAI,CAAC,CAACC,SAAS,CAAC,MAAM,CAAC,CAC5BgB,IAAI,CAACzB,OAAO,CAAC0B,cAAc,EACxBX,IAAI,CAACY,KAAK,EACVN,UAAU,GAAGG,QAAQ,CAACd,CAAC,CAACkB,KAAK,CAAC,GAAGb,IAAI,CAACc,KAAK,EAC3Cd,IAAI,CAACe,IAAI,CAAC;IACtB,CAAC,CAAC;IAEF,IAAIC,SAAS,GAAGxB,QAAQ,CAACyB,SAAS;IAClClB,CAAC,CAACL,SAAS,CAAC,sBAAsB,CAAC,CAACI,IAAI,CAAC,UAASH,CAAC,EAAE;MACjDV,OAAO,CAACiC,IAAI,CAACnC,EAAE,CAACU,MAAM,CAAC,IAAI,CAAC,EAAE;QAC1B0B,MAAM,EAAEH,SAAS,CAACG,MAAM;QACxBjB,IAAI,EAAEc,SAAS,CAACd,IAAI;QACpBY,KAAK,EAAEE,SAAS,CAACF,KAAK,KAAKR,UAAU,GAAGG,QAAQ,CAACd,CAAC,CAACkB,KAAK,CAAC,GAAGb,IAAI,CAACc,KAAK;MAC1E,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,IAAGV,gBAAgB,EAAE;MACjBL,CAAC,CAACL,SAAS,CAAC,oBAAoB,CAAC,CAC5BJ,KAAK,CAAC,MAAM,EAAEM,KAAK,CAACwB,SAAS,CAAC;IACvC,CAAC,MACI,IAAGZ,UAAU,EAAE;MAChB,IAAIa,SAAS;MAEbtB,CAAC,CAACL,SAAS,CAAC,oBAAoB,CAAC,CAC5BJ,KAAK,CAAC,MAAM,EAAE,UAASK,CAAC,EAAE;QACvB,IAAG0B,SAAS,KAAKC,SAAS,EAAED,SAAS,GAAG1B,CAAC,CAACkB,KAAK;QAC/C,OAAOJ,QAAQ,CAACd,CAAC,CAACkB,KAAK,GAAG,GAAG,GAAGZ,EAAE,CAAC;MACvC,CAAC,CAAC;MAEN,IAAGoB,SAAS,KAAKC,SAAS,EAAED,SAAS,GAAGlB,KAAK;MAE7CJ,CAAC,CAACL,SAAS,CAAC,kBAAkB,CAAC,CAC1BJ,KAAK,CAAC,MAAM,EAAEmB,QAAQ,CAACY,SAAS,GAAG,GAAG,GAAGpB,EAAE,CAAC,CAAC;IACtD;EACJ,CAAC,CAAC;EAEFf,YAAY,CAACK,EAAE,CAAC;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
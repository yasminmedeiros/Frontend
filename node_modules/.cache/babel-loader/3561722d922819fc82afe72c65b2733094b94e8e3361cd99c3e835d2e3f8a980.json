{"ast":null,"code":"'use strict';\n\nmodule.exports = textGet;\nvar vectorizeText = require('vectorize-text');\nvar globals = window || process.global || {};\nvar __TEXT_CACHE = globals.__TEXT_CACHE || {};\nglobals.__TEXT_CACHE = {};\nfunction unwrap(mesh) {\n  var cells = mesh.cells;\n  var positions = mesh.positions;\n  var data = new Float32Array(cells.length * 6);\n  var ptr = 0;\n  var shapeX = 0;\n  for (var i = 0; i < cells.length; ++i) {\n    var tri = cells[i];\n    for (var j = 0; j < 3; ++j) {\n      var point = positions[tri[j]];\n      data[ptr++] = point[0];\n      data[ptr++] = point[1] + 1.4;\n      shapeX = Math.max(point[0], shapeX);\n    }\n  }\n  return {\n    data: data,\n    shape: shapeX\n  };\n}\nfunction textGet(font, text, opts) {\n  var opts = opts || {};\n  var fontcache = __TEXT_CACHE[font];\n  if (!fontcache) {\n    fontcache = __TEXT_CACHE[font] = {\n      ' ': {\n        data: new Float32Array(0),\n        shape: 0.2\n      }\n    };\n  }\n  var mesh = fontcache[text];\n  if (!mesh) {\n    if (text.length <= 1 || !/\\d/.test(text)) {\n      mesh = fontcache[text] = unwrap(vectorizeText(text, {\n        triangles: true,\n        font: font,\n        textAlign: opts.textAlign || 'left',\n        textBaseline: 'alphabetic',\n        styletags: {\n          breaklines: true,\n          bolds: true,\n          italics: true,\n          subscripts: true,\n          superscripts: true\n        }\n      }));\n    } else {\n      var parts = text.split(/(\\d|\\s)/);\n      var buffer = new Array(parts.length);\n      var bufferSize = 0;\n      var shapeX = 0;\n      for (var i = 0; i < parts.length; ++i) {\n        buffer[i] = textGet(font, parts[i]);\n        bufferSize += buffer[i].data.length;\n        shapeX += buffer[i].shape;\n        if (i > 0) {\n          shapeX += 0.02;\n        }\n      }\n      var data = new Float32Array(bufferSize);\n      var ptr = 0;\n      var xOffset = -0.5 * shapeX;\n      for (var i = 0; i < buffer.length; ++i) {\n        var bdata = buffer[i].data;\n        for (var j = 0; j < bdata.length; j += 2) {\n          data[ptr++] = bdata[j] + xOffset;\n          data[ptr++] = bdata[j + 1];\n        }\n        xOffset += buffer[i].shape + 0.02;\n      }\n      mesh = fontcache[text] = {\n        data: data,\n        shape: shapeX\n      };\n    }\n  }\n  return mesh;\n}","map":{"version":3,"names":["module","exports","textGet","vectorizeText","require","globals","window","process","global","__TEXT_CACHE","unwrap","mesh","cells","positions","data","Float32Array","length","ptr","shapeX","i","tri","j","point","Math","max","shape","font","text","opts","fontcache","test","triangles","textAlign","textBaseline","styletags","breaklines","bolds","italics","subscripts","superscripts","parts","split","buffer","Array","bufferSize","xOffset","bdata"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/text-cache/textcache.js"],"sourcesContent":["'use strict'\n\nmodule.exports = textGet\n\nvar vectorizeText = require('vectorize-text')\n\nvar globals = window || process.global || {}\nvar __TEXT_CACHE  = globals.__TEXT_CACHE || {}\nglobals.__TEXT_CACHE = {}\n\nfunction unwrap(mesh) {\n  var cells     = mesh.cells\n  var positions = mesh.positions\n  var data      = new Float32Array(cells.length * 6)\n  var ptr       = 0\n  var shapeX    = 0\n  for(var i=0; i<cells.length; ++i) {\n    var tri = cells[i]\n    for(var j=0; j<3; ++j) {\n      var point = positions[tri[j]]\n      data[ptr++] = point[0]\n      data[ptr++] = point[1] + 1.4\n      shapeX      = Math.max(point[0], shapeX)\n    }\n  }\n  return {\n    data:  data,\n    shape: shapeX\n  }\n}\n\nfunction textGet(font, text, opts) {\n  var opts = opts || {}\n  var fontcache = __TEXT_CACHE[font]\n  if(!fontcache) {\n    fontcache = __TEXT_CACHE[font] = {\n      ' ': {\n        data:   new Float32Array(0),\n        shape: 0.2\n      }\n    }\n  }\n  var mesh = fontcache[text]\n  if(!mesh) {\n    if(text.length <= 1 || !/\\d/.test(text)) {\n      mesh = fontcache[text] = unwrap(vectorizeText(text, {\n        triangles:     true,\n        font:          font,\n        textAlign:     opts.textAlign || 'left',\n        textBaseline:  'alphabetic',\n        styletags: {\n            breaklines: true,\n                 bolds: true,\n               italics: true,\n            subscripts: true,\n          superscripts: true\n        }\n      }))\n    } else {\n      var parts = text.split(/(\\d|\\s)/)\n      var buffer = new Array(parts.length)\n      var bufferSize = 0\n      var shapeX = 0\n      for(var i=0; i<parts.length; ++i) {\n        buffer[i] = textGet(font, parts[i])\n        bufferSize += buffer[i].data.length\n        shapeX += buffer[i].shape\n        if(i>0) {\n          shapeX += 0.02\n        }\n      }\n\n      var data = new Float32Array(bufferSize)\n      var ptr     = 0\n      var xOffset = -0.5 * shapeX\n      for(var i=0; i<buffer.length; ++i) {\n        var bdata = buffer[i].data\n        for(var j=0; j<bdata.length; j+=2) {\n          data[ptr++] = bdata[j] + xOffset\n          data[ptr++] = bdata[j+1]\n        }\n        xOffset += buffer[i].shape + 0.02\n      }\n\n      mesh = fontcache[text] = {\n        data:  data,\n        shape: shapeX\n      }\n    }\n  }\n\n   return mesh\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
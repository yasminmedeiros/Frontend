{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorAttrs = require('../../components/color/attributes');\nvar axesAttrs = require('../cartesian/layout_attributes');\nvar domainAttrs = require('../domain').attributes;\nvar extendFlat = require('../../lib').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar axisLineGridAttr = overrideAll({\n  color: axesAttrs.color,\n  showline: extendFlat({}, axesAttrs.showline, {\n    dflt: true\n  }),\n  linecolor: axesAttrs.linecolor,\n  linewidth: axesAttrs.linewidth,\n  showgrid: extendFlat({}, axesAttrs.showgrid, {\n    dflt: true\n  }),\n  gridcolor: axesAttrs.gridcolor,\n  gridwidth: axesAttrs.gridwidth\n\n  // TODO add spike* attributes down the road\n\n  // should we add zeroline* attributes?\n}, 'plot', 'from-root');\nvar axisTickAttrs = overrideAll({\n  tickmode: axesAttrs.tickmode,\n  nticks: axesAttrs.nticks,\n  tick0: axesAttrs.tick0,\n  dtick: axesAttrs.dtick,\n  tickvals: axesAttrs.tickvals,\n  ticktext: axesAttrs.ticktext,\n  ticks: axesAttrs.ticks,\n  ticklen: axesAttrs.ticklen,\n  tickwidth: axesAttrs.tickwidth,\n  tickcolor: axesAttrs.tickcolor,\n  showticklabels: axesAttrs.showticklabels,\n  showtickprefix: axesAttrs.showtickprefix,\n  tickprefix: axesAttrs.tickprefix,\n  showticksuffix: axesAttrs.showticksuffix,\n  ticksuffix: axesAttrs.ticksuffix,\n  showexponent: axesAttrs.showexponent,\n  exponentformat: axesAttrs.exponentformat,\n  separatethousands: axesAttrs.separatethousands,\n  tickfont: axesAttrs.tickfont,\n  tickangle: axesAttrs.tickangle,\n  tickformat: axesAttrs.tickformat,\n  tickformatstops: axesAttrs.tickformatstops,\n  layer: axesAttrs.layer\n}, 'plot', 'from-root');\nvar radialAxisAttrs = {\n  visible: extendFlat({}, axesAttrs.visible, {\n    dflt: true\n  }),\n  type: extendFlat({}, axesAttrs.type, {\n    values: ['-', 'linear', 'log', 'date', 'category']\n  }),\n  autorange: extendFlat({}, axesAttrs.autorange, {\n    editType: 'plot'\n  }),\n  rangemode: {\n    valType: 'enumerated',\n    values: ['tozero', 'nonnegative', 'normal'],\n    dflt: 'tozero',\n    role: 'style',\n    editType: 'calc',\n    description: ['If *tozero*`, the range extends to 0,', 'regardless of the input data', 'If *nonnegative*, the range is non-negative,', 'regardless of the input data.', 'If *normal*, the range is computed in relation to the extrema', 'of the input data (same behavior as for cartesian axes).'].join(' ')\n  },\n  range: extendFlat({}, axesAttrs.range, {\n    items: [{\n      valType: 'any',\n      editType: 'plot',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }, {\n      valType: 'any',\n      editType: 'plot',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }],\n    editType: 'plot'\n  }),\n  categoryorder: axesAttrs.categoryorder,\n  categoryarray: axesAttrs.categoryarray,\n  angle: {\n    valType: 'angle',\n    editType: 'plot',\n    role: 'info',\n    description: ['Sets the angle (in degrees) from which the radial axis is drawn.', 'Note that by default, radial axis line on the theta=0 line', 'corresponds to a line pointing right (like what mathematicians prefer).', 'Defaults to the first `polar.sector` angle.'].join(' ')\n  },\n  side: {\n    valType: 'enumerated',\n    // TODO add 'center' for `showline: false` radial axes\n    values: ['clockwise', 'counterclockwise'],\n    dflt: 'clockwise',\n    editType: 'plot',\n    role: 'info',\n    description: ['Determines on which side of radial axis line', 'the tick and tick labels appear.'].join(' ')\n  },\n  title: overrideAll(axesAttrs.title, 'plot', 'from-root'),\n  // might need a 'titleside' and even 'titledirection' down the road\n\n  hoverformat: axesAttrs.hoverformat,\n  uirevision: {\n    valType: 'any',\n    role: 'info',\n    editType: 'none',\n    description: ['Controls persistence of user-driven changes in axis `range`,', '`autorange`, `angle`, and `title` if in `editable: true` configuration.', 'Defaults to `polar<N>.uirevision`.'].join(' ')\n  },\n  editType: 'calc',\n  _deprecated: {\n    title: axesAttrs._deprecated.title,\n    titlefont: axesAttrs._deprecated.titlefont\n  }\n};\n\n// radial title is not gui-editable, so it needs dflt: '', similar to carpet axes.\nradialAxisAttrs.title.text.dflt = '';\nextendFlat(radialAxisAttrs,\n// N.B. radialaxis grid lines are circular,\n// but radialaxis lines are straight from circle center to outer bound\naxisLineGridAttr, axisTickAttrs);\nvar angularAxisAttrs = {\n  visible: extendFlat({}, axesAttrs.visible, {\n    dflt: true\n  }),\n  type: {\n    valType: 'enumerated',\n    // 'linear' should maybe be called 'angle' or 'angular' here\n    // to make clear that axis here is periodic and more tightly match\n    // `thetaunit`?\n    //\n    // skip 'date' for first push\n    // no 'log' for now\n    values: ['-', 'linear', 'category'],\n    dflt: '-',\n    role: 'info',\n    editType: 'calc',\n    _noTemplating: true,\n    description: ['Sets the angular axis type.', 'If *linear*, set `thetaunit` to determine the unit in which axis value are shown.', 'If *category, use `period` to set the number of integer coordinates around polar axis.'].join(' ')\n  },\n  categoryorder: axesAttrs.categoryorder,\n  categoryarray: axesAttrs.categoryarray,\n  thetaunit: {\n    valType: 'enumerated',\n    values: ['radians', 'degrees'],\n    dflt: 'degrees',\n    role: 'info',\n    editType: 'calc',\n    description: ['Sets the format unit of the formatted *theta* values.', 'Has an effect only when `angularaxis.type` is *linear*.'].join(' ')\n  },\n  period: {\n    valType: 'number',\n    editType: 'calc',\n    min: 0,\n    role: 'info',\n    description: ['Set the angular period.', 'Has an effect only when `angularaxis.type` is *category*.'].join(' ')\n    // Examples for date axes:\n    //\n    // - period that equals the timeseries length\n    //  http://flowingdata.com/2017/01/24/one-dataset-visualized-25-ways/18-polar-coordinates/\n    // - and 1-year periods (focusing on seasonal change0\n    //  http://otexts.org/fpp2/seasonal-plots.html\n    //  https://blogs.scientificamerican.com/sa-visual/why-are-so-many-babies-born-around-8-00-a-m/\n    //  http://www.seasonaladjustment.com/2012/09/05/clock-plot-visualising-seasonality-using-r-and-ggplot2-part-3/\n    //  https://i.pinimg.com/736x/49/b9/72/49b972ccb3206a1a6d6f870dac543280.jpg\n    //  https://www.climate-lab-book.ac.uk/spirals/\n  },\n\n  direction: {\n    valType: 'enumerated',\n    values: ['counterclockwise', 'clockwise'],\n    dflt: 'counterclockwise',\n    role: 'info',\n    editType: 'calc',\n    description: ['Sets the direction corresponding to positive angles.'].join(' ')\n  },\n  rotation: {\n    valType: 'angle',\n    editType: 'calc',\n    role: 'info',\n    description: ['Sets that start position (in degrees) of the angular axis', 'By default, polar subplots with `direction` set to *counterclockwise*', 'get a `rotation` of *0*', 'which corresponds to due East (like what mathematicians prefer).', 'In turn, polar with `direction` set to *clockwise* get a rotation of *90*', 'which corresponds to due North (like on a compass),'].join(' ')\n  },\n  hoverformat: axesAttrs.hoverformat,\n  uirevision: {\n    valType: 'any',\n    role: 'info',\n    editType: 'none',\n    description: ['Controls persistence of user-driven changes in axis `rotation`.', 'Defaults to `polar<N>.uirevision`.'].join(' ')\n  },\n  editType: 'calc'\n};\nextendFlat(angularAxisAttrs,\n// N.B. angular grid lines are straight lines from circle center to outer bound\n// the angular line is circular bounding the polar plot area.\naxisLineGridAttr,\n// N.B. ticksuffix defaults to 'Â°' for angular axes with `thetaunit: 'degrees'`\naxisTickAttrs);\nmodule.exports = {\n  // TODO for x/y/zoom system for paper-based zooming:\n  // x: {},\n  // y: {},\n  // zoom: {},\n\n  domain: domainAttrs({\n    name: 'polar',\n    editType: 'plot'\n  }),\n  sector: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'plot'\n    }, {\n      valType: 'number',\n      editType: 'plot'\n    }],\n    dflt: [0, 360],\n    role: 'info',\n    editType: 'plot',\n    description: ['Sets angular span of this polar subplot with two angles (in degrees).', 'Sector are assumed to be spanned in the counterclockwise direction', 'with *0* corresponding to rightmost limit of the polar subplot.'].join(' ')\n  },\n  hole: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 0,\n    editType: 'plot',\n    role: 'info',\n    description: ['Sets the fraction of the radius to cut out of the polar subplot.'].join(' ')\n  },\n  bgcolor: {\n    valType: 'color',\n    role: 'style',\n    editType: 'plot',\n    dflt: colorAttrs.background,\n    description: 'Set the background color of the subplot'\n  },\n  radialaxis: radialAxisAttrs,\n  angularaxis: angularAxisAttrs,\n  gridshape: {\n    valType: 'enumerated',\n    values: ['circular', 'linear'],\n    dflt: 'circular',\n    role: 'style',\n    editType: 'plot',\n    description: ['Determines if the radial axis grid lines and angular axis line are drawn', 'as *circular* sectors or as *linear* (polygon) sectors.', 'Has an effect only when the angular axis has `type` *category*.', 'Note that `radialaxis.angle` is snapped to the angle of the closest', 'vertex when `gridshape` is *circular*', '(so that radial axis scale is the same as the data scale).'].join(' ')\n  },\n  // TODO maybe?\n  // annotations:\n\n  uirevision: {\n    valType: 'any',\n    role: 'info',\n    editType: 'none',\n    description: ['Controls persistence of user-driven changes in axis attributes,', 'if not overridden in the individual axes.', 'Defaults to `layout.uirevision`.'].join(' ')\n  },\n  editType: 'calc'\n};","map":{"version":3,"names":["colorAttrs","require","axesAttrs","domainAttrs","attributes","extendFlat","overrideAll","axisLineGridAttr","color","showline","dflt","linecolor","linewidth","showgrid","gridcolor","gridwidth","axisTickAttrs","tickmode","nticks","tick0","dtick","tickvals","ticktext","ticks","ticklen","tickwidth","tickcolor","showticklabels","showtickprefix","tickprefix","showticksuffix","ticksuffix","showexponent","exponentformat","separatethousands","tickfont","tickangle","tickformat","tickformatstops","layer","radialAxisAttrs","visible","type","values","autorange","editType","rangemode","valType","role","description","join","range","items","impliedEdits","categoryorder","categoryarray","angle","side","title","hoverformat","uirevision","_deprecated","titlefont","text","angularAxisAttrs","_noTemplating","thetaunit","period","min","direction","rotation","module","exports","domain","name","sector","hole","max","bgcolor","background","radialaxis","angularaxis","gridshape"],"sources":["/home/yasmin/Ãrea de Trabalho/Frontend/node_modules/plotly.js/src/plots/polar/layout_attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorAttrs = require('../../components/color/attributes');\nvar axesAttrs = require('../cartesian/layout_attributes');\nvar domainAttrs = require('../domain').attributes;\nvar extendFlat = require('../../lib').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar axisLineGridAttr = overrideAll({\n    color: axesAttrs.color,\n    showline: extendFlat({}, axesAttrs.showline, {dflt: true}),\n    linecolor: axesAttrs.linecolor,\n    linewidth: axesAttrs.linewidth,\n    showgrid: extendFlat({}, axesAttrs.showgrid, {dflt: true}),\n    gridcolor: axesAttrs.gridcolor,\n    gridwidth: axesAttrs.gridwidth\n\n    // TODO add spike* attributes down the road\n\n    // should we add zeroline* attributes?\n\n}, 'plot', 'from-root');\n\nvar axisTickAttrs = overrideAll({\n    tickmode: axesAttrs.tickmode,\n    nticks: axesAttrs.nticks,\n    tick0: axesAttrs.tick0,\n    dtick: axesAttrs.dtick,\n    tickvals: axesAttrs.tickvals,\n    ticktext: axesAttrs.ticktext,\n    ticks: axesAttrs.ticks,\n    ticklen: axesAttrs.ticklen,\n    tickwidth: axesAttrs.tickwidth,\n    tickcolor: axesAttrs.tickcolor,\n    showticklabels: axesAttrs.showticklabels,\n    showtickprefix: axesAttrs.showtickprefix,\n    tickprefix: axesAttrs.tickprefix,\n    showticksuffix: axesAttrs.showticksuffix,\n    ticksuffix: axesAttrs.ticksuffix,\n    showexponent: axesAttrs.showexponent,\n    exponentformat: axesAttrs.exponentformat,\n    separatethousands: axesAttrs.separatethousands,\n    tickfont: axesAttrs.tickfont,\n    tickangle: axesAttrs.tickangle,\n    tickformat: axesAttrs.tickformat,\n    tickformatstops: axesAttrs.tickformatstops,\n    layer: axesAttrs.layer\n}, 'plot', 'from-root');\n\nvar radialAxisAttrs = {\n    visible: extendFlat({}, axesAttrs.visible, {dflt: true}),\n    type: extendFlat({}, axesAttrs.type, {\n        values: ['-', 'linear', 'log', 'date', 'category']\n    }),\n\n    autorange: extendFlat({}, axesAttrs.autorange, {editType: 'plot'}),\n    rangemode: {\n        valType: 'enumerated',\n        values: ['tozero', 'nonnegative', 'normal'],\n        dflt: 'tozero',\n        role: 'style',\n        editType: 'calc',\n        description: [\n            'If *tozero*`, the range extends to 0,',\n            'regardless of the input data',\n            'If *nonnegative*, the range is non-negative,',\n            'regardless of the input data.',\n            'If *normal*, the range is computed in relation to the extrema',\n            'of the input data (same behavior as for cartesian axes).'\n        ].join(' ')\n    },\n    range: extendFlat({}, axesAttrs.range, {\n        items: [\n            {valType: 'any', editType: 'plot', impliedEdits: {'^autorange': false}},\n            {valType: 'any', editType: 'plot', impliedEdits: {'^autorange': false}}\n        ],\n        editType: 'plot'\n    }),\n\n    categoryorder: axesAttrs.categoryorder,\n    categoryarray: axesAttrs.categoryarray,\n\n    angle: {\n        valType: 'angle',\n        editType: 'plot',\n        role: 'info',\n        description: [\n            'Sets the angle (in degrees) from which the radial axis is drawn.',\n            'Note that by default, radial axis line on the theta=0 line',\n            'corresponds to a line pointing right (like what mathematicians prefer).',\n            'Defaults to the first `polar.sector` angle.'\n        ].join(' ')\n    },\n\n    side: {\n        valType: 'enumerated',\n        // TODO add 'center' for `showline: false` radial axes\n        values: ['clockwise', 'counterclockwise'],\n        dflt: 'clockwise',\n        editType: 'plot',\n        role: 'info',\n        description: [\n            'Determines on which side of radial axis line',\n            'the tick and tick labels appear.'\n        ].join(' ')\n    },\n\n\n    title: overrideAll(axesAttrs.title, 'plot', 'from-root'),\n    // might need a 'titleside' and even 'titledirection' down the road\n\n    hoverformat: axesAttrs.hoverformat,\n\n    uirevision: {\n        valType: 'any',\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Controls persistence of user-driven changes in axis `range`,',\n            '`autorange`, `angle`, and `title` if in `editable: true` configuration.',\n            'Defaults to `polar<N>.uirevision`.'\n        ].join(' ')\n    },\n\n    editType: 'calc',\n\n    _deprecated: {\n        title: axesAttrs._deprecated.title,\n        titlefont: axesAttrs._deprecated.titlefont\n    }\n};\n\n// radial title is not gui-editable, so it needs dflt: '', similar to carpet axes.\nradialAxisAttrs.title.text.dflt = '';\n\nextendFlat(\n    radialAxisAttrs,\n\n    // N.B. radialaxis grid lines are circular,\n    // but radialaxis lines are straight from circle center to outer bound\n    axisLineGridAttr,\n    axisTickAttrs\n);\n\nvar angularAxisAttrs = {\n    visible: extendFlat({}, axesAttrs.visible, {dflt: true}),\n    type: {\n        valType: 'enumerated',\n        // 'linear' should maybe be called 'angle' or 'angular' here\n        // to make clear that axis here is periodic and more tightly match\n        // `thetaunit`?\n        //\n        // skip 'date' for first push\n        // no 'log' for now\n        values: ['-', 'linear', 'category'],\n        dflt: '-',\n        role: 'info',\n        editType: 'calc',\n        _noTemplating: true,\n        description: [\n            'Sets the angular axis type.',\n            'If *linear*, set `thetaunit` to determine the unit in which axis value are shown.',\n            'If *category, use `period` to set the number of integer coordinates around polar axis.'\n        ].join(' ')\n    },\n\n    categoryorder: axesAttrs.categoryorder,\n    categoryarray: axesAttrs.categoryarray,\n\n    thetaunit: {\n        valType: 'enumerated',\n        values: ['radians', 'degrees'],\n        dflt: 'degrees',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the format unit of the formatted *theta* values.',\n            'Has an effect only when `angularaxis.type` is *linear*.'\n        ].join(' ')\n    },\n\n    period: {\n        valType: 'number',\n        editType: 'calc',\n        min: 0,\n        role: 'info',\n        description: [\n            'Set the angular period.',\n            'Has an effect only when `angularaxis.type` is *category*.',\n        ].join(' ')\n        // Examples for date axes:\n        //\n        // - period that equals the timeseries length\n        //  http://flowingdata.com/2017/01/24/one-dataset-visualized-25-ways/18-polar-coordinates/\n        // - and 1-year periods (focusing on seasonal change0\n        //  http://otexts.org/fpp2/seasonal-plots.html\n        //  https://blogs.scientificamerican.com/sa-visual/why-are-so-many-babies-born-around-8-00-a-m/\n        //  http://www.seasonaladjustment.com/2012/09/05/clock-plot-visualising-seasonality-using-r-and-ggplot2-part-3/\n        //  https://i.pinimg.com/736x/49/b9/72/49b972ccb3206a1a6d6f870dac543280.jpg\n        //  https://www.climate-lab-book.ac.uk/spirals/\n    },\n\n    direction: {\n        valType: 'enumerated',\n        values: ['counterclockwise', 'clockwise'],\n        dflt: 'counterclockwise',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Sets the direction corresponding to positive angles.'\n        ].join(' ')\n    },\n\n    rotation: {\n        valType: 'angle',\n        editType: 'calc',\n        role: 'info',\n        description: [\n            'Sets that start position (in degrees) of the angular axis',\n            'By default, polar subplots with `direction` set to *counterclockwise*',\n            'get a `rotation` of *0*',\n            'which corresponds to due East (like what mathematicians prefer).',\n            'In turn, polar with `direction` set to *clockwise* get a rotation of *90*',\n            'which corresponds to due North (like on a compass),'\n        ].join(' ')\n    },\n\n    hoverformat: axesAttrs.hoverformat,\n\n    uirevision: {\n        valType: 'any',\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Controls persistence of user-driven changes in axis `rotation`.',\n            'Defaults to `polar<N>.uirevision`.'\n        ].join(' ')\n    },\n\n    editType: 'calc'\n};\n\nextendFlat(\n    angularAxisAttrs,\n\n    // N.B. angular grid lines are straight lines from circle center to outer bound\n    // the angular line is circular bounding the polar plot area.\n    axisLineGridAttr,\n\n    // N.B. ticksuffix defaults to 'Â°' for angular axes with `thetaunit: 'degrees'`\n    axisTickAttrs\n);\n\nmodule.exports = {\n    // TODO for x/y/zoom system for paper-based zooming:\n    // x: {},\n    // y: {},\n    // zoom: {},\n\n    domain: domainAttrs({name: 'polar', editType: 'plot'}),\n\n    sector: {\n        valType: 'info_array',\n        items: [\n            {valType: 'number', editType: 'plot'},\n            {valType: 'number', editType: 'plot'}\n        ],\n        dflt: [0, 360],\n        role: 'info',\n        editType: 'plot',\n        description: [\n            'Sets angular span of this polar subplot with two angles (in degrees).',\n            'Sector are assumed to be spanned in the counterclockwise direction',\n            'with *0* corresponding to rightmost limit of the polar subplot.'\n        ].join(' ')\n    },\n    hole: {\n        valType: 'number',\n        min: 0,\n        max: 1,\n        dflt: 0,\n        editType: 'plot',\n        role: 'info',\n        description: [\n            'Sets the fraction of the radius to cut out of the polar subplot.'\n        ].join(' ')\n    },\n\n    bgcolor: {\n        valType: 'color',\n        role: 'style',\n        editType: 'plot',\n        dflt: colorAttrs.background,\n        description: 'Set the background color of the subplot'\n    },\n\n    radialaxis: radialAxisAttrs,\n    angularaxis: angularAxisAttrs,\n\n    gridshape: {\n        valType: 'enumerated',\n        values: ['circular', 'linear'],\n        dflt: 'circular',\n        role: 'style',\n        editType: 'plot',\n        description: [\n            'Determines if the radial axis grid lines and angular axis line are drawn',\n            'as *circular* sectors or as *linear* (polygon) sectors.',\n            'Has an effect only when the angular axis has `type` *category*.',\n            'Note that `radialaxis.angle` is snapped to the angle of the closest',\n            'vertex when `gridshape` is *circular*',\n            '(so that radial axis scale is the same as the data scale).'\n        ].join(' ')\n    },\n\n    // TODO maybe?\n    // annotations:\n\n    uirevision: {\n        valType: 'any',\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Controls persistence of user-driven changes in axis attributes,',\n            'if not overridden in the individual axes.',\n            'Defaults to `layout.uirevision`.'\n        ].join(' ')\n    },\n\n    editType: 'calc'\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
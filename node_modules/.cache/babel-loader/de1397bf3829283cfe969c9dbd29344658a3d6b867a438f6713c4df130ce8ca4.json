{"ast":null,"code":"'use strict';\n\nvar parseUnit = require('parse-unit');\nmodule.exports = toPX;\nvar PIXELS_PER_INCH = 96;\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop));\n  return parts[0] * toPX(parts[1], element);\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div');\n  testDIV.style['font-size'] = '128' + unit;\n  element.appendChild(testDIV);\n  var size = getPropertyInPX(testDIV, 'font-size') / 128;\n  element.removeChild(testDIV);\n  return size;\n}\nfunction toPX(str, element) {\n  element = element || document.body;\n  str = (str || 'px').trim().toLowerCase();\n  if (element === window || element === document) {\n    element = document.body;\n  }\n  switch (str) {\n    case '%':\n      //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0;\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element);\n    case 'em':\n      return getPropertyInPX(element, 'font-size');\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size');\n    case 'vw':\n      return window.innerWidth / 100;\n    case 'vh':\n      return window.innerHeight / 100;\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100;\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100;\n    case 'in':\n      return PIXELS_PER_INCH;\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54;\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4;\n    case 'pt':\n      return PIXELS_PER_INCH / 72;\n    case 'pc':\n      return PIXELS_PER_INCH / 6;\n  }\n  return 1;\n}","map":{"version":3,"names":["parseUnit","require","module","exports","toPX","PIXELS_PER_INCH","getPropertyInPX","element","prop","parts","getComputedStyle","getPropertyValue","getSizeBrutal","unit","testDIV","document","createElement","style","appendChild","size","removeChild","str","body","trim","toLowerCase","window","clientHeight","innerWidth","innerHeight","Math","min","max"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/to-px/topx.js"],"sourcesContent":["'use strict'\n\nvar parseUnit = require('parse-unit')\n\nmodule.exports = toPX\n\nvar PIXELS_PER_INCH = 96\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop))\n  return parts[0] * toPX(parts[1], element)\n}\n\n//This brutal hack is needed\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div')\n  testDIV.style['font-size'] = '128' + unit\n  element.appendChild(testDIV)\n  var size = getPropertyInPX(testDIV, 'font-size') / 128\n  element.removeChild(testDIV)\n  return size\n}\n\nfunction toPX(str, element) {\n  element = element || document.body\n  str = (str || 'px').trim().toLowerCase()\n  if(element === window || element === document) {\n    element = document.body \n  }\n  switch(str) {\n    case '%':  //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element)\n    case 'em':\n      return getPropertyInPX(element, 'font-size')\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size')\n    case 'vw':\n      return window.innerWidth/100\n    case 'vh':\n      return window.innerHeight/100\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100\n    case 'in':\n      return PIXELS_PER_INCH\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4\n    case 'pt':\n      return PIXELS_PER_INCH / 72\n    case 'pc':\n      return PIXELS_PER_INCH / 6\n  }\n  return 1\n}"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AAErCC,MAAM,CAACC,OAAO,GAAGC,IAAI;AAErB,IAAIC,eAAe,GAAG,EAAE;AAExB,SAASC,eAAe,CAACC,OAAO,EAAEC,IAAI,EAAE;EACtC,IAAIC,KAAK,GAAGT,SAAS,CAACU,gBAAgB,CAACH,OAAO,CAAC,CAACI,gBAAgB,CAACH,IAAI,CAAC,CAAC;EACvE,OAAOC,KAAK,CAAC,CAAC,CAAC,GAAGL,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,EAAEF,OAAO,CAAC;AAC3C;;AAEA;AACA,SAASK,aAAa,CAACC,IAAI,EAAEN,OAAO,EAAE;EACpC,IAAIO,OAAO,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CF,OAAO,CAACG,KAAK,CAAC,WAAW,CAAC,GAAG,KAAK,GAAGJ,IAAI;EACzCN,OAAO,CAACW,WAAW,CAACJ,OAAO,CAAC;EAC5B,IAAIK,IAAI,GAAGb,eAAe,CAACQ,OAAO,EAAE,WAAW,CAAC,GAAG,GAAG;EACtDP,OAAO,CAACa,WAAW,CAACN,OAAO,CAAC;EAC5B,OAAOK,IAAI;AACb;AAEA,SAASf,IAAI,CAACiB,GAAG,EAAEd,OAAO,EAAE;EAC1BA,OAAO,GAAGA,OAAO,IAAIQ,QAAQ,CAACO,IAAI;EAClCD,GAAG,GAAG,CAACA,GAAG,IAAI,IAAI,EAAEE,IAAI,EAAE,CAACC,WAAW,EAAE;EACxC,IAAGjB,OAAO,KAAKkB,MAAM,IAAIlB,OAAO,KAAKQ,QAAQ,EAAE;IAC7CR,OAAO,GAAGQ,QAAQ,CAACO,IAAI;EACzB;EACA,QAAOD,GAAG;IACR,KAAK,GAAG;MAAG;MACT,OAAOd,OAAO,CAACmB,YAAY,GAAG,KAAK;IACrC,KAAK,IAAI;IACT,KAAK,IAAI;MACP,OAAOd,aAAa,CAACS,GAAG,EAAEd,OAAO,CAAC;IACpC,KAAK,IAAI;MACP,OAAOD,eAAe,CAACC,OAAO,EAAE,WAAW,CAAC;IAC9C,KAAK,KAAK;MACR,OAAOD,eAAe,CAACS,QAAQ,CAACO,IAAI,EAAE,WAAW,CAAC;IACpD,KAAK,IAAI;MACP,OAAOG,MAAM,CAACE,UAAU,GAAC,GAAG;IAC9B,KAAK,IAAI;MACP,OAAOF,MAAM,CAACG,WAAW,GAAC,GAAG;IAC/B,KAAK,MAAM;MACT,OAAOC,IAAI,CAACC,GAAG,CAACL,MAAM,CAACE,UAAU,EAAEF,MAAM,CAACG,WAAW,CAAC,GAAG,GAAG;IAC9D,KAAK,MAAM;MACT,OAAOC,IAAI,CAACE,GAAG,CAACN,MAAM,CAACE,UAAU,EAAEF,MAAM,CAACG,WAAW,CAAC,GAAG,GAAG;IAC9D,KAAK,IAAI;MACP,OAAOvB,eAAe;IACxB,KAAK,IAAI;MACP,OAAOA,eAAe,GAAG,IAAI;IAC/B,KAAK,IAAI;MACP,OAAOA,eAAe,GAAG,IAAI;IAC/B,KAAK,IAAI;MACP,OAAOA,eAAe,GAAG,EAAE;IAC7B,KAAK,IAAI;MACP,OAAOA,eAAe,GAAG,CAAC;EAAA;EAE9B,OAAO,CAAC;AACV"},"metadata":{},"sourceType":"script","externalDependencies":[]}
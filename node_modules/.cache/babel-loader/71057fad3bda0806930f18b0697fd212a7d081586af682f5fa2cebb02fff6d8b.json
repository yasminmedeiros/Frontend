{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar handleXYZDefaults = require('../heatmap/xyz_defaults');\nvar attributes = require('./attributes');\nvar handleConstraintDefaults = require('../contour/constraint_defaults');\nvar handleContoursDefaults = require('../contour/contours_defaults');\nvar handleStyleDefaults = require('../contour/style_defaults');\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n  function coerce2(attr) {\n    return Lib.coerce2(traceIn, traceOut, attributes, attr);\n  }\n  coerce('carpet');\n\n  // If either a or b is not present, then it's not a valid trace *unless* the carpet\n  // axis has the a or b values we're looking for. So if these are not found, just defer\n  // that decision until the calc step.\n  //\n  // NB: the calc step will modify the original data input by assigning whichever of\n  // a or b are missing. This is necessary because panning goes right from supplyDefaults\n  // to plot (skipping calc). That means on subsequent updates, this *will* need to be\n  // able to find a and b.\n  //\n  // The long-term proper fix is that this should perhaps use underscored attributes to\n  // at least modify the user input to a slightly lesser extent. Fully removing the\n  // input mutation is challenging. The underscore approach is not currently taken since\n  // it requires modification to all of the functions below that expect the coerced\n  // attribute name to match the property name -- except '_a' !== 'a' so that is not\n  // straightforward.\n  if (traceIn.a && traceIn.b) {\n    var len = handleXYZDefaults(traceIn, traceOut, coerce, layout, 'a', 'b');\n    if (!len) {\n      traceOut.visible = false;\n      return;\n    }\n    coerce('text');\n    var isConstraint = coerce('contours.type') === 'constraint';\n    if (isConstraint) {\n      handleConstraintDefaults(traceIn, traceOut, coerce, layout, defaultColor, {\n        hasHover: false\n      });\n    } else {\n      handleContoursDefaults(traceIn, traceOut, coerce, coerce2);\n      handleStyleDefaults(traceIn, traceOut, coerce, layout, {\n        hasHover: false\n      });\n    }\n  } else {\n    traceOut._defaultColor = defaultColor;\n    traceOut._length = null;\n  }\n};","map":{"version":3,"names":["Lib","require","handleXYZDefaults","attributes","handleConstraintDefaults","handleContoursDefaults","handleStyleDefaults","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","coerce2","a","b","len","visible","isConstraint","hasHover","_defaultColor","_length"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/contourcarpet/defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleXYZDefaults = require('../heatmap/xyz_defaults');\nvar attributes = require('./attributes');\nvar handleConstraintDefaults = require('../contour/constraint_defaults');\nvar handleContoursDefaults = require('../contour/contours_defaults');\nvar handleStyleDefaults = require('../contour/style_defaults');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    function coerce2(attr) {\n        return Lib.coerce2(traceIn, traceOut, attributes, attr);\n    }\n\n    coerce('carpet');\n\n    // If either a or b is not present, then it's not a valid trace *unless* the carpet\n    // axis has the a or b values we're looking for. So if these are not found, just defer\n    // that decision until the calc step.\n    //\n    // NB: the calc step will modify the original data input by assigning whichever of\n    // a or b are missing. This is necessary because panning goes right from supplyDefaults\n    // to plot (skipping calc). That means on subsequent updates, this *will* need to be\n    // able to find a and b.\n    //\n    // The long-term proper fix is that this should perhaps use underscored attributes to\n    // at least modify the user input to a slightly lesser extent. Fully removing the\n    // input mutation is challenging. The underscore approach is not currently taken since\n    // it requires modification to all of the functions below that expect the coerced\n    // attribute name to match the property name -- except '_a' !== 'a' so that is not\n    // straightforward.\n    if(traceIn.a && traceIn.b) {\n\n        var len = handleXYZDefaults(traceIn, traceOut, coerce, layout, 'a', 'b');\n\n        if(!len) {\n            traceOut.visible = false;\n            return;\n        }\n\n        coerce('text');\n        var isConstraint = (coerce('contours.type') === 'constraint');\n\n        if(isConstraint) {\n            handleConstraintDefaults(traceIn, traceOut, coerce, layout, defaultColor, {hasHover: false});\n        } else {\n            handleContoursDefaults(traceIn, traceOut, coerce, coerce2);\n            handleStyleDefaults(traceIn, traceOut, coerce, layout, {hasHover: false});\n        }\n    } else {\n        traceOut._defaultColor = defaultColor;\n        traceOut._length = null;\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;AAE9B,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AAC1D,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACxE,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,8BAA8B,CAAC;AACpE,IAAIK,mBAAmB,GAAGL,OAAO,CAAC,2BAA2B,CAAC;AAE9DM,MAAM,CAACC,OAAO,GAAG,SAASC,cAAc,CAACC,OAAO,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EAAE;EAC9E,SAASC,MAAM,CAACC,IAAI,EAAEC,IAAI,EAAE;IACxB,OAAOhB,GAAG,CAACc,MAAM,CAACJ,OAAO,EAAEC,QAAQ,EAAER,UAAU,EAAEY,IAAI,EAAEC,IAAI,CAAC;EAChE;EAEA,SAASC,OAAO,CAACF,IAAI,EAAE;IACnB,OAAOf,GAAG,CAACiB,OAAO,CAACP,OAAO,EAAEC,QAAQ,EAAER,UAAU,EAAEY,IAAI,CAAC;EAC3D;EAEAD,MAAM,CAAC,QAAQ,CAAC;;EAEhB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAGJ,OAAO,CAACQ,CAAC,IAAIR,OAAO,CAACS,CAAC,EAAE;IAEvB,IAAIC,GAAG,GAAGlB,iBAAiB,CAACQ,OAAO,EAAEC,QAAQ,EAAEG,MAAM,EAAED,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;IAExE,IAAG,CAACO,GAAG,EAAE;MACLT,QAAQ,CAACU,OAAO,GAAG,KAAK;MACxB;IACJ;IAEAP,MAAM,CAAC,MAAM,CAAC;IACd,IAAIQ,YAAY,GAAIR,MAAM,CAAC,eAAe,CAAC,KAAK,YAAa;IAE7D,IAAGQ,YAAY,EAAE;MACblB,wBAAwB,CAACM,OAAO,EAAEC,QAAQ,EAAEG,MAAM,EAAED,MAAM,EAAED,YAAY,EAAE;QAACW,QAAQ,EAAE;MAAK,CAAC,CAAC;IAChG,CAAC,MAAM;MACHlB,sBAAsB,CAACK,OAAO,EAAEC,QAAQ,EAAEG,MAAM,EAAEG,OAAO,CAAC;MAC1DX,mBAAmB,CAACI,OAAO,EAAEC,QAAQ,EAAEG,MAAM,EAAED,MAAM,EAAE;QAACU,QAAQ,EAAE;MAAK,CAAC,CAAC;IAC7E;EACJ,CAAC,MAAM;IACHZ,QAAQ,CAACa,aAAa,GAAGZ,YAAY;IACrCD,QAAQ,CAACc,OAAO,GAAG,IAAI;EAC3B;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
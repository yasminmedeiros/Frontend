{"ast":null,"code":"'use strict';\n\nmodule.exports = createLinePlot;\nvar createBuffer = require('gl-buffer');\nvar createVAO = require('gl-vao');\nvar createTexture = require('gl-texture2d');\nvar UINT8_VIEW = new Uint8Array(4);\nvar FLOAT_VIEW = new Float32Array(UINT8_VIEW.buffer);\n// https://github.com/mikolalysenko/glsl-read-float/blob/master/index.js\nfunction unpackFloat(x, y, z, w) {\n  UINT8_VIEW[0] = w;\n  UINT8_VIEW[1] = z;\n  UINT8_VIEW[2] = y;\n  UINT8_VIEW[3] = x;\n  return FLOAT_VIEW[0];\n}\nvar bsearch = require('binary-search-bounds');\nvar ndarray = require('ndarray');\nvar shaders = require('./lib/shaders');\nvar createShader = shaders.createShader;\nvar createPickShader = shaders.createPickShader;\nvar identity = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nfunction distance(a, b) {\n  var s = 0.0;\n  for (var i = 0; i < 3; ++i) {\n    var d = a[i] - b[i];\n    s += d * d;\n  }\n  return Math.sqrt(s);\n}\nfunction filterClipBounds(bounds) {\n  var result = [[-1e6, -1e6, -1e6], [1e6, 1e6, 1e6]];\n  for (var i = 0; i < 3; ++i) {\n    result[0][i] = Math.max(bounds[0][i], result[0][i]);\n    result[1][i] = Math.min(bounds[1][i], result[1][i]);\n  }\n  return result;\n}\nfunction PickResult(tau, position, index, dataCoordinate) {\n  this.arcLength = tau;\n  this.position = position;\n  this.index = index;\n  this.dataCoordinate = dataCoordinate;\n}\nfunction LinePlot(gl, shader, pickShader, buffer, vao, texture) {\n  this.gl = gl;\n  this.shader = shader;\n  this.pickShader = pickShader;\n  this.buffer = buffer;\n  this.vao = vao;\n  this.clipBounds = [[-Infinity, -Infinity, -Infinity], [Infinity, Infinity, Infinity]];\n  this.points = [];\n  this.arcLength = [];\n  this.vertexCount = 0;\n  this.bounds = [[0, 0, 0], [0, 0, 0]];\n  this.pickId = 0;\n  this.lineWidth = 1;\n  this.texture = texture;\n  this.dashScale = 1;\n  this.opacity = 1;\n  this.hasAlpha = false;\n  this.dirty = true;\n  this.pixelRatio = 1;\n}\nvar proto = LinePlot.prototype;\nproto.isTransparent = function () {\n  return this.hasAlpha;\n};\nproto.isOpaque = function () {\n  return !this.hasAlpha;\n};\nproto.pickSlots = 1;\nproto.setPickBase = function (id) {\n  this.pickId = id;\n};\nproto.drawTransparent = proto.draw = function (camera) {\n  if (!this.vertexCount) return;\n  var gl = this.gl;\n  var shader = this.shader;\n  var vao = this.vao;\n  shader.bind();\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    clipBounds: filterClipBounds(this.clipBounds),\n    dashTexture: this.texture.bind(),\n    dashScale: this.dashScale / this.arcLength[this.arcLength.length - 1],\n    opacity: this.opacity,\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  };\n  vao.bind();\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount);\n  vao.unbind();\n};\nproto.drawPick = function (camera) {\n  if (!this.vertexCount) return;\n  var gl = this.gl;\n  var shader = this.pickShader;\n  var vao = this.vao;\n  shader.bind();\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    pickId: this.pickId,\n    clipBounds: filterClipBounds(this.clipBounds),\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  };\n  vao.bind();\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount);\n  vao.unbind();\n};\nproto.update = function (options) {\n  var i, j;\n  this.dirty = true;\n  var connectGaps = !!options.connectGaps;\n  if ('dashScale' in options) {\n    this.dashScale = options.dashScale;\n  }\n  this.hasAlpha = false; // default to no transparent draw\n  if ('opacity' in options) {\n    this.opacity = +options.opacity;\n    if (this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n\n  // Recalculate buffer data\n  var buffer = [];\n  var arcLengthArray = [];\n  var pointArray = [];\n  var arcLength = 0.0;\n  var vertexCount = 0;\n  var bounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  var positions = options.position || options.positions;\n  if (positions) {\n    // Default color\n    var colors = options.color || options.colors || [0, 0, 0, 1];\n    var lineWidth = options.lineWidth || 1;\n    var hadGap = false;\n    fill_loop: for (i = 1; i < positions.length; ++i) {\n      var a = positions[i - 1];\n      var b = positions[i];\n      arcLengthArray.push(arcLength);\n      pointArray.push(a.slice());\n      for (j = 0; j < 3; ++j) {\n        if (isNaN(a[j]) || isNaN(b[j]) || !isFinite(a[j]) || !isFinite(b[j])) {\n          if (!connectGaps && buffer.length > 0) {\n            for (var k = 0; k < 24; ++k) {\n              buffer.push(buffer[buffer.length - 12]);\n            }\n            vertexCount += 2;\n            hadGap = true;\n          }\n          continue fill_loop;\n        }\n        bounds[0][j] = Math.min(bounds[0][j], a[j], b[j]);\n        bounds[1][j] = Math.max(bounds[1][j], a[j], b[j]);\n      }\n      var acolor, bcolor;\n      if (Array.isArray(colors[0])) {\n        acolor = colors.length > i - 1 ? colors[i - 1] :\n        // using index value\n        colors.length > 0 ? colors[colors.length - 1] :\n        // using last item\n        [0, 0, 0, 1]; // using black\n\n        bcolor = colors.length > i ? colors[i] :\n        // using index value\n        colors.length > 0 ? colors[colors.length - 1] :\n        // using last item\n        [0, 0, 0, 1]; // using black\n      } else {\n        acolor = bcolor = colors;\n      }\n      if (acolor.length === 3) {\n        acolor = [acolor[0], acolor[1], acolor[2], 1];\n      }\n      if (bcolor.length === 3) {\n        bcolor = [bcolor[0], bcolor[1], bcolor[2], 1];\n      }\n      if (!this.hasAlpha && acolor[3] < 1) this.hasAlpha = true;\n      var w0;\n      if (Array.isArray(lineWidth)) {\n        w0 = lineWidth.length > i - 1 ? lineWidth[i - 1] :\n        // using index value\n        lineWidth.length > 0 ? lineWidth[lineWidth.length - 1] :\n        // using last item\n        [0, 0, 0, 1]; // using black\n      } else {\n        w0 = lineWidth;\n      }\n      var t0 = arcLength;\n      arcLength += distance(a, b);\n      if (hadGap) {\n        for (j = 0; j < 2; ++j) {\n          buffer.push(a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3]);\n        }\n        vertexCount += 2;\n        hadGap = false;\n      }\n      buffer.push(a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3], a[0], a[1], a[2], b[0], b[1], b[2], t0, -w0, acolor[0], acolor[1], acolor[2], acolor[3], b[0], b[1], b[2], a[0], a[1], a[2], arcLength, -w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3], b[0], b[1], b[2], a[0], a[1], a[2], arcLength, w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3]);\n      vertexCount += 4;\n    }\n  }\n  this.buffer.update(buffer);\n  arcLengthArray.push(arcLength);\n  pointArray.push(positions[positions.length - 1].slice());\n  this.bounds = bounds;\n  this.vertexCount = vertexCount;\n  this.points = pointArray;\n  this.arcLength = arcLengthArray;\n  if ('dashes' in options) {\n    var dashArray = options.dashes;\n\n    // Calculate prefix sum\n    var prefixSum = dashArray.slice();\n    prefixSum.unshift(0);\n    for (i = 1; i < prefixSum.length; ++i) {\n      prefixSum[i] = prefixSum[i - 1] + prefixSum[i];\n    }\n    var dashTexture = ndarray(new Array(256 * 4), [256, 1, 4]);\n    for (i = 0; i < 256; ++i) {\n      for (j = 0; j < 4; ++j) {\n        dashTexture.set(i, 0, j, 0);\n      }\n      if (bsearch.le(prefixSum, prefixSum[prefixSum.length - 1] * i / 255.0) & 1) {\n        dashTexture.set(i, 0, 0, 0);\n      } else {\n        dashTexture.set(i, 0, 0, 255);\n      }\n    }\n    this.texture.setPixels(dashTexture);\n  }\n};\nproto.dispose = function () {\n  this.shader.dispose();\n  this.vao.dispose();\n  this.buffer.dispose();\n};\nproto.pick = function (selection) {\n  if (!selection) {\n    return null;\n  }\n  if (selection.id !== this.pickId) {\n    return null;\n  }\n  var tau = unpackFloat(selection.value[0], selection.value[1], selection.value[2], 0);\n  var index = bsearch.le(this.arcLength, tau);\n  if (index < 0) {\n    return null;\n  }\n  if (index === this.arcLength.length - 1) {\n    return new PickResult(this.arcLength[this.arcLength.length - 1], this.points[this.points.length - 1].slice(), index);\n  }\n  var a = this.points[index];\n  var b = this.points[Math.min(index + 1, this.points.length - 1)];\n  var t = (tau - this.arcLength[index]) / (this.arcLength[index + 1] - this.arcLength[index]);\n  var ti = 1.0 - t;\n  var x = [0, 0, 0];\n  for (var i = 0; i < 3; ++i) {\n    x[i] = ti * a[i] + t * b[i];\n  }\n  var dataIndex = Math.min(t < 0.5 ? index : index + 1, this.points.length - 1);\n  return new PickResult(tau, x, dataIndex, this.points[dataIndex]);\n};\nfunction createLinePlot(options) {\n  var gl = options.gl || options.scene && options.scene.gl;\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  shader.attributes.nextPosition.location = 1;\n  shader.attributes.arcLength.location = 2;\n  shader.attributes.lineWidth.location = 3;\n  shader.attributes.color.location = 4;\n  var pickShader = createPickShader(gl);\n  pickShader.attributes.position.location = 0;\n  pickShader.attributes.nextPosition.location = 1;\n  pickShader.attributes.arcLength.location = 2;\n  pickShader.attributes.lineWidth.location = 3;\n  pickShader.attributes.color.location = 4;\n  var buffer = createBuffer(gl);\n  var vao = createVAO(gl, [{\n    'buffer': buffer,\n    'size': 3,\n    'offset': 0,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 3,\n    'offset': 12,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 1,\n    'offset': 24,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 1,\n    'offset': 28,\n    'stride': 48\n  }, {\n    'buffer': buffer,\n    'size': 4,\n    'offset': 32,\n    'stride': 48\n  }]);\n\n  // Create texture for dash pattern\n  var defaultTexture = ndarray(new Array(256 * 4), [256, 1, 4]);\n  for (var i = 0; i < 256 * 4; ++i) {\n    defaultTexture.data[i] = 255;\n  }\n  var texture = createTexture(gl, defaultTexture);\n  texture.wrap = gl.REPEAT;\n  var linePlot = new LinePlot(gl, shader, pickShader, buffer, vao, texture);\n  linePlot.update(options);\n  return linePlot;\n}","map":{"version":3,"names":["module","exports","createLinePlot","createBuffer","require","createVAO","createTexture","UINT8_VIEW","Uint8Array","FLOAT_VIEW","Float32Array","buffer","unpackFloat","x","y","z","w","bsearch","ndarray","shaders","createShader","createPickShader","identity","distance","a","b","s","i","d","Math","sqrt","filterClipBounds","bounds","result","max","min","PickResult","tau","position","index","dataCoordinate","arcLength","LinePlot","gl","shader","pickShader","vao","texture","clipBounds","Infinity","points","vertexCount","pickId","lineWidth","dashScale","opacity","hasAlpha","dirty","pixelRatio","proto","prototype","isTransparent","isOpaque","pickSlots","setPickBase","id","drawTransparent","draw","camera","bind","uniforms","model","view","projection","dashTexture","length","screenShape","drawingBufferWidth","drawingBufferHeight","TRIANGLE_STRIP","unbind","drawPick","update","options","j","connectGaps","arcLengthArray","pointArray","positions","colors","color","hadGap","fill_loop","push","slice","isNaN","isFinite","k","acolor","bcolor","Array","isArray","w0","t0","dashArray","dashes","prefixSum","unshift","set","le","setPixels","dispose","pick","selection","value","t","ti","dataIndex","scene","attributes","location","nextPosition","defaultTexture","data","wrap","REPEAT","linePlot"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-line3d/lines.js"],"sourcesContent":["'use strict'\n\nmodule.exports = createLinePlot\n\nvar createBuffer = require('gl-buffer')\nvar createVAO = require('gl-vao')\nvar createTexture = require('gl-texture2d')\n\nvar UINT8_VIEW = new Uint8Array(4)\nvar FLOAT_VIEW = new Float32Array(UINT8_VIEW.buffer)\n// https://github.com/mikolalysenko/glsl-read-float/blob/master/index.js\nfunction unpackFloat(x, y, z, w) {\n  UINT8_VIEW[0] = w\n  UINT8_VIEW[1] = z\n  UINT8_VIEW[2] = y\n  UINT8_VIEW[3] = x\n  return FLOAT_VIEW[0]\n}\n\nvar bsearch = require('binary-search-bounds')\nvar ndarray = require('ndarray')\nvar shaders = require('./lib/shaders')\n\nvar createShader = shaders.createShader\nvar createPickShader = shaders.createPickShader\n\nvar identity = [1, 0, 0, 0,\n  0, 1, 0, 0,\n  0, 0, 1, 0,\n  0, 0, 0, 1]\n\nfunction distance (a, b) {\n  var s = 0.0\n  for (var i = 0; i < 3; ++i) {\n    var d = a[i] - b[i]\n    s += d * d\n  }\n  return Math.sqrt(s)\n}\n\nfunction filterClipBounds (bounds) {\n  var result = [[-1e6, -1e6, -1e6], [1e6, 1e6, 1e6]]\n  for (var i = 0; i < 3; ++i) {\n    result[0][i] = Math.max(bounds[0][i], result[0][i])\n    result[1][i] = Math.min(bounds[1][i], result[1][i])\n  }\n  return result\n}\n\nfunction PickResult (tau, position, index, dataCoordinate) {\n  this.arcLength = tau\n  this.position = position\n  this.index = index\n  this.dataCoordinate = dataCoordinate\n}\n\nfunction LinePlot (gl, shader, pickShader, buffer, vao, texture) {\n  this.gl = gl\n  this.shader = shader\n  this.pickShader = pickShader\n  this.buffer = buffer\n  this.vao = vao\n  this.clipBounds = [\n    [ -Infinity, -Infinity, -Infinity ],\n    [ Infinity, Infinity, Infinity ]]\n  this.points = []\n  this.arcLength = []\n  this.vertexCount = 0\n  this.bounds = [[0, 0, 0], [0, 0, 0]]\n  this.pickId = 0\n  this.lineWidth = 1\n  this.texture = texture\n  this.dashScale = 1\n  this.opacity = 1\n  this.hasAlpha = false\n  this.dirty = true\n  this.pixelRatio = 1\n}\n\nvar proto = LinePlot.prototype\n\nproto.isTransparent = function () {\n  return this.hasAlpha\n}\n\nproto.isOpaque = function () {\n  return !this.hasAlpha\n}\n\nproto.pickSlots = 1\n\nproto.setPickBase = function (id) {\n  this.pickId = id\n}\n\nproto.drawTransparent = proto.draw = function (camera) {\n  if (!this.vertexCount) return\n  var gl = this.gl\n  var shader = this.shader\n  var vao = this.vao\n  shader.bind()\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    clipBounds: filterClipBounds(this.clipBounds),\n    dashTexture: this.texture.bind(),\n    dashScale: this.dashScale / this.arcLength[this.arcLength.length - 1],\n    opacity: this.opacity,\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  }\n  vao.bind()\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount)\n  vao.unbind()\n}\n\nproto.drawPick = function (camera) {\n  if (!this.vertexCount) return\n  var gl = this.gl\n  var shader = this.pickShader\n  var vao = this.vao\n  shader.bind()\n  shader.uniforms = {\n    model: camera.model || identity,\n    view: camera.view || identity,\n    projection: camera.projection || identity,\n    pickId: this.pickId,\n    clipBounds: filterClipBounds(this.clipBounds),\n    screenShape: [gl.drawingBufferWidth, gl.drawingBufferHeight],\n    pixelRatio: this.pixelRatio\n  }\n  vao.bind()\n  vao.draw(gl.TRIANGLE_STRIP, this.vertexCount)\n  vao.unbind()\n}\n\nproto.update = function (options) {\n  var i, j\n\n  this.dirty = true\n\n  var connectGaps = !!options.connectGaps\n\n  if ('dashScale' in options) {\n    this.dashScale = options.dashScale\n  }\n\n  this.hasAlpha = false // default to no transparent draw\n  if ('opacity' in options) {\n    this.opacity = +options.opacity\n    if(this.opacity < 1) {\n      this.hasAlpha = true;\n    }\n  }\n\n  // Recalculate buffer data\n  var buffer = []\n  var arcLengthArray = []\n  var pointArray = []\n  var arcLength = 0.0\n  var vertexCount = 0\n  var bounds = [\n    [ Infinity, Infinity, Infinity ],\n    [ -Infinity, -Infinity, -Infinity ]]\n\n  var positions = options.position || options.positions\n  if (positions) {\n\n    // Default color\n    var colors = options.color || options.colors || [0, 0, 0, 1]\n\n    var lineWidth = options.lineWidth || 1\n\n    var hadGap = false\n\n    fill_loop:\n    for (i = 1; i < positions.length; ++i) {\n      var a = positions[i - 1]\n      var b = positions[i]\n\n      arcLengthArray.push(arcLength)\n      pointArray.push(a.slice())\n\n      for (j = 0; j < 3; ++j) {\n        if (isNaN(a[j]) || isNaN(b[j]) ||\n          !isFinite(a[j]) || !isFinite(b[j])) {\n\n          if (!connectGaps && buffer.length > 0) {\n            for (var k = 0; k < 24; ++k) {\n              buffer.push(buffer[buffer.length - 12])\n            }\n            vertexCount += 2\n            hadGap = true\n          }\n\n          continue fill_loop\n        }\n        bounds[0][j] = Math.min(bounds[0][j], a[j], b[j])\n        bounds[1][j] = Math.max(bounds[1][j], a[j], b[j])\n      }\n\n      var acolor, bcolor\n      if (Array.isArray(colors[0])) {\n        acolor = (colors.length > i - 1) ? colors[i - 1] :             // using index value\n                 (colors.length > 0)     ? colors[colors.length - 1] : // using last item\n                                           [0, 0, 0, 1];               // using black\n\n        bcolor = (colors.length > i) ? colors[i] :                 // using index value\n                 (colors.length > 0) ? colors[colors.length - 1] : // using last item\n                                       [0, 0, 0, 1];               // using black\n      } else {\n        acolor = bcolor = colors\n      }\n\n      if (acolor.length === 3) {\n        acolor = [acolor[0], acolor[1], acolor[2], 1]\n      }\n      if (bcolor.length === 3) {\n        bcolor = [bcolor[0], bcolor[1], bcolor[2], 1]\n      }\n\n      if(!this.hasAlpha && acolor[3] < 1) this.hasAlpha = true\n\n      var w0\n      if (Array.isArray(lineWidth)) {\n        w0 = (lineWidth.length > i - 1) ? lineWidth[i - 1] :                // using index value\n             (lineWidth.length > 0)     ? lineWidth[lineWidth.length - 1] : // using last item\n                                          [0, 0, 0, 1];                     // using black\n      } else {\n        w0 = lineWidth\n      }\n\n      var t0 = arcLength\n      arcLength += distance(a, b)\n\n      if (hadGap) {\n        for (j = 0; j < 2; ++j) {\n          buffer.push(\n            a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3])\n        }\n        vertexCount += 2\n        hadGap = false\n      }\n\n      buffer.push(\n        a[0], a[1], a[2], b[0], b[1], b[2], t0, w0, acolor[0], acolor[1], acolor[2], acolor[3],\n        a[0], a[1], a[2], b[0], b[1], b[2], t0, -w0, acolor[0], acolor[1], acolor[2], acolor[3],\n        b[0], b[1], b[2], a[0], a[1], a[2], arcLength, -w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3],\n        b[0], b[1], b[2], a[0], a[1], a[2], arcLength, w0, bcolor[0], bcolor[1], bcolor[2], bcolor[3])\n\n      vertexCount += 4\n    }\n  }\n  this.buffer.update(buffer)\n\n  arcLengthArray.push(arcLength)\n  pointArray.push(positions[positions.length - 1].slice())\n\n  this.bounds = bounds\n\n  this.vertexCount = vertexCount\n\n  this.points = pointArray\n  this.arcLength = arcLengthArray\n\n  if ('dashes' in options) {\n    var dashArray = options.dashes\n\n    // Calculate prefix sum\n    var prefixSum = dashArray.slice()\n    prefixSum.unshift(0)\n    for (i = 1; i < prefixSum.length; ++i) {\n      prefixSum[i] = prefixSum[i - 1] + prefixSum[i]\n    }\n\n    var dashTexture = ndarray(new Array(256 * 4), [256, 1, 4])\n    for (i = 0; i < 256; ++i) {\n      for (j = 0; j < 4; ++j) {\n        dashTexture.set(i, 0, j, 0)\n      }\n      if (bsearch.le(prefixSum, prefixSum[prefixSum.length - 1] * i / 255.0) & 1) {\n        dashTexture.set(i, 0, 0, 0)\n      } else {\n        dashTexture.set(i, 0, 0, 255)\n      }\n    }\n\n    this.texture.setPixels(dashTexture)\n  }\n}\n\nproto.dispose = function () {\n  this.shader.dispose()\n  this.vao.dispose()\n  this.buffer.dispose()\n}\n\nproto.pick = function (selection) {\n  if (!selection) {\n    return null\n  }\n  if (selection.id !== this.pickId) {\n    return null\n  }\n  var tau = unpackFloat(\n    selection.value[0],\n    selection.value[1],\n    selection.value[2],\n    0)\n  var index = bsearch.le(this.arcLength, tau)\n  if (index < 0) {\n    return null\n  }\n  if (index === this.arcLength.length - 1) {\n    return new PickResult(\n      this.arcLength[this.arcLength.length - 1],\n      this.points[this.points.length - 1].slice(),\n      index)\n  }\n  var a = this.points[index]\n  var b = this.points[Math.min(index + 1, this.points.length - 1)]\n  var t = (tau - this.arcLength[index]) / (this.arcLength[index + 1] - this.arcLength[index])\n  var ti = 1.0 - t\n  var x = [0, 0, 0]\n  for (var i = 0; i < 3; ++i) {\n    x[i] = ti * a[i] + t * b[i]\n  }\n  var dataIndex = Math.min((t < 0.5) ? index : (index + 1), this.points.length - 1)\n  return new PickResult(\n    tau,\n    x,\n    dataIndex,\n    this.points[dataIndex])\n}\n\nfunction createLinePlot (options) {\n  var gl = options.gl || (options.scene && options.scene.gl)\n\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  shader.attributes.nextPosition.location = 1\n  shader.attributes.arcLength.location = 2\n  shader.attributes.lineWidth.location = 3\n  shader.attributes.color.location = 4\n\n  var pickShader = createPickShader(gl)\n  pickShader.attributes.position.location = 0\n  pickShader.attributes.nextPosition.location = 1\n  pickShader.attributes.arcLength.location = 2\n  pickShader.attributes.lineWidth.location = 3\n  pickShader.attributes.color.location = 4\n\n  var buffer = createBuffer(gl)\n  var vao = createVAO(gl, [\n    {\n      'buffer': buffer,\n      'size': 3,\n      'offset': 0,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 3,\n      'offset': 12,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 1,\n      'offset': 24,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 1,\n      'offset': 28,\n      'stride': 48\n    },\n    {\n      'buffer': buffer,\n      'size': 4,\n      'offset': 32,\n      'stride': 48\n    }\n  ])\n\n  // Create texture for dash pattern\n  var defaultTexture = ndarray(new Array(256 * 4), [256, 1, 4])\n  for (var i = 0; i < 256 * 4; ++i) {\n    defaultTexture.data[i] = 255\n  }\n  var texture = createTexture(gl, defaultTexture)\n  texture.wrap = gl.REPEAT\n\n  var linePlot = new LinePlot(gl, shader, pickShader, buffer, vao, texture)\n  linePlot.update(options)\n  return linePlot\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
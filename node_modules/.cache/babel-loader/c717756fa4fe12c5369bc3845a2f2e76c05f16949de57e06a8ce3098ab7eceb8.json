{"ast":null,"code":"'use strict';\n\nmodule.exports = createTurntableController;\nvar filterVector = require('filtered-vector');\nvar invert44 = require('gl-mat4/invert');\nvar rotateM = require('gl-mat4/rotate');\nvar cross = require('gl-vec3/cross');\nvar normalize3 = require('gl-vec3/normalize');\nvar dot3 = require('gl-vec3/dot');\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2));\n}\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x));\n}\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0]);\n  var vy = Math.abs(v[1]);\n  var vz = Math.abs(v[2]);\n  var u = [0, 0, 0];\n  if (vx > Math.max(vy, vz)) {\n    u[2] = 1;\n  } else if (vy > Math.max(vx, vz)) {\n    u[0] = 1;\n  } else {\n    u[1] = 1;\n  }\n  var vv = 0;\n  var uv = 0;\n  for (var i = 0; i < 3; ++i) {\n    vv += v[i] * v[i];\n    uv += u[i] * v[i];\n  }\n  for (var i = 0; i < 3; ++i) {\n    u[i] -= uv / vv * v[i];\n  }\n  normalize3(u, u);\n  return u;\n}\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center);\n  this.up = filterVector(up);\n  this.right = filterVector(right);\n  this.radius = filterVector([radius]);\n  this.angle = filterVector([theta, phi]);\n  this.angle.bounds = [[-Infinity, -Math.PI / 2], [Infinity, Math.PI / 2]];\n  this.setDistanceLimits(zoomMin, zoomMax);\n  this.computedCenter = this.center.curve(0);\n  this.computedUp = this.up.curve(0);\n  this.computedRight = this.right.curve(0);\n  this.computedRadius = this.radius.curve(0);\n  this.computedAngle = this.angle.curve(0);\n  this.computedToward = [0, 0, 0];\n  this.computedEye = [0, 0, 0];\n  this.computedMatrix = new Array(16);\n  for (var i = 0; i < 16; ++i) {\n    this.computedMatrix[i] = 0.5;\n  }\n  this.recalcMatrix(0);\n}\nvar proto = TurntableController.prototype;\nproto.setDistanceLimits = function (minDist, maxDist) {\n  if (minDist > 0) {\n    minDist = Math.log(minDist);\n  } else {\n    minDist = -Infinity;\n  }\n  if (maxDist > 0) {\n    maxDist = Math.log(maxDist);\n  } else {\n    maxDist = Infinity;\n  }\n  maxDist = Math.max(maxDist, minDist);\n  this.radius.bounds[0][0] = minDist;\n  this.radius.bounds[1][0] = maxDist;\n};\nproto.getDistanceLimits = function (out) {\n  var bounds = this.radius.bounds[0];\n  if (out) {\n    out[0] = Math.exp(bounds[0][0]);\n    out[1] = Math.exp(bounds[1][0]);\n    return out;\n  }\n  return [Math.exp(bounds[0][0]), Math.exp(bounds[1][0])];\n};\nproto.recalcMatrix = function (t) {\n  //Recompute curves\n  this.center.curve(t);\n  this.up.curve(t);\n  this.right.curve(t);\n  this.radius.curve(t);\n  this.angle.curve(t);\n\n  //Compute frame for camera matrix\n  var up = this.computedUp;\n  var right = this.computedRight;\n  var uu = 0.0;\n  var ur = 0.0;\n  for (var i = 0; i < 3; ++i) {\n    ur += up[i] * right[i];\n    uu += up[i] * up[i];\n  }\n  var ul = Math.sqrt(uu);\n  var rr = 0.0;\n  for (var i = 0; i < 3; ++i) {\n    right[i] -= up[i] * ur / uu;\n    rr += right[i] * right[i];\n    up[i] /= ul;\n  }\n  var rl = Math.sqrt(rr);\n  for (var i = 0; i < 3; ++i) {\n    right[i] /= rl;\n  }\n\n  //Compute toward vector\n  var toward = this.computedToward;\n  cross(toward, up, right);\n  normalize3(toward, toward);\n\n  //Compute angular parameters\n  var radius = Math.exp(this.computedRadius[0]);\n  var theta = this.computedAngle[0];\n  var phi = this.computedAngle[1];\n  var ctheta = Math.cos(theta);\n  var stheta = Math.sin(theta);\n  var cphi = Math.cos(phi);\n  var sphi = Math.sin(phi);\n  var center = this.computedCenter;\n  var wx = ctheta * cphi;\n  var wy = stheta * cphi;\n  var wz = sphi;\n  var sx = -ctheta * sphi;\n  var sy = -stheta * sphi;\n  var sz = cphi;\n  var eye = this.computedEye;\n  var mat = this.computedMatrix;\n  for (var i = 0; i < 3; ++i) {\n    var x = wx * right[i] + wy * toward[i] + wz * up[i];\n    mat[4 * i + 1] = sx * right[i] + sy * toward[i] + sz * up[i];\n    mat[4 * i + 2] = x;\n    mat[4 * i + 3] = 0.0;\n  }\n  var ax = mat[1];\n  var ay = mat[5];\n  var az = mat[9];\n  var bx = mat[2];\n  var by = mat[6];\n  var bz = mat[10];\n  var cx = ay * bz - az * by;\n  var cy = az * bx - ax * bz;\n  var cz = ax * by - ay * bx;\n  var cl = len3(cx, cy, cz);\n  cx /= cl;\n  cy /= cl;\n  cz /= cl;\n  mat[0] = cx;\n  mat[4] = cy;\n  mat[8] = cz;\n  for (var i = 0; i < 3; ++i) {\n    eye[i] = center[i] + mat[2 + 4 * i] * radius;\n  }\n  for (var i = 0; i < 3; ++i) {\n    var rr = 0.0;\n    for (var j = 0; j < 3; ++j) {\n      rr += mat[i + 4 * j] * eye[j];\n    }\n    mat[12 + i] = -rr;\n  }\n  mat[15] = 1.0;\n};\nproto.getMatrix = function (t, result) {\n  this.recalcMatrix(t);\n  var mat = this.computedMatrix;\n  if (result) {\n    for (var i = 0; i < 16; ++i) {\n      result[i] = mat[i];\n    }\n    return result;\n  }\n  return mat;\n};\nvar zAxis = [0, 0, 0];\nproto.rotate = function (t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi);\n  if (droll) {\n    this.recalcMatrix(t);\n    var mat = this.computedMatrix;\n    zAxis[0] = mat[2];\n    zAxis[1] = mat[6];\n    zAxis[2] = mat[10];\n    var up = this.computedUp;\n    var right = this.computedRight;\n    var toward = this.computedToward;\n    for (var i = 0; i < 3; ++i) {\n      mat[4 * i] = up[i];\n      mat[4 * i + 1] = right[i];\n      mat[4 * i + 2] = toward[i];\n    }\n    rotateM(mat, mat, droll, zAxis);\n    for (var i = 0; i < 3; ++i) {\n      up[i] = mat[4 * i];\n      right[i] = mat[4 * i + 1];\n    }\n    this.up.set(t, up[0], up[1], up[2]);\n    this.right.set(t, right[0], right[1], right[2]);\n  }\n};\nproto.pan = function (t, dx, dy, dz) {\n  dx = dx || 0.0;\n  dy = dy || 0.0;\n  dz = dz || 0.0;\n  this.recalcMatrix(t);\n  var mat = this.computedMatrix;\n  var dist = Math.exp(this.computedRadius[0]);\n  var ux = mat[1];\n  var uy = mat[5];\n  var uz = mat[9];\n  var ul = len3(ux, uy, uz);\n  ux /= ul;\n  uy /= ul;\n  uz /= ul;\n  var rx = mat[0];\n  var ry = mat[4];\n  var rz = mat[8];\n  var ru = rx * ux + ry * uy + rz * uz;\n  rx -= ux * ru;\n  ry -= uy * ru;\n  rz -= uz * ru;\n  var rl = len3(rx, ry, rz);\n  rx /= rl;\n  ry /= rl;\n  rz /= rl;\n  var vx = rx * dx + ux * dy;\n  var vy = ry * dx + uy * dy;\n  var vz = rz * dx + uz * dy;\n  this.center.move(t, vx, vy, vz);\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0]);\n  radius = Math.max(1e-4, radius + dz);\n  this.radius.set(t, Math.log(radius));\n};\nproto.translate = function (t, dx, dy, dz) {\n  this.center.move(t, dx || 0.0, dy || 0.0, dz || 0.0);\n};\n\n//Recenters the coordinate axes\nproto.setMatrix = function (t, mat, axes, noSnap) {\n  //Get the axes for tare\n  var ushift = 1;\n  if (typeof axes === 'number') {\n    ushift = axes | 0;\n  }\n  if (ushift < 0 || ushift > 3) {\n    ushift = 1;\n  }\n  var vshift = (ushift + 2) % 3;\n  var fshift = (ushift + 1) % 3;\n\n  //Recompute state for new t value\n  if (!mat) {\n    this.recalcMatrix(t);\n    mat = this.computedMatrix;\n  }\n\n  //Get right and up vectors\n  var ux = mat[ushift];\n  var uy = mat[ushift + 4];\n  var uz = mat[ushift + 8];\n  if (!noSnap) {\n    var ul = len3(ux, uy, uz);\n    ux /= ul;\n    uy /= ul;\n    uz /= ul;\n  } else {\n    var ax = Math.abs(ux);\n    var ay = Math.abs(uy);\n    var az = Math.abs(uz);\n    var am = Math.max(ax, ay, az);\n    if (ax === am) {\n      ux = ux < 0 ? -1 : 1;\n      uy = uz = 0;\n    } else if (az === am) {\n      uz = uz < 0 ? -1 : 1;\n      ux = uy = 0;\n    } else {\n      uy = uy < 0 ? -1 : 1;\n      ux = uz = 0;\n    }\n  }\n  var rx = mat[vshift];\n  var ry = mat[vshift + 4];\n  var rz = mat[vshift + 8];\n  var ru = rx * ux + ry * uy + rz * uz;\n  rx -= ux * ru;\n  ry -= uy * ru;\n  rz -= uz * ru;\n  var rl = len3(rx, ry, rz);\n  rx /= rl;\n  ry /= rl;\n  rz /= rl;\n  var fx = uy * rz - uz * ry;\n  var fy = uz * rx - ux * rz;\n  var fz = ux * ry - uy * rx;\n  var fl = len3(fx, fy, fz);\n  fx /= fl;\n  fy /= fl;\n  fz /= fl;\n  this.center.jump(t, ex, ey, ez);\n  this.radius.idle(t);\n  this.up.jump(t, ux, uy, uz);\n  this.right.jump(t, rx, ry, rz);\n  var phi, theta;\n  if (ushift === 2) {\n    var cx = mat[1];\n    var cy = mat[5];\n    var cz = mat[9];\n    var cr = cx * rx + cy * ry + cz * rz;\n    var cf = cx * fx + cy * fy + cz * fz;\n    if (tu < 0) {\n      phi = -Math.PI / 2;\n    } else {\n      phi = Math.PI / 2;\n    }\n    theta = Math.atan2(cf, cr);\n  } else {\n    var tx = mat[2];\n    var ty = mat[6];\n    var tz = mat[10];\n    var tu = tx * ux + ty * uy + tz * uz;\n    var tr = tx * rx + ty * ry + tz * rz;\n    var tf = tx * fx + ty * fy + tz * fz;\n    phi = Math.asin(clamp1(tu));\n    theta = Math.atan2(tf, tr);\n  }\n  this.angle.jump(t, theta, phi);\n  this.recalcMatrix(t);\n  var dx = mat[2];\n  var dy = mat[6];\n  var dz = mat[10];\n  var imat = this.computedMatrix;\n  invert44(imat, mat);\n  var w = imat[15];\n  var ex = imat[12] / w;\n  var ey = imat[13] / w;\n  var ez = imat[14] / w;\n  var gs = Math.exp(this.computedRadius[0]);\n  this.center.jump(t, ex - dx * gs, ey - dy * gs, ez - dz * gs);\n};\nproto.lastT = function () {\n  return Math.max(this.center.lastT(), this.up.lastT(), this.right.lastT(), this.radius.lastT(), this.angle.lastT());\n};\nproto.idle = function (t) {\n  this.center.idle(t);\n  this.up.idle(t);\n  this.right.idle(t);\n  this.radius.idle(t);\n  this.angle.idle(t);\n};\nproto.flush = function (t) {\n  this.center.flush(t);\n  this.up.flush(t);\n  this.right.flush(t);\n  this.radius.flush(t);\n  this.angle.flush(t);\n};\nproto.setDistance = function (t, d) {\n  if (d > 0) {\n    this.radius.set(t, Math.log(d));\n  }\n};\nproto.lookAt = function (t, eye, center, up) {\n  this.recalcMatrix(t);\n  eye = eye || this.computedEye;\n  center = center || this.computedCenter;\n  up = up || this.computedUp;\n  var ux = up[0];\n  var uy = up[1];\n  var uz = up[2];\n  var ul = len3(ux, uy, uz);\n  if (ul < 1e-6) {\n    return;\n  }\n  ux /= ul;\n  uy /= ul;\n  uz /= ul;\n  var tx = eye[0] - center[0];\n  var ty = eye[1] - center[1];\n  var tz = eye[2] - center[2];\n  var tl = len3(tx, ty, tz);\n  if (tl < 1e-6) {\n    return;\n  }\n  tx /= tl;\n  ty /= tl;\n  tz /= tl;\n  var right = this.computedRight;\n  var rx = right[0];\n  var ry = right[1];\n  var rz = right[2];\n  var ru = ux * rx + uy * ry + uz * rz;\n  rx -= ru * ux;\n  ry -= ru * uy;\n  rz -= ru * uz;\n  var rl = len3(rx, ry, rz);\n  if (rl < 0.01) {\n    rx = uy * tz - uz * ty;\n    ry = uz * tx - ux * tz;\n    rz = ux * ty - uy * tx;\n    rl = len3(rx, ry, rz);\n    if (rl < 1e-6) {\n      return;\n    }\n  }\n  rx /= rl;\n  ry /= rl;\n  rz /= rl;\n  this.up.set(t, ux, uy, uz);\n  this.right.set(t, rx, ry, rz);\n  this.center.set(t, center[0], center[1], center[2]);\n  this.radius.set(t, Math.log(tl));\n  var fx = uy * rz - uz * ry;\n  var fy = uz * rx - ux * rz;\n  var fz = ux * ry - uy * rx;\n  var fl = len3(fx, fy, fz);\n  fx /= fl;\n  fy /= fl;\n  fz /= fl;\n  var tu = ux * tx + uy * ty + uz * tz;\n  var tr = rx * tx + ry * ty + rz * tz;\n  var tf = fx * tx + fy * ty + fz * tz;\n  var phi = Math.asin(clamp1(tu));\n  var theta = Math.atan2(tf, tr);\n  var angleState = this.angle._state;\n  var lastTheta = angleState[angleState.length - 1];\n  var lastPhi = angleState[angleState.length - 2];\n  lastTheta = lastTheta % (2.0 * Math.PI);\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta);\n  var d0 = Math.abs(lastTheta - theta);\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta);\n  if (dp < d0) {\n    lastTheta += 2.0 * Math.PI;\n  }\n  if (dn < d0) {\n    lastTheta -= 2.0 * Math.PI;\n  }\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi);\n  this.angle.set(t, theta, phi);\n};\nfunction createTurntableController(options) {\n  options = options || {};\n  var center = options.center || [0, 0, 0];\n  var up = options.up || [0, 1, 0];\n  var right = options.right || findOrthoPair(up);\n  var radius = options.radius || 1.0;\n  var theta = options.theta || 0.0;\n  var phi = options.phi || 0.0;\n  center = [].slice.call(center, 0, 3);\n  up = [].slice.call(up, 0, 3);\n  normalize3(up, up);\n  right = [].slice.call(right, 0, 3);\n  normalize3(right, right);\n  if ('eye' in options) {\n    var eye = options.eye;\n    var toward = [eye[0] - center[0], eye[1] - center[1], eye[2] - center[2]];\n    cross(right, toward, up);\n    if (len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up);\n    } else {\n      normalize3(right, right);\n    }\n    radius = len3(toward[0], toward[1], toward[2]);\n    var ut = dot3(up, toward) / radius;\n    var rt = dot3(right, toward) / radius;\n    phi = Math.acos(ut);\n    theta = Math.acos(rt);\n  }\n\n  //Use logarithmic coordinates for radius\n  radius = Math.log(radius);\n\n  //Return the controller\n  return new TurntableController(options.zoomMin, options.zoomMax, center, up, right, radius, theta, phi);\n}","map":{"version":3,"names":["module","exports","createTurntableController","filterVector","require","invert44","rotateM","cross","normalize3","dot3","len3","x","y","z","Math","sqrt","pow","clamp1","min","max","findOrthoPair","v","vx","abs","vy","vz","u","vv","uv","i","TurntableController","zoomMin","zoomMax","center","up","right","radius","theta","phi","angle","bounds","Infinity","PI","setDistanceLimits","computedCenter","curve","computedUp","computedRight","computedRadius","computedAngle","computedToward","computedEye","computedMatrix","Array","recalcMatrix","proto","prototype","minDist","maxDist","log","getDistanceLimits","out","exp","t","uu","ur","ul","rr","rl","toward","ctheta","cos","stheta","sin","cphi","sphi","wx","wy","wz","sx","sy","sz","eye","mat","ax","ay","az","bx","by","bz","cx","cy","cz","cl","j","getMatrix","result","zAxis","rotate","dtheta","dphi","droll","move","set","pan","dx","dy","dz","dist","ux","uy","uz","rx","ry","rz","ru","translate","setMatrix","axes","noSnap","ushift","vshift","fshift","am","fx","fy","fz","fl","jump","ex","ey","ez","idle","cr","cf","tu","atan2","tx","ty","tz","tr","tf","asin","imat","w","gs","lastT","flush","setDistance","d","lookAt","tl","angleState","_state","lastTheta","length","lastPhi","dp","d0","dn","options","slice","call","ut","rt","acos"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/turntable-camera-controller/turntable.js"],"sourcesContent":["'use strict'\n\nmodule.exports = createTurntableController\n\nvar filterVector = require('filtered-vector')\nvar invert44     = require('gl-mat4/invert')\nvar rotateM      = require('gl-mat4/rotate')\nvar cross        = require('gl-vec3/cross')\nvar normalize3   = require('gl-vec3/normalize')\nvar dot3         = require('gl-vec3/dot')\n\nfunction len3(x, y, z) {\n  return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2))\n}\n\nfunction clamp1(x) {\n  return Math.min(1.0, Math.max(-1.0, x))\n}\n\nfunction findOrthoPair(v) {\n  var vx = Math.abs(v[0])\n  var vy = Math.abs(v[1])\n  var vz = Math.abs(v[2])\n\n  var u = [0,0,0]\n  if(vx > Math.max(vy, vz)) {\n    u[2] = 1\n  } else if(vy > Math.max(vx, vz)) {\n    u[0] = 1\n  } else {\n    u[1] = 1\n  }\n\n  var vv = 0\n  var uv = 0\n  for(var i=0; i<3; ++i ) {\n    vv += v[i] * v[i]\n    uv += u[i] * v[i]\n  }\n  for(var i=0; i<3; ++i) {\n    u[i] -= (uv / vv) *  v[i]\n  }\n  normalize3(u, u)\n  return u\n}\n\nfunction TurntableController(zoomMin, zoomMax, center, up, right, radius, theta, phi) {\n  this.center = filterVector(center)\n  this.up     = filterVector(up)\n  this.right  = filterVector(right)\n  this.radius = filterVector([radius])\n  this.angle  = filterVector([theta, phi])\n  this.angle.bounds = [[-Infinity,-Math.PI/2], [Infinity,Math.PI/2]]\n  this.setDistanceLimits(zoomMin, zoomMax)\n\n  this.computedCenter = this.center.curve(0)\n  this.computedUp     = this.up.curve(0)\n  this.computedRight  = this.right.curve(0)\n  this.computedRadius = this.radius.curve(0)\n  this.computedAngle  = this.angle.curve(0)\n  this.computedToward = [0,0,0]\n  this.computedEye    = [0,0,0]\n  this.computedMatrix = new Array(16)\n  for(var i=0; i<16; ++i) {\n    this.computedMatrix[i] = 0.5\n  }\n\n  this.recalcMatrix(0)\n}\n\nvar proto = TurntableController.prototype\n\nproto.setDistanceLimits = function(minDist, maxDist) {\n  if(minDist > 0) {\n    minDist = Math.log(minDist)\n  } else {\n    minDist = -Infinity\n  }\n  if(maxDist > 0) {\n    maxDist = Math.log(maxDist)\n  } else {\n    maxDist = Infinity\n  }\n  maxDist = Math.max(maxDist, minDist)\n  this.radius.bounds[0][0] = minDist\n  this.radius.bounds[1][0] = maxDist\n}\n\nproto.getDistanceLimits = function(out) {\n  var bounds = this.radius.bounds[0]\n  if(out) {\n    out[0] = Math.exp(bounds[0][0])\n    out[1] = Math.exp(bounds[1][0])\n    return out\n  }\n  return [ Math.exp(bounds[0][0]), Math.exp(bounds[1][0]) ]\n}\n\nproto.recalcMatrix = function(t) {\n  //Recompute curves\n  this.center.curve(t)\n  this.up.curve(t)\n  this.right.curve(t)\n  this.radius.curve(t)\n  this.angle.curve(t)\n\n  //Compute frame for camera matrix\n  var up     = this.computedUp\n  var right  = this.computedRight\n  var uu = 0.0\n  var ur = 0.0\n  for(var i=0; i<3; ++i) {\n    ur += up[i] * right[i]\n    uu += up[i] * up[i]\n  }\n  var ul = Math.sqrt(uu)\n  var rr = 0.0\n  for(var i=0; i<3; ++i) {\n    right[i] -= up[i] * ur / uu\n    rr       += right[i] * right[i]\n    up[i]    /= ul\n  }\n  var rl = Math.sqrt(rr)\n  for(var i=0; i<3; ++i) {\n    right[i] /= rl\n  }\n\n  //Compute toward vector\n  var toward = this.computedToward\n  cross(toward, up, right)\n  normalize3(toward, toward)\n\n  //Compute angular parameters\n  var radius = Math.exp(this.computedRadius[0])\n  var theta  = this.computedAngle[0]\n  var phi    = this.computedAngle[1]\n\n  var ctheta = Math.cos(theta)\n  var stheta = Math.sin(theta)\n  var cphi   = Math.cos(phi)\n  var sphi   = Math.sin(phi)\n\n  var center = this.computedCenter\n\n  var wx = ctheta * cphi \n  var wy = stheta * cphi\n  var wz = sphi\n\n  var sx = -ctheta * sphi\n  var sy = -stheta * sphi\n  var sz = cphi\n\n  var eye = this.computedEye\n  var mat = this.computedMatrix\n  for(var i=0; i<3; ++i) {\n    var x      = wx * right[i] + wy * toward[i] + wz * up[i]\n    mat[4*i+1] = sx * right[i] + sy * toward[i] + sz * up[i]\n    mat[4*i+2] = x\n    mat[4*i+3] = 0.0\n  }\n\n  var ax = mat[1]\n  var ay = mat[5]\n  var az = mat[9]\n  var bx = mat[2]\n  var by = mat[6]\n  var bz = mat[10]\n  var cx = ay * bz - az * by\n  var cy = az * bx - ax * bz\n  var cz = ax * by - ay * bx\n  var cl = len3(cx, cy, cz)\n  cx /= cl\n  cy /= cl\n  cz /= cl\n  mat[0] = cx\n  mat[4] = cy\n  mat[8] = cz\n\n  for(var i=0; i<3; ++i) {\n    eye[i] = center[i] + mat[2+4*i]*radius\n  }\n\n  for(var i=0; i<3; ++i) {\n    var rr = 0.0\n    for(var j=0; j<3; ++j) {\n      rr += mat[i+4*j] * eye[j]\n    }\n    mat[12+i] = -rr\n  }\n  mat[15] = 1.0\n}\n\nproto.getMatrix = function(t, result) {\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n  if(result) {\n    for(var i=0; i<16; ++i) {\n      result[i] = mat[i]\n    }\n    return result\n  }\n  return mat\n}\n\nvar zAxis = [0,0,0]\nproto.rotate = function(t, dtheta, dphi, droll) {\n  this.angle.move(t, dtheta, dphi)\n  if(droll) {\n    this.recalcMatrix(t)\n\n    var mat = this.computedMatrix\n    zAxis[0] = mat[2]\n    zAxis[1] = mat[6]\n    zAxis[2] = mat[10]\n\n    var up     = this.computedUp\n    var right  = this.computedRight\n    var toward = this.computedToward\n\n    for(var i=0; i<3; ++i) {\n      mat[4*i]   = up[i]\n      mat[4*i+1] = right[i]\n      mat[4*i+2] = toward[i]\n    }\n    rotateM(mat, mat, droll, zAxis)\n    for(var i=0; i<3; ++i) {\n      up[i] =    mat[4*i]\n      right[i] = mat[4*i+1]\n    }\n\n    this.up.set(t, up[0], up[1], up[2])\n    this.right.set(t, right[0], right[1], right[2])\n  }\n}\n\nproto.pan = function(t, dx, dy, dz) {\n  dx = dx || 0.0\n  dy = dy || 0.0\n  dz = dz || 0.0\n\n  this.recalcMatrix(t)\n  var mat = this.computedMatrix\n\n  var dist = Math.exp(this.computedRadius[0])\n\n  var ux = mat[1]\n  var uy = mat[5]\n  var uz = mat[9]\n  var ul = len3(ux, uy, uz)\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var rx = mat[0]\n  var ry = mat[4]\n  var rz = mat[8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  var vx = rx * dx + ux * dy\n  var vy = ry * dx + uy * dy\n  var vz = rz * dx + uz * dy\n  this.center.move(t, vx, vy, vz)\n\n  //Update z-component of radius\n  var radius = Math.exp(this.computedRadius[0])\n  radius = Math.max(1e-4, radius + dz)\n  this.radius.set(t, Math.log(radius))\n}\n\nproto.translate = function(t, dx, dy, dz) {\n  this.center.move(t,\n    dx||0.0,\n    dy||0.0,\n    dz||0.0)\n}\n\n//Recenters the coordinate axes\nproto.setMatrix = function(t, mat, axes, noSnap) {\n  \n  //Get the axes for tare\n  var ushift = 1\n  if(typeof axes === 'number') {\n    ushift = (axes)|0\n  } \n  if(ushift < 0 || ushift > 3) {\n    ushift = 1\n  }\n  var vshift = (ushift + 2) % 3\n  var fshift = (ushift + 1) % 3\n\n  //Recompute state for new t value\n  if(!mat) { \n    this.recalcMatrix(t)\n    mat = this.computedMatrix\n  }\n\n  //Get right and up vectors\n  var ux = mat[ushift]\n  var uy = mat[ushift+4]\n  var uz = mat[ushift+8]\n  if(!noSnap) {\n    var ul = len3(ux, uy, uz)\n    ux /= ul\n    uy /= ul\n    uz /= ul\n  } else {\n    var ax = Math.abs(ux)\n    var ay = Math.abs(uy)\n    var az = Math.abs(uz)\n    var am = Math.max(ax,ay,az)\n    if(ax === am) {\n      ux = (ux < 0) ? -1 : 1\n      uy = uz = 0\n    } else if(az === am) {\n      uz = (uz < 0) ? -1 : 1\n      ux = uy = 0\n    } else {\n      uy = (uy < 0) ? -1 : 1\n      ux = uz = 0\n    }\n  }\n\n  var rx = mat[vshift]\n  var ry = mat[vshift+4]\n  var rz = mat[vshift+8]\n  var ru = rx * ux + ry * uy + rz * uz\n  rx -= ux * ru\n  ry -= uy * ru\n  rz -= uz * ru\n  var rl = len3(rx, ry, rz)\n  rx /= rl\n  ry /= rl\n  rz /= rl\n  \n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  this.center.jump(t, ex, ey, ez)\n  this.radius.idle(t)\n  this.up.jump(t, ux, uy, uz)\n  this.right.jump(t, rx, ry, rz)\n\n  var phi, theta\n  if(ushift === 2) {\n    var cx = mat[1]\n    var cy = mat[5]\n    var cz = mat[9]\n    var cr = cx * rx + cy * ry + cz * rz\n    var cf = cx * fx + cy * fy + cz * fz\n    if(tu < 0) {\n      phi = -Math.PI/2\n    } else {\n      phi = Math.PI/2\n    }\n    theta = Math.atan2(cf, cr)\n  } else {\n    var tx = mat[2]\n    var ty = mat[6]\n    var tz = mat[10]\n    var tu = tx * ux + ty * uy + tz * uz\n    var tr = tx * rx + ty * ry + tz * rz\n    var tf = tx * fx + ty * fy + tz * fz\n\n    phi = Math.asin(clamp1(tu))\n    theta = Math.atan2(tf, tr)\n  }\n\n  this.angle.jump(t, theta, phi)\n\n  this.recalcMatrix(t)\n  var dx = mat[2]\n  var dy = mat[6]\n  var dz = mat[10]\n\n  var imat = this.computedMatrix\n  invert44(imat, mat)\n  var w  = imat[15]\n  var ex = imat[12] / w\n  var ey = imat[13] / w\n  var ez = imat[14] / w\n\n  var gs = Math.exp(this.computedRadius[0])\n  this.center.jump(t, ex-dx*gs, ey-dy*gs, ez-dz*gs)\n}\n\nproto.lastT = function() {\n  return Math.max(\n    this.center.lastT(),\n    this.up.lastT(),\n    this.right.lastT(),\n    this.radius.lastT(),\n    this.angle.lastT())\n}\n\nproto.idle = function(t) {\n  this.center.idle(t)\n  this.up.idle(t)\n  this.right.idle(t)\n  this.radius.idle(t)\n  this.angle.idle(t)\n}\n\nproto.flush = function(t) {\n  this.center.flush(t)\n  this.up.flush(t)\n  this.right.flush(t)\n  this.radius.flush(t)\n  this.angle.flush(t)\n}\n\nproto.setDistance = function(t, d) {\n  if(d > 0) {\n    this.radius.set(t, Math.log(d))\n  }\n}\n\nproto.lookAt = function(t, eye, center, up) {\n  this.recalcMatrix(t)\n\n  eye    = eye    || this.computedEye\n  center = center || this.computedCenter\n  up     = up     || this.computedUp\n\n  var ux = up[0]\n  var uy = up[1]\n  var uz = up[2]\n  var ul = len3(ux, uy, uz)\n  if(ul < 1e-6) {\n    return\n  }\n  ux /= ul\n  uy /= ul\n  uz /= ul\n\n  var tx = eye[0] - center[0]\n  var ty = eye[1] - center[1]\n  var tz = eye[2] - center[2]\n  var tl = len3(tx, ty, tz)\n  if(tl < 1e-6) {\n    return\n  }\n  tx /= tl\n  ty /= tl\n  tz /= tl\n\n  var right = this.computedRight\n  var rx = right[0]\n  var ry = right[1]\n  var rz = right[2]\n  var ru = ux*rx + uy*ry + uz*rz\n  rx -= ru * ux\n  ry -= ru * uy\n  rz -= ru * uz\n  var rl = len3(rx, ry, rz)\n\n  if(rl < 0.01) {\n    rx = uy * tz - uz * ty\n    ry = uz * tx - ux * tz\n    rz = ux * ty - uy * tx\n    rl = len3(rx, ry, rz)\n    if(rl < 1e-6) {\n      return\n    }\n  }\n  rx /= rl\n  ry /= rl\n  rz /= rl\n\n  this.up.set(t, ux, uy, uz)\n  this.right.set(t, rx, ry, rz)\n  this.center.set(t, center[0], center[1], center[2])\n  this.radius.set(t, Math.log(tl))\n\n  var fx = uy * rz - uz * ry\n  var fy = uz * rx - ux * rz\n  var fz = ux * ry - uy * rx\n  var fl = len3(fx, fy, fz)\n  fx /= fl\n  fy /= fl\n  fz /= fl\n\n  var tu = ux*tx + uy*ty + uz*tz\n  var tr = rx*tx + ry*ty + rz*tz\n  var tf = fx*tx + fy*ty + fz*tz\n\n  var phi   = Math.asin(clamp1(tu))\n  var theta = Math.atan2(tf, tr)\n\n  var angleState = this.angle._state\n  var lastTheta  = angleState[angleState.length-1]\n  var lastPhi    = angleState[angleState.length-2]\n  lastTheta      = lastTheta % (2.0 * Math.PI)\n  var dp = Math.abs(lastTheta + 2.0 * Math.PI - theta)\n  var d0 = Math.abs(lastTheta - theta)\n  var dn = Math.abs(lastTheta - 2.0 * Math.PI - theta)\n  if(dp < d0) {\n    lastTheta += 2.0 * Math.PI\n  }\n  if(dn < d0) {\n    lastTheta -= 2.0 * Math.PI\n  }\n\n  this.angle.jump(this.angle.lastT(), lastTheta, lastPhi)\n  this.angle.set(t, theta, phi)\n}\n\nfunction createTurntableController(options) {\n  options = options || {}\n\n  var center = options.center || [0,0,0]\n  var up     = options.up     || [0,1,0]\n  var right  = options.right  || findOrthoPair(up)\n  var radius = options.radius || 1.0\n  var theta  = options.theta  || 0.0\n  var phi    = options.phi    || 0.0\n\n  center = [].slice.call(center, 0, 3)\n\n  up = [].slice.call(up, 0, 3)\n  normalize3(up, up)\n\n  right = [].slice.call(right, 0, 3)\n  normalize3(right, right)\n\n  if('eye' in options) {\n    var eye = options.eye\n    var toward = [\n      eye[0]-center[0],\n      eye[1]-center[1],\n      eye[2]-center[2]\n    ]\n    cross(right, toward, up)\n    if(len3(right[0], right[1], right[2]) < 1e-6) {\n      right = findOrthoPair(up)\n    } else {\n      normalize3(right, right)\n    }\n\n    radius = len3(toward[0], toward[1], toward[2])\n\n    var ut = dot3(up, toward) / radius\n    var rt = dot3(right, toward) / radius\n    phi    = Math.acos(ut)\n    theta  = Math.acos(rt)\n  }\n\n  //Use logarithmic coordinates for radius\n  radius = Math.log(radius)\n\n  //Return the controller\n  return new TurntableController(\n    options.zoomMin,\n    options.zoomMax,\n    center,\n    up,\n    right,\n    radius,\n    theta,\n    phi)\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar _ = Lib._;\nvar Axes = require('../../plots/cartesian/axes');\n\n// outlier definition based on http://www.physics.csbsju.edu/stats/box2.html\nmodule.exports = function calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n  var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n  var cd = [];\n\n  // N.B. violin reuses same Box.calc\n  var numKey = trace.type === 'violin' ? '_numViolins' : '_numBoxes';\n  var i;\n  var valAxis, valLetter;\n  var posAxis, posLetter;\n  if (trace.orientation === 'h') {\n    valAxis = xa;\n    valLetter = 'x';\n    posAxis = ya;\n    posLetter = 'y';\n  } else {\n    valAxis = ya;\n    valLetter = 'y';\n    posAxis = xa;\n    posLetter = 'x';\n  }\n  var val = valAxis.makeCalcdata(trace, valLetter);\n  var pos = getPos(trace, posLetter, posAxis, val, fullLayout[numKey]);\n  var dv = Lib.distinctVals(pos);\n  var posDistinct = dv.vals;\n  var dPos = dv.minDiff / 2;\n  var posBins = makeBins(posDistinct, dPos);\n  var pLen = posDistinct.length;\n  var ptsPerBin = initNestedArray(pLen);\n\n  // bin pts info per position bins\n  for (i = 0; i < trace._length; i++) {\n    var v = val[i];\n    if (!isNumeric(v)) continue;\n    var n = Lib.findBin(pos[i], posBins);\n    if (n >= 0 && n < pLen) {\n      var pt = {\n        v: v,\n        i: i\n      };\n      arraysToCalcdata(pt, trace, i);\n      ptsPerBin[n].push(pt);\n    }\n  }\n  var cdi;\n  var ptFilterFn = (trace.boxpoints || trace.points) === 'all' ? Lib.identity : function (pt) {\n    return pt.v < cdi.lf || pt.v > cdi.uf;\n  };\n\n  // build calcdata trace items, one item per distinct position\n  for (i = 0; i < pLen; i++) {\n    if (ptsPerBin[i].length > 0) {\n      var pts = ptsPerBin[i].sort(sortByVal);\n      var boxVals = pts.map(extractVal);\n      var bvLen = boxVals.length;\n      cdi = {};\n      cdi.pos = posDistinct[i];\n      cdi.pts = pts;\n      cdi.min = boxVals[0];\n      cdi.max = boxVals[bvLen - 1];\n      cdi.mean = Lib.mean(boxVals, bvLen);\n      cdi.sd = Lib.stdev(boxVals, bvLen, cdi.mean);\n\n      // first quartile\n      cdi.q1 = Lib.interp(boxVals, 0.25);\n      // median\n      cdi.med = Lib.interp(boxVals, 0.5);\n      // third quartile\n      cdi.q3 = Lib.interp(boxVals, 0.75);\n\n      // lower and upper fences - last point inside\n      // 1.5 interquartile ranges from quartiles\n      cdi.lf = Math.min(cdi.q1, boxVals[Math.min(Lib.findBin(2.5 * cdi.q1 - 1.5 * cdi.q3, boxVals, true) + 1, bvLen - 1)]);\n      cdi.uf = Math.max(cdi.q3, boxVals[Math.max(Lib.findBin(2.5 * cdi.q3 - 1.5 * cdi.q1, boxVals), 0)]);\n\n      // lower and upper outliers - 3 IQR out (don't clip to max/min,\n      // this is only for discriminating suspected & far outliers)\n      cdi.lo = 4 * cdi.q1 - 3 * cdi.q3;\n      cdi.uo = 4 * cdi.q3 - 3 * cdi.q1;\n\n      // lower and upper notches ~95% Confidence Intervals for median\n      var iqr = cdi.q3 - cdi.q1;\n      var mci = 1.57 * iqr / Math.sqrt(bvLen);\n      cdi.ln = cdi.med - mci;\n      cdi.un = cdi.med + mci;\n      cdi.pts2 = pts.filter(ptFilterFn);\n      cd.push(cdi);\n    }\n  }\n  calcSelection(cd, trace);\n  var extremes = Axes.findExtremes(valAxis, val, {\n    padded: true\n  });\n  trace._extremes[valAxis._id] = extremes;\n  if (cd.length > 0) {\n    cd[0].t = {\n      num: fullLayout[numKey],\n      dPos: dPos,\n      posLetter: posLetter,\n      valLetter: valLetter,\n      labels: {\n        med: _(gd, 'median:'),\n        min: _(gd, 'min:'),\n        q1: _(gd, 'q1:'),\n        q3: _(gd, 'q3:'),\n        max: _(gd, 'max:'),\n        mean: trace.boxmean === 'sd' ? _(gd, 'mean ± σ:') : _(gd, 'mean:'),\n        lf: _(gd, 'lower fence:'),\n        uf: _(gd, 'upper fence:')\n      }\n    };\n    fullLayout[numKey]++;\n    return cd;\n  } else {\n    return [{\n      t: {\n        empty: true\n      }\n    }];\n  }\n};\n\n// In vertical (horizontal) box plots:\n// if no x (y) data, use x0 (y0), or name\n// so if you want one box\n// per trace, set x0 (y0) to the x (y) value or category for this trace\n// (or set x (y) to a constant array matching y (x))\nfunction getPos(trace, posLetter, posAxis, val, num) {\n  if (posLetter in trace) {\n    return posAxis.makeCalcdata(trace, posLetter);\n  }\n  var pos0;\n  if (posLetter + '0' in trace) {\n    pos0 = trace[posLetter + '0'];\n  } else if ('name' in trace && (posAxis.type === 'category' || isNumeric(trace.name) && ['linear', 'log'].indexOf(posAxis.type) !== -1 || Lib.isDateTime(trace.name) && posAxis.type === 'date')) {\n    pos0 = trace.name;\n  } else {\n    pos0 = num;\n  }\n  var pos0c = posAxis.type === 'multicategory' ? posAxis.r2c_just_indices(pos0) : posAxis.d2c(pos0, 0, trace[posLetter + 'calendar']);\n  return val.map(function () {\n    return pos0c;\n  });\n}\nfunction makeBins(x, dx) {\n  var len = x.length;\n  var bins = new Array(len + 1);\n  for (var i = 0; i < len; i++) {\n    bins[i] = x[i] - dx;\n  }\n  bins[len] = x[len - 1] + dx;\n  return bins;\n}\nfunction initNestedArray(len) {\n  var arr = new Array(len);\n  for (var i = 0; i < len; i++) {\n    arr[i] = [];\n  }\n  return arr;\n}\nfunction arraysToCalcdata(pt, trace, i) {\n  var trace2calc = {\n    text: 'tx'\n  };\n  for (var k in trace2calc) {\n    if (Array.isArray(trace[k])) {\n      pt[trace2calc[k]] = trace[k][i];\n    }\n  }\n}\nfunction calcSelection(cd, trace) {\n  if (Lib.isArrayOrTypedArray(trace.selectedpoints)) {\n    for (var i = 0; i < cd.length; i++) {\n      var pts = cd[i].pts || [];\n      var ptNumber2cdIndex = {};\n      for (var j = 0; j < pts.length; j++) {\n        ptNumber2cdIndex[pts[j].i] = j;\n      }\n      Lib.tagSelected(pts, trace, ptNumber2cdIndex);\n    }\n  }\n}\nfunction sortByVal(a, b) {\n  return a.v - b.v;\n}\nfunction extractVal(o) {\n  return o.v;\n}","map":{"version":3,"names":["isNumeric","require","Lib","_","Axes","module","exports","calc","gd","trace","fullLayout","_fullLayout","xa","getFromId","xaxis","ya","yaxis","cd","numKey","type","i","valAxis","valLetter","posAxis","posLetter","orientation","val","makeCalcdata","pos","getPos","dv","distinctVals","posDistinct","vals","dPos","minDiff","posBins","makeBins","pLen","length","ptsPerBin","initNestedArray","_length","v","n","findBin","pt","arraysToCalcdata","push","cdi","ptFilterFn","boxpoints","points","identity","lf","uf","pts","sort","sortByVal","boxVals","map","extractVal","bvLen","min","max","mean","sd","stdev","q1","interp","med","q3","Math","lo","uo","iqr","mci","sqrt","ln","un","pts2","filter","calcSelection","extremes","findExtremes","padded","_extremes","_id","t","num","labels","boxmean","empty","pos0","name","indexOf","isDateTime","pos0c","r2c_just_indices","d2c","x","dx","len","bins","Array","arr","trace2calc","text","k","isArray","isArrayOrTypedArray","selectedpoints","ptNumber2cdIndex","j","tagSelected","a","b","o"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/box/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar _ = Lib._;\nvar Axes = require('../../plots/cartesian/axes');\n\n// outlier definition based on http://www.physics.csbsju.edu/stats/box2.html\nmodule.exports = function calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var xa = Axes.getFromId(gd, trace.xaxis || 'x');\n    var ya = Axes.getFromId(gd, trace.yaxis || 'y');\n    var cd = [];\n\n    // N.B. violin reuses same Box.calc\n    var numKey = trace.type === 'violin' ? '_numViolins' : '_numBoxes';\n\n    var i;\n    var valAxis, valLetter;\n    var posAxis, posLetter;\n\n    if(trace.orientation === 'h') {\n        valAxis = xa;\n        valLetter = 'x';\n        posAxis = ya;\n        posLetter = 'y';\n    } else {\n        valAxis = ya;\n        valLetter = 'y';\n        posAxis = xa;\n        posLetter = 'x';\n    }\n\n    var val = valAxis.makeCalcdata(trace, valLetter);\n    var pos = getPos(trace, posLetter, posAxis, val, fullLayout[numKey]);\n\n    var dv = Lib.distinctVals(pos);\n    var posDistinct = dv.vals;\n    var dPos = dv.minDiff / 2;\n    var posBins = makeBins(posDistinct, dPos);\n\n    var pLen = posDistinct.length;\n    var ptsPerBin = initNestedArray(pLen);\n\n    // bin pts info per position bins\n    for(i = 0; i < trace._length; i++) {\n        var v = val[i];\n        if(!isNumeric(v)) continue;\n\n        var n = Lib.findBin(pos[i], posBins);\n        if(n >= 0 && n < pLen) {\n            var pt = {v: v, i: i};\n            arraysToCalcdata(pt, trace, i);\n            ptsPerBin[n].push(pt);\n        }\n    }\n\n    var cdi;\n    var ptFilterFn = (trace.boxpoints || trace.points) === 'all' ?\n        Lib.identity :\n        function(pt) { return (pt.v < cdi.lf || pt.v > cdi.uf); };\n\n    // build calcdata trace items, one item per distinct position\n    for(i = 0; i < pLen; i++) {\n        if(ptsPerBin[i].length > 0) {\n            var pts = ptsPerBin[i].sort(sortByVal);\n            var boxVals = pts.map(extractVal);\n            var bvLen = boxVals.length;\n\n            cdi = {};\n            cdi.pos = posDistinct[i];\n            cdi.pts = pts;\n\n            cdi.min = boxVals[0];\n            cdi.max = boxVals[bvLen - 1];\n            cdi.mean = Lib.mean(boxVals, bvLen);\n            cdi.sd = Lib.stdev(boxVals, bvLen, cdi.mean);\n\n            // first quartile\n            cdi.q1 = Lib.interp(boxVals, 0.25);\n             // median\n            cdi.med = Lib.interp(boxVals, 0.5);\n            // third quartile\n            cdi.q3 = Lib.interp(boxVals, 0.75);\n\n            // lower and upper fences - last point inside\n            // 1.5 interquartile ranges from quartiles\n            cdi.lf = Math.min(\n                cdi.q1,\n                boxVals[Math.min(\n                    Lib.findBin(2.5 * cdi.q1 - 1.5 * cdi.q3, boxVals, true) + 1,\n                    bvLen - 1\n                )]\n            );\n            cdi.uf = Math.max(\n                cdi.q3,\n                boxVals[Math.max(\n                    Lib.findBin(2.5 * cdi.q3 - 1.5 * cdi.q1, boxVals),\n                    0\n                )]\n            );\n\n            // lower and upper outliers - 3 IQR out (don't clip to max/min,\n            // this is only for discriminating suspected & far outliers)\n            cdi.lo = 4 * cdi.q1 - 3 * cdi.q3;\n            cdi.uo = 4 * cdi.q3 - 3 * cdi.q1;\n\n            // lower and upper notches ~95% Confidence Intervals for median\n            var iqr = cdi.q3 - cdi.q1;\n            var mci = 1.57 * iqr / Math.sqrt(bvLen);\n            cdi.ln = cdi.med - mci;\n            cdi.un = cdi.med + mci;\n\n            cdi.pts2 = pts.filter(ptFilterFn);\n\n            cd.push(cdi);\n        }\n    }\n\n    calcSelection(cd, trace);\n    var extremes = Axes.findExtremes(valAxis, val, {padded: true});\n    trace._extremes[valAxis._id] = extremes;\n\n    if(cd.length > 0) {\n        cd[0].t = {\n            num: fullLayout[numKey],\n            dPos: dPos,\n            posLetter: posLetter,\n            valLetter: valLetter,\n            labels: {\n                med: _(gd, 'median:'),\n                min: _(gd, 'min:'),\n                q1: _(gd, 'q1:'),\n                q3: _(gd, 'q3:'),\n                max: _(gd, 'max:'),\n                mean: trace.boxmean === 'sd' ? _(gd, 'mean ± σ:') : _(gd, 'mean:'),\n                lf: _(gd, 'lower fence:'),\n                uf: _(gd, 'upper fence:')\n            }\n        };\n\n        fullLayout[numKey]++;\n        return cd;\n    } else {\n        return [{t: {empty: true}}];\n    }\n};\n\n// In vertical (horizontal) box plots:\n// if no x (y) data, use x0 (y0), or name\n// so if you want one box\n// per trace, set x0 (y0) to the x (y) value or category for this trace\n// (or set x (y) to a constant array matching y (x))\nfunction getPos(trace, posLetter, posAxis, val, num) {\n    if(posLetter in trace) {\n        return posAxis.makeCalcdata(trace, posLetter);\n    }\n\n    var pos0;\n\n    if(posLetter + '0' in trace) {\n        pos0 = trace[posLetter + '0'];\n    } else if('name' in trace && (\n        posAxis.type === 'category' || (\n            isNumeric(trace.name) &&\n            ['linear', 'log'].indexOf(posAxis.type) !== -1\n        ) || (\n            Lib.isDateTime(trace.name) &&\n            posAxis.type === 'date'\n        )\n    )) {\n        pos0 = trace.name;\n    } else {\n        pos0 = num;\n    }\n\n    var pos0c = posAxis.type === 'multicategory' ?\n        posAxis.r2c_just_indices(pos0) :\n        posAxis.d2c(pos0, 0, trace[posLetter + 'calendar']);\n\n    return val.map(function() { return pos0c; });\n}\n\nfunction makeBins(x, dx) {\n    var len = x.length;\n    var bins = new Array(len + 1);\n\n    for(var i = 0; i < len; i++) {\n        bins[i] = x[i] - dx;\n    }\n    bins[len] = x[len - 1] + dx;\n\n    return bins;\n}\n\nfunction initNestedArray(len) {\n    var arr = new Array(len);\n    for(var i = 0; i < len; i++) {\n        arr[i] = [];\n    }\n    return arr;\n}\n\nfunction arraysToCalcdata(pt, trace, i) {\n    var trace2calc = {\n        text: 'tx'\n    };\n\n    for(var k in trace2calc) {\n        if(Array.isArray(trace[k])) {\n            pt[trace2calc[k]] = trace[k][i];\n        }\n    }\n}\n\nfunction calcSelection(cd, trace) {\n    if(Lib.isArrayOrTypedArray(trace.selectedpoints)) {\n        for(var i = 0; i < cd.length; i++) {\n            var pts = cd[i].pts || [];\n            var ptNumber2cdIndex = {};\n\n            for(var j = 0; j < pts.length; j++) {\n                ptNumber2cdIndex[pts[j].i] = j;\n            }\n\n            Lib.tagSelected(pts, trace, ptNumber2cdIndex);\n        }\n    }\n}\n\nfunction sortByVal(a, b) { return a.v - b.v; }\n\nfunction extractVal(o) { return o.v; }\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
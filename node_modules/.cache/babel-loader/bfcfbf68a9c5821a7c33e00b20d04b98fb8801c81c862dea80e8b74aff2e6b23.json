{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../drawing');\nvar Axes = require('../../plots/cartesian/axes');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nmodule.exports = function draw(gd) {\n  var fullLayout = gd._fullLayout;\n  var imageDataAbove = [];\n  var imageDataSubplot = {};\n  var imageDataBelow = [];\n  var subplot;\n  var i;\n\n  // Sort into top, subplot, and bottom layers\n  for (i = 0; i < fullLayout.images.length; i++) {\n    var img = fullLayout.images[i];\n    if (img.visible) {\n      if (img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n        subplot = img.xref + img.yref;\n        var plotinfo = fullLayout._plots[subplot];\n        if (!plotinfo) {\n          // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n          // This can happen if you reference the image to an x / y axis combination\n          // that doesn't have any data on it (and layer is below)\n          imageDataBelow.push(img);\n          continue;\n        }\n        if (plotinfo.mainplot) {\n          subplot = plotinfo.mainplot.id;\n        }\n        if (!imageDataSubplot[subplot]) {\n          imageDataSubplot[subplot] = [];\n        }\n        imageDataSubplot[subplot].push(img);\n      } else if (img.layer === 'above') {\n        imageDataAbove.push(img);\n      } else {\n        imageDataBelow.push(img);\n      }\n    }\n  }\n  var anchors = {\n    x: {\n      left: {\n        sizing: 'xMin',\n        offset: 0\n      },\n      center: {\n        sizing: 'xMid',\n        offset: -1 / 2\n      },\n      right: {\n        sizing: 'xMax',\n        offset: -1\n      }\n    },\n    y: {\n      top: {\n        sizing: 'YMin',\n        offset: 0\n      },\n      middle: {\n        sizing: 'YMid',\n        offset: -1 / 2\n      },\n      bottom: {\n        sizing: 'YMax',\n        offset: -1\n      }\n    }\n  };\n\n  // Images must be converted to dataURL's for exporting.\n  function setImage(d) {\n    var thisImage = d3.select(this);\n    if (this.img && this.img.src === d.source) {\n      return;\n    }\n    thisImage.attr('xmlns', xmlnsNamespaces.svg);\n    var imagePromise = new Promise(function (resolve) {\n      var img = new Image();\n      this.img = img;\n\n      // If not set, a `tainted canvas` error is thrown\n      img.setAttribute('crossOrigin', 'anonymous');\n      img.onerror = errorHandler;\n      img.onload = function () {\n        var canvas = document.createElement('canvas');\n        canvas.width = this.width;\n        canvas.height = this.height;\n        var ctx = canvas.getContext('2d');\n        ctx.drawImage(this, 0, 0);\n        var dataURL = canvas.toDataURL('image/png');\n        thisImage.attr('xlink:href', dataURL);\n\n        // resolve promise in onload handler instead of on 'load' to support IE11\n        // see https://github.com/plotly/plotly.js/issues/1685\n        // for more details\n        resolve();\n      };\n      thisImage.on('error', errorHandler);\n      img.src = d.source;\n      function errorHandler() {\n        thisImage.remove();\n        resolve();\n      }\n    }.bind(this));\n    gd._promises.push(imagePromise);\n  }\n  function applyAttributes(d) {\n    var thisImage = d3.select(this);\n\n    // Axes if specified\n    var xa = Axes.getFromId(gd, d.xref);\n    var ya = Axes.getFromId(gd, d.yref);\n    var size = fullLayout._size;\n    var width = xa ? Math.abs(xa.l2p(d.sizex) - xa.l2p(0)) : d.sizex * size.w;\n    var height = ya ? Math.abs(ya.l2p(d.sizey) - ya.l2p(0)) : d.sizey * size.h;\n\n    // Offsets for anchor positioning\n    var xOffset = width * anchors.x[d.xanchor].offset;\n    var yOffset = height * anchors.y[d.yanchor].offset;\n    var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing;\n\n    // Final positions\n    var xPos = (xa ? xa.r2p(d.x) + xa._offset : d.x * size.w + size.l) + xOffset;\n    var yPos = (ya ? ya.r2p(d.y) + ya._offset : size.h - d.y * size.h + size.t) + yOffset;\n\n    // Construct the proper aspectRatio attribute\n    switch (d.sizing) {\n      case 'fill':\n        sizing += ' slice';\n        break;\n      case 'stretch':\n        sizing = 'none';\n        break;\n    }\n    thisImage.attr({\n      x: xPos,\n      y: yPos,\n      width: width,\n      height: height,\n      preserveAspectRatio: sizing,\n      opacity: d.opacity\n    });\n\n    // Set proper clipping on images\n    var xId = xa ? xa._id : '';\n    var yId = ya ? ya._id : '';\n    var clipAxes = xId + yId;\n    Drawing.setClipUrl(thisImage, clipAxes ? 'clip' + fullLayout._uid + clipAxes : null, gd);\n  }\n  var imagesBelow = fullLayout._imageLowerLayer.selectAll('image').data(imageDataBelow);\n  var imagesAbove = fullLayout._imageUpperLayer.selectAll('image').data(imageDataAbove);\n  imagesBelow.enter().append('image');\n  imagesAbove.enter().append('image');\n  imagesBelow.exit().remove();\n  imagesAbove.exit().remove();\n  imagesBelow.each(function (d) {\n    setImage.bind(this)(d);\n    applyAttributes.bind(this)(d);\n  });\n  imagesAbove.each(function (d) {\n    setImage.bind(this)(d);\n    applyAttributes.bind(this)(d);\n  });\n  var allSubplots = Object.keys(fullLayout._plots);\n  for (i = 0; i < allSubplots.length; i++) {\n    subplot = allSubplots[i];\n    var subplotObj = fullLayout._plots[subplot];\n\n    // filter out overlaid plots (which havd their images on the main plot)\n    // and gl2d plots (which don't support below images, at least not yet)\n    if (!subplotObj.imagelayer) continue;\n    var imagesOnSubplot = subplotObj.imagelayer.selectAll('image')\n    // even if there are no images on this subplot, we need to run\n    // enter and exit in case there were previously\n    .data(imageDataSubplot[subplot] || []);\n    imagesOnSubplot.enter().append('image');\n    imagesOnSubplot.exit().remove();\n    imagesOnSubplot.each(function (d) {\n      setImage.bind(this)(d);\n      applyAttributes.bind(this)(d);\n    });\n  }\n};","map":{"version":3,"names":["d3","require","Drawing","Axes","xmlnsNamespaces","module","exports","draw","gd","fullLayout","_fullLayout","imageDataAbove","imageDataSubplot","imageDataBelow","subplot","i","images","length","img","visible","layer","xref","yref","plotinfo","_plots","push","mainplot","id","anchors","x","left","sizing","offset","center","right","y","top","middle","bottom","setImage","d","thisImage","select","src","source","attr","svg","imagePromise","Promise","resolve","Image","setAttribute","onerror","errorHandler","onload","canvas","document","createElement","width","height","ctx","getContext","drawImage","dataURL","toDataURL","on","remove","bind","_promises","applyAttributes","xa","getFromId","ya","size","_size","Math","abs","l2p","sizex","w","sizey","h","xOffset","xanchor","yOffset","yanchor","xPos","r2p","_offset","l","yPos","t","preserveAspectRatio","opacity","xId","_id","yId","clipAxes","setClipUrl","_uid","imagesBelow","_imageLowerLayer","selectAll","data","imagesAbove","_imageUpperLayer","enter","append","exit","each","allSubplots","Object","keys","subplotObj","imagelayer","imagesOnSubplot"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/images/draw.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Drawing = require('../drawing');\nvar Axes = require('../../plots/cartesian/axes');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nmodule.exports = function draw(gd) {\n    var fullLayout = gd._fullLayout;\n    var imageDataAbove = [];\n    var imageDataSubplot = {};\n    var imageDataBelow = [];\n    var subplot;\n    var i;\n\n    // Sort into top, subplot, and bottom layers\n    for(i = 0; i < fullLayout.images.length; i++) {\n        var img = fullLayout.images[i];\n\n        if(img.visible) {\n            if(img.layer === 'below' && img.xref !== 'paper' && img.yref !== 'paper') {\n                subplot = img.xref + img.yref;\n\n                var plotinfo = fullLayout._plots[subplot];\n\n                if(!plotinfo) {\n                    // Fall back to _imageLowerLayer in case the requested subplot doesn't exist.\n                    // This can happen if you reference the image to an x / y axis combination\n                    // that doesn't have any data on it (and layer is below)\n                    imageDataBelow.push(img);\n                    continue;\n                }\n\n                if(plotinfo.mainplot) {\n                    subplot = plotinfo.mainplot.id;\n                }\n\n                if(!imageDataSubplot[subplot]) {\n                    imageDataSubplot[subplot] = [];\n                }\n                imageDataSubplot[subplot].push(img);\n            } else if(img.layer === 'above') {\n                imageDataAbove.push(img);\n            } else {\n                imageDataBelow.push(img);\n            }\n        }\n    }\n\n\n    var anchors = {\n        x: {\n            left: { sizing: 'xMin', offset: 0 },\n            center: { sizing: 'xMid', offset: -1 / 2 },\n            right: { sizing: 'xMax', offset: -1 }\n        },\n        y: {\n            top: { sizing: 'YMin', offset: 0 },\n            middle: { sizing: 'YMid', offset: -1 / 2 },\n            bottom: { sizing: 'YMax', offset: -1 }\n        }\n    };\n\n\n    // Images must be converted to dataURL's for exporting.\n    function setImage(d) {\n        var thisImage = d3.select(this);\n\n        if(this.img && this.img.src === d.source) {\n            return;\n        }\n\n        thisImage.attr('xmlns', xmlnsNamespaces.svg);\n\n        var imagePromise = new Promise(function(resolve) {\n\n            var img = new Image();\n            this.img = img;\n\n            // If not set, a `tainted canvas` error is thrown\n            img.setAttribute('crossOrigin', 'anonymous');\n            img.onerror = errorHandler;\n            img.onload = function() {\n                var canvas = document.createElement('canvas');\n                canvas.width = this.width;\n                canvas.height = this.height;\n\n                var ctx = canvas.getContext('2d');\n                ctx.drawImage(this, 0, 0);\n\n                var dataURL = canvas.toDataURL('image/png');\n\n                thisImage.attr('xlink:href', dataURL);\n\n                // resolve promise in onload handler instead of on 'load' to support IE11\n                // see https://github.com/plotly/plotly.js/issues/1685\n                // for more details\n                resolve();\n            };\n\n\n            thisImage.on('error', errorHandler);\n\n            img.src = d.source;\n\n            function errorHandler() {\n                thisImage.remove();\n                resolve();\n            }\n        }.bind(this));\n\n        gd._promises.push(imagePromise);\n    }\n\n    function applyAttributes(d) {\n        var thisImage = d3.select(this);\n\n        // Axes if specified\n        var xa = Axes.getFromId(gd, d.xref);\n        var ya = Axes.getFromId(gd, d.yref);\n\n        var size = fullLayout._size;\n        var width = xa ? Math.abs(xa.l2p(d.sizex) - xa.l2p(0)) : d.sizex * size.w;\n        var height = ya ? Math.abs(ya.l2p(d.sizey) - ya.l2p(0)) : d.sizey * size.h;\n\n        // Offsets for anchor positioning\n        var xOffset = width * anchors.x[d.xanchor].offset;\n        var yOffset = height * anchors.y[d.yanchor].offset;\n\n        var sizing = anchors.x[d.xanchor].sizing + anchors.y[d.yanchor].sizing;\n\n        // Final positions\n        var xPos = (xa ? xa.r2p(d.x) + xa._offset : d.x * size.w + size.l) + xOffset;\n        var yPos = (ya ? ya.r2p(d.y) + ya._offset : size.h - d.y * size.h + size.t) + yOffset;\n\n        // Construct the proper aspectRatio attribute\n        switch(d.sizing) {\n            case 'fill':\n                sizing += ' slice';\n                break;\n\n            case 'stretch':\n                sizing = 'none';\n                break;\n        }\n\n        thisImage.attr({\n            x: xPos,\n            y: yPos,\n            width: width,\n            height: height,\n            preserveAspectRatio: sizing,\n            opacity: d.opacity\n        });\n\n\n        // Set proper clipping on images\n        var xId = xa ? xa._id : '';\n        var yId = ya ? ya._id : '';\n        var clipAxes = xId + yId;\n\n        Drawing.setClipUrl(\n            thisImage,\n            clipAxes ? ('clip' + fullLayout._uid + clipAxes) : null,\n            gd\n        );\n    }\n\n    var imagesBelow = fullLayout._imageLowerLayer.selectAll('image')\n        .data(imageDataBelow);\n    var imagesAbove = fullLayout._imageUpperLayer.selectAll('image')\n        .data(imageDataAbove);\n\n    imagesBelow.enter().append('image');\n    imagesAbove.enter().append('image');\n\n    imagesBelow.exit().remove();\n    imagesAbove.exit().remove();\n\n    imagesBelow.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n    imagesAbove.each(function(d) {\n        setImage.bind(this)(d);\n        applyAttributes.bind(this)(d);\n    });\n\n    var allSubplots = Object.keys(fullLayout._plots);\n    for(i = 0; i < allSubplots.length; i++) {\n        subplot = allSubplots[i];\n        var subplotObj = fullLayout._plots[subplot];\n\n        // filter out overlaid plots (which havd their images on the main plot)\n        // and gl2d plots (which don't support below images, at least not yet)\n        if(!subplotObj.imagelayer) continue;\n\n        var imagesOnSubplot = subplotObj.imagelayer.selectAll('image')\n            // even if there are no images on this subplot, we need to run\n            // enter and exit in case there were previously\n            .data(imageDataSubplot[subplot] || []);\n\n        imagesOnSubplot.enter().append('image');\n        imagesOnSubplot.exit().remove();\n\n        imagesOnSubplot.each(function(d) {\n            setImage.bind(this)(d);\n            applyAttributes.bind(this)(d);\n        });\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('./helpers').hasColorscale;\nmodule.exports = function crossTraceDefaults(fullData) {\n  function replace(cont, k) {\n    var val = cont['_' + k];\n    if (val !== undefined) {\n      cont[k] = val;\n    }\n  }\n  function relinkColorAtts(trace, cAttrs) {\n    var cont = cAttrs.container ? Lib.nestedProperty(trace, cAttrs.container).get() : trace;\n    if (cont) {\n      var isAuto = cont.zauto || cont.cauto;\n      var minAttr = cAttrs.min;\n      var maxAttr = cAttrs.max;\n      if (isAuto || cont[minAttr] === undefined) {\n        replace(cont, minAttr);\n      }\n      if (isAuto || cont[maxAttr] === undefined) {\n        replace(cont, maxAttr);\n      }\n      if (cont.autocolorscale) {\n        replace(cont, 'colorscale');\n      }\n    }\n  }\n  for (var i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    var _module = trace._module;\n    if (_module.colorbar) {\n      relinkColorAtts(trace, _module.colorbar);\n    }\n\n    // TODO could generalize _module.colorscale and use it here?\n\n    if (hasColorscale(trace, 'marker.line')) {\n      relinkColorAtts(trace, {\n        container: 'marker.line',\n        min: 'cmin',\n        max: 'cmax'\n      });\n    }\n    if (hasColorscale(trace, 'line')) {\n      relinkColorAtts(trace, {\n        container: 'line',\n        min: 'cmin',\n        max: 'cmax'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Lib","require","hasColorscale","module","exports","crossTraceDefaults","fullData","replace","cont","k","val","undefined","relinkColorAtts","trace","cAttrs","container","nestedProperty","get","isAuto","zauto","cauto","minAttr","min","maxAttr","max","autocolorscale","i","length","_module","colorbar"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/colorscale/cross_trace_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar hasColorscale = require('./helpers').hasColorscale;\n\nmodule.exports = function crossTraceDefaults(fullData) {\n    function replace(cont, k) {\n        var val = cont['_' + k];\n        if(val !== undefined) {\n            cont[k] = val;\n        }\n    }\n\n    function relinkColorAtts(trace, cAttrs) {\n        var cont = cAttrs.container ?\n            Lib.nestedProperty(trace, cAttrs.container).get() :\n            trace;\n\n        if(cont) {\n            var isAuto = cont.zauto || cont.cauto;\n            var minAttr = cAttrs.min;\n            var maxAttr = cAttrs.max;\n\n            if(isAuto || cont[minAttr] === undefined) {\n                replace(cont, minAttr);\n            }\n            if(isAuto || cont[maxAttr] === undefined) {\n                replace(cont, maxAttr);\n            }\n            if(cont.autocolorscale) {\n                replace(cont, 'colorscale');\n            }\n        }\n    }\n\n    for(var i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        var _module = trace._module;\n\n        if(_module.colorbar) {\n            relinkColorAtts(trace, _module.colorbar);\n        }\n\n        // TODO could generalize _module.colorscale and use it here?\n\n        if(hasColorscale(trace, 'marker.line')) {\n            relinkColorAtts(trace, {\n                container: 'marker.line',\n                min: 'cmin',\n                max: 'cmax'\n            });\n        }\n\n        if(hasColorscale(trace, 'line')) {\n            relinkColorAtts(trace, {\n                container: 'line',\n                min: 'cmin',\n                max: 'cmax'\n            });\n        }\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIC,aAAa,GAAGD,OAAO,CAAC,WAAW,CAAC,CAACC,aAAa;AAEtDC,MAAM,CAACC,OAAO,GAAG,SAASC,kBAAkB,CAACC,QAAQ,EAAE;EACnD,SAASC,OAAO,CAACC,IAAI,EAAEC,CAAC,EAAE;IACtB,IAAIC,GAAG,GAAGF,IAAI,CAAC,GAAG,GAAGC,CAAC,CAAC;IACvB,IAAGC,GAAG,KAAKC,SAAS,EAAE;MAClBH,IAAI,CAACC,CAAC,CAAC,GAAGC,GAAG;IACjB;EACJ;EAEA,SAASE,eAAe,CAACC,KAAK,EAAEC,MAAM,EAAE;IACpC,IAAIN,IAAI,GAAGM,MAAM,CAACC,SAAS,GACvBf,GAAG,CAACgB,cAAc,CAACH,KAAK,EAAEC,MAAM,CAACC,SAAS,CAAC,CAACE,GAAG,EAAE,GACjDJ,KAAK;IAET,IAAGL,IAAI,EAAE;MACL,IAAIU,MAAM,GAAGV,IAAI,CAACW,KAAK,IAAIX,IAAI,CAACY,KAAK;MACrC,IAAIC,OAAO,GAAGP,MAAM,CAACQ,GAAG;MACxB,IAAIC,OAAO,GAAGT,MAAM,CAACU,GAAG;MAExB,IAAGN,MAAM,IAAIV,IAAI,CAACa,OAAO,CAAC,KAAKV,SAAS,EAAE;QACtCJ,OAAO,CAACC,IAAI,EAAEa,OAAO,CAAC;MAC1B;MACA,IAAGH,MAAM,IAAIV,IAAI,CAACe,OAAO,CAAC,KAAKZ,SAAS,EAAE;QACtCJ,OAAO,CAACC,IAAI,EAAEe,OAAO,CAAC;MAC1B;MACA,IAAGf,IAAI,CAACiB,cAAc,EAAE;QACpBlB,OAAO,CAACC,IAAI,EAAE,YAAY,CAAC;MAC/B;IACJ;EACJ;EAEA,KAAI,IAAIkB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,QAAQ,CAACqB,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAIb,KAAK,GAAGP,QAAQ,CAACoB,CAAC,CAAC;IACvB,IAAIE,OAAO,GAAGf,KAAK,CAACe,OAAO;IAE3B,IAAGA,OAAO,CAACC,QAAQ,EAAE;MACjBjB,eAAe,CAACC,KAAK,EAAEe,OAAO,CAACC,QAAQ,CAAC;IAC5C;;IAEA;;IAEA,IAAG3B,aAAa,CAACW,KAAK,EAAE,aAAa,CAAC,EAAE;MACpCD,eAAe,CAACC,KAAK,EAAE;QACnBE,SAAS,EAAE,aAAa;QACxBO,GAAG,EAAE,MAAM;QACXE,GAAG,EAAE;MACT,CAAC,CAAC;IACN;IAEA,IAAGtB,aAAa,CAACW,KAAK,EAAE,MAAM,CAAC,EAAE;MAC7BD,eAAe,CAACC,KAAK,EAAE;QACnBE,SAAS,EAAE,MAAM;QACjBO,GAAG,EAAE,MAAM;QACXE,GAAG,EAAE;MACT,CAAC,CAAC;IACN;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
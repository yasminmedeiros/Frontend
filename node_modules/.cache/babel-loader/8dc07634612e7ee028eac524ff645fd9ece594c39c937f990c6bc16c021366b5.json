{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\n/*\n * Map an array of x or y coordinates (c) to screen-space pixel coordinates (p).\n * The output array is optional, but if provided, it will be reused without\n * reallocation to the extent possible.\n */\nmodule.exports = function mapArray(out, data, func) {\n  var i;\n  if (!isArrayOrTypedArray(out)) {\n    // If not an array, make it an array:\n    out = [];\n  } else if (out.length > data.length) {\n    // If too long, truncate. (If too short, it will grow\n    // automatically so we don't care about that case)\n    out = out.slice(0, data.length);\n  }\n  for (i = 0; i < data.length; i++) {\n    out[i] = func(data[i]);\n  }\n  return out;\n};","map":{"version":3,"names":["isArrayOrTypedArray","require","module","exports","mapArray","out","data","func","i","length","slice"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/carpet/map_1d_array.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\n/*\n * Map an array of x or y coordinates (c) to screen-space pixel coordinates (p).\n * The output array is optional, but if provided, it will be reused without\n * reallocation to the extent possible.\n */\nmodule.exports = function mapArray(out, data, func) {\n    var i;\n\n    if(!isArrayOrTypedArray(out)) {\n        // If not an array, make it an array:\n        out = [];\n    } else if(out.length > data.length) {\n        // If too long, truncate. (If too short, it will grow\n        // automatically so we don't care about that case)\n        out = out.slice(0, data.length);\n    }\n\n    for(i = 0; i < data.length; i++) {\n        out[i] = func(data[i]);\n    }\n\n    return out;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,mBAAmB;;AAElE;AACA;AACA;AACA;AACA;AACAE,MAAM,CAACC,OAAO,GAAG,SAASC,QAAQ,CAACC,GAAG,EAAEC,IAAI,EAAEC,IAAI,EAAE;EAChD,IAAIC,CAAC;EAEL,IAAG,CAACR,mBAAmB,CAACK,GAAG,CAAC,EAAE;IAC1B;IACAA,GAAG,GAAG,EAAE;EACZ,CAAC,MAAM,IAAGA,GAAG,CAACI,MAAM,GAAGH,IAAI,CAACG,MAAM,EAAE;IAChC;IACA;IACAJ,GAAG,GAAGA,GAAG,CAACK,KAAK,CAAC,CAAC,EAAEJ,IAAI,CAACG,MAAM,CAAC;EACnC;EAEA,KAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,IAAI,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;IAC7BH,GAAG,CAACG,CAAC,CAAC,GAAGD,IAAI,CAACD,IAAI,CAACE,CAAC,CAAC,CAAC;EAC1B;EAEA,OAAOH,GAAG;AACd,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
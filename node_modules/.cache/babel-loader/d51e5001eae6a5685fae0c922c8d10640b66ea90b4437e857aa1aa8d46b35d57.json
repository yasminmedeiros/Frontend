{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../lib');\nvar Drawing = require('../components/drawing');\nvar Color = require('../components/color');\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar DOUBLEQUOTE_REGEX = /\"/g;\nvar DUMMY_SUB = 'TOBESTRIPPED';\nvar DUMMY_REGEX = new RegExp('(\"' + DUMMY_SUB + ')|(' + DUMMY_SUB + '\")', 'g');\nfunction htmlEntityDecode(s) {\n  var hiddenDiv = d3.select('body').append('div').style({\n    display: 'none'\n  }).html('');\n  var replaced = s.replace(/(&[^;]*;)/gi, function (d) {\n    if (d === '&lt;') {\n      return '&#60;';\n    } // special handling for brackets\n    if (d === '&rt;') {\n      return '&#62;';\n    }\n    if (d.indexOf('<') !== -1 || d.indexOf('>') !== -1) {\n      return '';\n    }\n    return hiddenDiv.html(d).text(); // everything else, let the browser decode it to unicode\n  });\n\n  hiddenDiv.remove();\n  return replaced;\n}\nfunction xmlEntityEncode(str) {\n  return str.replace(/&(?!\\w+;|\\#[0-9]+;| \\#x[0-9A-F]+;)/g, '&amp;');\n}\nmodule.exports = function toSVG(gd, format, scale) {\n  var fullLayout = gd._fullLayout;\n  var svg = fullLayout._paper;\n  var toppaper = fullLayout._toppaper;\n  var width = fullLayout.width;\n  var height = fullLayout.height;\n  var i;\n\n  // make background color a rect in the svg, then revert after scraping\n  // all other alterations have been dealt with by properly preparing the svg\n  // in the first place... like setting cursors with css classes so we don't\n  // have to remove them, and providing the right namespaces in the svg to\n  // begin with\n  svg.insert('rect', ':first-child').call(Drawing.setRect, 0, 0, width, height).call(Color.fill, fullLayout.paper_bgcolor);\n\n  // subplot-specific to-SVG methods\n  // which notably add the contents of the gl-container\n  // into the main svg node\n  var basePlotModules = fullLayout._basePlotModules || [];\n  for (i = 0; i < basePlotModules.length; i++) {\n    var _module = basePlotModules[i];\n    if (_module.toSVG) _module.toSVG(gd);\n  }\n\n  // add top items above them assumes everything in toppaper is either\n  // a group or a defs, and if it's empty (like hoverlayer) we can ignore it.\n  if (toppaper) {\n    var nodes = toppaper.node().childNodes;\n\n    // make copy of nodes as childNodes prop gets mutated in loop below\n    var topGroups = Array.prototype.slice.call(nodes);\n    for (i = 0; i < topGroups.length; i++) {\n      var topGroup = topGroups[i];\n      if (topGroup.childNodes.length) svg.node().appendChild(topGroup);\n    }\n  }\n\n  // remove draglayer for Adobe Illustrator compatibility\n  if (fullLayout._draggers) {\n    fullLayout._draggers.remove();\n  }\n\n  // in case the svg element had an explicit background color, remove this\n  // we want the rect to get the color so it's the right size; svg bg will\n  // fill whatever container it's displayed in regardless of plot size.\n  svg.node().style.background = '';\n  svg.selectAll('text').attr({\n    'data-unformatted': null,\n    'data-math': null\n  }).each(function () {\n    var txt = d3.select(this);\n\n    // hidden text is pre-formatting mathjax, the browser ignores it\n    // but in a static plot it's useless and it can confuse batik\n    // we've tried to standardize on display:none but make sure we still\n    // catch visibility:hidden if it ever arises\n    if (this.style.visibility === 'hidden' || this.style.display === 'none') {\n      txt.remove();\n      return;\n    } else {\n      // clear other visibility/display values to default\n      // to not potentially confuse non-browser SVG implementations\n      txt.style({\n        visibility: null,\n        display: null\n      });\n    }\n\n    // Font family styles break things because of quotation marks,\n    // so we must remove them *after* the SVG DOM has been serialized\n    // to a string (browsers convert singles back)\n    var ff = this.style.fontFamily;\n    if (ff && ff.indexOf('\"') !== -1) {\n      txt.style('font-family', ff.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n    }\n  });\n  svg.selectAll('.point, .scatterpts, .legendfill>path, .legendlines>path, .cbfill').each(function () {\n    var pt = d3.select(this);\n\n    // similar to font family styles above,\n    // we must remove \" after the SVG DOM has been serialized\n    var fill = this.style.fill;\n    if (fill && fill.indexOf('url(') !== -1) {\n      pt.style('fill', fill.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n    }\n    var stroke = this.style.stroke;\n    if (stroke && stroke.indexOf('url(') !== -1) {\n      pt.style('stroke', stroke.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n    }\n  });\n  if (format === 'pdf' || format === 'eps') {\n    // these formats make the extra line MathJax adds around symbols look super thick in some cases\n    // it looks better if this is removed entirely.\n    svg.selectAll('#MathJax_SVG_glyphs path').attr('stroke-width', 0);\n  }\n\n  // fix for IE namespacing quirk?\n  // http://stackoverflow.com/questions/19610089/unwanted-namespaces-on-svg-markup-when-using-xmlserializer-in-javascript-with-ie\n  svg.node().setAttributeNS(xmlnsNamespaces.xmlns, 'xmlns', xmlnsNamespaces.svg);\n  svg.node().setAttributeNS(xmlnsNamespaces.xmlns, 'xmlns:xlink', xmlnsNamespaces.xlink);\n  if (format === 'svg' && scale) {\n    svg.attr('width', scale * width);\n    svg.attr('height', scale * height);\n    svg.attr('viewBox', '0 0 ' + width + ' ' + height);\n  }\n  var s = new window.XMLSerializer().serializeToString(svg.node());\n  s = htmlEntityDecode(s);\n  s = xmlEntityEncode(s);\n\n  // Fix quotations around font strings and gradient URLs\n  s = s.replace(DUMMY_REGEX, '\\'');\n\n  // IE is very strict, so we will need to clean\n  //  svg with the following regex\n  //  yes this is messy, but do not know a better way\n  // Even with this IE will not work due to tainted canvas\n  //  see https://github.com/kangax/fabric.js/issues/1957\n  //      http://stackoverflow.com/questions/18112047/canvas-todataurl-working-in-all-browsers-except-ie10\n  // Leave here just in case the CORS/tainted IE issue gets resolved\n  if (Lib.isIE()) {\n    // replace double quote with single quote\n    s = s.replace(/\"/gi, '\\'');\n    // url in svg are single quoted\n    //   since we changed double to single\n    //   we'll need to change these to double-quoted\n    s = s.replace(/(\\('#)([^']*)('\\))/gi, '(\\\"#$2\\\")');\n    // font names with spaces will be escaped single-quoted\n    //   we'll need to change these to double-quoted\n    s = s.replace(/(\\\\')/gi, '\\\"');\n  }\n  return s;\n};","map":{"version":3,"names":["d3","require","Lib","Drawing","Color","xmlnsNamespaces","DOUBLEQUOTE_REGEX","DUMMY_SUB","DUMMY_REGEX","RegExp","htmlEntityDecode","s","hiddenDiv","select","append","style","display","html","replaced","replace","d","indexOf","text","remove","xmlEntityEncode","str","module","exports","toSVG","gd","format","scale","fullLayout","_fullLayout","svg","_paper","toppaper","_toppaper","width","height","i","insert","call","setRect","fill","paper_bgcolor","basePlotModules","_basePlotModules","length","_module","nodes","node","childNodes","topGroups","Array","prototype","slice","topGroup","appendChild","_draggers","background","selectAll","attr","each","txt","visibility","ff","fontFamily","pt","stroke","setAttributeNS","xmlns","xlink","window","XMLSerializer","serializeToString","isIE"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/snapshot/tosvg.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../lib');\nvar Drawing = require('../components/drawing');\nvar Color = require('../components/color');\n\nvar xmlnsNamespaces = require('../constants/xmlns_namespaces');\nvar DOUBLEQUOTE_REGEX = /\"/g;\nvar DUMMY_SUB = 'TOBESTRIPPED';\nvar DUMMY_REGEX = new RegExp('(\"' + DUMMY_SUB + ')|(' + DUMMY_SUB + '\")', 'g');\n\nfunction htmlEntityDecode(s) {\n    var hiddenDiv = d3.select('body').append('div').style({display: 'none'}).html('');\n    var replaced = s.replace(/(&[^;]*;)/gi, function(d) {\n        if(d === '&lt;') { return '&#60;'; } // special handling for brackets\n        if(d === '&rt;') { return '&#62;'; }\n        if(d.indexOf('<') !== -1 || d.indexOf('>') !== -1) { return ''; }\n        return hiddenDiv.html(d).text(); // everything else, let the browser decode it to unicode\n    });\n    hiddenDiv.remove();\n    return replaced;\n}\n\nfunction xmlEntityEncode(str) {\n    return str.replace(/&(?!\\w+;|\\#[0-9]+;| \\#x[0-9A-F]+;)/g, '&amp;');\n}\n\nmodule.exports = function toSVG(gd, format, scale) {\n    var fullLayout = gd._fullLayout;\n    var svg = fullLayout._paper;\n    var toppaper = fullLayout._toppaper;\n    var width = fullLayout.width;\n    var height = fullLayout.height;\n    var i;\n\n    // make background color a rect in the svg, then revert after scraping\n    // all other alterations have been dealt with by properly preparing the svg\n    // in the first place... like setting cursors with css classes so we don't\n    // have to remove them, and providing the right namespaces in the svg to\n    // begin with\n    svg.insert('rect', ':first-child')\n        .call(Drawing.setRect, 0, 0, width, height)\n        .call(Color.fill, fullLayout.paper_bgcolor);\n\n    // subplot-specific to-SVG methods\n    // which notably add the contents of the gl-container\n    // into the main svg node\n    var basePlotModules = fullLayout._basePlotModules || [];\n    for(i = 0; i < basePlotModules.length; i++) {\n        var _module = basePlotModules[i];\n\n        if(_module.toSVG) _module.toSVG(gd);\n    }\n\n    // add top items above them assumes everything in toppaper is either\n    // a group or a defs, and if it's empty (like hoverlayer) we can ignore it.\n    if(toppaper) {\n        var nodes = toppaper.node().childNodes;\n\n        // make copy of nodes as childNodes prop gets mutated in loop below\n        var topGroups = Array.prototype.slice.call(nodes);\n\n        for(i = 0; i < topGroups.length; i++) {\n            var topGroup = topGroups[i];\n\n            if(topGroup.childNodes.length) svg.node().appendChild(topGroup);\n        }\n    }\n\n    // remove draglayer for Adobe Illustrator compatibility\n    if(fullLayout._draggers) {\n        fullLayout._draggers.remove();\n    }\n\n    // in case the svg element had an explicit background color, remove this\n    // we want the rect to get the color so it's the right size; svg bg will\n    // fill whatever container it's displayed in regardless of plot size.\n    svg.node().style.background = '';\n\n    svg.selectAll('text')\n        .attr({'data-unformatted': null, 'data-math': null})\n        .each(function() {\n            var txt = d3.select(this);\n\n            // hidden text is pre-formatting mathjax, the browser ignores it\n            // but in a static plot it's useless and it can confuse batik\n            // we've tried to standardize on display:none but make sure we still\n            // catch visibility:hidden if it ever arises\n            if(this.style.visibility === 'hidden' || this.style.display === 'none') {\n                txt.remove();\n                return;\n            }\n            else {\n                // clear other visibility/display values to default\n                // to not potentially confuse non-browser SVG implementations\n                txt.style({visibility: null, display: null});\n            }\n\n            // Font family styles break things because of quotation marks,\n            // so we must remove them *after* the SVG DOM has been serialized\n            // to a string (browsers convert singles back)\n            var ff = this.style.fontFamily;\n            if(ff && ff.indexOf('\"') !== -1) {\n                txt.style('font-family', ff.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n            }\n        });\n\n    svg.selectAll('.point, .scatterpts, .legendfill>path, .legendlines>path, .cbfill').each(function() {\n        var pt = d3.select(this);\n\n        // similar to font family styles above,\n        // we must remove \" after the SVG DOM has been serialized\n        var fill = this.style.fill;\n        if(fill && fill.indexOf('url(') !== -1) {\n            pt.style('fill', fill.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n        }\n\n        var stroke = this.style.stroke;\n        if(stroke && stroke.indexOf('url(') !== -1) {\n            pt.style('stroke', stroke.replace(DOUBLEQUOTE_REGEX, DUMMY_SUB));\n        }\n    });\n\n    if(format === 'pdf' || format === 'eps') {\n        // these formats make the extra line MathJax adds around symbols look super thick in some cases\n        // it looks better if this is removed entirely.\n        svg.selectAll('#MathJax_SVG_glyphs path')\n            .attr('stroke-width', 0);\n    }\n\n    // fix for IE namespacing quirk?\n    // http://stackoverflow.com/questions/19610089/unwanted-namespaces-on-svg-markup-when-using-xmlserializer-in-javascript-with-ie\n    svg.node().setAttributeNS(xmlnsNamespaces.xmlns, 'xmlns', xmlnsNamespaces.svg);\n    svg.node().setAttributeNS(xmlnsNamespaces.xmlns, 'xmlns:xlink', xmlnsNamespaces.xlink);\n\n    if(format === 'svg' && scale) {\n        svg.attr('width', scale * width);\n        svg.attr('height', scale * height);\n        svg.attr('viewBox', '0 0 ' + width + ' ' + height);\n    }\n\n    var s = new window.XMLSerializer().serializeToString(svg.node());\n    s = htmlEntityDecode(s);\n    s = xmlEntityEncode(s);\n\n    // Fix quotations around font strings and gradient URLs\n    s = s.replace(DUMMY_REGEX, '\\'');\n\n    // IE is very strict, so we will need to clean\n    //  svg with the following regex\n    //  yes this is messy, but do not know a better way\n    // Even with this IE will not work due to tainted canvas\n    //  see https://github.com/kangax/fabric.js/issues/1957\n    //      http://stackoverflow.com/questions/18112047/canvas-todataurl-working-in-all-browsers-except-ie10\n    // Leave here just in case the CORS/tainted IE issue gets resolved\n    if(Lib.isIE()) {\n        // replace double quote with single quote\n        s = s.replace(/\"/gi, '\\'');\n        // url in svg are single quoted\n        //   since we changed double to single\n        //   we'll need to change these to double-quoted\n        s = s.replace(/(\\('#)([^']*)('\\))/gi, '(\\\"#$2\\\")');\n        // font names with spaces will be escaped single-quoted\n        //   we'll need to change these to double-quoted\n        s = s.replace(/(\\\\')/gi, '\\\"');\n    }\n\n    return s;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AAEtB,IAAIC,GAAG,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC3B,IAAIE,OAAO,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAC9C,IAAIG,KAAK,GAAGH,OAAO,CAAC,qBAAqB,CAAC;AAE1C,IAAII,eAAe,GAAGJ,OAAO,CAAC,+BAA+B,CAAC;AAC9D,IAAIK,iBAAiB,GAAG,IAAI;AAC5B,IAAIC,SAAS,GAAG,cAAc;AAC9B,IAAIC,WAAW,GAAG,IAAIC,MAAM,CAAC,IAAI,GAAGF,SAAS,GAAG,KAAK,GAAGA,SAAS,GAAG,IAAI,EAAE,GAAG,CAAC;AAE9E,SAASG,gBAAgB,CAACC,CAAC,EAAE;EACzB,IAAIC,SAAS,GAAGZ,EAAE,CAACa,MAAM,CAAC,MAAM,CAAC,CAACC,MAAM,CAAC,KAAK,CAAC,CAACC,KAAK,CAAC;IAACC,OAAO,EAAE;EAAM,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;EACjF,IAAIC,QAAQ,GAAGP,CAAC,CAACQ,OAAO,CAAC,aAAa,EAAE,UAASC,CAAC,EAAE;IAChD,IAAGA,CAAC,KAAK,MAAM,EAAE;MAAE,OAAO,OAAO;IAAE,CAAC,CAAC;IACrC,IAAGA,CAAC,KAAK,MAAM,EAAE;MAAE,OAAO,OAAO;IAAE;IACnC,IAAGA,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAID,CAAC,CAACC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAAE,OAAO,EAAE;IAAE;IAChE,OAAOT,SAAS,CAACK,IAAI,CAACG,CAAC,CAAC,CAACE,IAAI,EAAE,CAAC,CAAC;EACrC,CAAC,CAAC;;EACFV,SAAS,CAACW,MAAM,EAAE;EAClB,OAAOL,QAAQ;AACnB;AAEA,SAASM,eAAe,CAACC,GAAG,EAAE;EAC1B,OAAOA,GAAG,CAACN,OAAO,CAAC,qCAAqC,EAAE,OAAO,CAAC;AACtE;AAEAO,MAAM,CAACC,OAAO,GAAG,SAASC,KAAK,CAACC,EAAE,EAAEC,MAAM,EAAEC,KAAK,EAAE;EAC/C,IAAIC,UAAU,GAAGH,EAAE,CAACI,WAAW;EAC/B,IAAIC,GAAG,GAAGF,UAAU,CAACG,MAAM;EAC3B,IAAIC,QAAQ,GAAGJ,UAAU,CAACK,SAAS;EACnC,IAAIC,KAAK,GAAGN,UAAU,CAACM,KAAK;EAC5B,IAAIC,MAAM,GAAGP,UAAU,CAACO,MAAM;EAC9B,IAAIC,CAAC;;EAEL;EACA;EACA;EACA;EACA;EACAN,GAAG,CAACO,MAAM,CAAC,MAAM,EAAE,cAAc,CAAC,CAC7BC,IAAI,CAACvC,OAAO,CAACwC,OAAO,EAAE,CAAC,EAAE,CAAC,EAAEL,KAAK,EAAEC,MAAM,CAAC,CAC1CG,IAAI,CAACtC,KAAK,CAACwC,IAAI,EAAEZ,UAAU,CAACa,aAAa,CAAC;;EAE/C;EACA;EACA;EACA,IAAIC,eAAe,GAAGd,UAAU,CAACe,gBAAgB,IAAI,EAAE;EACvD,KAAIP,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGM,eAAe,CAACE,MAAM,EAAER,CAAC,EAAE,EAAE;IACxC,IAAIS,OAAO,GAAGH,eAAe,CAACN,CAAC,CAAC;IAEhC,IAAGS,OAAO,CAACrB,KAAK,EAAEqB,OAAO,CAACrB,KAAK,CAACC,EAAE,CAAC;EACvC;;EAEA;EACA;EACA,IAAGO,QAAQ,EAAE;IACT,IAAIc,KAAK,GAAGd,QAAQ,CAACe,IAAI,EAAE,CAACC,UAAU;;IAEtC;IACA,IAAIC,SAAS,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACd,IAAI,CAACQ,KAAK,CAAC;IAEjD,KAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGa,SAAS,CAACL,MAAM,EAAER,CAAC,EAAE,EAAE;MAClC,IAAIiB,QAAQ,GAAGJ,SAAS,CAACb,CAAC,CAAC;MAE3B,IAAGiB,QAAQ,CAACL,UAAU,CAACJ,MAAM,EAAEd,GAAG,CAACiB,IAAI,EAAE,CAACO,WAAW,CAACD,QAAQ,CAAC;IACnE;EACJ;;EAEA;EACA,IAAGzB,UAAU,CAAC2B,SAAS,EAAE;IACrB3B,UAAU,CAAC2B,SAAS,CAACpC,MAAM,EAAE;EACjC;;EAEA;EACA;EACA;EACAW,GAAG,CAACiB,IAAI,EAAE,CAACpC,KAAK,CAAC6C,UAAU,GAAG,EAAE;EAEhC1B,GAAG,CAAC2B,SAAS,CAAC,MAAM,CAAC,CAChBC,IAAI,CAAC;IAAC,kBAAkB,EAAE,IAAI;IAAE,WAAW,EAAE;EAAI,CAAC,CAAC,CACnDC,IAAI,CAAC,YAAW;IACb,IAAIC,GAAG,GAAGhE,EAAE,CAACa,MAAM,CAAC,IAAI,CAAC;;IAEzB;IACA;IACA;IACA;IACA,IAAG,IAAI,CAACE,KAAK,CAACkD,UAAU,KAAK,QAAQ,IAAI,IAAI,CAAClD,KAAK,CAACC,OAAO,KAAK,MAAM,EAAE;MACpEgD,GAAG,CAACzC,MAAM,EAAE;MACZ;IACJ,CAAC,MACI;MACD;MACA;MACAyC,GAAG,CAACjD,KAAK,CAAC;QAACkD,UAAU,EAAE,IAAI;QAAEjD,OAAO,EAAE;MAAI,CAAC,CAAC;IAChD;;IAEA;IACA;IACA;IACA,IAAIkD,EAAE,GAAG,IAAI,CAACnD,KAAK,CAACoD,UAAU;IAC9B,IAAGD,EAAE,IAAIA,EAAE,CAAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;MAC7B2C,GAAG,CAACjD,KAAK,CAAC,aAAa,EAAEmD,EAAE,CAAC/C,OAAO,CAACb,iBAAiB,EAAEC,SAAS,CAAC,CAAC;IACtE;EACJ,CAAC,CAAC;EAEN2B,GAAG,CAAC2B,SAAS,CAAC,mEAAmE,CAAC,CAACE,IAAI,CAAC,YAAW;IAC/F,IAAIK,EAAE,GAAGpE,EAAE,CAACa,MAAM,CAAC,IAAI,CAAC;;IAExB;IACA;IACA,IAAI+B,IAAI,GAAG,IAAI,CAAC7B,KAAK,CAAC6B,IAAI;IAC1B,IAAGA,IAAI,IAAIA,IAAI,CAACvB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MACpC+C,EAAE,CAACrD,KAAK,CAAC,MAAM,EAAE6B,IAAI,CAACzB,OAAO,CAACb,iBAAiB,EAAEC,SAAS,CAAC,CAAC;IAChE;IAEA,IAAI8D,MAAM,GAAG,IAAI,CAACtD,KAAK,CAACsD,MAAM;IAC9B,IAAGA,MAAM,IAAIA,MAAM,CAAChD,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MACxC+C,EAAE,CAACrD,KAAK,CAAC,QAAQ,EAAEsD,MAAM,CAAClD,OAAO,CAACb,iBAAiB,EAAEC,SAAS,CAAC,CAAC;IACpE;EACJ,CAAC,CAAC;EAEF,IAAGuB,MAAM,KAAK,KAAK,IAAIA,MAAM,KAAK,KAAK,EAAE;IACrC;IACA;IACAI,GAAG,CAAC2B,SAAS,CAAC,0BAA0B,CAAC,CACpCC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;EAChC;;EAEA;EACA;EACA5B,GAAG,CAACiB,IAAI,EAAE,CAACmB,cAAc,CAACjE,eAAe,CAACkE,KAAK,EAAE,OAAO,EAAElE,eAAe,CAAC6B,GAAG,CAAC;EAC9EA,GAAG,CAACiB,IAAI,EAAE,CAACmB,cAAc,CAACjE,eAAe,CAACkE,KAAK,EAAE,aAAa,EAAElE,eAAe,CAACmE,KAAK,CAAC;EAEtF,IAAG1C,MAAM,KAAK,KAAK,IAAIC,KAAK,EAAE;IAC1BG,GAAG,CAAC4B,IAAI,CAAC,OAAO,EAAE/B,KAAK,GAAGO,KAAK,CAAC;IAChCJ,GAAG,CAAC4B,IAAI,CAAC,QAAQ,EAAE/B,KAAK,GAAGQ,MAAM,CAAC;IAClCL,GAAG,CAAC4B,IAAI,CAAC,SAAS,EAAE,MAAM,GAAGxB,KAAK,GAAG,GAAG,GAAGC,MAAM,CAAC;EACtD;EAEA,IAAI5B,CAAC,GAAG,IAAI8D,MAAM,CAACC,aAAa,EAAE,CAACC,iBAAiB,CAACzC,GAAG,CAACiB,IAAI,EAAE,CAAC;EAChExC,CAAC,GAAGD,gBAAgB,CAACC,CAAC,CAAC;EACvBA,CAAC,GAAGa,eAAe,CAACb,CAAC,CAAC;;EAEtB;EACAA,CAAC,GAAGA,CAAC,CAACQ,OAAO,CAACX,WAAW,EAAE,IAAI,CAAC;;EAEhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAGN,GAAG,CAAC0E,IAAI,EAAE,EAAE;IACX;IACAjE,CAAC,GAAGA,CAAC,CAACQ,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC;IAC1B;IACA;IACA;IACAR,CAAC,GAAGA,CAAC,CAACQ,OAAO,CAAC,sBAAsB,EAAE,WAAW,CAAC;IAClD;IACA;IACAR,CAAC,GAAGA,CAAC,CAACQ,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC;EAClC;EAEA,OAAOR,CAAC;AACZ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
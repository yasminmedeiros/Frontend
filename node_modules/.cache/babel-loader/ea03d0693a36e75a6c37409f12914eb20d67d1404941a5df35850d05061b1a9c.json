{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar plotAttrs = require('../../plots/attributes');\nvar colorAttrs = require('../../components/color/attributes');\nvar fxAttrs = require('../../components/fx/attributes');\nvar domainAttrs = require('../../plots/domain').attributes;\nvar hovertemplateAttrs = require('../../components/fx/hovertemplate_attributes');\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar attrs = module.exports = overrideAll({\n  hoverinfo: extendFlat({}, plotAttrs.hoverinfo, {\n    flags: [],\n    arrayOk: false,\n    description: ['Determines which trace information appear on hover.', 'If `none` or `skip` are set, no information is displayed upon hovering.', 'But, if `none` is set, click and hover events are still fired.', 'Note that this attribute is superseded by `node.hoverinfo` and `node.hoverinfo`', 'for nodes and links respectively.'].join(' ')\n  }),\n  hoverlabel: fxAttrs.hoverlabel,\n  domain: domainAttrs({\n    name: 'sankey',\n    trace: true\n  }),\n  orientation: {\n    valType: 'enumerated',\n    values: ['v', 'h'],\n    dflt: 'h',\n    role: 'style',\n    description: 'Sets the orientation of the Sankey diagram.'\n  },\n  valueformat: {\n    valType: 'string',\n    dflt: '.3s',\n    role: 'style',\n    description: ['Sets the value formatting rule using d3 formatting mini-language', 'which is similar to those of Python. See', 'https://github.com/d3/d3-format/blob/master/README.md#locale_format'].join(' ')\n  },\n  valuesuffix: {\n    valType: 'string',\n    dflt: '',\n    role: 'style',\n    description: ['Adds a unit to follow the value in the hover tooltip. Add a space if a separation', 'is necessary from the value.'].join(' ')\n  },\n  arrangement: {\n    valType: 'enumerated',\n    values: ['snap', 'perpendicular', 'freeform', 'fixed'],\n    dflt: 'snap',\n    role: 'style',\n    description: ['If value is `snap` (the default), the node arrangement is assisted by automatic snapping of elements to', 'preserve space between nodes specified via `nodepad`.', 'If value is `perpendicular`, the nodes can only move along a line perpendicular to the flow.', 'If value is `freeform`, the nodes can freely move on the plane.', 'If value is `fixed`, the nodes are stationary.'].join(' ')\n  },\n  textfont: fontAttrs({\n    description: 'Sets the font for node labels'\n  }),\n  node: {\n    label: {\n      valType: 'data_array',\n      dflt: [],\n      role: 'info',\n      description: 'The shown name of the node.'\n    },\n    color: {\n      valType: 'color',\n      role: 'style',\n      arrayOk: true,\n      description: ['Sets the `node` color. It can be a single value, or an array for specifying color for each `node`.', 'If `node.color` is omitted, then the default `Plotly` color palette will be cycled through', 'to have a variety of colors. These defaults are not fully opaque, to allow some visibility of', 'what is beneath the node.'].join(' ')\n    },\n    line: {\n      color: {\n        valType: 'color',\n        role: 'style',\n        dflt: colorAttrs.defaultLine,\n        arrayOk: true,\n        description: ['Sets the color of the `line` around each `node`.'].join(' ')\n      },\n      width: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        dflt: 0.5,\n        arrayOk: true,\n        description: ['Sets the width (in px) of the `line` around each `node`.'].join(' ')\n      }\n    },\n    pad: {\n      valType: 'number',\n      arrayOk: false,\n      min: 0,\n      dflt: 20,\n      role: 'style',\n      description: 'Sets the padding (in px) between the `nodes`.'\n    },\n    thickness: {\n      valType: 'number',\n      arrayOk: false,\n      min: 1,\n      dflt: 20,\n      role: 'style',\n      description: 'Sets the thickness (in px) of the `nodes`.'\n    },\n    hoverinfo: {\n      valType: 'enumerated',\n      values: ['all', 'none', 'skip'],\n      dflt: 'all',\n      role: 'info',\n      description: ['Determines which trace information appear when hovering nodes.', 'If `none` or `skip` are set, no information is displayed upon hovering.', 'But, if `none` is set, click and hover events are still fired.'].join(' ')\n    },\n    hoverlabel: fxAttrs.hoverlabel,\n    // needs editType override,\n    hovertemplate: hovertemplateAttrs({}, {\n      description: 'Variables `sourceLinks` and `targetLinks` are arrays of link objects.',\n      keys: ['value', 'label']\n    }),\n    description: 'The nodes of the Sankey plot.'\n  },\n  link: {\n    label: {\n      valType: 'data_array',\n      dflt: [],\n      role: 'info',\n      description: 'The shown name of the link.'\n    },\n    color: {\n      valType: 'color',\n      role: 'style',\n      arrayOk: true,\n      description: ['Sets the `link` color. It can be a single value, or an array for specifying color for each `link`.', 'If `link.color` is omitted, then by default, a translucent grey link will be used.'].join(' ')\n    },\n    line: {\n      color: {\n        valType: 'color',\n        role: 'style',\n        dflt: colorAttrs.defaultLine,\n        arrayOk: true,\n        description: ['Sets the color of the `line` around each `link`.'].join(' ')\n      },\n      width: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        dflt: 0,\n        arrayOk: true,\n        description: ['Sets the width (in px) of the `line` around each `link`.'].join(' ')\n      }\n    },\n    source: {\n      valType: 'data_array',\n      role: 'info',\n      dflt: [],\n      description: 'An integer number `[0..nodes.length - 1]` that represents the source node.'\n    },\n    target: {\n      valType: 'data_array',\n      role: 'info',\n      dflt: [],\n      description: 'An integer number `[0..nodes.length - 1]` that represents the target node.'\n    },\n    value: {\n      valType: 'data_array',\n      dflt: [],\n      role: 'info',\n      description: 'A numeric value representing the flow volume value.'\n    },\n    hoverinfo: {\n      valType: 'enumerated',\n      values: ['all', 'none', 'skip'],\n      dflt: 'all',\n      role: 'info',\n      description: ['Determines which trace information appear when hovering links.', 'If `none` or `skip` are set, no information is displayed upon hovering.', 'But, if `none` is set, click and hover events are still fired.'].join(' ')\n    },\n    hoverlabel: fxAttrs.hoverlabel,\n    // needs editType override,\n    hovertemplate: hovertemplateAttrs({}, {\n      description: 'Variables `source` and `target` are node objects.',\n      keys: ['value', 'label']\n    }),\n    description: 'The links of the Sankey plot.'\n  }\n}, 'calc', 'nested');\nattrs.transforms = undefined;","map":{"version":3,"names":["fontAttrs","require","plotAttrs","colorAttrs","fxAttrs","domainAttrs","attributes","hovertemplateAttrs","extendFlat","overrideAll","attrs","module","exports","hoverinfo","flags","arrayOk","description","join","hoverlabel","domain","name","trace","orientation","valType","values","dflt","role","valueformat","valuesuffix","arrangement","textfont","node","label","color","line","defaultLine","width","min","pad","thickness","hovertemplate","keys","link","source","target","value","transforms","undefined"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/sankey/attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fontAttrs = require('../../plots/font_attributes');\nvar plotAttrs = require('../../plots/attributes');\nvar colorAttrs = require('../../components/color/attributes');\nvar fxAttrs = require('../../components/fx/attributes');\nvar domainAttrs = require('../../plots/domain').attributes;\nvar hovertemplateAttrs = require('../../components/fx/hovertemplate_attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar attrs = module.exports = overrideAll({\n    hoverinfo: extendFlat({}, plotAttrs.hoverinfo, {\n        flags: [],\n        arrayOk: false,\n        description: [\n            'Determines which trace information appear on hover.',\n            'If `none` or `skip` are set, no information is displayed upon hovering.',\n            'But, if `none` is set, click and hover events are still fired.',\n            'Note that this attribute is superseded by `node.hoverinfo` and `node.hoverinfo`',\n            'for nodes and links respectively.'\n        ].join(' ')\n    }),\n    hoverlabel: fxAttrs.hoverlabel,\n    domain: domainAttrs({name: 'sankey', trace: true}),\n\n    orientation: {\n        valType: 'enumerated',\n        values: ['v', 'h'],\n        dflt: 'h',\n        role: 'style',\n        description: 'Sets the orientation of the Sankey diagram.'\n    },\n\n    valueformat: {\n        valType: 'string',\n        dflt: '.3s',\n        role: 'style',\n        description: [\n            'Sets the value formatting rule using d3 formatting mini-language',\n            'which is similar to those of Python. See',\n            'https://github.com/d3/d3-format/blob/master/README.md#locale_format'\n        ].join(' ')\n    },\n\n    valuesuffix: {\n        valType: 'string',\n        dflt: '',\n        role: 'style',\n        description: [\n            'Adds a unit to follow the value in the hover tooltip. Add a space if a separation',\n            'is necessary from the value.'\n        ].join(' ')\n    },\n\n    arrangement: {\n        valType: 'enumerated',\n        values: ['snap', 'perpendicular', 'freeform', 'fixed'],\n        dflt: 'snap',\n        role: 'style',\n        description: [\n            'If value is `snap` (the default), the node arrangement is assisted by automatic snapping of elements to',\n            'preserve space between nodes specified via `nodepad`.',\n            'If value is `perpendicular`, the nodes can only move along a line perpendicular to the flow.',\n            'If value is `freeform`, the nodes can freely move on the plane.',\n            'If value is `fixed`, the nodes are stationary.'\n        ].join(' ')\n    },\n\n    textfont: fontAttrs({\n        description: 'Sets the font for node labels'\n    }),\n\n    node: {\n        label: {\n            valType: 'data_array',\n            dflt: [],\n            role: 'info',\n            description: 'The shown name of the node.'\n        },\n        color: {\n            valType: 'color',\n            role: 'style',\n            arrayOk: true,\n            description: [\n                'Sets the `node` color. It can be a single value, or an array for specifying color for each `node`.',\n                'If `node.color` is omitted, then the default `Plotly` color palette will be cycled through',\n                'to have a variety of colors. These defaults are not fully opaque, to allow some visibility of',\n                'what is beneath the node.'\n            ].join(' ')\n        },\n        line: {\n            color: {\n                valType: 'color',\n                role: 'style',\n                dflt: colorAttrs.defaultLine,\n                arrayOk: true,\n                description: [\n                    'Sets the color of the `line` around each `node`.'\n                ].join(' ')\n            },\n            width: {\n                valType: 'number',\n                role: 'style',\n                min: 0,\n                dflt: 0.5,\n                arrayOk: true,\n                description: [\n                    'Sets the width (in px) of the `line` around each `node`.'\n                ].join(' ')\n            }\n        },\n        pad: {\n            valType: 'number',\n            arrayOk: false,\n            min: 0,\n            dflt: 20,\n            role: 'style',\n            description: 'Sets the padding (in px) between the `nodes`.'\n        },\n        thickness: {\n            valType: 'number',\n            arrayOk: false,\n            min: 1,\n            dflt: 20,\n            role: 'style',\n            description: 'Sets the thickness (in px) of the `nodes`.'\n        },\n        hoverinfo: {\n            valType: 'enumerated',\n            values: ['all', 'none', 'skip'],\n            dflt: 'all',\n            role: 'info',\n            description: [\n                'Determines which trace information appear when hovering nodes.',\n                'If `none` or `skip` are set, no information is displayed upon hovering.',\n                'But, if `none` is set, click and hover events are still fired.'\n            ].join(' ')\n        },\n        hoverlabel: fxAttrs.hoverlabel, // needs editType override,\n        hovertemplate: hovertemplateAttrs({}, {\n            description: 'Variables `sourceLinks` and `targetLinks` are arrays of link objects.',\n            keys: ['value', 'label']\n        }),\n        description: 'The nodes of the Sankey plot.'\n    },\n\n    link: {\n        label: {\n            valType: 'data_array',\n            dflt: [],\n            role: 'info',\n            description: 'The shown name of the link.'\n        },\n        color: {\n            valType: 'color',\n            role: 'style',\n            arrayOk: true,\n            description: [\n                'Sets the `link` color. It can be a single value, or an array for specifying color for each `link`.',\n                'If `link.color` is omitted, then by default, a translucent grey link will be used.'\n            ].join(' ')\n        },\n        line: {\n            color: {\n                valType: 'color',\n                role: 'style',\n                dflt: colorAttrs.defaultLine,\n                arrayOk: true,\n                description: [\n                    'Sets the color of the `line` around each `link`.'\n                ].join(' ')\n            },\n            width: {\n                valType: 'number',\n                role: 'style',\n                min: 0,\n                dflt: 0,\n                arrayOk: true,\n                description: [\n                    'Sets the width (in px) of the `line` around each `link`.'\n                ].join(' ')\n            }\n        },\n        source: {\n            valType: 'data_array',\n            role: 'info',\n            dflt: [],\n            description: 'An integer number `[0..nodes.length - 1]` that represents the source node.'\n        },\n        target: {\n            valType: 'data_array',\n            role: 'info',\n            dflt: [],\n            description: 'An integer number `[0..nodes.length - 1]` that represents the target node.'\n        },\n        value: {\n            valType: 'data_array',\n            dflt: [],\n            role: 'info',\n            description: 'A numeric value representing the flow volume value.'\n        },\n        hoverinfo: {\n            valType: 'enumerated',\n            values: ['all', 'none', 'skip'],\n            dflt: 'all',\n            role: 'info',\n            description: [\n                'Determines which trace information appear when hovering links.',\n                'If `none` or `skip` are set, no information is displayed upon hovering.',\n                'But, if `none` is set, click and hover events are still fired.'\n            ].join(' ')\n        },\n        hoverlabel: fxAttrs.hoverlabel, // needs editType override,\n        hovertemplate: hovertemplateAttrs({}, {\n            description: 'Variables `source` and `target` are node objects.',\n            keys: ['value', 'label']\n        }),\n        description: 'The links of the Sankey plot.'\n    }\n}, 'calc', 'nested');\nattrs.transforms = undefined;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
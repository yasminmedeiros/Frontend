{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fxAttrs = require('../components/fx/attributes');\nmodule.exports = {\n  type: {\n    valType: 'enumerated',\n    role: 'info',\n    values: [],\n    // listed dynamically\n    dflt: 'scatter',\n    editType: 'calc+clearAxisTypes',\n    _noTemplating: true // we handle this at a higher level\n  },\n\n  visible: {\n    valType: 'enumerated',\n    values: [true, false, 'legendonly'],\n    role: 'info',\n    dflt: true,\n    editType: 'calc',\n    description: ['Determines whether or not this trace is visible.', 'If *legendonly*, the trace is not drawn,', 'but can appear as a legend item', '(provided that the legend itself is visible).'].join(' ')\n  },\n  showlegend: {\n    valType: 'boolean',\n    role: 'info',\n    dflt: true,\n    editType: 'style',\n    description: ['Determines whether or not an item corresponding to this', 'trace is shown in the legend.'].join(' ')\n  },\n  legendgroup: {\n    valType: 'string',\n    role: 'info',\n    dflt: '',\n    editType: 'style',\n    description: ['Sets the legend group for this trace.', 'Traces part of the same legend group hide/show at the same time', 'when toggling legend items.'].join(' ')\n  },\n  opacity: {\n    valType: 'number',\n    role: 'style',\n    min: 0,\n    max: 1,\n    dflt: 1,\n    editType: 'style',\n    description: 'Sets the opacity of the trace.'\n  },\n  name: {\n    valType: 'string',\n    role: 'info',\n    editType: 'style',\n    description: ['Sets the trace name.', 'The trace name appear as the legend item and on hover.'].join(' ')\n  },\n  uid: {\n    valType: 'string',\n    role: 'info',\n    editType: 'plot',\n    anim: true,\n    description: ['Assign an id to this trace,', 'Use this to provide object constancy between traces during animations', 'and transitions.'].join(' ')\n  },\n  ids: {\n    valType: 'data_array',\n    editType: 'calc',\n    anim: true,\n    description: ['Assigns id labels to each datum.', 'These ids for object constancy of data points during animation.', 'Should be an array of strings, not numbers or any other type.'].join(' ')\n  },\n  customdata: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Assigns extra data each datum.', 'This may be useful when listening to hover, click and selection events.', 'Note that, *scatter* traces also appends customdata items in the markers', 'DOM elements'].join(' ')\n  },\n  // N.B. these cannot be 'data_array' as they do not have the same length as\n  // other data arrays and arrayOk attributes in general\n  //\n  // Maybe add another valType:\n  // https://github.com/plotly/plotly.js/issues/1894\n  selectedpoints: {\n    valType: 'any',\n    role: 'info',\n    editType: 'calc',\n    description: ['Array containing integer indices of selected points.', 'Has an effect only for traces that support selections.', 'Note that an empty array means an empty selection where the `unselected`', 'are turned on for all points, whereas, any other non-array values means no', 'selection all where the `selected` and `unselected` styles have no effect.'].join(' ')\n  },\n  hoverinfo: {\n    valType: 'flaglist',\n    role: 'info',\n    flags: ['x', 'y', 'z', 'text', 'name'],\n    extras: ['all', 'none', 'skip'],\n    arrayOk: true,\n    dflt: 'all',\n    editType: 'none',\n    description: ['Determines which trace information appear on hover.', 'If `none` or `skip` are set, no information is displayed upon hovering.', 'But, if `none` is set, click and hover events are still fired.'].join(' ')\n  },\n  hoverlabel: fxAttrs.hoverlabel,\n  stream: {\n    token: {\n      valType: 'string',\n      noBlank: true,\n      strict: true,\n      role: 'info',\n      editType: 'calc',\n      description: ['The stream id number links a data trace on a plot with a stream.', 'See https://plot.ly/settings for more details.'].join(' ')\n    },\n    maxpoints: {\n      valType: 'number',\n      min: 0,\n      max: 10000,\n      dflt: 500,\n      role: 'info',\n      editType: 'calc',\n      description: ['Sets the maximum number of points to keep on the plots from an', 'incoming stream.', 'If `maxpoints` is set to *50*, only the newest 50 points will', 'be displayed on the plot.'].join(' ')\n    },\n    editType: 'calc'\n  },\n  transforms: {\n    _isLinkedToArray: 'transform',\n    editType: 'calc',\n    description: ['An array of operations that manipulate the trace data,', 'for example filtering or sorting the data arrays.'].join(' ')\n  },\n  uirevision: {\n    valType: 'any',\n    role: 'info',\n    editType: 'none',\n    description: ['Controls persistence of some user-driven changes to the trace:', '`constraintrange` in `parcoords` traces, as well as some', '`editable: true` modifications such as `name` and `colorbar.title`.', 'Defaults to `layout.uirevision`.', 'Note that other user-driven trace attribute changes are controlled', 'by `layout` attributes:', '`trace.visible` is controlled by `layout.legend.uirevision`,', '`selectedpoints` is controlled by `layout.selectionrevision`,', 'and `colorbar.(x|y)` (accessible with `config: {editable: true}`)', 'is controlled by `layout.editrevision`.', 'Trace changes are tracked by `uid`, which only falls back on trace', 'index if no `uid` is provided. So if your app can add/remove traces', 'before the end of the `data` array, such that the same trace has a', 'different index, you can still preserve user-driven changes if you', 'give each trace a `uid` that stays with it as it moves.'].join(' ')\n  }\n};","map":{"version":3,"names":["fxAttrs","require","module","exports","type","valType","role","values","dflt","editType","_noTemplating","visible","description","join","showlegend","legendgroup","opacity","min","max","name","uid","anim","ids","customdata","selectedpoints","hoverinfo","flags","extras","arrayOk","hoverlabel","stream","token","noBlank","strict","maxpoints","transforms","_isLinkedToArray","uirevision"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/attributes.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar fxAttrs = require('../components/fx/attributes');\n\nmodule.exports = {\n    type: {\n        valType: 'enumerated',\n        role: 'info',\n        values: [],     // listed dynamically\n        dflt: 'scatter',\n        editType: 'calc+clearAxisTypes',\n        _noTemplating: true // we handle this at a higher level\n    },\n    visible: {\n        valType: 'enumerated',\n        values: [true, false, 'legendonly'],\n        role: 'info',\n        dflt: true,\n        editType: 'calc',\n        description: [\n            'Determines whether or not this trace is visible.',\n            'If *legendonly*, the trace is not drawn,',\n            'but can appear as a legend item',\n            '(provided that the legend itself is visible).'\n        ].join(' ')\n    },\n    showlegend: {\n        valType: 'boolean',\n        role: 'info',\n        dflt: true,\n        editType: 'style',\n        description: [\n            'Determines whether or not an item corresponding to this',\n            'trace is shown in the legend.'\n        ].join(' ')\n    },\n    legendgroup: {\n        valType: 'string',\n        role: 'info',\n        dflt: '',\n        editType: 'style',\n        description: [\n            'Sets the legend group for this trace.',\n            'Traces part of the same legend group hide/show at the same time',\n            'when toggling legend items.'\n        ].join(' ')\n    },\n    opacity: {\n        valType: 'number',\n        role: 'style',\n        min: 0,\n        max: 1,\n        dflt: 1,\n        editType: 'style',\n        description: 'Sets the opacity of the trace.'\n    },\n    name: {\n        valType: 'string',\n        role: 'info',\n        editType: 'style',\n        description: [\n            'Sets the trace name.',\n            'The trace name appear as the legend item and on hover.'\n        ].join(' ')\n    },\n    uid: {\n        valType: 'string',\n        role: 'info',\n        editType: 'plot',\n        anim: true,\n        description: [\n            'Assign an id to this trace,',\n            'Use this to provide object constancy between traces during animations',\n            'and transitions.'\n        ].join(' ')\n    },\n    ids: {\n        valType: 'data_array',\n        editType: 'calc',\n        anim: true,\n        description: [\n            'Assigns id labels to each datum.',\n            'These ids for object constancy of data points during animation.',\n            'Should be an array of strings, not numbers or any other type.'\n        ].join(' ')\n    },\n    customdata: {\n        valType: 'data_array',\n        editType: 'calc',\n        description: [\n            'Assigns extra data each datum.',\n            'This may be useful when listening to hover, click and selection events.',\n            'Note that, *scatter* traces also appends customdata items in the markers',\n            'DOM elements'\n        ].join(' ')\n    },\n\n    // N.B. these cannot be 'data_array' as they do not have the same length as\n    // other data arrays and arrayOk attributes in general\n    //\n    // Maybe add another valType:\n    // https://github.com/plotly/plotly.js/issues/1894\n    selectedpoints: {\n        valType: 'any',\n        role: 'info',\n        editType: 'calc',\n        description: [\n            'Array containing integer indices of selected points.',\n            'Has an effect only for traces that support selections.',\n            'Note that an empty array means an empty selection where the `unselected`',\n            'are turned on for all points, whereas, any other non-array values means no',\n            'selection all where the `selected` and `unselected` styles have no effect.'\n        ].join(' ')\n    },\n\n    hoverinfo: {\n        valType: 'flaglist',\n        role: 'info',\n        flags: ['x', 'y', 'z', 'text', 'name'],\n        extras: ['all', 'none', 'skip'],\n        arrayOk: true,\n        dflt: 'all',\n        editType: 'none',\n        description: [\n            'Determines which trace information appear on hover.',\n            'If `none` or `skip` are set, no information is displayed upon hovering.',\n            'But, if `none` is set, click and hover events are still fired.'\n        ].join(' ')\n    },\n    hoverlabel: fxAttrs.hoverlabel,\n    stream: {\n        token: {\n            valType: 'string',\n            noBlank: true,\n            strict: true,\n            role: 'info',\n            editType: 'calc',\n            description: [\n                'The stream id number links a data trace on a plot with a stream.',\n                'See https://plot.ly/settings for more details.'\n            ].join(' ')\n        },\n        maxpoints: {\n            valType: 'number',\n            min: 0,\n            max: 10000,\n            dflt: 500,\n            role: 'info',\n            editType: 'calc',\n            description: [\n                'Sets the maximum number of points to keep on the plots from an',\n                'incoming stream.',\n                'If `maxpoints` is set to *50*, only the newest 50 points will',\n                'be displayed on the plot.'\n            ].join(' ')\n        },\n        editType: 'calc'\n    },\n    transforms: {\n        _isLinkedToArray: 'transform',\n        editType: 'calc',\n        description: [\n            'An array of operations that manipulate the trace data,',\n            'for example filtering or sorting the data arrays.'\n        ].join(' ')\n    },\n    uirevision: {\n        valType: 'any',\n        role: 'info',\n        editType: 'none',\n        description: [\n            'Controls persistence of some user-driven changes to the trace:',\n            '`constraintrange` in `parcoords` traces, as well as some',\n            '`editable: true` modifications such as `name` and `colorbar.title`.',\n            'Defaults to `layout.uirevision`.',\n            'Note that other user-driven trace attribute changes are controlled',\n            'by `layout` attributes:',\n            '`trace.visible` is controlled by `layout.legend.uirevision`,',\n            '`selectedpoints` is controlled by `layout.selectionrevision`,',\n            'and `colorbar.(x|y)` (accessible with `config: {editable: true}`)',\n            'is controlled by `layout.editrevision`.',\n            'Trace changes are tracked by `uid`, which only falls back on trace',\n            'index if no `uid` is provided. So if your app can add/remove traces',\n            'before the end of the `data` array, such that the same trace has a',\n            'different index, you can still preserve user-driven changes if you',\n            'give each trace a `uid` that stays with it as it moves.'\n        ].join(' ')\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
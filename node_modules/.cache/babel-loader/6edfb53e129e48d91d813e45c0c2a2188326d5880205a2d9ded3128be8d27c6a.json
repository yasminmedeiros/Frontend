{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar createPlot = require('gl-plot3d');\nvar getContext = require('webgl-context');\nvar passiveSupported = require('has-passive-events');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\nvar str2RGBAarray = require('../../lib/str2rgbarray');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\nvar createCamera = require('./camera');\nvar project = require('./project');\nvar createAxesOptions = require('./layout/convert');\nvar createSpikeOptions = require('./layout/spikes');\nvar computeTickMarks = require('./layout/tick_marks');\nvar STATIC_CANVAS, STATIC_CONTEXT;\nfunction render(scene) {\n  var trace;\n\n  // update size of svg container\n  var svgContainer = scene.svgContainer;\n  var clientRect = scene.container.getBoundingClientRect();\n  var width = clientRect.width;\n  var height = clientRect.height;\n  svgContainer.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n  svgContainer.setAttributeNS(null, 'width', width);\n  svgContainer.setAttributeNS(null, 'height', height);\n  computeTickMarks(scene);\n  scene.glplot.axes.update(scene.axesOptions);\n\n  // check if pick has changed\n  var keys = Object.keys(scene.traces);\n  var lastPicked = null;\n  var selection = scene.glplot.selection;\n  for (var i = 0; i < keys.length; ++i) {\n    trace = scene.traces[keys[i]];\n    if (trace.data.hoverinfo !== 'skip' && trace.handlePick(selection)) {\n      lastPicked = trace;\n    }\n    if (trace.setContourLevels) trace.setContourLevels();\n  }\n  function formatter(axisName, val) {\n    var axis = scene.fullSceneLayout[axisName];\n    return Axes.tickText(axis, axis.d2l(val), 'hover').text;\n  }\n  var oldEventData;\n  if (lastPicked !== null) {\n    var pdata = project(scene.glplot.cameraParams, selection.dataCoordinate);\n    trace = lastPicked.data;\n    var ptNumber = selection.index;\n    var hoverinfo = Fx.castHoverinfo(trace, scene.fullLayout, ptNumber);\n    var hoverinfoParts = hoverinfo.split('+');\n    var isHoverinfoAll = hoverinfo === 'all';\n    var xVal = formatter('xaxis', selection.traceCoordinate[0]);\n    var yVal = formatter('yaxis', selection.traceCoordinate[1]);\n    var zVal = formatter('zaxis', selection.traceCoordinate[2]);\n    if (!isHoverinfoAll) {\n      if (hoverinfoParts.indexOf('x') === -1) xVal = undefined;\n      if (hoverinfoParts.indexOf('y') === -1) yVal = undefined;\n      if (hoverinfoParts.indexOf('z') === -1) zVal = undefined;\n      if (hoverinfoParts.indexOf('text') === -1) selection.textLabel = undefined;\n      if (hoverinfoParts.indexOf('name') === -1) lastPicked.name = undefined;\n    }\n    var tx;\n    var vectorTx = [];\n    if (trace.type === 'cone' || trace.type === 'streamtube') {\n      if (isHoverinfoAll || hoverinfoParts.indexOf('u') !== -1) {\n        vectorTx.push('u: ' + formatter('xaxis', selection.traceCoordinate[3]));\n      }\n      if (isHoverinfoAll || hoverinfoParts.indexOf('v') !== -1) {\n        vectorTx.push('v: ' + formatter('yaxis', selection.traceCoordinate[4]));\n      }\n      if (isHoverinfoAll || hoverinfoParts.indexOf('w') !== -1) {\n        vectorTx.push('w: ' + formatter('zaxis', selection.traceCoordinate[5]));\n      }\n      if (isHoverinfoAll || hoverinfoParts.indexOf('norm') !== -1) {\n        vectorTx.push('norm: ' + selection.traceCoordinate[6].toPrecision(3));\n      }\n      if (trace.type === 'streamtube' && (isHoverinfoAll || hoverinfoParts.indexOf('divergence') !== -1)) {\n        vectorTx.push('divergence: ' + selection.traceCoordinate[7].toPrecision(3));\n      }\n      if (selection.textLabel) {\n        vectorTx.push(selection.textLabel);\n      }\n      tx = vectorTx.join('<br>');\n    } else if (trace.type === 'isosurface') {\n      vectorTx.push('value: ' + Axes.tickText(scene.mockAxis, scene.mockAxis.d2l(selection.traceCoordinate[3]), 'hover').text);\n      if (selection.textLabel) {\n        vectorTx.push(selection.textLabel);\n      }\n      tx = vectorTx.join('<br>');\n    } else {\n      tx = selection.textLabel;\n    }\n    if (scene.fullSceneLayout.hovermode) {\n      Fx.loneHover({\n        x: (0.5 + 0.5 * pdata[0] / pdata[3]) * width,\n        y: (0.5 - 0.5 * pdata[1] / pdata[3]) * height,\n        xLabel: xVal,\n        yLabel: yVal,\n        zLabel: zVal,\n        text: tx,\n        name: lastPicked.name,\n        color: Fx.castHoverOption(trace, ptNumber, 'bgcolor') || lastPicked.color,\n        borderColor: Fx.castHoverOption(trace, ptNumber, 'bordercolor'),\n        fontFamily: Fx.castHoverOption(trace, ptNumber, 'font.family'),\n        fontSize: Fx.castHoverOption(trace, ptNumber, 'font.size'),\n        fontColor: Fx.castHoverOption(trace, ptNumber, 'font.color')\n      }, {\n        container: svgContainer,\n        gd: scene.graphDiv\n      });\n    }\n\n    // TODO not sure if streamtube x/y/z should be emitted as x/y/z\n    var pointData = {\n      x: selection.traceCoordinate[0],\n      y: selection.traceCoordinate[1],\n      z: selection.traceCoordinate[2],\n      data: trace._input,\n      fullData: trace,\n      curveNumber: trace.index,\n      pointNumber: ptNumber\n    };\n    if (trace._module.eventData) {\n      pointData = trace._module.eventData(pointData, selection, trace, {}, ptNumber);\n    }\n    Fx.appendArrayPointValue(pointData, trace, ptNumber);\n    var eventData = {\n      points: [pointData]\n    };\n    if (selection.buttons && selection.distance < 5) {\n      scene.graphDiv.emit('plotly_click', eventData);\n    } else {\n      scene.graphDiv.emit('plotly_hover', eventData);\n    }\n    oldEventData = eventData;\n  } else {\n    Fx.loneUnhover(svgContainer);\n    scene.graphDiv.emit('plotly_unhover', oldEventData);\n  }\n  scene.drawAnnotations(scene);\n}\nfunction initializeGLPlot(scene, canvas, gl) {\n  var gd = scene.graphDiv;\n  var glplotOptions = {\n    canvas: canvas,\n    gl: gl,\n    container: scene.container,\n    axes: scene.axesOptions,\n    spikes: scene.spikeOptions,\n    pickRadius: 10,\n    snapToData: true,\n    autoScale: true,\n    autoBounds: false\n  };\n\n  // for static plots, we reuse the WebGL context\n  //  as WebKit doesn't collect them reliably\n  if (scene.staticMode) {\n    if (!STATIC_CONTEXT) {\n      STATIC_CANVAS = document.createElement('canvas');\n      STATIC_CONTEXT = getContext({\n        canvas: STATIC_CANVAS,\n        preserveDrawingBuffer: true,\n        premultipliedAlpha: true,\n        antialias: true\n      });\n      if (!STATIC_CONTEXT) {\n        throw new Error('error creating static canvas/context for image server');\n      }\n    }\n    glplotOptions.pixelRatio = scene.pixelRatio;\n    glplotOptions.gl = STATIC_CONTEXT;\n    glplotOptions.canvas = STATIC_CANVAS;\n  }\n  try {\n    scene.glplot = createPlot(glplotOptions);\n  } catch (e) {\n    /*\n    * createPlot will throw when webgl is not enabled in the client.\n    * Lets return an instance of the module with all functions noop'd.\n    * The destroy method - which will remove the container from the DOM\n    * is overridden with a function that removes the container only.\n    */\n    return showNoWebGlMsg(scene);\n  }\n  var relayoutCallback = function relayoutCallback(scene) {\n    if (scene.fullSceneLayout.dragmode === false) return;\n    var update = {};\n    update[scene.id + '.camera'] = getLayoutCamera(scene.camera);\n    scene.saveCamera(gd.layout);\n    scene.graphDiv.emit('plotly_relayout', update);\n  };\n  scene.glplot.canvas.addEventListener('mouseup', function () {\n    relayoutCallback(scene);\n  });\n  scene.glplot.canvas.addEventListener('wheel', function () {\n    if (gd._context._scrollZoom.gl3d) {\n      relayoutCallback(scene);\n    }\n  }, passiveSupported ? {\n    passive: false\n  } : false);\n  if (!scene.staticMode) {\n    scene.glplot.canvas.addEventListener('webglcontextlost', function (event) {\n      if (gd && gd.emit) {\n        gd.emit('plotly_webglcontextlost', {\n          event: event,\n          layer: scene.id\n        });\n      }\n    }, false);\n  }\n  if (!scene.camera) {\n    var cameraData = scene.fullSceneLayout.camera;\n    scene.camera = createCamera(scene.container, {\n      center: [cameraData.center.x, cameraData.center.y, cameraData.center.z],\n      eye: [cameraData.eye.x, cameraData.eye.y, cameraData.eye.z],\n      up: [cameraData.up.x, cameraData.up.y, cameraData.up.z],\n      zoomMin: 0.1,\n      zoomMax: 100,\n      mode: 'orbit'\n    });\n  }\n  scene.glplot.camera = scene.camera;\n  scene.glplot.oncontextloss = function () {\n    scene.recoverContext();\n  };\n  scene.glplot.onrender = render.bind(null, scene);\n\n  // List of scene objects\n  scene.traces = {};\n  scene.make4thDimension();\n  return true;\n}\nfunction Scene(options, fullLayout) {\n  // create sub container for plot\n  var sceneContainer = document.createElement('div');\n  var plotContainer = options.container;\n\n  // keep a ref to the graph div to fire hover+click events\n  this.graphDiv = options.graphDiv;\n\n  // create SVG container for hover text\n  var svgContainer = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgContainer.style.position = 'absolute';\n  svgContainer.style.top = svgContainer.style.left = '0px';\n  svgContainer.style.width = svgContainer.style.height = '100%';\n  svgContainer.style['z-index'] = 20;\n  svgContainer.style['pointer-events'] = 'none';\n  sceneContainer.appendChild(svgContainer);\n  this.svgContainer = svgContainer;\n\n  // Tag the container with the sceneID\n  sceneContainer.id = options.id;\n  sceneContainer.style.position = 'absolute';\n  sceneContainer.style.top = sceneContainer.style.left = '0px';\n  sceneContainer.style.width = sceneContainer.style.height = '100%';\n  plotContainer.appendChild(sceneContainer);\n  this.fullLayout = fullLayout;\n  this.id = options.id || 'scene';\n  this.fullSceneLayout = fullLayout[this.id];\n\n  // Saved from last call to plot()\n  this.plotArgs = [[], {}, {}];\n\n  /*\n   * Move this to calc step? Why does it work here?\n   */\n  this.axesOptions = createAxesOptions(fullLayout, fullLayout[this.id]);\n  this.spikeOptions = createSpikeOptions(fullLayout[this.id]);\n  this.container = sceneContainer;\n  this.staticMode = !!options.staticPlot;\n  this.pixelRatio = options.plotGlPixelRatio || 2;\n\n  // Coordinate rescaling\n  this.dataScale = [1, 1, 1];\n  this.contourLevels = [[], [], []];\n  this.convertAnnotations = Registry.getComponentMethod('annotations3d', 'convert');\n  this.drawAnnotations = Registry.getComponentMethod('annotations3d', 'draw');\n  if (!initializeGLPlot(this)) return; // todo check the necessity for this line\n}\n\nvar proto = Scene.prototype;\nproto.recoverContext = function () {\n  var scene = this;\n  var gl = this.glplot.gl;\n  var canvas = this.glplot.canvas;\n  this.glplot.dispose();\n  function tryRecover() {\n    if (gl.isContextLost()) {\n      requestAnimationFrame(tryRecover);\n      return;\n    }\n    if (!initializeGLPlot(scene, canvas, gl)) {\n      Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');\n      return;\n    }\n    scene.plot.apply(scene, scene.plotArgs);\n  }\n  requestAnimationFrame(tryRecover);\n};\nvar axisProperties = ['xaxis', 'yaxis', 'zaxis'];\nfunction computeTraceBounds(scene, trace, bounds) {\n  var sceneLayout = scene.fullSceneLayout;\n  for (var d = 0; d < 3; d++) {\n    var axisName = axisProperties[d];\n    var axLetter = axisName.charAt(0);\n    var ax = sceneLayout[axisName];\n    var coords = trace[axLetter];\n    var calendar = trace[axLetter + 'calendar'];\n    var len = trace['_' + axLetter + 'length'];\n    if (!Lib.isArrayOrTypedArray(coords)) {\n      bounds[0][d] = Math.min(bounds[0][d], 0);\n      bounds[1][d] = Math.max(bounds[1][d], len - 1);\n    } else {\n      var v;\n      for (var i = 0; i < (len || coords.length); i++) {\n        if (Lib.isArrayOrTypedArray(coords[i])) {\n          for (var j = 0; j < coords[i].length; ++j) {\n            v = ax.d2l(coords[i][j], 0, calendar);\n            if (!isNaN(v) && isFinite(v)) {\n              bounds[0][d] = Math.min(bounds[0][d], v);\n              bounds[1][d] = Math.max(bounds[1][d], v);\n            }\n          }\n        } else {\n          v = ax.d2l(coords[i], 0, calendar);\n          if (!isNaN(v) && isFinite(v)) {\n            bounds[0][d] = Math.min(bounds[0][d], v);\n            bounds[1][d] = Math.max(bounds[1][d], v);\n          }\n        }\n      }\n    }\n  }\n}\nfunction computeAnnotationBounds(scene, bounds) {\n  var sceneLayout = scene.fullSceneLayout;\n  var annotations = sceneLayout.annotations || [];\n  for (var d = 0; d < 3; d++) {\n    var axisName = axisProperties[d];\n    var axLetter = axisName.charAt(0);\n    var ax = sceneLayout[axisName];\n    for (var j = 0; j < annotations.length; j++) {\n      var ann = annotations[j];\n      if (ann.visible) {\n        var pos = ax.r2l(ann[axLetter]);\n        if (!isNaN(pos) && isFinite(pos)) {\n          bounds[0][d] = Math.min(bounds[0][d], pos);\n          bounds[1][d] = Math.max(bounds[1][d], pos);\n        }\n      }\n    }\n  }\n}\nproto.plot = function (sceneData, fullLayout, layout) {\n  // Save parameters\n  this.plotArgs = [sceneData, fullLayout, layout];\n  if (this.glplot.contextLost) return;\n  var data, trace;\n  var i, j, axis, axisType;\n  var fullSceneLayout = fullLayout[this.id];\n  var sceneLayout = layout[this.id];\n  if (fullSceneLayout.bgcolor) this.glplot.clearColor = str2RGBAarray(fullSceneLayout.bgcolor);else this.glplot.clearColor = [0, 0, 0, 0];\n  this.glplot.snapToData = true;\n\n  // Update layout\n  this.fullLayout = fullLayout;\n  this.fullSceneLayout = fullSceneLayout;\n  this.glplotLayout = fullSceneLayout;\n  this.axesOptions.merge(fullLayout, fullSceneLayout);\n  this.spikeOptions.merge(fullSceneLayout);\n\n  // Update camera and camera mode\n  this.setCamera(fullSceneLayout.camera);\n  this.updateFx(fullSceneLayout.dragmode, fullSceneLayout.hovermode);\n  this.camera.enableWheel = this.graphDiv._context._scrollZoom.gl3d;\n\n  // Update scene\n  this.glplot.update({});\n\n  // Update axes functions BEFORE updating traces\n  this.setConvert(axis);\n\n  // Convert scene data\n  if (!sceneData) sceneData = [];else if (!Array.isArray(sceneData)) sceneData = [sceneData];\n\n  // Compute trace bounding box\n  var dataBounds = [[Infinity, Infinity, Infinity], [-Infinity, -Infinity, -Infinity]];\n  for (i = 0; i < sceneData.length; ++i) {\n    data = sceneData[i];\n    if (data.visible !== true) continue;\n    computeTraceBounds(this, data, dataBounds);\n  }\n  computeAnnotationBounds(this, dataBounds);\n  var dataScale = [1, 1, 1];\n  for (j = 0; j < 3; ++j) {\n    if (dataBounds[1][j] === dataBounds[0][j]) {\n      dataScale[j] = 1.0;\n    } else {\n      dataScale[j] = 1.0 / (dataBounds[1][j] - dataBounds[0][j]);\n    }\n  }\n\n  // Save scale\n  this.dataScale = dataScale;\n\n  // after computeTraceBounds where ax._categories are filled in\n  this.convertAnnotations(this);\n\n  // Update traces\n  for (i = 0; i < sceneData.length; ++i) {\n    data = sceneData[i];\n    if (data.visible !== true) {\n      continue;\n    }\n    trace = this.traces[data.uid];\n    if (trace) {\n      if (trace.data.type === data.type) {\n        trace.update(data);\n      } else {\n        trace.dispose();\n        trace = data._module.plot(this, data);\n        this.traces[data.uid] = trace;\n      }\n    } else {\n      trace = data._module.plot(this, data);\n      this.traces[data.uid] = trace;\n    }\n    trace.name = data.name;\n  }\n\n  // Remove empty traces\n  var traceIds = Object.keys(this.traces);\n  traceIdLoop: for (i = 0; i < traceIds.length; ++i) {\n    for (j = 0; j < sceneData.length; ++j) {\n      if (sceneData[j].uid === traceIds[i] && sceneData[j].visible === true) {\n        continue traceIdLoop;\n      }\n    }\n    trace = this.traces[traceIds[i]];\n    trace.dispose();\n    delete this.traces[traceIds[i]];\n  }\n\n  // order object per trace index\n  this.glplot.objects.sort(function (a, b) {\n    return a._trace.data.index - b._trace.data.index;\n  });\n\n  // Update ranges (needs to be called *after* objects are added due to updates)\n  var sceneBounds = [[0, 0, 0], [0, 0, 0]];\n  var axisDataRange = [];\n  var axisTypeRatios = {};\n  for (i = 0; i < 3; ++i) {\n    axis = fullSceneLayout[axisProperties[i]];\n    axisType = axis.type;\n    if (axisType in axisTypeRatios) {\n      axisTypeRatios[axisType].acc *= dataScale[i];\n      axisTypeRatios[axisType].count += 1;\n    } else {\n      axisTypeRatios[axisType] = {\n        acc: dataScale[i],\n        count: 1\n      };\n    }\n    if (axis.autorange) {\n      sceneBounds[0][i] = Infinity;\n      sceneBounds[1][i] = -Infinity;\n      var objects = this.glplot.objects;\n      var annotations = this.fullSceneLayout.annotations || [];\n      var axLetter = axis._name.charAt(0);\n      for (j = 0; j < objects.length; j++) {\n        var obj = objects[j];\n        var objBounds = obj.bounds;\n        var pad = obj._trace.data._pad || 0;\n        if (obj.constructor.name === 'ErrorBars' && axis._lowerLogErrorBound) {\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], axis._lowerLogErrorBound);\n        } else {\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], objBounds[0][i] / dataScale[i] - pad);\n        }\n        sceneBounds[1][i] = Math.max(sceneBounds[1][i], objBounds[1][i] / dataScale[i] + pad);\n      }\n      for (j = 0; j < annotations.length; j++) {\n        var ann = annotations[j];\n\n        // N.B. not taking into consideration the arrowhead\n        if (ann.visible) {\n          var pos = axis.r2l(ann[axLetter]);\n          sceneBounds[0][i] = Math.min(sceneBounds[0][i], pos);\n          sceneBounds[1][i] = Math.max(sceneBounds[1][i], pos);\n        }\n      }\n      if ('rangemode' in axis && axis.rangemode === 'tozero') {\n        sceneBounds[0][i] = Math.min(sceneBounds[0][i], 0);\n        sceneBounds[1][i] = Math.max(sceneBounds[1][i], 0);\n      }\n      if (sceneBounds[0][i] > sceneBounds[1][i]) {\n        sceneBounds[0][i] = -1;\n        sceneBounds[1][i] = 1;\n      } else {\n        var d = sceneBounds[1][i] - sceneBounds[0][i];\n        sceneBounds[0][i] -= d / 32.0;\n        sceneBounds[1][i] += d / 32.0;\n      }\n      if (axis.autorange === 'reversed') {\n        // swap bounds:\n        var tmp = sceneBounds[0][i];\n        sceneBounds[0][i] = sceneBounds[1][i];\n        sceneBounds[1][i] = tmp;\n      }\n    } else {\n      var range = axis.range;\n      sceneBounds[0][i] = axis.r2l(range[0]);\n      sceneBounds[1][i] = axis.r2l(range[1]);\n    }\n    if (sceneBounds[0][i] === sceneBounds[1][i]) {\n      sceneBounds[0][i] -= 1;\n      sceneBounds[1][i] += 1;\n    }\n    axisDataRange[i] = sceneBounds[1][i] - sceneBounds[0][i];\n\n    // Update plot bounds\n    this.glplot.bounds[0][i] = sceneBounds[0][i] * dataScale[i];\n    this.glplot.bounds[1][i] = sceneBounds[1][i] * dataScale[i];\n  }\n  var axesScaleRatio = [1, 1, 1];\n\n  // Compute axis scale per category\n  for (i = 0; i < 3; ++i) {\n    axis = fullSceneLayout[axisProperties[i]];\n    axisType = axis.type;\n    var axisRatio = axisTypeRatios[axisType];\n    axesScaleRatio[i] = Math.pow(axisRatio.acc, 1.0 / axisRatio.count) / dataScale[i];\n  }\n\n  /*\n   * Dynamically set the aspect ratio depending on the users aspect settings\n   */\n  var axisAutoScaleFactor = 4;\n  var aspectRatio;\n  if (fullSceneLayout.aspectmode === 'auto') {\n    if (Math.max.apply(null, axesScaleRatio) / Math.min.apply(null, axesScaleRatio) <= axisAutoScaleFactor) {\n      /*\n       * USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n       */\n\n      aspectRatio = axesScaleRatio;\n    } else {\n      /*\n       * USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n       */\n      aspectRatio = [1, 1, 1];\n    }\n  } else if (fullSceneLayout.aspectmode === 'cube') {\n    aspectRatio = [1, 1, 1];\n  } else if (fullSceneLayout.aspectmode === 'data') {\n    aspectRatio = axesScaleRatio;\n  } else if (fullSceneLayout.aspectmode === 'manual') {\n    var userRatio = fullSceneLayout.aspectratio;\n    aspectRatio = [userRatio.x, userRatio.y, userRatio.z];\n  } else {\n    throw new Error('scene.js aspectRatio was not one of the enumerated types');\n  }\n\n  /*\n   * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n   * manipulates the aspectmode settings and the fullLayout is up-to-date.\n   */\n  fullSceneLayout.aspectratio.x = sceneLayout.aspectratio.x = aspectRatio[0];\n  fullSceneLayout.aspectratio.y = sceneLayout.aspectratio.y = aspectRatio[1];\n  fullSceneLayout.aspectratio.z = sceneLayout.aspectratio.z = aspectRatio[2];\n\n  /*\n   * Finally assign the computed aspecratio to the glplot module. This will have an effect\n   * on the next render cycle.\n   */\n  this.glplot.aspect = aspectRatio;\n\n  // Update frame position for multi plots\n  var domain = fullSceneLayout.domain || null;\n  var size = fullLayout._size || null;\n  if (domain && size) {\n    var containerStyle = this.container.style;\n    containerStyle.position = 'absolute';\n    containerStyle.left = size.l + domain.x[0] * size.w + 'px';\n    containerStyle.top = size.t + (1 - domain.y[1]) * size.h + 'px';\n    containerStyle.width = size.w * (domain.x[1] - domain.x[0]) + 'px';\n    containerStyle.height = size.h * (domain.y[1] - domain.y[0]) + 'px';\n  }\n\n  // force redraw so that promise is returned when rendering is completed\n  this.glplot.redraw();\n};\nproto.destroy = function () {\n  if (!this.glplot) return;\n  this.camera.mouseListener.enabled = false;\n  this.container.removeEventListener('wheel', this.camera.wheelListener);\n  this.camera = this.glplot.camera = null;\n  this.glplot.dispose();\n  this.container.parentNode.removeChild(this.container);\n  this.glplot = null;\n};\n\n// getOrbitCamera :: plotly_coords -> orbit_camera_coords\n// inverse of getLayoutCamera\nfunction getOrbitCamera(camera) {\n  return [[camera.eye.x, camera.eye.y, camera.eye.z], [camera.center.x, camera.center.y, camera.center.z], [camera.up.x, camera.up.y, camera.up.z]];\n}\n\n// getLayoutCamera :: orbit_camera_coords -> plotly_coords\n// inverse of getOrbitCamera\nfunction getLayoutCamera(camera) {\n  return {\n    up: {\n      x: camera.up[0],\n      y: camera.up[1],\n      z: camera.up[2]\n    },\n    center: {\n      x: camera.center[0],\n      y: camera.center[1],\n      z: camera.center[2]\n    },\n    eye: {\n      x: camera.eye[0],\n      y: camera.eye[1],\n      z: camera.eye[2]\n    }\n  };\n}\n\n// get camera position in plotly coords from 'orbit-camera' coords\nproto.getCamera = function getCamera() {\n  this.glplot.camera.view.recalcMatrix(this.camera.view.lastT());\n  return getLayoutCamera(this.glplot.camera);\n};\n\n// set camera position with a set of plotly coords\nproto.setCamera = function setCamera(cameraData) {\n  this.glplot.camera.lookAt.apply(this, getOrbitCamera(cameraData));\n};\n\n// save camera to user layout (i.e. gd.layout)\nproto.saveCamera = function saveCamera(layout) {\n  var fullLayout = this.fullLayout;\n  var cameraData = this.getCamera();\n  var cameraNestedProp = Lib.nestedProperty(layout, this.id + '.camera');\n  var cameraDataLastSave = cameraNestedProp.get();\n  var hasChanged = false;\n  function same(x, y, i, j) {\n    var vectors = ['up', 'center', 'eye'];\n    var components = ['x', 'y', 'z'];\n    return y[vectors[i]] && x[vectors[i]][components[j]] === y[vectors[i]][components[j]];\n  }\n  if (cameraDataLastSave === undefined) {\n    hasChanged = true;\n  } else {\n    for (var i = 0; i < 3; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (!same(cameraData, cameraDataLastSave, i, j)) {\n          hasChanged = true;\n          break;\n        }\n      }\n    }\n  }\n  if (hasChanged) {\n    var preGUI = {};\n    preGUI[this.id + '.camera'] = cameraDataLastSave;\n    Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, preGUI);\n    cameraNestedProp.set(cameraData);\n    var cameraFullNP = Lib.nestedProperty(fullLayout, this.id + '.camera');\n    cameraFullNP.set(cameraData);\n  }\n  return hasChanged;\n};\nproto.updateFx = function (dragmode, hovermode) {\n  var camera = this.camera;\n  if (camera) {\n    // rotate and orbital are synonymous\n    if (dragmode === 'orbit') {\n      camera.mode = 'orbit';\n      camera.keyBindingMode = 'rotate';\n    } else if (dragmode === 'turntable') {\n      camera.up = [0, 0, 1];\n      camera.mode = 'turntable';\n      camera.keyBindingMode = 'rotate';\n\n      // The setter for camera.mode animates the transition to z-up,\n      // but only if we *don't* explicitly set z-up earlier via the\n      // relayout. So push `up` back to layout & fullLayout manually now.\n      var gd = this.graphDiv;\n      var fullLayout = gd._fullLayout;\n      var fullCamera = this.fullSceneLayout.camera;\n      var x = fullCamera.up.x;\n      var y = fullCamera.up.y;\n      var z = fullCamera.up.z;\n      // only push `up` back to (full)layout if it's going to change\n      if (z / Math.sqrt(x * x + y * y + z * z) > 0.999) return;\n      var attr = this.id + '.camera.up';\n      var zUp = {\n        x: 0,\n        y: 0,\n        z: 1\n      };\n      var edits = {};\n      edits[attr] = zUp;\n      var layout = gd.layout;\n      Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, edits);\n      fullCamera.up = zUp;\n      Lib.nestedProperty(layout, attr).set(zUp);\n    } else {\n      // none rotation modes [pan or zoom]\n      camera.keyBindingMode = dragmode;\n    }\n  }\n\n  // to put dragmode and hovermode on the same grounds from relayout\n  this.fullSceneLayout.hovermode = hovermode;\n};\nproto.toImage = function (format) {\n  if (!format) format = 'png';\n  if (this.staticMode) this.container.appendChild(STATIC_CANVAS);\n\n  // Force redraw\n  this.glplot.redraw();\n\n  // Grab context and yank out pixels\n  var gl = this.glplot.gl;\n  var w = gl.drawingBufferWidth;\n  var h = gl.drawingBufferHeight;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n  var pixels = new Uint8Array(w * h * 4);\n  gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n  // Flip pixels\n  for (var j = 0, k = h - 1; j < k; ++j, --k) {\n    for (var i = 0; i < w; ++i) {\n      for (var l = 0; l < 4; ++l) {\n        var tmp = pixels[4 * (w * j + i) + l];\n        pixels[4 * (w * j + i) + l] = pixels[4 * (w * k + i) + l];\n        pixels[4 * (w * k + i) + l] = tmp;\n      }\n    }\n  }\n  var canvas = document.createElement('canvas');\n  canvas.width = w;\n  canvas.height = h;\n  var context = canvas.getContext('2d');\n  var imageData = context.createImageData(w, h);\n  imageData.data.set(pixels);\n  context.putImageData(imageData, 0, 0);\n  var dataURL;\n  switch (format) {\n    case 'jpeg':\n      dataURL = canvas.toDataURL('image/jpeg');\n      break;\n    case 'webp':\n      dataURL = canvas.toDataURL('image/webp');\n      break;\n    default:\n      dataURL = canvas.toDataURL('image/png');\n  }\n  if (this.staticMode) this.container.removeChild(STATIC_CANVAS);\n  return dataURL;\n};\nproto.setConvert = function () {\n  for (var i = 0; i < 3; i++) {\n    var ax = this.fullSceneLayout[axisProperties[i]];\n    Axes.setConvert(ax, this.fullLayout);\n    ax.setScale = Lib.noop;\n  }\n};\nproto.make4thDimension = function () {\n  var _this = this;\n  var gd = _this.graphDiv;\n  var fullLayout = gd._fullLayout;\n\n  // mock axis for hover formatting\n  _this.mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(_this.mockAxis, fullLayout);\n};\nmodule.exports = Scene;","map":{"version":3,"names":["createPlot","require","getContext","passiveSupported","Registry","Lib","Axes","Fx","str2RGBAarray","showNoWebGlMsg","createCamera","project","createAxesOptions","createSpikeOptions","computeTickMarks","STATIC_CANVAS","STATIC_CONTEXT","render","scene","trace","svgContainer","clientRect","container","getBoundingClientRect","width","height","setAttributeNS","glplot","axes","update","axesOptions","keys","Object","traces","lastPicked","selection","i","length","data","hoverinfo","handlePick","setContourLevels","formatter","axisName","val","axis","fullSceneLayout","tickText","d2l","text","oldEventData","pdata","cameraParams","dataCoordinate","ptNumber","index","castHoverinfo","fullLayout","hoverinfoParts","split","isHoverinfoAll","xVal","traceCoordinate","yVal","zVal","indexOf","undefined","textLabel","name","tx","vectorTx","type","push","toPrecision","join","mockAxis","hovermode","loneHover","x","y","xLabel","yLabel","zLabel","color","castHoverOption","borderColor","fontFamily","fontSize","fontColor","gd","graphDiv","pointData","z","_input","fullData","curveNumber","pointNumber","_module","eventData","appendArrayPointValue","points","buttons","distance","emit","loneUnhover","drawAnnotations","initializeGLPlot","canvas","gl","glplotOptions","spikes","spikeOptions","pickRadius","snapToData","autoScale","autoBounds","staticMode","document","createElement","preserveDrawingBuffer","premultipliedAlpha","antialias","Error","pixelRatio","e","relayoutCallback","dragmode","id","getLayoutCamera","camera","saveCamera","layout","addEventListener","_context","_scrollZoom","gl3d","passive","event","layer","cameraData","center","eye","up","zoomMin","zoomMax","mode","oncontextloss","recoverContext","onrender","bind","make4thDimension","Scene","options","sceneContainer","plotContainer","createElementNS","style","position","top","left","appendChild","plotArgs","staticPlot","plotGlPixelRatio","dataScale","contourLevels","convertAnnotations","getComponentMethod","proto","prototype","dispose","tryRecover","isContextLost","requestAnimationFrame","error","plot","apply","axisProperties","computeTraceBounds","bounds","sceneLayout","d","axLetter","charAt","ax","coords","calendar","len","isArrayOrTypedArray","Math","min","max","v","j","isNaN","isFinite","computeAnnotationBounds","annotations","ann","visible","pos","r2l","sceneData","contextLost","axisType","bgcolor","clearColor","glplotLayout","merge","setCamera","updateFx","enableWheel","setConvert","Array","isArray","dataBounds","Infinity","uid","traceIds","traceIdLoop","objects","sort","a","b","_trace","sceneBounds","axisDataRange","axisTypeRatios","acc","count","autorange","_name","obj","objBounds","pad","_pad","constructor","_lowerLogErrorBound","rangemode","tmp","range","axesScaleRatio","axisRatio","pow","axisAutoScaleFactor","aspectRatio","aspectmode","userRatio","aspectratio","aspect","domain","size","_size","containerStyle","l","w","t","h","redraw","destroy","mouseListener","enabled","removeEventListener","wheelListener","parentNode","removeChild","getOrbitCamera","getCamera","view","recalcMatrix","lastT","lookAt","cameraNestedProp","nestedProperty","cameraDataLastSave","get","hasChanged","same","vectors","components","preGUI","call","_preGUI","set","cameraFullNP","keyBindingMode","_fullLayout","fullCamera","sqrt","attr","zUp","edits","toImage","format","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","pixels","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","k","context","imageData","createImageData","putImageData","dataURL","toDataURL","setScale","noop","_this","showexponent","exponentformat","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/gl3d/scene.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar createPlot = require('gl-plot3d');\nvar getContext = require('webgl-context');\nvar passiveSupported = require('has-passive-events');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\n\nvar Axes = require('../../plots/cartesian/axes');\nvar Fx = require('../../components/fx');\n\nvar str2RGBAarray = require('../../lib/str2rgbarray');\nvar showNoWebGlMsg = require('../../lib/show_no_webgl_msg');\n\nvar createCamera = require('./camera');\nvar project = require('./project');\nvar createAxesOptions = require('./layout/convert');\nvar createSpikeOptions = require('./layout/spikes');\nvar computeTickMarks = require('./layout/tick_marks');\n\n\nvar STATIC_CANVAS, STATIC_CONTEXT;\n\nfunction render(scene) {\n    var trace;\n\n    // update size of svg container\n    var svgContainer = scene.svgContainer;\n    var clientRect = scene.container.getBoundingClientRect();\n    var width = clientRect.width;\n    var height = clientRect.height;\n    svgContainer.setAttributeNS(null, 'viewBox', '0 0 ' + width + ' ' + height);\n    svgContainer.setAttributeNS(null, 'width', width);\n    svgContainer.setAttributeNS(null, 'height', height);\n\n    computeTickMarks(scene);\n    scene.glplot.axes.update(scene.axesOptions);\n\n    // check if pick has changed\n    var keys = Object.keys(scene.traces);\n    var lastPicked = null;\n    var selection = scene.glplot.selection;\n    for(var i = 0; i < keys.length; ++i) {\n        trace = scene.traces[keys[i]];\n        if(trace.data.hoverinfo !== 'skip' && trace.handlePick(selection)) {\n            lastPicked = trace;\n        }\n\n        if(trace.setContourLevels) trace.setContourLevels();\n    }\n\n    function formatter(axisName, val) {\n        var axis = scene.fullSceneLayout[axisName];\n\n        return Axes.tickText(axis, axis.d2l(val), 'hover').text;\n    }\n\n    var oldEventData;\n\n    if(lastPicked !== null) {\n        var pdata = project(scene.glplot.cameraParams, selection.dataCoordinate);\n        trace = lastPicked.data;\n        var ptNumber = selection.index;\n        var hoverinfo = Fx.castHoverinfo(trace, scene.fullLayout, ptNumber);\n        var hoverinfoParts = hoverinfo.split('+');\n        var isHoverinfoAll = hoverinfo === 'all';\n\n        var xVal = formatter('xaxis', selection.traceCoordinate[0]);\n        var yVal = formatter('yaxis', selection.traceCoordinate[1]);\n        var zVal = formatter('zaxis', selection.traceCoordinate[2]);\n\n        if(!isHoverinfoAll) {\n            if(hoverinfoParts.indexOf('x') === -1) xVal = undefined;\n            if(hoverinfoParts.indexOf('y') === -1) yVal = undefined;\n            if(hoverinfoParts.indexOf('z') === -1) zVal = undefined;\n            if(hoverinfoParts.indexOf('text') === -1) selection.textLabel = undefined;\n            if(hoverinfoParts.indexOf('name') === -1) lastPicked.name = undefined;\n        }\n\n        var tx;\n        var vectorTx = [];\n\n        if(trace.type === 'cone' || trace.type === 'streamtube') {\n            if(isHoverinfoAll || hoverinfoParts.indexOf('u') !== -1) {\n                vectorTx.push('u: ' + formatter('xaxis', selection.traceCoordinate[3]));\n            }\n            if(isHoverinfoAll || hoverinfoParts.indexOf('v') !== -1) {\n                vectorTx.push('v: ' + formatter('yaxis', selection.traceCoordinate[4]));\n            }\n            if(isHoverinfoAll || hoverinfoParts.indexOf('w') !== -1) {\n                vectorTx.push('w: ' + formatter('zaxis', selection.traceCoordinate[5]));\n            }\n            if(isHoverinfoAll || hoverinfoParts.indexOf('norm') !== -1) {\n                vectorTx.push('norm: ' + selection.traceCoordinate[6].toPrecision(3));\n            }\n            if(trace.type === 'streamtube' && (isHoverinfoAll || hoverinfoParts.indexOf('divergence') !== -1)) {\n                vectorTx.push('divergence: ' + selection.traceCoordinate[7].toPrecision(3));\n            }\n            if(selection.textLabel) {\n                vectorTx.push(selection.textLabel);\n            }\n            tx = vectorTx.join('<br>');\n        } else if(trace.type === 'isosurface') {\n            vectorTx.push('value: ' + Axes.tickText(scene.mockAxis, scene.mockAxis.d2l(selection.traceCoordinate[3]), 'hover').text);\n            if(selection.textLabel) {\n                vectorTx.push(selection.textLabel);\n            }\n            tx = vectorTx.join('<br>');\n        } else {\n            tx = selection.textLabel;\n        }\n\n        if(scene.fullSceneLayout.hovermode) {\n            Fx.loneHover({\n                x: (0.5 + 0.5 * pdata[0] / pdata[3]) * width,\n                y: (0.5 - 0.5 * pdata[1] / pdata[3]) * height,\n                xLabel: xVal,\n                yLabel: yVal,\n                zLabel: zVal,\n                text: tx,\n                name: lastPicked.name,\n                color: Fx.castHoverOption(trace, ptNumber, 'bgcolor') || lastPicked.color,\n                borderColor: Fx.castHoverOption(trace, ptNumber, 'bordercolor'),\n                fontFamily: Fx.castHoverOption(trace, ptNumber, 'font.family'),\n                fontSize: Fx.castHoverOption(trace, ptNumber, 'font.size'),\n                fontColor: Fx.castHoverOption(trace, ptNumber, 'font.color')\n            }, {\n                container: svgContainer,\n                gd: scene.graphDiv\n            });\n        }\n\n        // TODO not sure if streamtube x/y/z should be emitted as x/y/z\n        var pointData = {\n            x: selection.traceCoordinate[0],\n            y: selection.traceCoordinate[1],\n            z: selection.traceCoordinate[2],\n            data: trace._input,\n            fullData: trace,\n            curveNumber: trace.index,\n            pointNumber: ptNumber\n        };\n\n        if(trace._module.eventData) {\n            pointData = trace._module.eventData(pointData, selection, trace, {}, ptNumber);\n        }\n\n        Fx.appendArrayPointValue(pointData, trace, ptNumber);\n\n        var eventData = {points: [pointData]};\n\n        if(selection.buttons && selection.distance < 5) {\n            scene.graphDiv.emit('plotly_click', eventData);\n        }\n        else {\n            scene.graphDiv.emit('plotly_hover', eventData);\n        }\n\n        oldEventData = eventData;\n    }\n    else {\n        Fx.loneUnhover(svgContainer);\n        scene.graphDiv.emit('plotly_unhover', oldEventData);\n    }\n\n    scene.drawAnnotations(scene);\n}\n\nfunction initializeGLPlot(scene, canvas, gl) {\n    var gd = scene.graphDiv;\n\n    var glplotOptions = {\n        canvas: canvas,\n        gl: gl,\n        container: scene.container,\n        axes: scene.axesOptions,\n        spikes: scene.spikeOptions,\n        pickRadius: 10,\n        snapToData: true,\n        autoScale: true,\n        autoBounds: false\n    };\n\n    // for static plots, we reuse the WebGL context\n    //  as WebKit doesn't collect them reliably\n    if(scene.staticMode) {\n        if(!STATIC_CONTEXT) {\n            STATIC_CANVAS = document.createElement('canvas');\n            STATIC_CONTEXT = getContext({\n                canvas: STATIC_CANVAS,\n                preserveDrawingBuffer: true,\n                premultipliedAlpha: true,\n                antialias: true\n            });\n            if(!STATIC_CONTEXT) {\n                throw new Error('error creating static canvas/context for image server');\n            }\n        }\n        glplotOptions.pixelRatio = scene.pixelRatio;\n        glplotOptions.gl = STATIC_CONTEXT;\n        glplotOptions.canvas = STATIC_CANVAS;\n    }\n\n    try {\n        scene.glplot = createPlot(glplotOptions);\n    }\n    catch(e) {\n        /*\n        * createPlot will throw when webgl is not enabled in the client.\n        * Lets return an instance of the module with all functions noop'd.\n        * The destroy method - which will remove the container from the DOM\n        * is overridden with a function that removes the container only.\n        */\n        return showNoWebGlMsg(scene);\n    }\n\n    var relayoutCallback = function(scene) {\n        if(scene.fullSceneLayout.dragmode === false) return;\n\n        var update = {};\n        update[scene.id + '.camera'] = getLayoutCamera(scene.camera);\n        scene.saveCamera(gd.layout);\n        scene.graphDiv.emit('plotly_relayout', update);\n    };\n\n    scene.glplot.canvas.addEventListener('mouseup', function() {\n        relayoutCallback(scene);\n    });\n\n    scene.glplot.canvas.addEventListener('wheel', function() {\n        if(gd._context._scrollZoom.gl3d) {\n            relayoutCallback(scene);\n        }\n    }, passiveSupported ? {passive: false} : false);\n\n    if(!scene.staticMode) {\n        scene.glplot.canvas.addEventListener('webglcontextlost', function(event) {\n            if(gd && gd.emit) {\n                gd.emit('plotly_webglcontextlost', {\n                    event: event,\n                    layer: scene.id\n                });\n            }\n        }, false);\n    }\n\n    if(!scene.camera) {\n        var cameraData = scene.fullSceneLayout.camera;\n        scene.camera = createCamera(scene.container, {\n            center: [cameraData.center.x, cameraData.center.y, cameraData.center.z],\n            eye: [cameraData.eye.x, cameraData.eye.y, cameraData.eye.z],\n            up: [cameraData.up.x, cameraData.up.y, cameraData.up.z],\n            zoomMin: 0.1,\n            zoomMax: 100,\n            mode: 'orbit'\n        });\n    }\n\n    scene.glplot.camera = scene.camera;\n\n    scene.glplot.oncontextloss = function() {\n        scene.recoverContext();\n    };\n\n    scene.glplot.onrender = render.bind(null, scene);\n\n    // List of scene objects\n    scene.traces = {};\n\n    scene.make4thDimension();\n\n    return true;\n}\n\nfunction Scene(options, fullLayout) {\n\n    // create sub container for plot\n    var sceneContainer = document.createElement('div');\n    var plotContainer = options.container;\n\n    // keep a ref to the graph div to fire hover+click events\n    this.graphDiv = options.graphDiv;\n\n    // create SVG container for hover text\n    var svgContainer = document.createElementNS(\n        'http://www.w3.org/2000/svg',\n        'svg');\n    svgContainer.style.position = 'absolute';\n    svgContainer.style.top = svgContainer.style.left = '0px';\n    svgContainer.style.width = svgContainer.style.height = '100%';\n    svgContainer.style['z-index'] = 20;\n    svgContainer.style['pointer-events'] = 'none';\n    sceneContainer.appendChild(svgContainer);\n    this.svgContainer = svgContainer;\n\n    // Tag the container with the sceneID\n    sceneContainer.id = options.id;\n    sceneContainer.style.position = 'absolute';\n    sceneContainer.style.top = sceneContainer.style.left = '0px';\n    sceneContainer.style.width = sceneContainer.style.height = '100%';\n    plotContainer.appendChild(sceneContainer);\n\n    this.fullLayout = fullLayout;\n    this.id = options.id || 'scene';\n    this.fullSceneLayout = fullLayout[this.id];\n\n    // Saved from last call to plot()\n    this.plotArgs = [ [], {}, {} ];\n\n    /*\n     * Move this to calc step? Why does it work here?\n     */\n    this.axesOptions = createAxesOptions(fullLayout, fullLayout[this.id]);\n    this.spikeOptions = createSpikeOptions(fullLayout[this.id]);\n    this.container = sceneContainer;\n    this.staticMode = !!options.staticPlot;\n    this.pixelRatio = options.plotGlPixelRatio || 2;\n\n    // Coordinate rescaling\n    this.dataScale = [1, 1, 1];\n\n    this.contourLevels = [ [], [], [] ];\n\n    this.convertAnnotations = Registry.getComponentMethod('annotations3d', 'convert');\n    this.drawAnnotations = Registry.getComponentMethod('annotations3d', 'draw');\n\n    if(!initializeGLPlot(this)) return; // todo check the necessity for this line\n}\n\nvar proto = Scene.prototype;\n\nproto.recoverContext = function() {\n    var scene = this;\n    var gl = this.glplot.gl;\n    var canvas = this.glplot.canvas;\n    this.glplot.dispose();\n\n    function tryRecover() {\n        if(gl.isContextLost()) {\n            requestAnimationFrame(tryRecover);\n            return;\n        }\n        if(!initializeGLPlot(scene, canvas, gl)) {\n            Lib.error('Catastrophic and unrecoverable WebGL error. Context lost.');\n            return;\n        }\n        scene.plot.apply(scene, scene.plotArgs);\n    }\n    requestAnimationFrame(tryRecover);\n};\n\nvar axisProperties = [ 'xaxis', 'yaxis', 'zaxis' ];\n\nfunction computeTraceBounds(scene, trace, bounds) {\n    var sceneLayout = scene.fullSceneLayout;\n\n    for(var d = 0; d < 3; d++) {\n        var axisName = axisProperties[d];\n        var axLetter = axisName.charAt(0);\n        var ax = sceneLayout[axisName];\n        var coords = trace[axLetter];\n        var calendar = trace[axLetter + 'calendar'];\n        var len = trace['_' + axLetter + 'length'];\n\n        if(!Lib.isArrayOrTypedArray(coords)) {\n            bounds[0][d] = Math.min(bounds[0][d], 0);\n            bounds[1][d] = Math.max(bounds[1][d], len - 1);\n        } else {\n            var v;\n\n            for(var i = 0; i < (len || coords.length); i++) {\n                if(Lib.isArrayOrTypedArray(coords[i])) {\n                    for(var j = 0; j < coords[i].length; ++j) {\n                        v = ax.d2l(coords[i][j], 0, calendar);\n                        if(!isNaN(v) && isFinite(v)) {\n                            bounds[0][d] = Math.min(bounds[0][d], v);\n                            bounds[1][d] = Math.max(bounds[1][d], v);\n                        }\n                    }\n                } else {\n                    v = ax.d2l(coords[i], 0, calendar);\n                    if(!isNaN(v) && isFinite(v)) {\n                        bounds[0][d] = Math.min(bounds[0][d], v);\n                        bounds[1][d] = Math.max(bounds[1][d], v);\n                    }\n                }\n            }\n        }\n    }\n}\n\nfunction computeAnnotationBounds(scene, bounds) {\n    var sceneLayout = scene.fullSceneLayout;\n    var annotations = sceneLayout.annotations || [];\n\n    for(var d = 0; d < 3; d++) {\n        var axisName = axisProperties[d];\n        var axLetter = axisName.charAt(0);\n        var ax = sceneLayout[axisName];\n\n        for(var j = 0; j < annotations.length; j++) {\n            var ann = annotations[j];\n\n            if(ann.visible) {\n                var pos = ax.r2l(ann[axLetter]);\n                if(!isNaN(pos) && isFinite(pos)) {\n                    bounds[0][d] = Math.min(bounds[0][d], pos);\n                    bounds[1][d] = Math.max(bounds[1][d], pos);\n                }\n            }\n        }\n    }\n}\n\nproto.plot = function(sceneData, fullLayout, layout) {\n    // Save parameters\n    this.plotArgs = [sceneData, fullLayout, layout];\n\n    if(this.glplot.contextLost) return;\n\n    var data, trace;\n    var i, j, axis, axisType;\n    var fullSceneLayout = fullLayout[this.id];\n    var sceneLayout = layout[this.id];\n\n    if(fullSceneLayout.bgcolor) this.glplot.clearColor = str2RGBAarray(fullSceneLayout.bgcolor);\n    else this.glplot.clearColor = [0, 0, 0, 0];\n\n    this.glplot.snapToData = true;\n\n    // Update layout\n    this.fullLayout = fullLayout;\n    this.fullSceneLayout = fullSceneLayout;\n\n    this.glplotLayout = fullSceneLayout;\n    this.axesOptions.merge(fullLayout, fullSceneLayout);\n    this.spikeOptions.merge(fullSceneLayout);\n\n    // Update camera and camera mode\n    this.setCamera(fullSceneLayout.camera);\n    this.updateFx(fullSceneLayout.dragmode, fullSceneLayout.hovermode);\n    this.camera.enableWheel = this.graphDiv._context._scrollZoom.gl3d;\n\n    // Update scene\n    this.glplot.update({});\n\n    // Update axes functions BEFORE updating traces\n    this.setConvert(axis);\n\n    // Convert scene data\n    if(!sceneData) sceneData = [];\n    else if(!Array.isArray(sceneData)) sceneData = [sceneData];\n\n    // Compute trace bounding box\n    var dataBounds = [\n        [Infinity, Infinity, Infinity],\n        [-Infinity, -Infinity, -Infinity]\n    ];\n\n    for(i = 0; i < sceneData.length; ++i) {\n        data = sceneData[i];\n        if(data.visible !== true) continue;\n\n        computeTraceBounds(this, data, dataBounds);\n    }\n    computeAnnotationBounds(this, dataBounds);\n\n    var dataScale = [1, 1, 1];\n    for(j = 0; j < 3; ++j) {\n        if(dataBounds[1][j] === dataBounds[0][j]) {\n            dataScale[j] = 1.0;\n        } else {\n            dataScale[j] = 1.0 / (dataBounds[1][j] - dataBounds[0][j]);\n        }\n    }\n\n    // Save scale\n    this.dataScale = dataScale;\n\n    // after computeTraceBounds where ax._categories are filled in\n    this.convertAnnotations(this);\n\n    // Update traces\n    for(i = 0; i < sceneData.length; ++i) {\n        data = sceneData[i];\n        if(data.visible !== true) {\n            continue;\n        }\n        trace = this.traces[data.uid];\n        if(trace) {\n            if(trace.data.type === data.type) {\n                trace.update(data);\n            } else {\n                trace.dispose();\n                trace = data._module.plot(this, data);\n                this.traces[data.uid] = trace;\n            }\n        } else {\n            trace = data._module.plot(this, data);\n            this.traces[data.uid] = trace;\n        }\n        trace.name = data.name;\n    }\n\n    // Remove empty traces\n    var traceIds = Object.keys(this.traces);\n\n    traceIdLoop:\n    for(i = 0; i < traceIds.length; ++i) {\n        for(j = 0; j < sceneData.length; ++j) {\n            if(sceneData[j].uid === traceIds[i] && sceneData[j].visible === true) {\n                continue traceIdLoop;\n            }\n        }\n        trace = this.traces[traceIds[i]];\n        trace.dispose();\n        delete this.traces[traceIds[i]];\n    }\n\n    // order object per trace index\n    this.glplot.objects.sort(function(a, b) {\n        return a._trace.data.index - b._trace.data.index;\n    });\n\n    // Update ranges (needs to be called *after* objects are added due to updates)\n    var sceneBounds = [[0, 0, 0], [0, 0, 0]];\n    var axisDataRange = [];\n    var axisTypeRatios = {};\n\n    for(i = 0; i < 3; ++i) {\n        axis = fullSceneLayout[axisProperties[i]];\n        axisType = axis.type;\n\n        if(axisType in axisTypeRatios) {\n            axisTypeRatios[axisType].acc *= dataScale[i];\n            axisTypeRatios[axisType].count += 1;\n        }\n        else {\n            axisTypeRatios[axisType] = {\n                acc: dataScale[i],\n                count: 1\n            };\n        }\n\n        if(axis.autorange) {\n            sceneBounds[0][i] = Infinity;\n            sceneBounds[1][i] = -Infinity;\n\n            var objects = this.glplot.objects;\n            var annotations = this.fullSceneLayout.annotations || [];\n            var axLetter = axis._name.charAt(0);\n\n            for(j = 0; j < objects.length; j++) {\n                var obj = objects[j];\n                var objBounds = obj.bounds;\n                var pad = obj._trace.data._pad || 0;\n\n                if(obj.constructor.name === 'ErrorBars' && axis._lowerLogErrorBound) {\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], axis._lowerLogErrorBound);\n                } else {\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], objBounds[0][i] / dataScale[i] - pad);\n                }\n                sceneBounds[1][i] = Math.max(sceneBounds[1][i], objBounds[1][i] / dataScale[i] + pad);\n            }\n\n            for(j = 0; j < annotations.length; j++) {\n                var ann = annotations[j];\n\n                // N.B. not taking into consideration the arrowhead\n                if(ann.visible) {\n                    var pos = axis.r2l(ann[axLetter]);\n                    sceneBounds[0][i] = Math.min(sceneBounds[0][i], pos);\n                    sceneBounds[1][i] = Math.max(sceneBounds[1][i], pos);\n                }\n            }\n\n            if('rangemode' in axis && axis.rangemode === 'tozero') {\n                sceneBounds[0][i] = Math.min(sceneBounds[0][i], 0);\n                sceneBounds[1][i] = Math.max(sceneBounds[1][i], 0);\n            }\n            if(sceneBounds[0][i] > sceneBounds[1][i]) {\n                sceneBounds[0][i] = -1;\n                sceneBounds[1][i] = 1;\n            } else {\n                var d = sceneBounds[1][i] - sceneBounds[0][i];\n                sceneBounds[0][i] -= d / 32.0;\n                sceneBounds[1][i] += d / 32.0;\n            }\n\n            if(axis.autorange === 'reversed') {\n                // swap bounds:\n                var tmp = sceneBounds[0][i];\n                sceneBounds[0][i] = sceneBounds[1][i];\n                sceneBounds[1][i] = tmp;\n            }\n        } else {\n            var range = axis.range;\n            sceneBounds[0][i] = axis.r2l(range[0]);\n            sceneBounds[1][i] = axis.r2l(range[1]);\n        }\n        if(sceneBounds[0][i] === sceneBounds[1][i]) {\n            sceneBounds[0][i] -= 1;\n            sceneBounds[1][i] += 1;\n        }\n        axisDataRange[i] = sceneBounds[1][i] - sceneBounds[0][i];\n\n        // Update plot bounds\n        this.glplot.bounds[0][i] = sceneBounds[0][i] * dataScale[i];\n        this.glplot.bounds[1][i] = sceneBounds[1][i] * dataScale[i];\n    }\n\n    var axesScaleRatio = [1, 1, 1];\n\n    // Compute axis scale per category\n    for(i = 0; i < 3; ++i) {\n        axis = fullSceneLayout[axisProperties[i]];\n        axisType = axis.type;\n        var axisRatio = axisTypeRatios[axisType];\n        axesScaleRatio[i] = Math.pow(axisRatio.acc, 1.0 / axisRatio.count) / dataScale[i];\n    }\n\n    /*\n     * Dynamically set the aspect ratio depending on the users aspect settings\n     */\n    var axisAutoScaleFactor = 4;\n    var aspectRatio;\n\n    if(fullSceneLayout.aspectmode === 'auto') {\n\n        if(Math.max.apply(null, axesScaleRatio) / Math.min.apply(null, axesScaleRatio) <= axisAutoScaleFactor) {\n\n            /*\n             * USE DATA MODE WHEN AXIS RANGE DIMENSIONS ARE RELATIVELY EQUAL\n             */\n\n            aspectRatio = axesScaleRatio;\n        } else {\n\n            /*\n             * USE EQUAL MODE WHEN AXIS RANGE DIMENSIONS ARE HIGHLY UNEQUAL\n             */\n            aspectRatio = [1, 1, 1];\n        }\n\n    } else if(fullSceneLayout.aspectmode === 'cube') {\n        aspectRatio = [1, 1, 1];\n\n    } else if(fullSceneLayout.aspectmode === 'data') {\n        aspectRatio = axesScaleRatio;\n\n    } else if(fullSceneLayout.aspectmode === 'manual') {\n        var userRatio = fullSceneLayout.aspectratio;\n        aspectRatio = [userRatio.x, userRatio.y, userRatio.z];\n\n    } else {\n        throw new Error('scene.js aspectRatio was not one of the enumerated types');\n    }\n\n    /*\n     * Write aspect Ratio back to user data and fullLayout so that it is modifies as user\n     * manipulates the aspectmode settings and the fullLayout is up-to-date.\n     */\n    fullSceneLayout.aspectratio.x = sceneLayout.aspectratio.x = aspectRatio[0];\n    fullSceneLayout.aspectratio.y = sceneLayout.aspectratio.y = aspectRatio[1];\n    fullSceneLayout.aspectratio.z = sceneLayout.aspectratio.z = aspectRatio[2];\n\n    /*\n     * Finally assign the computed aspecratio to the glplot module. This will have an effect\n     * on the next render cycle.\n     */\n    this.glplot.aspect = aspectRatio;\n\n\n    // Update frame position for multi plots\n    var domain = fullSceneLayout.domain || null;\n    var size = fullLayout._size || null;\n\n    if(domain && size) {\n        var containerStyle = this.container.style;\n        containerStyle.position = 'absolute';\n        containerStyle.left = (size.l + domain.x[0] * size.w) + 'px';\n        containerStyle.top = (size.t + (1 - domain.y[1]) * size.h) + 'px';\n        containerStyle.width = (size.w * (domain.x[1] - domain.x[0])) + 'px';\n        containerStyle.height = (size.h * (domain.y[1] - domain.y[0])) + 'px';\n    }\n\n    // force redraw so that promise is returned when rendering is completed\n    this.glplot.redraw();\n};\n\nproto.destroy = function() {\n    if(!this.glplot) return;\n\n    this.camera.mouseListener.enabled = false;\n    this.container.removeEventListener('wheel', this.camera.wheelListener);\n    this.camera = this.glplot.camera = null;\n    this.glplot.dispose();\n    this.container.parentNode.removeChild(this.container);\n    this.glplot = null;\n};\n\n// getOrbitCamera :: plotly_coords -> orbit_camera_coords\n// inverse of getLayoutCamera\nfunction getOrbitCamera(camera) {\n    return [\n        [camera.eye.x, camera.eye.y, camera.eye.z],\n        [camera.center.x, camera.center.y, camera.center.z],\n        [camera.up.x, camera.up.y, camera.up.z]\n    ];\n}\n\n// getLayoutCamera :: orbit_camera_coords -> plotly_coords\n// inverse of getOrbitCamera\nfunction getLayoutCamera(camera) {\n    return {\n        up: {x: camera.up[0], y: camera.up[1], z: camera.up[2]},\n        center: {x: camera.center[0], y: camera.center[1], z: camera.center[2]},\n        eye: {x: camera.eye[0], y: camera.eye[1], z: camera.eye[2]}\n    };\n}\n\n// get camera position in plotly coords from 'orbit-camera' coords\nproto.getCamera = function getCamera() {\n    this.glplot.camera.view.recalcMatrix(this.camera.view.lastT());\n    return getLayoutCamera(this.glplot.camera);\n};\n\n// set camera position with a set of plotly coords\nproto.setCamera = function setCamera(cameraData) {\n    this.glplot.camera.lookAt.apply(this, getOrbitCamera(cameraData));\n};\n\n// save camera to user layout (i.e. gd.layout)\nproto.saveCamera = function saveCamera(layout) {\n    var fullLayout = this.fullLayout;\n    var cameraData = this.getCamera();\n    var cameraNestedProp = Lib.nestedProperty(layout, this.id + '.camera');\n    var cameraDataLastSave = cameraNestedProp.get();\n    var hasChanged = false;\n\n    function same(x, y, i, j) {\n        var vectors = ['up', 'center', 'eye'];\n        var components = ['x', 'y', 'z'];\n        return y[vectors[i]] && (x[vectors[i]][components[j]] === y[vectors[i]][components[j]]);\n    }\n\n    if(cameraDataLastSave === undefined) {\n        hasChanged = true;\n    } else {\n        for(var i = 0; i < 3; i++) {\n            for(var j = 0; j < 3; j++) {\n                if(!same(cameraData, cameraDataLastSave, i, j)) {\n                    hasChanged = true;\n                    break;\n                }\n            }\n        }\n    }\n\n    if(hasChanged) {\n        var preGUI = {};\n        preGUI[this.id + '.camera'] = cameraDataLastSave;\n        Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, preGUI);\n\n        cameraNestedProp.set(cameraData);\n\n        var cameraFullNP = Lib.nestedProperty(fullLayout, this.id + '.camera');\n        cameraFullNP.set(cameraData);\n    }\n\n    return hasChanged;\n};\n\nproto.updateFx = function(dragmode, hovermode) {\n    var camera = this.camera;\n\n    if(camera) {\n        // rotate and orbital are synonymous\n        if(dragmode === 'orbit') {\n            camera.mode = 'orbit';\n            camera.keyBindingMode = 'rotate';\n\n        } else if(dragmode === 'turntable') {\n            camera.up = [0, 0, 1];\n            camera.mode = 'turntable';\n            camera.keyBindingMode = 'rotate';\n\n            // The setter for camera.mode animates the transition to z-up,\n            // but only if we *don't* explicitly set z-up earlier via the\n            // relayout. So push `up` back to layout & fullLayout manually now.\n            var gd = this.graphDiv;\n            var fullLayout = gd._fullLayout;\n            var fullCamera = this.fullSceneLayout.camera;\n            var x = fullCamera.up.x;\n            var y = fullCamera.up.y;\n            var z = fullCamera.up.z;\n            // only push `up` back to (full)layout if it's going to change\n            if(z / Math.sqrt(x * x + y * y + z * z) > 0.999) return;\n\n            var attr = this.id + '.camera.up';\n            var zUp = {x: 0, y: 0, z: 1};\n            var edits = {};\n            edits[attr] = zUp;\n            var layout = gd.layout;\n            Registry.call('_storeDirectGUIEdit', layout, fullLayout._preGUI, edits);\n            fullCamera.up = zUp;\n            Lib.nestedProperty(layout, attr).set(zUp);\n        } else {\n            // none rotation modes [pan or zoom]\n            camera.keyBindingMode = dragmode;\n        }\n    }\n\n    // to put dragmode and hovermode on the same grounds from relayout\n    this.fullSceneLayout.hovermode = hovermode;\n};\n\nproto.toImage = function(format) {\n    if(!format) format = 'png';\n\n    if(this.staticMode) this.container.appendChild(STATIC_CANVAS);\n\n    // Force redraw\n    this.glplot.redraw();\n\n    // Grab context and yank out pixels\n    var gl = this.glplot.gl;\n    var w = gl.drawingBufferWidth;\n    var h = gl.drawingBufferHeight;\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    var pixels = new Uint8Array(w * h * 4);\n    gl.readPixels(0, 0, w, h, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n\n    // Flip pixels\n    for(var j = 0, k = h - 1; j < k; ++j, --k) {\n        for(var i = 0; i < w; ++i) {\n            for(var l = 0; l < 4; ++l) {\n                var tmp = pixels[4 * (w * j + i) + l];\n                pixels[4 * (w * j + i) + l] = pixels[4 * (w * k + i) + l];\n                pixels[4 * (w * k + i) + l] = tmp;\n            }\n        }\n    }\n\n    var canvas = document.createElement('canvas');\n    canvas.width = w;\n    canvas.height = h;\n    var context = canvas.getContext('2d');\n    var imageData = context.createImageData(w, h);\n    imageData.data.set(pixels);\n    context.putImageData(imageData, 0, 0);\n\n    var dataURL;\n\n    switch(format) {\n        case 'jpeg':\n            dataURL = canvas.toDataURL('image/jpeg');\n            break;\n        case 'webp':\n            dataURL = canvas.toDataURL('image/webp');\n            break;\n        default:\n            dataURL = canvas.toDataURL('image/png');\n    }\n\n    if(this.staticMode) this.container.removeChild(STATIC_CANVAS);\n\n    return dataURL;\n};\n\nproto.setConvert = function() {\n    for(var i = 0; i < 3; i++) {\n        var ax = this.fullSceneLayout[axisProperties[i]];\n        Axes.setConvert(ax, this.fullLayout);\n        ax.setScale = Lib.noop;\n    }\n};\n\nproto.make4thDimension = function() {\n\n    var _this = this;\n    var gd = _this.graphDiv;\n    var fullLayout = gd._fullLayout;\n\n    // mock axis for hover formatting\n    _this.mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nmodule.exports = Scene;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
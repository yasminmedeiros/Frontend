{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/* global PlotlyGeoAssets:false */\nvar d3 = require('d3');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar Plots = require('../plots');\nvar Axes = require('../cartesian/axes');\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../cartesian/select').prepSelect;\nvar selectOnClick = require('../cartesian/select').selectOnClick;\nvar createGeoZoom = require('./zoom');\nvar constants = require('./constants');\nvar topojsonUtils = require('../../lib/topojson_utils');\nvar topojsonFeature = require('topojson-client').feature;\nrequire('./projections')(d3);\nfunction Geo(opts) {\n  this.id = opts.id;\n  this.graphDiv = opts.graphDiv;\n  this.container = opts.container;\n  this.topojsonURL = opts.topojsonURL;\n  this.isStatic = opts.staticPlot;\n  this.topojsonName = null;\n  this.topojson = null;\n  this.projection = null;\n  this.viewInitial = null;\n  this.fitScale = null;\n  this.bounds = null;\n  this.midPt = null;\n  this.hasChoropleth = false;\n  this.traceHash = {};\n  this.layers = {};\n  this.basePaths = {};\n  this.dataPaths = {};\n  this.dataPoints = {};\n  this.clipDef = null;\n  this.clipRect = null;\n  this.bgRect = null;\n  this.makeFramework();\n}\nvar proto = Geo.prototype;\nmodule.exports = function createGeo(opts) {\n  return new Geo(opts);\n};\nproto.plot = function (geoCalcData, fullLayout, promises) {\n  var _this = this;\n  var geoLayout = fullLayout[this.id];\n  var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n  if (_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n    _this.topojsonName = topojsonNameNew;\n    if (PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n      promises.push(_this.fetchTopojson().then(function (topojson) {\n        PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n        _this.topojson = topojson;\n        _this.update(geoCalcData, fullLayout);\n      }));\n    } else {\n      _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n      _this.update(geoCalcData, fullLayout);\n    }\n  } else {\n    _this.update(geoCalcData, fullLayout);\n  }\n};\nproto.fetchTopojson = function () {\n  var topojsonPath = topojsonUtils.getTopojsonPath(this.topojsonURL, this.topojsonName);\n  return new Promise(function (resolve, reject) {\n    d3.json(topojsonPath, function (err, topojson) {\n      if (err) {\n        if (err.status === 404) {\n          return reject(new Error(['plotly.js could not find topojson file at', topojsonPath, '.', 'Make sure the *topojsonURL* plot config option', 'is set properly.'].join(' ')));\n        } else {\n          return reject(new Error(['unexpected error while fetching topojson file at', topojsonPath].join(' ')));\n        }\n      }\n      resolve(topojson);\n    });\n  });\n};\nproto.update = function (geoCalcData, fullLayout) {\n  var geoLayout = fullLayout[this.id];\n  var hasInvalidBounds = this.updateProjection(fullLayout, geoLayout);\n  if (hasInvalidBounds) return;\n\n  // important: maps with choropleth traces have a different layer order\n  this.hasChoropleth = false;\n  for (var i = 0; i < geoCalcData.length; i++) {\n    if (geoCalcData[i][0].trace.type === 'choropleth') {\n      this.hasChoropleth = true;\n      break;\n    }\n  }\n  if (!this.viewInitial) {\n    this.saveViewInitial(geoLayout);\n  }\n  this.updateBaseLayers(fullLayout, geoLayout);\n  this.updateDims(fullLayout, geoLayout);\n  this.updateFx(fullLayout, geoLayout);\n  Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n  var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n  this.dataPoints.point = scatterLayer.selectAll('.point');\n  this.dataPoints.text = scatterLayer.selectAll('text');\n  this.dataPaths.line = scatterLayer.selectAll('.js-line');\n  var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n  this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n  this.render();\n};\nproto.updateProjection = function (fullLayout, geoLayout) {\n  var gs = fullLayout._size;\n  var domain = geoLayout.domain;\n  var projLayout = geoLayout.projection;\n  var rotation = projLayout.rotation || {};\n  var center = geoLayout.center || {};\n  var projection = this.projection = getProjection(geoLayout);\n\n  // set 'pre-fit' projection\n  projection.center([center.lon - rotation.lon, center.lat - rotation.lat]).rotate([-rotation.lon, -rotation.lat, rotation.roll]).parallels(projLayout.parallels);\n\n  // setup subplot extent [[x0,y0], [x1,y1]]\n  var extent = [[gs.l + gs.w * domain.x[0], gs.t + gs.h * (1 - domain.y[1])], [gs.l + gs.w * domain.x[1], gs.t + gs.h * (1 - domain.y[0])]];\n  var lonaxis = geoLayout.lonaxis;\n  var lataxis = geoLayout.lataxis;\n  var rangeBox = makeRangeBox(lonaxis.range, lataxis.range);\n\n  // fit projection 'scale' and 'translate' to set lon/lat ranges\n  projection.fitExtent(extent, rangeBox);\n  var b = this.bounds = projection.getBounds(rangeBox);\n  var s = this.fitScale = projection.scale();\n  var t = projection.translate();\n  if (!isFinite(b[0][0]) || !isFinite(b[0][1]) || !isFinite(b[1][0]) || !isFinite(b[1][1]) || isNaN(t[0]) || isNaN(t[0])) {\n    var gd = this.graphDiv;\n    var attrToUnset = ['projection.rotation', 'center', 'lonaxis.range', 'lataxis.range'];\n    var msg = 'Invalid geo settings, relayout\\'ing to default view.';\n    var updateObj = {};\n\n    // clear all attribute that could cause invalid bounds,\n    // clear viewInitial to update reset-view behavior\n\n    for (var i = 0; i < attrToUnset.length; i++) {\n      updateObj[this.id + '.' + attrToUnset[i]] = null;\n    }\n    this.viewInitial = null;\n    Lib.warn(msg);\n    gd._promises.push(Registry.call('relayout', gd, updateObj));\n    return msg;\n  }\n\n  // px coordinates of view mid-point,\n  // useful to update `geo.center` after interactions\n  var midPt = this.midPt = [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2];\n\n  // adjust projection to user setting\n  projection.scale(projLayout.scale * s).translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])]).clipExtent(b);\n\n  // the 'albers usa' projection does not expose a 'center' method\n  // so here's this hack to make it respond to 'geoLayout.center'\n  if (geoLayout._isAlbersUsa) {\n    var centerPx = projection([center.lon, center.lat]);\n    var tt = projection.translate();\n    projection.translate([tt[0] - (centerPx[0] - tt[0]), tt[1] - (centerPx[1] - tt[1])]);\n  }\n};\nproto.updateBaseLayers = function (fullLayout, geoLayout) {\n  var _this = this;\n  var topojson = _this.topojson;\n  var layers = _this.layers;\n  var basePaths = _this.basePaths;\n  function isAxisLayer(d) {\n    return d === 'lonaxis' || d === 'lataxis';\n  }\n  function isLineLayer(d) {\n    return Boolean(constants.lineLayers[d]);\n  }\n  function isFillLayer(d) {\n    return Boolean(constants.fillLayers[d]);\n  }\n  var allLayers = this.hasChoropleth ? constants.layersForChoropleth : constants.layers;\n  var layerData = allLayers.filter(function (d) {\n    return isLineLayer(d) || isFillLayer(d) ? geoLayout['show' + d] : isAxisLayer(d) ? geoLayout[d].showgrid : true;\n  });\n  var join = _this.framework.selectAll('.layer').data(layerData, String);\n  join.exit().each(function (d) {\n    delete layers[d];\n    delete basePaths[d];\n    d3.select(this).remove();\n  });\n  join.enter().append('g').attr('class', function (d) {\n    return 'layer ' + d;\n  }).each(function (d) {\n    var layer = layers[d] = d3.select(this);\n    if (d === 'bg') {\n      _this.bgRect = layer.append('rect').style('pointer-events', 'all');\n    } else if (isAxisLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none');\n    } else if (d === 'backplot') {\n      layer.append('g').classed('choroplethlayer', true);\n    } else if (d === 'frontplot') {\n      layer.append('g').classed('scatterlayer', true);\n    } else if (isLineLayer(d)) {\n      basePaths[d] = layer.append('path').style('fill', 'none').style('stroke-miterlimit', 2);\n    } else if (isFillLayer(d)) {\n      basePaths[d] = layer.append('path').style('stroke', 'none');\n    }\n  });\n  join.order();\n  join.each(function (d) {\n    var path = basePaths[d];\n    var adj = constants.layerNameToAdjective[d];\n    if (d === 'frame') {\n      path.datum(constants.sphereSVG);\n    } else if (isLineLayer(d) || isFillLayer(d)) {\n      path.datum(topojsonFeature(topojson, topojson.objects[d]));\n    } else if (isAxisLayer(d)) {\n      path.datum(makeGraticule(d, geoLayout)).call(Color.stroke, geoLayout[d].gridcolor).call(Drawing.dashLine, '', geoLayout[d].gridwidth);\n    }\n    if (isLineLayer(d)) {\n      path.call(Color.stroke, geoLayout[adj + 'color']).call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n    } else if (isFillLayer(d)) {\n      path.call(Color.fill, geoLayout[adj + 'color']);\n    }\n  });\n};\nproto.updateDims = function (fullLayout, geoLayout) {\n  var b = this.bounds;\n  var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n  var l = b[0][0] - hFrameWidth;\n  var t = b[0][1] - hFrameWidth;\n  var w = b[1][0] - l + hFrameWidth;\n  var h = b[1][1] - t + hFrameWidth;\n  Drawing.setRect(this.clipRect, l, t, w, h);\n  this.bgRect.call(Drawing.setRect, l, t, w, h).call(Color.fill, geoLayout.bgcolor);\n  this.xaxis._offset = l;\n  this.xaxis._length = w;\n  this.yaxis._offset = t;\n  this.yaxis._length = h;\n};\nproto.updateFx = function (fullLayout, geoLayout) {\n  var _this = this;\n  var gd = _this.graphDiv;\n  var bgRect = _this.bgRect;\n  var dragMode = fullLayout.dragmode;\n  var clickMode = fullLayout.clickmode;\n  if (_this.isStatic) return;\n  function zoomReset() {\n    var viewInitial = _this.viewInitial;\n    var updateObj = {};\n    for (var k in viewInitial) {\n      updateObj[_this.id + '.' + k] = viewInitial[k];\n    }\n    Registry.call('_guiRelayout', gd, updateObj);\n    gd.emit('plotly_doubleclick', null);\n  }\n  function invert(lonlat) {\n    return _this.projection.invert([lonlat[0] + _this.xaxis._offset, lonlat[1] + _this.yaxis._offset]);\n  }\n  var fillRangeItems;\n  if (dragMode === 'select') {\n    fillRangeItems = function fillRangeItems(eventData, poly) {\n      var ranges = eventData.range = {};\n      ranges[_this.id] = [invert([poly.xmin, poly.ymin]), invert([poly.xmax, poly.ymax])];\n    };\n  } else if (dragMode === 'lasso') {\n    fillRangeItems = function fillRangeItems(eventData, poly, pts) {\n      var dataPts = eventData.lassoPoints = {};\n      dataPts[_this.id] = pts.filtered.map(invert);\n    };\n  }\n\n  // Note: dragOptions is needed to be declared for all dragmodes because\n  // it's the object that holds persistent selection state.\n  var dragOptions = {\n    element: _this.bgRect.node(),\n    gd: gd,\n    plotinfo: {\n      id: _this.id,\n      xaxis: _this.xaxis,\n      yaxis: _this.yaxis,\n      fillRangeItems: fillRangeItems\n    },\n    xaxes: [_this.xaxis],\n    yaxes: [_this.yaxis],\n    subplot: _this.id,\n    clickFn: function clickFn(numClicks) {\n      if (numClicks === 2) {\n        fullLayout._zoomlayer.selectAll('.select-outline').remove();\n      }\n    }\n  };\n  if (dragMode === 'pan') {\n    bgRect.node().onmousedown = null;\n    bgRect.call(createGeoZoom(_this, geoLayout));\n    bgRect.on('dblclick.zoom', zoomReset);\n    if (!gd._context._scrollZoom.geo) {\n      bgRect.on('wheel.zoom', null);\n    }\n  } else if (dragMode === 'select' || dragMode === 'lasso') {\n    bgRect.on('.zoom', null);\n    dragOptions.prepFn = function (e, startX, startY) {\n      prepSelect(e, startX, startY, dragOptions, dragMode);\n    };\n    dragElement.init(dragOptions);\n  }\n  bgRect.on('mousemove', function () {\n    var lonlat = _this.projection.invert(d3.mouse(this));\n    if (!lonlat || isNaN(lonlat[0]) || isNaN(lonlat[1])) {\n      return dragElement.unhover(gd, d3.event);\n    }\n    _this.xaxis.p2c = function () {\n      return lonlat[0];\n    };\n    _this.yaxis.p2c = function () {\n      return lonlat[1];\n    };\n    Fx.hover(gd, d3.event, _this.id);\n  });\n  bgRect.on('mouseout', function () {\n    if (gd._dragging) return;\n    dragElement.unhover(gd, d3.event);\n  });\n  bgRect.on('click', function () {\n    // For select and lasso the dragElement is handling clicks\n    if (dragMode !== 'select' && dragMode !== 'lasso') {\n      if (clickMode.indexOf('select') > -1) {\n        selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis], _this.id, dragOptions);\n      }\n      if (clickMode.indexOf('event') > -1) {\n        // TODO: like pie and mapbox, this doesn't support right-click\n        // actually this one is worse, as right-click starts a pan, or leaves\n        // select in a weird state.\n        // Also, only tangentially related, we should cancel hover during pan\n        Fx.click(gd, d3.event);\n      }\n    }\n  });\n};\nproto.makeFramework = function () {\n  var _this = this;\n  var gd = _this.graphDiv;\n  var fullLayout = gd._fullLayout;\n  var clipId = 'clip' + fullLayout._uid + _this.id;\n  _this.clipDef = fullLayout._clips.append('clipPath').attr('id', clipId);\n  _this.clipRect = _this.clipDef.append('rect');\n  _this.framework = d3.select(_this.container).append('g').attr('class', 'geo ' + _this.id).call(Drawing.setClipUrl, clipId, gd);\n\n  // sane lonlat to px\n  _this.project = function (v) {\n    var px = _this.projection(v);\n    return px ? [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] : [null, null];\n  };\n  _this.xaxis = {\n    _id: 'x',\n    c2p: function c2p(v) {\n      return _this.project(v)[0];\n    }\n  };\n  _this.yaxis = {\n    _id: 'y',\n    c2p: function c2p(v) {\n      return _this.project(v)[1];\n    }\n  };\n\n  // mock axis for hover formatting\n  _this.mockAxis = {\n    type: 'linear',\n    showexponent: 'all',\n    exponentformat: 'B'\n  };\n  Axes.setConvert(_this.mockAxis, fullLayout);\n};\nproto.saveViewInitial = function (geoLayout) {\n  var center = geoLayout.center || {};\n  var projLayout = geoLayout.projection;\n  var rotation = projLayout.rotation || {};\n  if (geoLayout._isScoped) {\n    this.viewInitial = {\n      'center.lon': center.lon,\n      'center.lat': center.lat,\n      'projection.scale': projLayout.scale\n    };\n  } else if (geoLayout._isClipped) {\n    this.viewInitial = {\n      'projection.scale': projLayout.scale,\n      'projection.rotation.lon': rotation.lon,\n      'projection.rotation.lat': rotation.lat\n    };\n  } else {\n    this.viewInitial = {\n      'center.lon': center.lon,\n      'center.lat': center.lat,\n      'projection.scale': projLayout.scale,\n      'projection.rotation.lon': rotation.lon\n    };\n  }\n};\n\n// [hot code path] (re)draw all paths which depend on the projection\nproto.render = function () {\n  var projection = this.projection;\n  var pathFn = projection.getPath();\n  var k;\n  function translatePoints(d) {\n    var lonlatPx = projection(d.lonlat);\n    return lonlatPx ? 'translate(' + lonlatPx[0] + ',' + lonlatPx[1] + ')' : null;\n  }\n  function hideShowPoints(d) {\n    return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n  }\n  for (k in this.basePaths) {\n    this.basePaths[k].attr('d', pathFn);\n  }\n  for (k in this.dataPaths) {\n    this.dataPaths[k].attr('d', function (d) {\n      return pathFn(d.geojson);\n    });\n  }\n  for (k in this.dataPoints) {\n    this.dataPoints[k].attr('display', hideShowPoints).attr('transform', translatePoints);\n  }\n};\n\n// Helper that wraps d3.geo[/* projection name /*]() which:\n//\n// - adds 'fitExtent' (available in d3 v4)\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\nfunction getProjection(geoLayout) {\n  var projLayout = geoLayout.projection;\n  var projType = projLayout.type;\n  var projection = d3.geo[constants.projNames[projType]]();\n  var clipAngle = geoLayout._isClipped ? constants.lonaxisSpan[projType] / 2 : null;\n  var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n  var dummyFn = function dummyFn(_) {\n    return _ ? projection : [];\n  };\n  for (var i = 0; i < methods.length; i++) {\n    var m = methods[i];\n    if (typeof projection[m] !== 'function') {\n      projection[m] = dummyFn;\n    }\n  }\n  projection.isLonLatOverEdges = function (lonlat) {\n    if (projection(lonlat) === null) {\n      return true;\n    }\n    if (clipAngle) {\n      var r = projection.rotate();\n      var angle = d3.geo.distance(lonlat, [-r[0], -r[1]]);\n      var maxAngle = clipAngle * Math.PI / 180;\n      return angle > maxAngle;\n    } else {\n      return false;\n    }\n  };\n  projection.getPath = function () {\n    return d3.geo.path().projection(projection);\n  };\n  projection.getBounds = function (object) {\n    return projection.getPath().bounds(object);\n  };\n\n  // adapted from d3 v4:\n  // https://github.com/d3/d3-geo/blob/master/src/projection/fit.js\n  projection.fitExtent = function (extent, object) {\n    var w = extent[1][0] - extent[0][0];\n    var h = extent[1][1] - extent[0][1];\n    var clip = projection.clipExtent && projection.clipExtent();\n    projection.scale(150).translate([0, 0]);\n    if (clip) projection.clipExtent(null);\n    var b = projection.getBounds(object);\n    var k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1]));\n    var x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2;\n    var y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    if (clip) projection.clipExtent(clip);\n    return projection.scale(k * 150).translate([x, y]);\n  };\n  projection.precision(constants.precision);\n  if (clipAngle) {\n    projection.clipAngle(clipAngle - constants.clipPad);\n  }\n  return projection;\n}\nfunction makeGraticule(axisName, geoLayout) {\n  var axisLayout = geoLayout[axisName];\n  var dtick = axisLayout.dtick;\n  var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n  var lonaxisRange = scopeDefaults.lonaxisRange;\n  var lataxisRange = scopeDefaults.lataxisRange;\n  var step = axisName === 'lonaxis' ? [dtick] : [0, dtick];\n  return d3.geo.graticule().extent([[lonaxisRange[0], lataxisRange[0]], [lonaxisRange[1], lataxisRange[1]]]).step(step);\n}\n\n// Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\nfunction makeRangeBox(lon, lat) {\n  var clipPad = constants.clipPad;\n  var lon0 = lon[0] + clipPad;\n  var lon1 = lon[1] - clipPad;\n  var lat0 = lat[0] + clipPad;\n  var lat1 = lat[1] - clipPad;\n\n  // to cross antimeridian w/o ambiguity\n  if (lon0 > 0 && lon1 < 0) lon1 += 360;\n  var dlon4 = (lon1 - lon0) / 4;\n  return {\n    type: 'Polygon',\n    coordinates: [[[lon0, lat0], [lon0, lat1], [lon0 + dlon4, lat1], [lon0 + 2 * dlon4, lat1], [lon0 + 3 * dlon4, lat1], [lon1, lat1], [lon1, lat0], [lon1 - dlon4, lat0], [lon1 - 2 * dlon4, lat0], [lon1 - 3 * dlon4, lat0], [lon0, lat0]]]\n  };\n}","map":{"version":3,"names":["d3","require","Registry","Lib","Color","Drawing","Fx","Plots","Axes","dragElement","prepSelect","selectOnClick","createGeoZoom","constants","topojsonUtils","topojsonFeature","feature","Geo","opts","id","graphDiv","container","topojsonURL","isStatic","staticPlot","topojsonName","topojson","projection","viewInitial","fitScale","bounds","midPt","hasChoropleth","traceHash","layers","basePaths","dataPaths","dataPoints","clipDef","clipRect","bgRect","makeFramework","proto","prototype","module","exports","createGeo","plot","geoCalcData","fullLayout","promises","_this","geoLayout","topojsonNameNew","getTopojsonName","PlotlyGeoAssets","undefined","push","fetchTopojson","then","update","topojsonPath","getTopojsonPath","Promise","resolve","reject","json","err","status","Error","join","hasInvalidBounds","updateProjection","i","length","trace","type","saveViewInitial","updateBaseLayers","updateDims","updateFx","generalUpdatePerTraceModule","scatterLayer","frontplot","select","point","selectAll","text","line","choroplethLayer","backplot","choropleth","render","gs","_size","domain","projLayout","rotation","center","getProjection","lon","lat","rotate","roll","parallels","extent","l","w","x","t","h","y","lonaxis","lataxis","rangeBox","makeRangeBox","range","fitExtent","b","getBounds","s","scale","translate","isFinite","isNaN","gd","attrToUnset","msg","updateObj","warn","_promises","call","clipExtent","_isAlbersUsa","centerPx","tt","isAxisLayer","d","isLineLayer","Boolean","lineLayers","isFillLayer","fillLayers","allLayers","layersForChoropleth","layerData","filter","showgrid","framework","data","String","exit","each","remove","enter","append","attr","layer","style","classed","order","path","adj","layerNameToAdjective","datum","sphereSVG","objects","makeGraticule","stroke","gridcolor","dashLine","gridwidth","fill","hFrameWidth","framewidth","setRect","bgcolor","xaxis","_offset","_length","yaxis","dragMode","dragmode","clickMode","clickmode","zoomReset","k","emit","invert","lonlat","fillRangeItems","eventData","poly","ranges","xmin","ymin","xmax","ymax","pts","dataPts","lassoPoints","filtered","map","dragOptions","element","node","plotinfo","xaxes","yaxes","subplot","clickFn","numClicks","_zoomlayer","onmousedown","on","_context","_scrollZoom","geo","prepFn","e","startX","startY","init","mouse","unhover","event","p2c","hover","_dragging","indexOf","click","_fullLayout","clipId","_uid","_clips","setClipUrl","project","v","px","_id","c2p","mockAxis","showexponent","exponentformat","setConvert","_isScoped","_isClipped","pathFn","getPath","translatePoints","lonlatPx","hideShowPoints","isLonLatOverEdges","geojson","projType","projNames","clipAngle","lonaxisSpan","methods","dummyFn","_","m","r","angle","distance","maxAngle","Math","PI","object","clip","min","precision","clipPad","axisName","axisLayout","dtick","scopeDefaults","scope","lonaxisRange","lataxisRange","step","graticule","lon0","lon1","lat0","lat1","dlon4","coordinates"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/geo/geo.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/* global PlotlyGeoAssets:false */\n\nvar d3 = require('d3');\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Drawing = require('../../components/drawing');\nvar Fx = require('../../components/fx');\nvar Plots = require('../plots');\nvar Axes = require('../cartesian/axes');\nvar dragElement = require('../../components/dragelement');\nvar prepSelect = require('../cartesian/select').prepSelect;\nvar selectOnClick = require('../cartesian/select').selectOnClick;\n\nvar createGeoZoom = require('./zoom');\nvar constants = require('./constants');\n\nvar topojsonUtils = require('../../lib/topojson_utils');\nvar topojsonFeature = require('topojson-client').feature;\n\nrequire('./projections')(d3);\n\nfunction Geo(opts) {\n    this.id = opts.id;\n    this.graphDiv = opts.graphDiv;\n    this.container = opts.container;\n    this.topojsonURL = opts.topojsonURL;\n    this.isStatic = opts.staticPlot;\n\n    this.topojsonName = null;\n    this.topojson = null;\n\n    this.projection = null;\n    this.viewInitial = null;\n    this.fitScale = null;\n    this.bounds = null;\n    this.midPt = null;\n\n    this.hasChoropleth = false;\n    this.traceHash = {};\n\n    this.layers = {};\n    this.basePaths = {};\n    this.dataPaths = {};\n    this.dataPoints = {};\n\n    this.clipDef = null;\n    this.clipRect = null;\n    this.bgRect = null;\n\n    this.makeFramework();\n}\n\nvar proto = Geo.prototype;\n\nmodule.exports = function createGeo(opts) {\n    return new Geo(opts);\n};\n\nproto.plot = function(geoCalcData, fullLayout, promises) {\n    var _this = this;\n    var geoLayout = fullLayout[this.id];\n    var topojsonNameNew = topojsonUtils.getTopojsonName(geoLayout);\n\n    if(_this.topojson === null || topojsonNameNew !== _this.topojsonName) {\n        _this.topojsonName = topojsonNameNew;\n\n        if(PlotlyGeoAssets.topojson[_this.topojsonName] === undefined) {\n            promises.push(_this.fetchTopojson().then(function(topojson) {\n                PlotlyGeoAssets.topojson[_this.topojsonName] = topojson;\n                _this.topojson = topojson;\n                _this.update(geoCalcData, fullLayout);\n            }));\n        } else {\n            _this.topojson = PlotlyGeoAssets.topojson[_this.topojsonName];\n            _this.update(geoCalcData, fullLayout);\n        }\n    } else {\n        _this.update(geoCalcData, fullLayout);\n    }\n};\n\nproto.fetchTopojson = function() {\n    var topojsonPath = topojsonUtils.getTopojsonPath(\n        this.topojsonURL,\n        this.topojsonName\n    );\n    return new Promise(function(resolve, reject) {\n        d3.json(topojsonPath, function(err, topojson) {\n            if(err) {\n                if(err.status === 404) {\n                    return reject(new Error([\n                        'plotly.js could not find topojson file at',\n                        topojsonPath, '.',\n                        'Make sure the *topojsonURL* plot config option',\n                        'is set properly.'\n                    ].join(' ')));\n                } else {\n                    return reject(new Error([\n                        'unexpected error while fetching topojson file at',\n                        topojsonPath\n                    ].join(' ')));\n                }\n            }\n            resolve(topojson);\n        });\n    });\n};\n\nproto.update = function(geoCalcData, fullLayout) {\n    var geoLayout = fullLayout[this.id];\n\n    var hasInvalidBounds = this.updateProjection(fullLayout, geoLayout);\n    if(hasInvalidBounds) return;\n\n    // important: maps with choropleth traces have a different layer order\n    this.hasChoropleth = false;\n    for(var i = 0; i < geoCalcData.length; i++) {\n        if(geoCalcData[i][0].trace.type === 'choropleth') {\n            this.hasChoropleth = true;\n            break;\n        }\n    }\n\n    if(!this.viewInitial) {\n        this.saveViewInitial(geoLayout);\n    }\n\n    this.updateBaseLayers(fullLayout, geoLayout);\n    this.updateDims(fullLayout, geoLayout);\n    this.updateFx(fullLayout, geoLayout);\n\n    Plots.generalUpdatePerTraceModule(this.graphDiv, this, geoCalcData, geoLayout);\n\n    var scatterLayer = this.layers.frontplot.select('.scatterlayer');\n    this.dataPoints.point = scatterLayer.selectAll('.point');\n    this.dataPoints.text = scatterLayer.selectAll('text');\n    this.dataPaths.line = scatterLayer.selectAll('.js-line');\n\n    var choroplethLayer = this.layers.backplot.select('.choroplethlayer');\n    this.dataPaths.choropleth = choroplethLayer.selectAll('path');\n\n    this.render();\n};\n\nproto.updateProjection = function(fullLayout, geoLayout) {\n    var gs = fullLayout._size;\n    var domain = geoLayout.domain;\n    var projLayout = geoLayout.projection;\n    var rotation = projLayout.rotation || {};\n    var center = geoLayout.center || {};\n\n    var projection = this.projection = getProjection(geoLayout);\n\n    // set 'pre-fit' projection\n    projection\n        .center([center.lon - rotation.lon, center.lat - rotation.lat])\n        .rotate([-rotation.lon, -rotation.lat, rotation.roll])\n        .parallels(projLayout.parallels);\n\n    // setup subplot extent [[x0,y0], [x1,y1]]\n    var extent = [[\n        gs.l + gs.w * domain.x[0],\n        gs.t + gs.h * (1 - domain.y[1])\n    ], [\n        gs.l + gs.w * domain.x[1],\n        gs.t + gs.h * (1 - domain.y[0])\n    ]];\n\n    var lonaxis = geoLayout.lonaxis;\n    var lataxis = geoLayout.lataxis;\n    var rangeBox = makeRangeBox(lonaxis.range, lataxis.range);\n\n    // fit projection 'scale' and 'translate' to set lon/lat ranges\n    projection.fitExtent(extent, rangeBox);\n\n    var b = this.bounds = projection.getBounds(rangeBox);\n    var s = this.fitScale = projection.scale();\n    var t = projection.translate();\n\n    if(\n        !isFinite(b[0][0]) || !isFinite(b[0][1]) ||\n        !isFinite(b[1][0]) || !isFinite(b[1][1]) ||\n        isNaN(t[0]) || isNaN(t[0])\n    ) {\n        var gd = this.graphDiv;\n        var attrToUnset = ['projection.rotation', 'center', 'lonaxis.range', 'lataxis.range'];\n        var msg = 'Invalid geo settings, relayout\\'ing to default view.';\n        var updateObj = {};\n\n        // clear all attribute that could cause invalid bounds,\n        // clear viewInitial to update reset-view behavior\n\n        for(var i = 0; i < attrToUnset.length; i++) {\n            updateObj[this.id + '.' + attrToUnset[i]] = null;\n        }\n\n        this.viewInitial = null;\n\n        Lib.warn(msg);\n        gd._promises.push(Registry.call('relayout', gd, updateObj));\n        return msg;\n    }\n\n    // px coordinates of view mid-point,\n    // useful to update `geo.center` after interactions\n    var midPt = this.midPt = [\n        (b[0][0] + b[1][0]) / 2,\n        (b[0][1] + b[1][1]) / 2\n    ];\n\n    // adjust projection to user setting\n    projection\n        .scale(projLayout.scale * s)\n        .translate([t[0] + (midPt[0] - t[0]), t[1] + (midPt[1] - t[1])])\n        .clipExtent(b);\n\n    // the 'albers usa' projection does not expose a 'center' method\n    // so here's this hack to make it respond to 'geoLayout.center'\n    if(geoLayout._isAlbersUsa) {\n        var centerPx = projection([center.lon, center.lat]);\n        var tt = projection.translate();\n\n        projection.translate([\n            tt[0] - (centerPx[0] - tt[0]),\n            tt[1] - (centerPx[1] - tt[1])\n        ]);\n    }\n};\n\nproto.updateBaseLayers = function(fullLayout, geoLayout) {\n    var _this = this;\n    var topojson = _this.topojson;\n    var layers = _this.layers;\n    var basePaths = _this.basePaths;\n\n    function isAxisLayer(d) {\n        return (d === 'lonaxis' || d === 'lataxis');\n    }\n\n    function isLineLayer(d) {\n        return Boolean(constants.lineLayers[d]);\n    }\n\n    function isFillLayer(d) {\n        return Boolean(constants.fillLayers[d]);\n    }\n\n    var allLayers = this.hasChoropleth ?\n        constants.layersForChoropleth :\n        constants.layers;\n\n    var layerData = allLayers.filter(function(d) {\n        return (isLineLayer(d) || isFillLayer(d)) ? geoLayout['show' + d] :\n            isAxisLayer(d) ? geoLayout[d].showgrid :\n            true;\n    });\n\n    var join = _this.framework.selectAll('.layer')\n        .data(layerData, String);\n\n    join.exit().each(function(d) {\n        delete layers[d];\n        delete basePaths[d];\n        d3.select(this).remove();\n    });\n\n    join.enter().append('g')\n        .attr('class', function(d) { return 'layer ' + d; })\n        .each(function(d) {\n            var layer = layers[d] = d3.select(this);\n\n            if(d === 'bg') {\n                _this.bgRect = layer.append('rect')\n                    .style('pointer-events', 'all');\n            } else if(isAxisLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none');\n            } else if(d === 'backplot') {\n                layer.append('g')\n                    .classed('choroplethlayer', true);\n            } else if(d === 'frontplot') {\n                layer.append('g')\n                    .classed('scatterlayer', true);\n            } else if(isLineLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('fill', 'none')\n                    .style('stroke-miterlimit', 2);\n            } else if(isFillLayer(d)) {\n                basePaths[d] = layer.append('path')\n                    .style('stroke', 'none');\n            }\n        });\n\n    join.order();\n\n    join.each(function(d) {\n        var path = basePaths[d];\n        var adj = constants.layerNameToAdjective[d];\n\n        if(d === 'frame') {\n            path.datum(constants.sphereSVG);\n        } else if(isLineLayer(d) || isFillLayer(d)) {\n            path.datum(topojsonFeature(topojson, topojson.objects[d]));\n        } else if(isAxisLayer(d)) {\n            path.datum(makeGraticule(d, geoLayout))\n                .call(Color.stroke, geoLayout[d].gridcolor)\n                .call(Drawing.dashLine, '', geoLayout[d].gridwidth);\n        }\n\n        if(isLineLayer(d)) {\n            path.call(Color.stroke, geoLayout[adj + 'color'])\n                .call(Drawing.dashLine, '', geoLayout[adj + 'width']);\n        } else if(isFillLayer(d)) {\n            path.call(Color.fill, geoLayout[adj + 'color']);\n        }\n    });\n};\n\nproto.updateDims = function(fullLayout, geoLayout) {\n    var b = this.bounds;\n    var hFrameWidth = (geoLayout.framewidth || 0) / 2;\n\n    var l = b[0][0] - hFrameWidth;\n    var t = b[0][1] - hFrameWidth;\n    var w = b[1][0] - l + hFrameWidth;\n    var h = b[1][1] - t + hFrameWidth;\n\n    Drawing.setRect(this.clipRect, l, t, w, h);\n\n    this.bgRect\n        .call(Drawing.setRect, l, t, w, h)\n        .call(Color.fill, geoLayout.bgcolor);\n\n    this.xaxis._offset = l;\n    this.xaxis._length = w;\n\n    this.yaxis._offset = t;\n    this.yaxis._length = h;\n};\n\nproto.updateFx = function(fullLayout, geoLayout) {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var bgRect = _this.bgRect;\n    var dragMode = fullLayout.dragmode;\n    var clickMode = fullLayout.clickmode;\n\n    if(_this.isStatic) return;\n\n    function zoomReset() {\n        var viewInitial = _this.viewInitial;\n        var updateObj = {};\n\n        for(var k in viewInitial) {\n            updateObj[_this.id + '.' + k] = viewInitial[k];\n        }\n\n        Registry.call('_guiRelayout', gd, updateObj);\n        gd.emit('plotly_doubleclick', null);\n    }\n\n    function invert(lonlat) {\n        return _this.projection.invert([\n            lonlat[0] + _this.xaxis._offset,\n            lonlat[1] + _this.yaxis._offset\n        ]);\n    }\n\n    var fillRangeItems;\n\n    if(dragMode === 'select') {\n        fillRangeItems = function(eventData, poly) {\n            var ranges = eventData.range = {};\n            ranges[_this.id] = [\n                invert([poly.xmin, poly.ymin]),\n                invert([poly.xmax, poly.ymax])\n            ];\n        };\n    } else if(dragMode === 'lasso') {\n        fillRangeItems = function(eventData, poly, pts) {\n            var dataPts = eventData.lassoPoints = {};\n            dataPts[_this.id] = pts.filtered.map(invert);\n        };\n    }\n\n    // Note: dragOptions is needed to be declared for all dragmodes because\n    // it's the object that holds persistent selection state.\n    var dragOptions = {\n        element: _this.bgRect.node(),\n        gd: gd,\n        plotinfo: {\n            id: _this.id,\n            xaxis: _this.xaxis,\n            yaxis: _this.yaxis,\n            fillRangeItems: fillRangeItems\n        },\n        xaxes: [_this.xaxis],\n        yaxes: [_this.yaxis],\n        subplot: _this.id,\n        clickFn: function(numClicks) {\n            if(numClicks === 2) {\n                fullLayout._zoomlayer.selectAll('.select-outline').remove();\n            }\n        }\n    };\n\n    if(dragMode === 'pan') {\n        bgRect.node().onmousedown = null;\n        bgRect.call(createGeoZoom(_this, geoLayout));\n        bgRect.on('dblclick.zoom', zoomReset);\n        if(!gd._context._scrollZoom.geo) {\n            bgRect.on('wheel.zoom', null);\n        }\n    }\n    else if(dragMode === 'select' || dragMode === 'lasso') {\n        bgRect.on('.zoom', null);\n\n        dragOptions.prepFn = function(e, startX, startY) {\n            prepSelect(e, startX, startY, dragOptions, dragMode);\n        };\n\n        dragElement.init(dragOptions);\n    }\n\n    bgRect.on('mousemove', function() {\n        var lonlat = _this.projection.invert(d3.mouse(this));\n\n        if(!lonlat || isNaN(lonlat[0]) || isNaN(lonlat[1])) {\n            return dragElement.unhover(gd, d3.event);\n        }\n\n        _this.xaxis.p2c = function() { return lonlat[0]; };\n        _this.yaxis.p2c = function() { return lonlat[1]; };\n\n        Fx.hover(gd, d3.event, _this.id);\n    });\n\n    bgRect.on('mouseout', function() {\n        if(gd._dragging) return;\n        dragElement.unhover(gd, d3.event);\n    });\n\n    bgRect.on('click', function() {\n        // For select and lasso the dragElement is handling clicks\n        if(dragMode !== 'select' && dragMode !== 'lasso') {\n            if(clickMode.indexOf('select') > -1) {\n                selectOnClick(d3.event, gd, [_this.xaxis], [_this.yaxis],\n                  _this.id, dragOptions);\n            }\n\n            if(clickMode.indexOf('event') > -1) {\n                // TODO: like pie and mapbox, this doesn't support right-click\n                // actually this one is worse, as right-click starts a pan, or leaves\n                // select in a weird state.\n                // Also, only tangentially related, we should cancel hover during pan\n                Fx.click(gd, d3.event);\n            }\n        }\n    });\n};\n\nproto.makeFramework = function() {\n    var _this = this;\n    var gd = _this.graphDiv;\n    var fullLayout = gd._fullLayout;\n    var clipId = 'clip' + fullLayout._uid + _this.id;\n\n    _this.clipDef = fullLayout._clips.append('clipPath')\n        .attr('id', clipId);\n\n    _this.clipRect = _this.clipDef.append('rect');\n\n    _this.framework = d3.select(_this.container).append('g')\n        .attr('class', 'geo ' + _this.id)\n        .call(Drawing.setClipUrl, clipId, gd);\n\n    // sane lonlat to px\n    _this.project = function(v) {\n        var px = _this.projection(v);\n        return px ?\n            [px[0] - _this.xaxis._offset, px[1] - _this.yaxis._offset] :\n            [null, null];\n    };\n\n    _this.xaxis = {\n        _id: 'x',\n        c2p: function(v) { return _this.project(v)[0]; }\n    };\n\n    _this.yaxis = {\n        _id: 'y',\n        c2p: function(v) { return _this.project(v)[1]; }\n    };\n\n    // mock axis for hover formatting\n    _this.mockAxis = {\n        type: 'linear',\n        showexponent: 'all',\n        exponentformat: 'B'\n    };\n    Axes.setConvert(_this.mockAxis, fullLayout);\n};\n\nproto.saveViewInitial = function(geoLayout) {\n    var center = geoLayout.center || {};\n    var projLayout = geoLayout.projection;\n    var rotation = projLayout.rotation || {};\n\n    if(geoLayout._isScoped) {\n        this.viewInitial = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n            'projection.scale': projLayout.scale\n        };\n    } else if(geoLayout._isClipped) {\n        this.viewInitial = {\n            'projection.scale': projLayout.scale,\n            'projection.rotation.lon': rotation.lon,\n            'projection.rotation.lat': rotation.lat\n        };\n    } else {\n        this.viewInitial = {\n            'center.lon': center.lon,\n            'center.lat': center.lat,\n            'projection.scale': projLayout.scale,\n            'projection.rotation.lon': rotation.lon\n        };\n    }\n};\n\n// [hot code path] (re)draw all paths which depend on the projection\nproto.render = function() {\n    var projection = this.projection;\n    var pathFn = projection.getPath();\n    var k;\n\n    function translatePoints(d) {\n        var lonlatPx = projection(d.lonlat);\n        return lonlatPx ?\n            'translate(' + lonlatPx[0] + ',' + lonlatPx[1] + ')' :\n             null;\n    }\n\n    function hideShowPoints(d) {\n        return projection.isLonLatOverEdges(d.lonlat) ? 'none' : null;\n    }\n\n    for(k in this.basePaths) {\n        this.basePaths[k].attr('d', pathFn);\n    }\n\n    for(k in this.dataPaths) {\n        this.dataPaths[k].attr('d', function(d) { return pathFn(d.geojson); });\n    }\n\n    for(k in this.dataPoints) {\n        this.dataPoints[k]\n            .attr('display', hideShowPoints)\n            .attr('transform', translatePoints);\n    }\n};\n\n// Helper that wraps d3.geo[/* projection name /*]() which:\n//\n// - adds 'fitExtent' (available in d3 v4)\n// - adds 'getPath', 'getBounds' convenience methods\n// - scopes logic related to 'clipAngle'\n// - adds 'isLonLatOverEdges' method\n// - sets projection precision\n// - sets methods that aren't always defined depending\n//   on the projection type to a dummy 'd3-esque' function,\n//\n// This wrapper alleviates subsequent code of (many) annoying if-statements.\nfunction getProjection(geoLayout) {\n    var projLayout = geoLayout.projection;\n    var projType = projLayout.type;\n\n    var projection = d3.geo[constants.projNames[projType]]();\n\n    var clipAngle = geoLayout._isClipped ?\n        constants.lonaxisSpan[projType] / 2 :\n        null;\n\n    var methods = ['center', 'rotate', 'parallels', 'clipExtent'];\n    var dummyFn = function(_) { return _ ? projection : []; };\n\n    for(var i = 0; i < methods.length; i++) {\n        var m = methods[i];\n        if(typeof projection[m] !== 'function') {\n            projection[m] = dummyFn;\n        }\n    }\n\n    projection.isLonLatOverEdges = function(lonlat) {\n        if(projection(lonlat) === null) {\n            return true;\n        }\n\n        if(clipAngle) {\n            var r = projection.rotate();\n            var angle = d3.geo.distance(lonlat, [-r[0], -r[1]]);\n            var maxAngle = clipAngle * Math.PI / 180;\n            return angle > maxAngle;\n        } else {\n            return false;\n        }\n    };\n\n    projection.getPath = function() {\n        return d3.geo.path().projection(projection);\n    };\n\n    projection.getBounds = function(object) {\n        return projection.getPath().bounds(object);\n    };\n\n    // adapted from d3 v4:\n    // https://github.com/d3/d3-geo/blob/master/src/projection/fit.js\n    projection.fitExtent = function(extent, object) {\n        var w = extent[1][0] - extent[0][0];\n        var h = extent[1][1] - extent[0][1];\n        var clip = projection.clipExtent && projection.clipExtent();\n\n        projection\n            .scale(150)\n            .translate([0, 0]);\n\n        if(clip) projection.clipExtent(null);\n\n        var b = projection.getBounds(object);\n        var k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1]));\n        var x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2;\n        var y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n        if(clip) projection.clipExtent(clip);\n\n        return projection\n            .scale(k * 150)\n            .translate([x, y]);\n    };\n\n    projection.precision(constants.precision);\n\n    if(clipAngle) {\n        projection.clipAngle(clipAngle - constants.clipPad);\n    }\n\n    return projection;\n}\n\nfunction makeGraticule(axisName, geoLayout) {\n    var axisLayout = geoLayout[axisName];\n    var dtick = axisLayout.dtick;\n    var scopeDefaults = constants.scopeDefaults[geoLayout.scope];\n    var lonaxisRange = scopeDefaults.lonaxisRange;\n    var lataxisRange = scopeDefaults.lataxisRange;\n    var step = axisName === 'lonaxis' ? [dtick] : [0, dtick];\n\n    return d3.geo.graticule()\n        .extent([\n            [lonaxisRange[0], lataxisRange[0]],\n            [lonaxisRange[1], lataxisRange[1]]\n        ])\n        .step(step);\n}\n\n// Returns polygon GeoJSON corresponding to lon/lat range box\n// with well-defined direction\n//\n// Note that clipPad padding is added around range to avoid aliasing.\nfunction makeRangeBox(lon, lat) {\n    var clipPad = constants.clipPad;\n    var lon0 = lon[0] + clipPad;\n    var lon1 = lon[1] - clipPad;\n    var lat0 = lat[0] + clipPad;\n    var lat1 = lat[1] - clipPad;\n\n    // to cross antimeridian w/o ambiguity\n    if(lon0 > 0 && lon1 < 0) lon1 += 360;\n\n    var dlon4 = (lon1 - lon0) / 4;\n\n    return {\n        type: 'Polygon',\n        coordinates: [[\n            [lon0, lat0],\n            [lon0, lat1],\n            [lon0 + dlon4, lat1],\n            [lon0 + 2 * dlon4, lat1],\n            [lon0 + 3 * dlon4, lat1],\n            [lon1, lat1],\n            [lon1, lat0],\n            [lon1 - dlon4, lat0],\n            [lon1 - 2 * dlon4, lat0],\n            [lon1 - 3 * dlon4, lat0],\n            [lon0, lat0]\n        ]]\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
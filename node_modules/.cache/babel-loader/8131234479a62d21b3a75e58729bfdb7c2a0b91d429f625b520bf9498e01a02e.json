{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = {\n  segmentRE: /[MLHVQCTSZ][^MLHVQCTSZ]*/g,\n  paramRE: /[^\\s,]+/g,\n  // which numbers in each path segment are x (or y) values\n  // drawn is which param is a drawn point, as opposed to a\n  // control point (which doesn't count toward autorange.\n  // TODO: this means curved paths could extend beyond the\n  // autorange bounds. This is a bit tricky to get right\n  // unless we revert to bounding boxes, but perhaps there's\n  // a calculation we could do...)\n  paramIsX: {\n    M: {\n      0: true,\n      drawn: 0\n    },\n    L: {\n      0: true,\n      drawn: 0\n    },\n    H: {\n      0: true,\n      drawn: 0\n    },\n    V: {},\n    Q: {\n      0: true,\n      2: true,\n      drawn: 2\n    },\n    C: {\n      0: true,\n      2: true,\n      4: true,\n      drawn: 4\n    },\n    T: {\n      0: true,\n      drawn: 0\n    },\n    S: {\n      0: true,\n      2: true,\n      drawn: 2\n    },\n    // A: {0: true, 5: true},\n    Z: {}\n  },\n  paramIsY: {\n    M: {\n      1: true,\n      drawn: 1\n    },\n    L: {\n      1: true,\n      drawn: 1\n    },\n    H: {},\n    V: {\n      0: true,\n      drawn: 0\n    },\n    Q: {\n      1: true,\n      3: true,\n      drawn: 3\n    },\n    C: {\n      1: true,\n      3: true,\n      5: true,\n      drawn: 5\n    },\n    T: {\n      1: true,\n      drawn: 1\n    },\n    S: {\n      1: true,\n      3: true,\n      drawn: 5\n    },\n    // A: {1: true, 6: true},\n    Z: {}\n  },\n  numParams: {\n    M: 2,\n    L: 2,\n    H: 1,\n    V: 1,\n    Q: 4,\n    C: 6,\n    T: 2,\n    S: 4,\n    // A: 7,\n    Z: 0\n  }\n};","map":{"version":3,"names":["module","exports","segmentRE","paramRE","paramIsX","M","drawn","L","H","V","Q","C","T","S","Z","paramIsY","numParams"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/components/shapes/constants.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n\nmodule.exports = {\n    segmentRE: /[MLHVQCTSZ][^MLHVQCTSZ]*/g,\n    paramRE: /[^\\s,]+/g,\n\n    // which numbers in each path segment are x (or y) values\n    // drawn is which param is a drawn point, as opposed to a\n    // control point (which doesn't count toward autorange.\n    // TODO: this means curved paths could extend beyond the\n    // autorange bounds. This is a bit tricky to get right\n    // unless we revert to bounding boxes, but perhaps there's\n    // a calculation we could do...)\n    paramIsX: {\n        M: {0: true, drawn: 0},\n        L: {0: true, drawn: 0},\n        H: {0: true, drawn: 0},\n        V: {},\n        Q: {0: true, 2: true, drawn: 2},\n        C: {0: true, 2: true, 4: true, drawn: 4},\n        T: {0: true, drawn: 0},\n        S: {0: true, 2: true, drawn: 2},\n        // A: {0: true, 5: true},\n        Z: {}\n    },\n\n    paramIsY: {\n        M: {1: true, drawn: 1},\n        L: {1: true, drawn: 1},\n        H: {},\n        V: {0: true, drawn: 0},\n        Q: {1: true, 3: true, drawn: 3},\n        C: {1: true, 3: true, 5: true, drawn: 5},\n        T: {1: true, drawn: 1},\n        S: {1: true, 3: true, drawn: 5},\n        // A: {1: true, 6: true},\n        Z: {}\n    },\n\n    numParams: {\n        M: 2,\n        L: 2,\n        H: 1,\n        V: 1,\n        Q: 4,\n        C: 6,\n        T: 2,\n        S: 4,\n        // A: 7,\n        Z: 0\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAGZA,MAAM,CAACC,OAAO,GAAG;EACbC,SAAS,EAAE,2BAA2B;EACtCC,OAAO,EAAE,UAAU;EAEnB;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE;IACNC,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAC,CAAC;IACtBC,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAED,KAAK,EAAE;IAAC,CAAC;IACtBE,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAEF,KAAK,EAAE;IAAC,CAAC;IACtBG,CAAC,EAAE,CAAC,CAAC;IACLC,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAEJ,KAAK,EAAE;IAAC,CAAC;IAC/BK,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAEL,KAAK,EAAE;IAAC,CAAC;IACxCM,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAEN,KAAK,EAAE;IAAC,CAAC;IACtBO,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAEP,KAAK,EAAE;IAAC,CAAC;IAC/B;IACAQ,CAAC,EAAE,CAAC;EACR,CAAC;EAEDC,QAAQ,EAAE;IACNV,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAC,CAAC;IACtBC,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAED,KAAK,EAAE;IAAC,CAAC;IACtBE,CAAC,EAAE,CAAC,CAAC;IACLC,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAEH,KAAK,EAAE;IAAC,CAAC;IACtBI,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAEJ,KAAK,EAAE;IAAC,CAAC;IAC/BK,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAEL,KAAK,EAAE;IAAC,CAAC;IACxCM,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAEN,KAAK,EAAE;IAAC,CAAC;IACtBO,CAAC,EAAE;MAAC,CAAC,EAAE,IAAI;MAAE,CAAC,EAAE,IAAI;MAAEP,KAAK,EAAE;IAAC,CAAC;IAC/B;IACAQ,CAAC,EAAE,CAAC;EACR,CAAC;EAEDE,SAAS,EAAE;IACPX,CAAC,EAAE,CAAC;IACJE,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE,CAAC;IACJ;IACAC,CAAC,EAAE;EACP;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nmodule.exports = function handlePositionDefaults(containerIn, containerOut, coerce, options) {\n  var counterAxes = options.counterAxes || [];\n  var overlayableAxes = options.overlayableAxes || [];\n  var letter = options.letter;\n  var grid = options.grid;\n  var dfltAnchor, dfltDomain, dfltSide, dfltPosition;\n  if (grid) {\n    dfltDomain = grid._domains[letter][grid._axisMap[containerOut._id]];\n    dfltAnchor = grid._anchors[containerOut._id];\n    if (dfltDomain) {\n      dfltSide = grid[letter + 'side'].split(' ')[0];\n      dfltPosition = grid.domain[letter][dfltSide === 'right' || dfltSide === 'top' ? 1 : 0];\n    }\n  }\n\n  // Even if there's a grid, this axis may not be in it - fall back on non-grid defaults\n  dfltDomain = dfltDomain || [0, 1];\n  dfltAnchor = dfltAnchor || (isNumeric(containerIn.position) ? 'free' : counterAxes[0] || 'free');\n  dfltSide = dfltSide || (letter === 'x' ? 'bottom' : 'left');\n  dfltPosition = dfltPosition || 0;\n  var anchor = Lib.coerce(containerIn, containerOut, {\n    anchor: {\n      valType: 'enumerated',\n      values: ['free'].concat(counterAxes),\n      dflt: dfltAnchor\n    }\n  }, 'anchor');\n  if (anchor === 'free') coerce('position', dfltPosition);\n  Lib.coerce(containerIn, containerOut, {\n    side: {\n      valType: 'enumerated',\n      values: letter === 'x' ? ['bottom', 'top'] : ['left', 'right'],\n      dflt: dfltSide\n    }\n  }, 'side');\n  var overlaying = false;\n  if (overlayableAxes.length) {\n    overlaying = Lib.coerce(containerIn, containerOut, {\n      overlaying: {\n        valType: 'enumerated',\n        values: [false].concat(overlayableAxes),\n        dflt: false\n      }\n    }, 'overlaying');\n  }\n  if (!overlaying) {\n    // TODO: right now I'm copying this domain over to overlaying axes\n    // in ax.setscale()... but this means we still need (imperfect) logic\n    // in the axes popover to hide domain for the overlaying axis.\n    // perhaps I should make a private version _domain that all axes get???\n    var domain = coerce('domain', dfltDomain);\n\n    // according to https://www.npmjs.com/package/canvas-size\n    // the minimum value of max canvas width across browsers and devices is 4096\n    // which applied in the calculation below:\n    if (domain[0] > domain[1] - 1 / 4096) containerOut.domain = dfltDomain;\n    Lib.noneOrAll(containerIn.domain, containerOut.domain, dfltDomain);\n  }\n  coerce('layer');\n  return containerOut;\n};","map":{"version":3,"names":["isNumeric","require","Lib","module","exports","handlePositionDefaults","containerIn","containerOut","coerce","options","counterAxes","overlayableAxes","letter","grid","dfltAnchor","dfltDomain","dfltSide","dfltPosition","_domains","_axisMap","_id","_anchors","split","domain","position","anchor","valType","values","concat","dflt","side","overlaying","length","noneOrAll"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/position_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\n\nmodule.exports = function handlePositionDefaults(containerIn, containerOut, coerce, options) {\n    var counterAxes = options.counterAxes || [];\n    var overlayableAxes = options.overlayableAxes || [];\n    var letter = options.letter;\n    var grid = options.grid;\n\n    var dfltAnchor, dfltDomain, dfltSide, dfltPosition;\n\n    if(grid) {\n        dfltDomain = grid._domains[letter][grid._axisMap[containerOut._id]];\n        dfltAnchor = grid._anchors[containerOut._id];\n        if(dfltDomain) {\n            dfltSide = grid[letter + 'side'].split(' ')[0];\n            dfltPosition = grid.domain[letter][dfltSide === 'right' || dfltSide === 'top' ? 1 : 0];\n        }\n    }\n\n    // Even if there's a grid, this axis may not be in it - fall back on non-grid defaults\n    dfltDomain = dfltDomain || [0, 1];\n    dfltAnchor = dfltAnchor || (isNumeric(containerIn.position) ? 'free' : (counterAxes[0] || 'free'));\n    dfltSide = dfltSide || (letter === 'x' ? 'bottom' : 'left');\n    dfltPosition = dfltPosition || 0;\n\n    var anchor = Lib.coerce(containerIn, containerOut, {\n        anchor: {\n            valType: 'enumerated',\n            values: ['free'].concat(counterAxes),\n            dflt: dfltAnchor\n        }\n    }, 'anchor');\n\n    if(anchor === 'free') coerce('position', dfltPosition);\n\n    Lib.coerce(containerIn, containerOut, {\n        side: {\n            valType: 'enumerated',\n            values: letter === 'x' ? ['bottom', 'top'] : ['left', 'right'],\n            dflt: dfltSide\n        }\n    }, 'side');\n\n    var overlaying = false;\n    if(overlayableAxes.length) {\n        overlaying = Lib.coerce(containerIn, containerOut, {\n            overlaying: {\n                valType: 'enumerated',\n                values: [false].concat(overlayableAxes),\n                dflt: false\n            }\n        }, 'overlaying');\n    }\n\n    if(!overlaying) {\n        // TODO: right now I'm copying this domain over to overlaying axes\n        // in ax.setscale()... but this means we still need (imperfect) logic\n        // in the axes popover to hide domain for the overlaying axis.\n        // perhaps I should make a private version _domain that all axes get???\n        var domain = coerce('domain', dfltDomain);\n\n        // according to https://www.npmjs.com/package/canvas-size\n        // the minimum value of max canvas width across browsers and devices is 4096\n        // which applied in the calculation below:\n        if(domain[0] > domain[1] - 1 / 4096) containerOut.domain = dfltDomain;\n        Lib.noneOrAll(containerIn.domain, containerOut.domain, dfltDomain);\n    }\n\n    coerce('layer');\n\n    return containerOut;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1],\n    az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}","map":{"version":3,"names":["module","exports","lerp","out","a","b","t","ax","ay","az"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/gl-vec3/lerp.js"],"sourcesContent":["module.exports = lerp;\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1],\n        az = a[2]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    out[2] = az + t * (b[2] - az)\n    return out\n}"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,IAAI;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAI,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;EACxB,IAAIC,EAAE,GAAGH,CAAC,CAAC,CAAC,CAAC;IACTI,EAAE,GAAGJ,CAAC,CAAC,CAAC,CAAC;IACTK,EAAE,GAAGL,CAAC,CAAC,CAAC,CAAC;EACbD,GAAG,CAAC,CAAC,CAAC,GAAGI,EAAE,GAAGD,CAAC,IAAID,CAAC,CAAC,CAAC,CAAC,GAAGE,EAAE,CAAC;EAC7BJ,GAAG,CAAC,CAAC,CAAC,GAAGK,EAAE,GAAGF,CAAC,IAAID,CAAC,CAAC,CAAC,CAAC,GAAGG,EAAE,CAAC;EAC7BL,GAAG,CAAC,CAAC,CAAC,GAAGM,EAAE,GAAGH,CAAC,IAAID,CAAC,CAAC,CAAC,CAAC,GAAGI,EAAE,CAAC;EAC7B,OAAON,GAAG;AACd"},"metadata":{},"sourceType":"script","externalDependencies":[]}
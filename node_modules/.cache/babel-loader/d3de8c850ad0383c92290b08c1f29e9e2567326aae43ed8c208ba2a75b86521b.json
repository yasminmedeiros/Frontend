{"ast":null,"code":"'use strict';\n\nmodule.exports = makeReflectTypes;\n\n//Construct type info for reflection.\n//\n// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n//\n// The leaves of the resulting object are either indices or type strings representing primitive glslify types\nfunction makeReflectTypes(uniforms, useIndex) {\n  var obj = {};\n  for (var i = 0; i < uniforms.length; ++i) {\n    var n = uniforms[i].name;\n    var parts = n.split(\".\");\n    var o = obj;\n    for (var j = 0; j < parts.length; ++j) {\n      var x = parts[j].split(\"[\");\n      if (x.length > 1) {\n        if (!(x[0] in o)) {\n          o[x[0]] = [];\n        }\n        o = o[x[0]];\n        for (var k = 1; k < x.length; ++k) {\n          var y = parseInt(x[k]);\n          if (k < x.length - 1 || j < parts.length - 1) {\n            if (!(y in o)) {\n              if (k < x.length - 1) {\n                o[y] = [];\n              } else {\n                o[y] = {};\n              }\n            }\n            o = o[y];\n          } else {\n            if (useIndex) {\n              o[y] = i;\n            } else {\n              o[y] = uniforms[i].type;\n            }\n          }\n        }\n      } else if (j < parts.length - 1) {\n        if (!(x[0] in o)) {\n          o[x[0]] = {};\n        }\n        o = o[x[0]];\n      } else {\n        if (useIndex) {\n          o[x[0]] = i;\n        } else {\n          o[x[0]] = uniforms[i].type;\n        }\n      }\n    }\n  }\n  return obj;\n}","map":{"version":3,"names":["module","exports","makeReflectTypes","uniforms","useIndex","obj","i","length","n","name","parts","split","o","j","x","k","y","parseInt","type"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-shader/lib/reflect.js"],"sourcesContent":["'use strict'\n\nmodule.exports = makeReflectTypes\n\n//Construct type info for reflection.\n//\n// This iterates over the flattened list of uniform type values and smashes them into a JSON object.\n//\n// The leaves of the resulting object are either indices or type strings representing primitive glslify types\nfunction makeReflectTypes(uniforms, useIndex) {\n  var obj = {}\n  for(var i=0; i<uniforms.length; ++i) {\n    var n = uniforms[i].name\n    var parts = n.split(\".\")\n    var o = obj\n    for(var j=0; j<parts.length; ++j) {\n      var x = parts[j].split(\"[\")\n      if(x.length > 1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = []\n        }\n        o = o[x[0]]\n        for(var k=1; k<x.length; ++k) {\n          var y = parseInt(x[k])\n          if(k<x.length-1 || j<parts.length-1) {\n            if(!(y in o)) {\n              if(k < x.length-1) {\n                o[y] = []\n              } else {\n                o[y] = {}\n              }\n            }\n            o = o[y]\n          } else {\n            if(useIndex) {\n              o[y] = i\n            } else {\n              o[y] = uniforms[i].type\n            }\n          }\n        }\n      } else if(j < parts.length-1) {\n        if(!(x[0] in o)) {\n          o[x[0]] = {}\n        }\n        o = o[x[0]]\n      } else {\n        if(useIndex) {\n          o[x[0]] = i\n        } else {\n          o[x[0]] = uniforms[i].type\n        }\n      }\n    }\n  }\n  return obj\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAGC,gBAAgB;;AAEjC;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAgB,CAACC,QAAQ,EAAEC,QAAQ,EAAE;EAC5C,IAAIC,GAAG,GAAG,CAAC,CAAC;EACZ,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,QAAQ,CAACI,MAAM,EAAE,EAAED,CAAC,EAAE;IACnC,IAAIE,CAAC,GAAGL,QAAQ,CAACG,CAAC,CAAC,CAACG,IAAI;IACxB,IAAIC,KAAK,GAAGF,CAAC,CAACG,KAAK,CAAC,GAAG,CAAC;IACxB,IAAIC,CAAC,GAAGP,GAAG;IACX,KAAI,IAAIQ,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACH,KAAK,CAACH,MAAM,EAAE,EAAEM,CAAC,EAAE;MAChC,IAAIC,CAAC,GAAGJ,KAAK,CAACG,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC;MAC3B,IAAGG,CAAC,CAACP,MAAM,GAAG,CAAC,EAAE;QACf,IAAG,EAAEO,CAAC,CAAC,CAAC,CAAC,IAAIF,CAAC,CAAC,EAAE;UACfA,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE;QACd;QACAF,CAAC,GAAGA,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC;QACX,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACD,CAAC,CAACP,MAAM,EAAE,EAAEQ,CAAC,EAAE;UAC5B,IAAIC,CAAC,GAAGC,QAAQ,CAACH,CAAC,CAACC,CAAC,CAAC,CAAC;UACtB,IAAGA,CAAC,GAACD,CAAC,CAACP,MAAM,GAAC,CAAC,IAAIM,CAAC,GAACH,KAAK,CAACH,MAAM,GAAC,CAAC,EAAE;YACnC,IAAG,EAAES,CAAC,IAAIJ,CAAC,CAAC,EAAE;cACZ,IAAGG,CAAC,GAAGD,CAAC,CAACP,MAAM,GAAC,CAAC,EAAE;gBACjBK,CAAC,CAACI,CAAC,CAAC,GAAG,EAAE;cACX,CAAC,MAAM;gBACLJ,CAAC,CAACI,CAAC,CAAC,GAAG,CAAC,CAAC;cACX;YACF;YACAJ,CAAC,GAAGA,CAAC,CAACI,CAAC,CAAC;UACV,CAAC,MAAM;YACL,IAAGZ,QAAQ,EAAE;cACXQ,CAAC,CAACI,CAAC,CAAC,GAAGV,CAAC;YACV,CAAC,MAAM;cACLM,CAAC,CAACI,CAAC,CAAC,GAAGb,QAAQ,CAACG,CAAC,CAAC,CAACY,IAAI;YACzB;UACF;QACF;MACF,CAAC,MAAM,IAAGL,CAAC,GAAGH,KAAK,CAACH,MAAM,GAAC,CAAC,EAAE;QAC5B,IAAG,EAAEO,CAAC,CAAC,CAAC,CAAC,IAAIF,CAAC,CAAC,EAAE;UACfA,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACd;QACAF,CAAC,GAAGA,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,MAAM;QACL,IAAGV,QAAQ,EAAE;UACXQ,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGR,CAAC;QACb,CAAC,MAAM;UACLM,CAAC,CAACE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGX,QAAQ,CAACG,CAAC,CAAC,CAACY,IAAI;QAC5B;MACF;IACF;EACF;EACA,OAAOb,GAAG;AACZ"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nmodule.exports = function calc(gd, trace) {\n  var len = trace._length;\n  var calcTrace = new Array(len);\n  for (var i = 0; i < len; i++) {\n    var calcPt = calcTrace[i] = {};\n    var loc = trace.locations[i];\n    var z = trace.z[i];\n    calcPt.loc = typeof loc === 'string' ? loc : null;\n    calcPt.z = isNumeric(z) ? z : BADNUM;\n  }\n  arraysToCalcdata(calcTrace, trace);\n  colorscaleCalc(gd, trace, {\n    vals: trace.z,\n    containerStr: '',\n    cLetter: 'z'\n  });\n  calcSelection(calcTrace, trace);\n  return calcTrace;\n};","map":{"version":3,"names":["isNumeric","require","BADNUM","colorscaleCalc","arraysToCalcdata","calcSelection","module","exports","calc","gd","trace","len","_length","calcTrace","Array","i","calcPt","loc","locations","z","vals","containerStr","cLetter"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/choropleth/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar colorscaleCalc = require('../../components/colorscale/calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\n\nmodule.exports = function calc(gd, trace) {\n    var len = trace._length;\n    var calcTrace = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var calcPt = calcTrace[i] = {};\n        var loc = trace.locations[i];\n        var z = trace.z[i];\n\n        calcPt.loc = typeof loc === 'string' ? loc : null;\n        calcPt.z = isNumeric(z) ? z : BADNUM;\n    }\n\n    arraysToCalcdata(calcTrace, trace);\n    colorscaleCalc(gd, trace, {\n        vals: trace.z,\n        containerStr: '',\n        cLetter: 'z'\n    });\n    calcSelection(calcTrace, trace);\n\n    return calcTrace;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAA2B,CAAC,CAACC,MAAM;AAExD,IAAIC,cAAc,GAAGF,OAAO,CAAC,kCAAkC,CAAC;AAChE,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,+BAA+B,CAAC;AAC/D,IAAII,aAAa,GAAGJ,OAAO,CAAC,2BAA2B,CAAC;AAExDK,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,GAAG,GAAGD,KAAK,CAACE,OAAO;EACvB,IAAIC,SAAS,GAAG,IAAIC,KAAK,CAACH,GAAG,CAAC;EAE9B,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,EAAEI,CAAC,EAAE,EAAE;IACzB,IAAIC,MAAM,GAAGH,SAAS,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC;IAC9B,IAAIE,GAAG,GAAGP,KAAK,CAACQ,SAAS,CAACH,CAAC,CAAC;IAC5B,IAAII,CAAC,GAAGT,KAAK,CAACS,CAAC,CAACJ,CAAC,CAAC;IAElBC,MAAM,CAACC,GAAG,GAAG,OAAOA,GAAG,KAAK,QAAQ,GAAGA,GAAG,GAAG,IAAI;IACjDD,MAAM,CAACG,CAAC,GAAGnB,SAAS,CAACmB,CAAC,CAAC,GAAGA,CAAC,GAAGjB,MAAM;EACxC;EAEAE,gBAAgB,CAACS,SAAS,EAAEH,KAAK,CAAC;EAClCP,cAAc,CAACM,EAAE,EAAEC,KAAK,EAAE;IACtBU,IAAI,EAAEV,KAAK,CAACS,CAAC;IACbE,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE;EACb,CAAC,CAAC;EACFjB,aAAa,CAACQ,SAAS,EAAEH,KAAK,CAAC;EAE/B,OAAOG,SAAS;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
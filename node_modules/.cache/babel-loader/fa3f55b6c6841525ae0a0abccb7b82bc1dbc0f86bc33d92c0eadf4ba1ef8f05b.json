{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar tarjan = require('strongly-connected-components');\nvar Lib = require('../../lib');\nvar wrap = require('../../lib/gup').wrap;\nfunction circularityPresent(nodeList, sources, targets) {\n  var nodeLen = nodeList.length;\n  var nodes = Lib.init2dArray(nodeLen, 0);\n  for (var i = 0; i < Math.min(sources.length, targets.length); i++) {\n    if (Lib.isIndex(sources[i], nodeLen) && Lib.isIndex(targets[i], nodeLen)) {\n      if (sources[i] === targets[i]) {\n        return true; // self-link which is also a scc of one\n      }\n\n      nodes[sources[i]].push(targets[i]);\n    }\n  }\n  var scc = tarjan(nodes);\n\n  // Tarján's strongly connected components algorithm coded by Mikola Lysenko\n  // returns at least one non-singular component if there's circularity in the graph\n  return scc.components.some(function (c) {\n    return c.length > 1;\n  });\n}\nmodule.exports = function calc(gd, trace) {\n  if (circularityPresent(trace.node.label, trace.link.source, trace.link.target)) {\n    Lib.error('Circularity is present in the Sankey data. Removing all nodes and links.');\n    trace.link.label = [];\n    trace.link.source = [];\n    trace.link.target = [];\n    trace.link.value = [];\n    trace.link.color = [];\n    trace.node.label = [];\n    trace.node.color = [];\n  }\n  return wrap({\n    link: trace.link,\n    node: trace.node\n  });\n};","map":{"version":3,"names":["tarjan","require","Lib","wrap","circularityPresent","nodeList","sources","targets","nodeLen","length","nodes","init2dArray","i","Math","min","isIndex","push","scc","components","some","c","module","exports","calc","gd","trace","node","label","link","source","target","error","value","color"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/sankey/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar tarjan = require('strongly-connected-components');\nvar Lib = require('../../lib');\nvar wrap = require('../../lib/gup').wrap;\n\nfunction circularityPresent(nodeList, sources, targets) {\n\n    var nodeLen = nodeList.length;\n    var nodes = Lib.init2dArray(nodeLen, 0);\n\n    for(var i = 0; i < Math.min(sources.length, targets.length); i++) {\n        if(Lib.isIndex(sources[i], nodeLen) && Lib.isIndex(targets[i], nodeLen)) {\n            if(sources[i] === targets[i]) {\n                return true; // self-link which is also a scc of one\n            }\n            nodes[sources[i]].push(targets[i]);\n        }\n    }\n\n    var scc = tarjan(nodes);\n\n    // Tarján's strongly connected components algorithm coded by Mikola Lysenko\n    // returns at least one non-singular component if there's circularity in the graph\n    return scc.components.some(function(c) {\n        return c.length > 1;\n    });\n}\n\nmodule.exports = function calc(gd, trace) {\n\n    if(circularityPresent(trace.node.label, trace.link.source, trace.link.target)) {\n        Lib.error('Circularity is present in the Sankey data. Removing all nodes and links.');\n        trace.link.label = [];\n        trace.link.source = [];\n        trace.link.target = [];\n        trace.link.value = [];\n        trace.link.color = [];\n        trace.node.label = [];\n        trace.node.color = [];\n    }\n\n    return wrap({\n        link: trace.link,\n        node: trace.node\n    });\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,MAAM,GAAGC,OAAO,CAAC,+BAA+B,CAAC;AACrD,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIE,IAAI,GAAGF,OAAO,CAAC,eAAe,CAAC,CAACE,IAAI;AAExC,SAASC,kBAAkB,CAACC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAE;EAEpD,IAAIC,OAAO,GAAGH,QAAQ,CAACI,MAAM;EAC7B,IAAIC,KAAK,GAAGR,GAAG,CAACS,WAAW,CAACH,OAAO,EAAE,CAAC,CAAC;EAEvC,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,IAAI,CAACC,GAAG,CAACR,OAAO,CAACG,MAAM,EAAEF,OAAO,CAACE,MAAM,CAAC,EAAEG,CAAC,EAAE,EAAE;IAC9D,IAAGV,GAAG,CAACa,OAAO,CAACT,OAAO,CAACM,CAAC,CAAC,EAAEJ,OAAO,CAAC,IAAIN,GAAG,CAACa,OAAO,CAACR,OAAO,CAACK,CAAC,CAAC,EAAEJ,OAAO,CAAC,EAAE;MACrE,IAAGF,OAAO,CAACM,CAAC,CAAC,KAAKL,OAAO,CAACK,CAAC,CAAC,EAAE;QAC1B,OAAO,IAAI,CAAC,CAAC;MACjB;;MACAF,KAAK,CAACJ,OAAO,CAACM,CAAC,CAAC,CAAC,CAACI,IAAI,CAACT,OAAO,CAACK,CAAC,CAAC,CAAC;IACtC;EACJ;EAEA,IAAIK,GAAG,GAAGjB,MAAM,CAACU,KAAK,CAAC;;EAEvB;EACA;EACA,OAAOO,GAAG,CAACC,UAAU,CAACC,IAAI,CAAC,UAASC,CAAC,EAAE;IACnC,OAAOA,CAAC,CAACX,MAAM,GAAG,CAAC;EACvB,CAAC,CAAC;AACN;AAEAY,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;EAEtC,IAAGrB,kBAAkB,CAACqB,KAAK,CAACC,IAAI,CAACC,KAAK,EAAEF,KAAK,CAACG,IAAI,CAACC,MAAM,EAAEJ,KAAK,CAACG,IAAI,CAACE,MAAM,CAAC,EAAE;IAC3E5B,GAAG,CAAC6B,KAAK,CAAC,0EAA0E,CAAC;IACrFN,KAAK,CAACG,IAAI,CAACD,KAAK,GAAG,EAAE;IACrBF,KAAK,CAACG,IAAI,CAACC,MAAM,GAAG,EAAE;IACtBJ,KAAK,CAACG,IAAI,CAACE,MAAM,GAAG,EAAE;IACtBL,KAAK,CAACG,IAAI,CAACI,KAAK,GAAG,EAAE;IACrBP,KAAK,CAACG,IAAI,CAACK,KAAK,GAAG,EAAE;IACrBR,KAAK,CAACC,IAAI,CAACC,KAAK,GAAG,EAAE;IACrBF,KAAK,CAACC,IAAI,CAACO,KAAK,GAAG,EAAE;EACzB;EAEA,OAAO9B,IAAI,CAAC;IACRyB,IAAI,EAAEH,KAAK,CAACG,IAAI;IAChBF,IAAI,EAAED,KAAK,CAACC;EAChB,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
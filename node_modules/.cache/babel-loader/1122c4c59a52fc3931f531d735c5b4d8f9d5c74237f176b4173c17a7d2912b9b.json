{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\nmodule.exports = function lineDefaults(traceIn, traceOut, defaultColor, layout, coerce, opts) {\n  var markerColor = (traceIn.marker || {}).color;\n  coerce('line.color', defaultColor);\n  if (hasColorscale(traceIn, 'line')) {\n    colorscaleDefaults(traceIn, traceOut, layout, coerce, {\n      prefix: 'line.',\n      cLetter: 'c'\n    });\n  } else {\n    var lineColorDflt = (isArrayOrTypedArray(markerColor) ? false : markerColor) || defaultColor;\n    coerce('line.color', lineColorDflt);\n  }\n  coerce('line.width');\n  if (!(opts || {}).noDash) coerce('line.dash');\n};","map":{"version":3,"names":["isArrayOrTypedArray","require","hasColorscale","colorscaleDefaults","module","exports","lineDefaults","traceIn","traceOut","defaultColor","layout","coerce","opts","markerColor","marker","color","prefix","cLetter","lineColorDflt","noDash"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatter/line_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar colorscaleDefaults = require('../../components/colorscale/defaults');\n\nmodule.exports = function lineDefaults(traceIn, traceOut, defaultColor, layout, coerce, opts) {\n    var markerColor = (traceIn.marker || {}).color;\n\n    coerce('line.color', defaultColor);\n\n    if(hasColorscale(traceIn, 'line')) {\n        colorscaleDefaults(traceIn, traceOut, layout, coerce, {prefix: 'line.', cLetter: 'c'});\n    } else {\n        var lineColorDflt = (isArrayOrTypedArray(markerColor) ? false : markerColor) || defaultColor;\n        coerce('line.color', lineColorDflt);\n    }\n\n    coerce('line.width');\n    if(!(opts || {}).noDash) coerce('line.dash');\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,mBAAmB,GAAGC,OAAO,CAAC,WAAW,CAAC,CAACD,mBAAmB;AAClE,IAAIE,aAAa,GAAGD,OAAO,CAAC,qCAAqC,CAAC,CAACC,aAAa;AAChF,IAAIC,kBAAkB,GAAGF,OAAO,CAAC,sCAAsC,CAAC;AAExEG,MAAM,CAACC,OAAO,GAAG,SAASC,YAAY,CAACC,OAAO,EAAEC,QAAQ,EAAEC,YAAY,EAAEC,MAAM,EAAEC,MAAM,EAAEC,IAAI,EAAE;EAC1F,IAAIC,WAAW,GAAG,CAACN,OAAO,CAACO,MAAM,IAAI,CAAC,CAAC,EAAEC,KAAK;EAE9CJ,MAAM,CAAC,YAAY,EAAEF,YAAY,CAAC;EAElC,IAAGP,aAAa,CAACK,OAAO,EAAE,MAAM,CAAC,EAAE;IAC/BJ,kBAAkB,CAACI,OAAO,EAAEC,QAAQ,EAAEE,MAAM,EAAEC,MAAM,EAAE;MAACK,MAAM,EAAE,OAAO;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC;EAC1F,CAAC,MAAM;IACH,IAAIC,aAAa,GAAG,CAAClB,mBAAmB,CAACa,WAAW,CAAC,GAAG,KAAK,GAAGA,WAAW,KAAKJ,YAAY;IAC5FE,MAAM,CAAC,YAAY,EAAEO,aAAa,CAAC;EACvC;EAEAP,MAAM,CAAC,YAAY,CAAC;EACpB,IAAG,CAAC,CAACC,IAAI,IAAI,CAAC,CAAC,EAAEO,MAAM,EAAER,MAAM,CAAC,WAAW,CAAC;AAChD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar subtypes = require('../scatter/subtypes');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var xa = searchInfo.xaxis;\n  var ya = searchInfo.yaxis;\n  var selection = [];\n  var trace = cd[0].trace;\n  var di, lonlat, x, y, i;\n  var hasOnlyLines = !subtypes.hasMarkers(trace) && !subtypes.hasText(trace);\n  if (hasOnlyLines) return [];\n  if (selectionTester === false) {\n    for (i = 0; i < cd.length; i++) {\n      cd[i].selected = 0;\n    }\n  } else {\n    for (i = 0; i < cd.length; i++) {\n      di = cd[i];\n      lonlat = di.lonlat;\n\n      // some projection types can't handle BADNUMs\n      if (lonlat[0] === BADNUM) continue;\n      x = xa.c2p(lonlat);\n      y = ya.c2p(lonlat);\n      if (selectionTester.contains([x, y], null, i, searchInfo)) {\n        selection.push({\n          pointNumber: i,\n          lon: lonlat[0],\n          lat: lonlat[1]\n        });\n        di.selected = 1;\n      } else {\n        di.selected = 0;\n      }\n    }\n  }\n  return selection;\n};","map":{"version":3,"names":["subtypes","require","BADNUM","module","exports","selectPoints","searchInfo","selectionTester","cd","xa","xaxis","ya","yaxis","selection","trace","di","lonlat","x","y","i","hasOnlyLines","hasMarkers","hasText","length","selected","c2p","contains","push","pointNumber","lon","lat"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scattergeo/select.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar subtypes = require('../scatter/subtypes');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nmodule.exports = function selectPoints(searchInfo, selectionTester) {\n    var cd = searchInfo.cd;\n    var xa = searchInfo.xaxis;\n    var ya = searchInfo.yaxis;\n    var selection = [];\n    var trace = cd[0].trace;\n\n    var di, lonlat, x, y, i;\n\n    var hasOnlyLines = (!subtypes.hasMarkers(trace) && !subtypes.hasText(trace));\n    if(hasOnlyLines) return [];\n\n    if(selectionTester === false) {\n        for(i = 0; i < cd.length; i++) {\n            cd[i].selected = 0;\n        }\n    } else {\n        for(i = 0; i < cd.length; i++) {\n            di = cd[i];\n            lonlat = di.lonlat;\n\n            // some projection types can't handle BADNUMs\n            if(lonlat[0] === BADNUM) continue;\n\n            x = xa.c2p(lonlat);\n            y = ya.c2p(lonlat);\n\n            if(selectionTester.contains([x, y], null, i, searchInfo)) {\n                selection.push({\n                    pointNumber: i,\n                    lon: lonlat[0],\n                    lat: lonlat[1]\n                });\n                di.selected = 1;\n            } else {\n                di.selected = 0;\n            }\n        }\n    }\n\n    return selection;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC7C,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAA2B,CAAC,CAACC,MAAM;AAExDC,MAAM,CAACC,OAAO,GAAG,SAASC,YAAY,CAACC,UAAU,EAAEC,eAAe,EAAE;EAChE,IAAIC,EAAE,GAAGF,UAAU,CAACE,EAAE;EACtB,IAAIC,EAAE,GAAGH,UAAU,CAACI,KAAK;EACzB,IAAIC,EAAE,GAAGL,UAAU,CAACM,KAAK;EACzB,IAAIC,SAAS,GAAG,EAAE;EAClB,IAAIC,KAAK,GAAGN,EAAE,CAAC,CAAC,CAAC,CAACM,KAAK;EAEvB,IAAIC,EAAE,EAAEC,MAAM,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC;EAEvB,IAAIC,YAAY,GAAI,CAACpB,QAAQ,CAACqB,UAAU,CAACP,KAAK,CAAC,IAAI,CAACd,QAAQ,CAACsB,OAAO,CAACR,KAAK,CAAE;EAC5E,IAAGM,YAAY,EAAE,OAAO,EAAE;EAE1B,IAAGb,eAAe,KAAK,KAAK,EAAE;IAC1B,KAAIY,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,EAAE,CAACe,MAAM,EAAEJ,CAAC,EAAE,EAAE;MAC3BX,EAAE,CAACW,CAAC,CAAC,CAACK,QAAQ,GAAG,CAAC;IACtB;EACJ,CAAC,MAAM;IACH,KAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,EAAE,CAACe,MAAM,EAAEJ,CAAC,EAAE,EAAE;MAC3BJ,EAAE,GAAGP,EAAE,CAACW,CAAC,CAAC;MACVH,MAAM,GAAGD,EAAE,CAACC,MAAM;;MAElB;MACA,IAAGA,MAAM,CAAC,CAAC,CAAC,KAAKd,MAAM,EAAE;MAEzBe,CAAC,GAAGR,EAAE,CAACgB,GAAG,CAACT,MAAM,CAAC;MAClBE,CAAC,GAAGP,EAAE,CAACc,GAAG,CAACT,MAAM,CAAC;MAElB,IAAGT,eAAe,CAACmB,QAAQ,CAAC,CAACT,CAAC,EAAEC,CAAC,CAAC,EAAE,IAAI,EAAEC,CAAC,EAAEb,UAAU,CAAC,EAAE;QACtDO,SAAS,CAACc,IAAI,CAAC;UACXC,WAAW,EAAET,CAAC;UACdU,GAAG,EAAEb,MAAM,CAAC,CAAC,CAAC;UACdc,GAAG,EAAEd,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC;QACFD,EAAE,CAACS,QAAQ,GAAG,CAAC;MACnB,CAAC,MAAM;QACHT,EAAE,CAACS,QAAQ,GAAG,CAAC;MACnB;IACJ;EACJ;EAEA,OAAOX,SAAS;AACpB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
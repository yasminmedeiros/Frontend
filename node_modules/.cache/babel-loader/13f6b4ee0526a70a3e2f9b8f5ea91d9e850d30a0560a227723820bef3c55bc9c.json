{"ast":null,"code":"/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* http://keith-wood.name/calendars.html\n  Calendars extras for jQuery v2.0.2.\n  Written by Keith Wood (wood.keith{at}optusnet.com.au) August 2009.\n  Available under the MIT (http://keith-wood.name/licence.html) license. \n  Please attribute the author if you use it. */\n\nvar assign = require('object-assign');\nvar main = require('./main');\nassign(main.regionalOptions[''], {\n  invalidArguments: 'Invalid arguments',\n  invalidFormat: 'Cannot format a date from another calendar',\n  missingNumberAt: 'Missing number at position {0}',\n  unknownNameAt: 'Unknown name at position {0}',\n  unexpectedLiteralAt: 'Unexpected literal at position {0}',\n  unexpectedText: 'Additional text found at end'\n});\nmain.local = main.regionalOptions[''];\nassign(main.cdate.prototype, {\n  /** Format this date.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof CDate\n      @param [format] {string} The date format to use (see <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a>).\n      @param [settings] {object} Options for the <code>formatDate</code> function.\n      @return {string} The formatted date. */\n  formatDate: function formatDate(format, settings) {\n    if (typeof format !== 'string') {\n      settings = format;\n      format = '';\n    }\n    return this._calendar.formatDate(format || '', this, settings);\n  }\n});\nassign(main.baseCalendar.prototype, {\n  UNIX_EPOCH: main.instance().newDate(1970, 1, 1).toJD(),\n  SECS_PER_DAY: 24 * 60 * 60,\n  TICKS_EPOCH: main.instance().jdEpoch,\n  // 1 January 0001 CE\n  TICKS_PER_DAY: 24 * 60 * 60 * 10000000,\n  /** Date form for ATOM (RFC 3339/ISO 8601).\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  ATOM: 'yyyy-mm-dd',\n  /** Date form for cookies.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  COOKIE: 'D, dd M yyyy',\n  /** Date form for full date.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  FULL: 'DD, MM d, yyyy',\n  /** Date form for ISO 8601.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  ISO_8601: 'yyyy-mm-dd',\n  /** Date form for Julian date.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  JULIAN: 'J',\n  /** Date form for RFC 822.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  RFC_822: 'D, d M yy',\n  /** Date form for RFC 850.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  RFC_850: 'DD, dd-M-yy',\n  /** Date form for RFC 1036.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  RFC_1036: 'D, d M yy',\n  /** Date form for RFC 1123.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  RFC_1123: 'D, d M yyyy',\n  /** Date form for RFC 2822.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  RFC_2822: 'D, d M yyyy',\n  /** Date form for RSS (RFC 822).\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  RSS: 'D, d M yy',\n  /** Date form for Windows ticks.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  TICKS: '!',\n  /** Date form for Unix timestamp.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  TIMESTAMP: '@',\n  /** Date form for W3c (ISO 8601).\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar */\n  W3C: 'yyyy-mm-dd',\n  /** Format a date object into a string value.\n      The format can be combinations of the following:\n      <ul>\n      <li>d  - day of month (no leading zero)</li>\n      <li>dd - day of month (two digit)</li>\n      <li>o  - day of year (no leading zeros)</li>\n      <li>oo - day of year (three digit)</li>\n      <li>D  - day name short</li>\n      <li>DD - day name long</li>\n      <li>w  - week of year (no leading zero)</li>\n      <li>ww - week of year (two digit)</li>\n      <li>m  - month of year (no leading zero)</li>\n      <li>mm - month of year (two digit)</li>\n      <li>M  - month name short</li>\n      <li>MM - month name long</li>\n      <li>yy - year (two digit)</li>\n      <li>yyyy - year (four digit)</li>\n      <li>YYYY - formatted year</li>\n      <li>J  - Julian date (days since January 1, 4713 BCE Greenwich noon)</li>\n      <li>@  - Unix timestamp (s since 01/01/1970)</li>\n      <li>!  - Windows ticks (100ns since 01/01/0001)</li>\n      <li>'...' - literal text</li>\n      <li>'' - single quote</li>\n      </ul>\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar\n      @param [format] {string} The desired format of the date (defaults to calendar format).\n      @param date {CDate} The date value to format.\n      @param [settings] {object} Addition options, whose attributes include:\n      @property [dayNamesShort] {string[]} Abbreviated names of the days from Sunday.\n      @property [dayNames] {string[]} Names of the days from Sunday.\n      @property [monthNamesShort] {string[]} Abbreviated names of the months.\n      @property [monthNames] {string[]} Names of the months.\n      @property [calculateWeek] {CalendarsPickerCalculateWeek} Function that determines week of the year.\n      @property [localNumbers=false] {boolean} <code>true</code> to localise numbers (if available),\n                <code>false</code> to use normal Arabic numerals.\n      @return {string} The date in the above format.\n      @throws Errors if the date is from a different calendar. */\n  formatDate: function formatDate(format, date, settings) {\n    if (typeof format !== 'string') {\n      settings = date;\n      date = format;\n      format = '';\n    }\n    if (!date) {\n      return '';\n    }\n    if (date.calendar() !== this) {\n      throw main.local.invalidFormat || main.regionalOptions[''].invalidFormat;\n    }\n    format = format || this.local.dateFormat;\n    settings = settings || {};\n    var dayNamesShort = settings.dayNamesShort || this.local.dayNamesShort;\n    var dayNames = settings.dayNames || this.local.dayNames;\n    var monthNumbers = settings.monthNumbers || this.local.monthNumbers;\n    var monthNamesShort = settings.monthNamesShort || this.local.monthNamesShort;\n    var monthNames = settings.monthNames || this.local.monthNames;\n    var calculateWeek = settings.calculateWeek || this.local.calculateWeek;\n    // Check whether a format character is doubled\n    var doubled = function doubled(match, step) {\n      var matches = 1;\n      while (iFormat + matches < format.length && format.charAt(iFormat + matches) === match) {\n        matches++;\n      }\n      iFormat += matches - 1;\n      return Math.floor(matches / (step || 1)) > 1;\n    };\n    // Format a number, with leading zeroes if necessary\n    var formatNumber = function formatNumber(match, value, len, step) {\n      var num = '' + value;\n      if (doubled(match, step)) {\n        while (num.length < len) {\n          num = '0' + num;\n        }\n      }\n      return num;\n    };\n    // Format a name, short or long as requested\n    var formatName = function formatName(match, value, shortNames, longNames) {\n      return doubled(match) ? longNames[value] : shortNames[value];\n    };\n    // Format month number\n    // (e.g. Chinese calendar needs to account for intercalary months)\n    var calendar = this;\n    var formatMonth = function formatMonth(date) {\n      return typeof monthNumbers === 'function' ? monthNumbers.call(calendar, date, doubled('m')) : localiseNumbers(formatNumber('m', date.month(), 2));\n    };\n    // Format a month name, short or long as requested\n    var formatMonthName = function formatMonthName(date, useLongName) {\n      if (useLongName) {\n        return typeof monthNames === 'function' ? monthNames.call(calendar, date) : monthNames[date.month() - calendar.minMonth];\n      } else {\n        return typeof monthNamesShort === 'function' ? monthNamesShort.call(calendar, date) : monthNamesShort[date.month() - calendar.minMonth];\n      }\n    };\n    // Localise numbers if requested and available\n    var digits = this.local.digits;\n    var localiseNumbers = function localiseNumbers(value) {\n      return settings.localNumbers && digits ? digits(value) : value;\n    };\n    var output = '';\n    var literal = false;\n    for (var iFormat = 0; iFormat < format.length; iFormat++) {\n      if (literal) {\n        if (format.charAt(iFormat) === \"'\" && !doubled(\"'\")) {\n          literal = false;\n        } else {\n          output += format.charAt(iFormat);\n        }\n      } else {\n        switch (format.charAt(iFormat)) {\n          case 'd':\n            output += localiseNumbers(formatNumber('d', date.day(), 2));\n            break;\n          case 'D':\n            output += formatName('D', date.dayOfWeek(), dayNamesShort, dayNames);\n            break;\n          case 'o':\n            output += formatNumber('o', date.dayOfYear(), 3);\n            break;\n          case 'w':\n            output += formatNumber('w', date.weekOfYear(), 2);\n            break;\n          case 'm':\n            output += formatMonth(date);\n            break;\n          case 'M':\n            output += formatMonthName(date, doubled('M'));\n            break;\n          case 'y':\n            output += doubled('y', 2) ? date.year() : (date.year() % 100 < 10 ? '0' : '') + date.year() % 100;\n            break;\n          case 'Y':\n            doubled('Y', 2);\n            output += date.formatYear();\n            break;\n          case 'J':\n            output += date.toJD();\n            break;\n          case '@':\n            output += (date.toJD() - this.UNIX_EPOCH) * this.SECS_PER_DAY;\n            break;\n          case '!':\n            output += (date.toJD() - this.TICKS_EPOCH) * this.TICKS_PER_DAY;\n            break;\n          case \"'\":\n            if (doubled(\"'\")) {\n              output += \"'\";\n            } else {\n              literal = true;\n            }\n            break;\n          default:\n            output += format.charAt(iFormat);\n        }\n      }\n    }\n    return output;\n  },\n  /** Parse a string value into a date object.\n      See <a href=\"#formatDate\"><code>formatDate</code></a> for the possible formats, plus:\n      <ul>\n      <li>* - ignore rest of string</li>\n      </ul>\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar\n      @param format {string} The expected format of the date ('' for default calendar format).\n      @param value {string} The date in the above format.\n      @param [settings] {object} Additional options whose attributes include:\n      @property [shortYearCutoff] {number} The cutoff year for determining the century.\n      @property [dayNamesShort] {string[]} Abbreviated names of the days from Sunday.\n      @property [dayNames] {string[]} Names of the days from Sunday.\n      @property [monthNamesShort] {string[]} Abbreviated names of the months.\n      @property [monthNames] {string[]} Names of the months.\n      @return {CDate} The extracted date value or <code>null</code> if value is blank.\n      @throws Errors if the format and/or value are missing,\n              if the value doesn't match the format, or if the date is invalid. */\n  parseDate: function parseDate(format, value, settings) {\n    if (value == null) {\n      throw main.local.invalidArguments || main.regionalOptions[''].invalidArguments;\n    }\n    value = typeof value === 'object' ? value.toString() : value + '';\n    if (value === '') {\n      return null;\n    }\n    format = format || this.local.dateFormat;\n    settings = settings || {};\n    var shortYearCutoff = settings.shortYearCutoff || this.shortYearCutoff;\n    shortYearCutoff = typeof shortYearCutoff !== 'string' ? shortYearCutoff : this.today().year() % 100 + parseInt(shortYearCutoff, 10);\n    var dayNamesShort = settings.dayNamesShort || this.local.dayNamesShort;\n    var dayNames = settings.dayNames || this.local.dayNames;\n    var parseMonth = settings.parseMonth || this.local.parseMonth;\n    var monthNumbers = settings.monthNumbers || this.local.monthNumbers;\n    var monthNamesShort = settings.monthNamesShort || this.local.monthNamesShort;\n    var monthNames = settings.monthNames || this.local.monthNames;\n    var jd = -1;\n    var year = -1;\n    var month = -1;\n    var day = -1;\n    var doy = -1;\n    var shortYear = false;\n    var literal = false;\n    // Check whether a format character is doubled\n    var doubled = function doubled(match, step) {\n      var matches = 1;\n      while (iFormat + matches < format.length && format.charAt(iFormat + matches) === match) {\n        matches++;\n      }\n      iFormat += matches - 1;\n      return Math.floor(matches / (step || 1)) > 1;\n    };\n    // Extract a number from the string value\n    var getNumber = function getNumber(match, step) {\n      var isDoubled = doubled(match, step);\n      var size = [2, 3, isDoubled ? 4 : 2, isDoubled ? 4 : 2, 10, 11, 20]['oyYJ@!'.indexOf(match) + 1];\n      var digits = new RegExp('^-?\\\\d{1,' + size + '}');\n      var num = value.substring(iValue).match(digits);\n      if (!num) {\n        throw (main.local.missingNumberAt || main.regionalOptions[''].missingNumberAt).replace(/\\{0\\}/, iValue);\n      }\n      iValue += num[0].length;\n      return parseInt(num[0], 10);\n    };\n    // Extract a month number from the string value\n    var calendar = this;\n    var getMonthNumber = function getMonthNumber() {\n      if (typeof monthNumbers === 'function') {\n        doubled('m'); // update iFormat\n        var month = monthNumbers.call(calendar, value.substring(iValue));\n        iValue += month.length;\n        return month;\n      }\n      return getNumber('m');\n    };\n    // Extract a name from the string value and convert to an index\n    var getName = function getName(match, shortNames, longNames, step) {\n      var names = doubled(match, step) ? longNames : shortNames;\n      for (var i = 0; i < names.length; i++) {\n        if (value.substr(iValue, names[i].length).toLowerCase() === names[i].toLowerCase()) {\n          iValue += names[i].length;\n          return i + calendar.minMonth;\n        }\n      }\n      throw (main.local.unknownNameAt || main.regionalOptions[''].unknownNameAt).replace(/\\{0\\}/, iValue);\n    };\n    // Extract a month number from the string value\n    var getMonthName = function getMonthName() {\n      if (typeof monthNames === 'function') {\n        var month = doubled('M') ? monthNames.call(calendar, value.substring(iValue)) : monthNamesShort.call(calendar, value.substring(iValue));\n        iValue += month.length;\n        return month;\n      }\n      return getName('M', monthNamesShort, monthNames);\n    };\n    // Confirm that a literal character matches the string value\n    var checkLiteral = function checkLiteral() {\n      if (value.charAt(iValue) !== format.charAt(iFormat)) {\n        throw (main.local.unexpectedLiteralAt || main.regionalOptions[''].unexpectedLiteralAt).replace(/\\{0\\}/, iValue);\n      }\n      iValue++;\n    };\n    var iValue = 0;\n    for (var iFormat = 0; iFormat < format.length; iFormat++) {\n      if (literal) {\n        if (format.charAt(iFormat) === \"'\" && !doubled(\"'\")) {\n          literal = false;\n        } else {\n          checkLiteral();\n        }\n      } else {\n        switch (format.charAt(iFormat)) {\n          case 'd':\n            day = getNumber('d');\n            break;\n          case 'D':\n            getName('D', dayNamesShort, dayNames);\n            break;\n          case 'o':\n            doy = getNumber('o');\n            break;\n          case 'w':\n            getNumber('w');\n            break;\n          case 'm':\n            month = getMonthNumber();\n            break;\n          case 'M':\n            month = getMonthName();\n            break;\n          case 'y':\n            var iSave = iFormat;\n            shortYear = !doubled('y', 2);\n            iFormat = iSave;\n            year = getNumber('y', 2);\n            break;\n          case 'Y':\n            year = getNumber('Y', 2);\n            break;\n          case 'J':\n            jd = getNumber('J') + 0.5;\n            if (value.charAt(iValue) === '.') {\n              iValue++;\n              getNumber('J');\n            }\n            break;\n          case '@':\n            jd = getNumber('@') / this.SECS_PER_DAY + this.UNIX_EPOCH;\n            break;\n          case '!':\n            jd = getNumber('!') / this.TICKS_PER_DAY + this.TICKS_EPOCH;\n            break;\n          case '*':\n            iValue = value.length;\n            break;\n          case \"'\":\n            if (doubled(\"'\")) {\n              checkLiteral();\n            } else {\n              literal = true;\n            }\n            break;\n          default:\n            checkLiteral();\n        }\n      }\n    }\n    if (iValue < value.length) {\n      throw main.local.unexpectedText || main.regionalOptions[''].unexpectedText;\n    }\n    if (year === -1) {\n      year = this.today().year();\n    } else if (year < 100 && shortYear) {\n      year += shortYearCutoff === -1 ? 1900 : this.today().year() - this.today().year() % 100 - (year <= shortYearCutoff ? 0 : 100);\n    }\n    if (typeof month === 'string') {\n      month = parseMonth.call(this, year, month);\n    }\n    if (doy > -1) {\n      month = 1;\n      day = doy;\n      for (var dim = this.daysInMonth(year, month); day > dim; dim = this.daysInMonth(year, month)) {\n        month++;\n        day -= dim;\n      }\n    }\n    return jd > -1 ? this.fromJD(jd) : this.newDate(year, month, day);\n  },\n  /** A date may be specified as an exact value or a relative one.\n      Found in the <code>jquery.calendars.plus.js</code> module.\n      @memberof BaseCalendar\n      @param dateSpec {CDate|number|string} The date as an object or string in the given format or\n              an offset - numeric days from today, or string amounts and periods, e.g. '+1m +2w'.\n      @param defaultDate {CDate} The date to use if no other supplied, may be <code>null</code>.\n      @param currentDate {CDate} The current date as a possible basis for relative dates,\n              if <code>null</code> today is used (optional)\n      @param [dateFormat] {string} The expected date format - see <a href=\"#formatDate\"><code>formatDate</code></a>.\n      @param [settings] {object} Additional options whose attributes include:\n      @property [shortYearCutoff] {number} The cutoff year for determining the century.\n      @property [dayNamesShort] {string[]} Abbreviated names of the days from Sunday.\n      @property [dayNames] {string[]} Names of the days from Sunday.\n      @property [monthNamesShort] {string[]} Abbreviated names of the months.\n      @property [monthNames] {string[]} Names of the months.\n      @return {CDate} The decoded date. */\n  determineDate: function determineDate(dateSpec, defaultDate, currentDate, dateFormat, settings) {\n    if (currentDate && typeof currentDate !== 'object') {\n      settings = dateFormat;\n      dateFormat = currentDate;\n      currentDate = null;\n    }\n    if (typeof dateFormat !== 'string') {\n      settings = dateFormat;\n      dateFormat = '';\n    }\n    var calendar = this;\n    var offsetString = function offsetString(offset) {\n      try {\n        return calendar.parseDate(dateFormat, offset, settings);\n      } catch (e) {\n        // Ignore\n      }\n      offset = offset.toLowerCase();\n      var date = (offset.match(/^c/) && currentDate ? currentDate.newDate() : null) || calendar.today();\n      var pattern = /([+-]?[0-9]+)\\s*(d|w|m|y)?/g;\n      var matches = pattern.exec(offset);\n      while (matches) {\n        date.add(parseInt(matches[1], 10), matches[2] || 'd');\n        matches = pattern.exec(offset);\n      }\n      return date;\n    };\n    defaultDate = defaultDate ? defaultDate.newDate() : null;\n    dateSpec = dateSpec == null ? defaultDate : typeof dateSpec === 'string' ? offsetString(dateSpec) : typeof dateSpec === 'number' ? isNaN(dateSpec) || dateSpec === Infinity || dateSpec === -Infinity ? defaultDate : calendar.today().add(dateSpec, 'd') : calendar.newDate(dateSpec);\n    return dateSpec;\n  }\n});","map":{"version":3,"names":["assign","require","main","regionalOptions","invalidArguments","invalidFormat","missingNumberAt","unknownNameAt","unexpectedLiteralAt","unexpectedText","local","cdate","prototype","formatDate","format","settings","_calendar","baseCalendar","UNIX_EPOCH","instance","newDate","toJD","SECS_PER_DAY","TICKS_EPOCH","jdEpoch","TICKS_PER_DAY","ATOM","COOKIE","FULL","ISO_8601","JULIAN","RFC_822","RFC_850","RFC_1036","RFC_1123","RFC_2822","RSS","TICKS","TIMESTAMP","W3C","date","calendar","dateFormat","dayNamesShort","dayNames","monthNumbers","monthNamesShort","monthNames","calculateWeek","doubled","match","step","matches","iFormat","length","charAt","Math","floor","formatNumber","value","len","num","formatName","shortNames","longNames","formatMonth","call","localiseNumbers","month","formatMonthName","useLongName","minMonth","digits","localNumbers","output","literal","day","dayOfWeek","dayOfYear","weekOfYear","year","formatYear","parseDate","toString","shortYearCutoff","today","parseInt","parseMonth","jd","doy","shortYear","getNumber","isDoubled","size","indexOf","RegExp","substring","iValue","replace","getMonthNumber","getName","names","i","substr","toLowerCase","getMonthName","checkLiteral","iSave","dim","daysInMonth","fromJD","determineDate","dateSpec","defaultDate","currentDate","offsetString","offset","e","pattern","exec","add","isNaN","Infinity"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/world-calendars/dist/plus.js"],"sourcesContent":["/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n﻿/* http://keith-wood.name/calendars.html\n   Calendars extras for jQuery v2.0.2.\n   Written by Keith Wood (wood.keith{at}optusnet.com.au) August 2009.\n   Available under the MIT (http://keith-wood.name/licence.html) license. \n   Please attribute the author if you use it. */\n\nvar assign = require('object-assign');\nvar main = require('./main');\n\n\nassign(main.regionalOptions[''], {\n    invalidArguments: 'Invalid arguments',\n    invalidFormat: 'Cannot format a date from another calendar',\n    missingNumberAt: 'Missing number at position {0}',\n    unknownNameAt: 'Unknown name at position {0}',\n    unexpectedLiteralAt: 'Unexpected literal at position {0}',\n    unexpectedText: 'Additional text found at end'\n});\nmain.local = main.regionalOptions[''];\n\nassign(main.cdate.prototype, {\n\n    /** Format this date.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof CDate\n        @param [format] {string} The date format to use (see <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a>).\n        @param [settings] {object} Options for the <code>formatDate</code> function.\n        @return {string} The formatted date. */\n    formatDate: function(format, settings) {\n        if (typeof format !== 'string') {\n            settings = format;\n            format = '';\n        }\n        return this._calendar.formatDate(format || '', this, settings);\n    }\n});\n\nassign(main.baseCalendar.prototype, {\n\n    UNIX_EPOCH: main.instance().newDate(1970, 1, 1).toJD(),\n    SECS_PER_DAY: 24 * 60 * 60,\n    TICKS_EPOCH: main.instance().jdEpoch, // 1 January 0001 CE\n    TICKS_PER_DAY: 24 * 60 * 60 * 10000000,\n\n    /** Date form for ATOM (RFC 3339/ISO 8601).\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    ATOM: 'yyyy-mm-dd',\n    /** Date form for cookies.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    COOKIE: 'D, dd M yyyy',\n    /** Date form for full date.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    FULL: 'DD, MM d, yyyy',\n    /** Date form for ISO 8601.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    ISO_8601: 'yyyy-mm-dd',\n    /** Date form for Julian date.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    JULIAN: 'J',\n    /** Date form for RFC 822.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    RFC_822: 'D, d M yy',\n    /** Date form for RFC 850.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    RFC_850: 'DD, dd-M-yy',\n    /** Date form for RFC 1036.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    RFC_1036: 'D, d M yy',\n    /** Date form for RFC 1123.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    RFC_1123: 'D, d M yyyy',\n    /** Date form for RFC 2822.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    RFC_2822: 'D, d M yyyy',\n    /** Date form for RSS (RFC 822).\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    RSS: 'D, d M yy',\n    /** Date form for Windows ticks.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    TICKS: '!',\n    /** Date form for Unix timestamp.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    TIMESTAMP: '@',\n    /** Date form for W3c (ISO 8601).\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar */\n    W3C: 'yyyy-mm-dd',\n\n    /** Format a date object into a string value.\n        The format can be combinations of the following:\n        <ul>\n        <li>d  - day of month (no leading zero)</li>\n        <li>dd - day of month (two digit)</li>\n        <li>o  - day of year (no leading zeros)</li>\n        <li>oo - day of year (three digit)</li>\n        <li>D  - day name short</li>\n        <li>DD - day name long</li>\n        <li>w  - week of year (no leading zero)</li>\n        <li>ww - week of year (two digit)</li>\n        <li>m  - month of year (no leading zero)</li>\n        <li>mm - month of year (two digit)</li>\n        <li>M  - month name short</li>\n        <li>MM - month name long</li>\n        <li>yy - year (two digit)</li>\n        <li>yyyy - year (four digit)</li>\n        <li>YYYY - formatted year</li>\n        <li>J  - Julian date (days since January 1, 4713 BCE Greenwich noon)</li>\n        <li>@  - Unix timestamp (s since 01/01/1970)</li>\n        <li>!  - Windows ticks (100ns since 01/01/0001)</li>\n        <li>'...' - literal text</li>\n        <li>'' - single quote</li>\n        </ul>\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar\n        @param [format] {string} The desired format of the date (defaults to calendar format).\n        @param date {CDate} The date value to format.\n        @param [settings] {object} Addition options, whose attributes include:\n        @property [dayNamesShort] {string[]} Abbreviated names of the days from Sunday.\n        @property [dayNames] {string[]} Names of the days from Sunday.\n        @property [monthNamesShort] {string[]} Abbreviated names of the months.\n        @property [monthNames] {string[]} Names of the months.\n        @property [calculateWeek] {CalendarsPickerCalculateWeek} Function that determines week of the year.\n        @property [localNumbers=false] {boolean} <code>true</code> to localise numbers (if available),\n                  <code>false</code> to use normal Arabic numerals.\n        @return {string} The date in the above format.\n        @throws Errors if the date is from a different calendar. */\n    formatDate: function(format, date, settings) {\n        if (typeof format !== 'string') {\n            settings = date;\n            date = format;\n            format = '';\n        }\n        if (!date) {\n            return '';\n        }\n        if (date.calendar() !== this) {\n            throw main.local.invalidFormat || main.regionalOptions[''].invalidFormat;\n        }\n        format = format || this.local.dateFormat;\n        settings = settings || {};\n        var dayNamesShort = settings.dayNamesShort || this.local.dayNamesShort;\n        var dayNames = settings.dayNames || this.local.dayNames;\n        var monthNumbers = settings.monthNumbers || this.local.monthNumbers;\n        var monthNamesShort = settings.monthNamesShort || this.local.monthNamesShort;\n        var monthNames = settings.monthNames || this.local.monthNames;\n        var calculateWeek = settings.calculateWeek || this.local.calculateWeek;\n        // Check whether a format character is doubled\n        var doubled = function(match, step) {\n            var matches = 1;\n            while (iFormat + matches < format.length && format.charAt(iFormat + matches) === match) {\n                matches++;\n            }\n            iFormat += matches - 1;\n            return Math.floor(matches / (step || 1)) > 1;\n        };\n        // Format a number, with leading zeroes if necessary\n        var formatNumber = function(match, value, len, step) {\n            var num = '' + value;\n            if (doubled(match, step)) {\n                while (num.length < len) {\n                    num = '0' + num;\n                }\n            }\n            return num;\n        };\n        // Format a name, short or long as requested\n        var formatName = function(match, value, shortNames, longNames) {\n            return (doubled(match) ? longNames[value] : shortNames[value]);\n        };\n        // Format month number\n        // (e.g. Chinese calendar needs to account for intercalary months)\n        var calendar = this;\n        var formatMonth = function(date) {\n            return (typeof monthNumbers === 'function') ?\n                monthNumbers.call(calendar, date, doubled('m')) :\n                localiseNumbers(formatNumber('m', date.month(), 2));\n        };\n        // Format a month name, short or long as requested\n        var formatMonthName = function(date, useLongName) {\n            if (useLongName) {\n                return (typeof monthNames === 'function') ?\n                    monthNames.call(calendar, date) :\n                    monthNames[date.month() - calendar.minMonth];\n            } else {\n                return (typeof monthNamesShort === 'function') ?\n                    monthNamesShort.call(calendar, date) :\n                    monthNamesShort[date.month() - calendar.minMonth];\n            }\n        };\n        // Localise numbers if requested and available\n        var digits = this.local.digits;\n        var localiseNumbers = function(value) {\n            return (settings.localNumbers && digits ? digits(value) : value);\n        };\n        var output = '';\n        var literal = false;\n        for (var iFormat = 0; iFormat < format.length; iFormat++) {\n            if (literal) {\n                if (format.charAt(iFormat) === \"'\" && !doubled(\"'\")) {\n                    literal = false;\n                }\n                else {\n                    output += format.charAt(iFormat);\n                }\n            }\n            else {\n                switch (format.charAt(iFormat)) {\n                    case 'd': output += localiseNumbers(formatNumber('d', date.day(), 2)); break;\n                    case 'D': output += formatName('D', date.dayOfWeek(),\n                        dayNamesShort, dayNames); break;\n                    case 'o': output += formatNumber('o', date.dayOfYear(), 3); break;\n                    case 'w': output += formatNumber('w', date.weekOfYear(), 2); break;\n                    case 'm': output += formatMonth(date); break;\n                    case 'M': output += formatMonthName(date, doubled('M')); break;\n                    case 'y':\n                        output += (doubled('y', 2) ? date.year() :\n                            (date.year() % 100 < 10 ? '0' : '') + date.year() % 100);\n                        break;\n                    case 'Y':\n                        doubled('Y', 2);\n                        output += date.formatYear();\n                        break;\n                    case 'J': output += date.toJD(); break;\n                    case '@': output += (date.toJD() - this.UNIX_EPOCH) * this.SECS_PER_DAY; break;\n                    case '!': output += (date.toJD() - this.TICKS_EPOCH) * this.TICKS_PER_DAY; break;\n                    case \"'\":\n                        if (doubled(\"'\")) {\n                            output += \"'\";\n                        }\n                        else {\n                            literal = true;\n                        }\n                        break;\n                    default:\n                        output += format.charAt(iFormat);\n                }\n            }\n        }\n        return output;\n    },\n\n    /** Parse a string value into a date object.\n        See <a href=\"#formatDate\"><code>formatDate</code></a> for the possible formats, plus:\n        <ul>\n        <li>* - ignore rest of string</li>\n        </ul>\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar\n        @param format {string} The expected format of the date ('' for default calendar format).\n        @param value {string} The date in the above format.\n        @param [settings] {object} Additional options whose attributes include:\n        @property [shortYearCutoff] {number} The cutoff year for determining the century.\n        @property [dayNamesShort] {string[]} Abbreviated names of the days from Sunday.\n        @property [dayNames] {string[]} Names of the days from Sunday.\n        @property [monthNamesShort] {string[]} Abbreviated names of the months.\n        @property [monthNames] {string[]} Names of the months.\n        @return {CDate} The extracted date value or <code>null</code> if value is blank.\n        @throws Errors if the format and/or value are missing,\n                if the value doesn't match the format, or if the date is invalid. */\n    parseDate: function(format, value, settings) {\n        if (value == null) {\n            throw main.local.invalidArguments || main.regionalOptions[''].invalidArguments;\n        }\n        value = (typeof value === 'object' ? value.toString() : value + '');\n        if (value === '') {\n            return null;\n        }\n        format = format || this.local.dateFormat;\n        settings = settings || {};\n        var shortYearCutoff = settings.shortYearCutoff || this.shortYearCutoff;\n        shortYearCutoff = (typeof shortYearCutoff !== 'string' ? shortYearCutoff :\n            this.today().year() % 100 + parseInt(shortYearCutoff, 10));\n        var dayNamesShort = settings.dayNamesShort || this.local.dayNamesShort;\n        var dayNames = settings.dayNames || this.local.dayNames;\n        var parseMonth = settings.parseMonth || this.local.parseMonth;\n        var monthNumbers = settings.monthNumbers || this.local.monthNumbers;\n        var monthNamesShort = settings.monthNamesShort || this.local.monthNamesShort;\n        var monthNames = settings.monthNames || this.local.monthNames;\n        var jd = -1;\n        var year = -1;\n        var month = -1;\n        var day = -1;\n        var doy = -1;\n        var shortYear = false;\n        var literal = false;\n        // Check whether a format character is doubled\n        var doubled = function(match, step) {\n            var matches = 1;\n            while (iFormat + matches < format.length && format.charAt(iFormat + matches) === match) {\n                matches++;\n            }\n            iFormat += matches - 1;\n            return Math.floor(matches / (step || 1)) > 1;\n        };\n        // Extract a number from the string value\n        var getNumber = function(match, step) {\n            var isDoubled = doubled(match, step);\n            var size = [2, 3, isDoubled ? 4 : 2, isDoubled ? 4 : 2, 10, 11, 20]['oyYJ@!'.indexOf(match) + 1];\n            var digits = new RegExp('^-?\\\\d{1,' + size + '}');\n            var num = value.substring(iValue).match(digits);\n            if (!num) {\n                throw (main.local.missingNumberAt || main.regionalOptions[''].missingNumberAt).\n                    replace(/\\{0\\}/, iValue);\n            }\n            iValue += num[0].length;\n            return parseInt(num[0], 10);\n        };\n        // Extract a month number from the string value\n        var calendar = this;\n        var getMonthNumber = function() {\n            if (typeof monthNumbers === 'function') {\n                doubled('m');  // update iFormat\n                var month = monthNumbers.call(calendar, value.substring(iValue));\n                iValue += month.length;\n                return month;\n            }\n\n            return getNumber('m');\n        };\n        // Extract a name from the string value and convert to an index\n        var getName = function(match, shortNames, longNames, step) {\n            var names = (doubled(match, step) ? longNames : shortNames);\n            for (var i = 0; i < names.length; i++) {\n                if (value.substr(iValue, names[i].length).toLowerCase() === names[i].toLowerCase()) {\n                    iValue += names[i].length;\n                    return i + calendar.minMonth;\n                }\n            }\n            throw (main.local.unknownNameAt || main.regionalOptions[''].unknownNameAt).\n                replace(/\\{0\\}/, iValue);\n        };\n        // Extract a month number from the string value\n        var getMonthName = function() {\n            if (typeof monthNames === 'function') {\n                var month = doubled('M') ?\n                    monthNames.call(calendar, value.substring(iValue)) :\n                    monthNamesShort.call(calendar, value.substring(iValue));\n                iValue += month.length;\n                return month;\n            }\n\n            return getName('M', monthNamesShort, monthNames);\n        };\n        // Confirm that a literal character matches the string value\n        var checkLiteral = function() {\n            if (value.charAt(iValue) !== format.charAt(iFormat)) {\n                throw (main.local.unexpectedLiteralAt ||\n                    main.regionalOptions[''].unexpectedLiteralAt).replace(/\\{0\\}/, iValue);\n            }\n            iValue++;\n        };\n        var iValue = 0;\n        for (var iFormat = 0; iFormat < format.length; iFormat++) {\n            if (literal) {\n                if (format.charAt(iFormat) === \"'\" && !doubled(\"'\")) {\n                    literal = false;\n                }\n                else {\n                    checkLiteral();\n                }\n            }\n            else {\n                switch (format.charAt(iFormat)) {\n                    case 'd': day = getNumber('d'); break;\n                    case 'D': getName('D', dayNamesShort, dayNames); break;\n                    case 'o': doy = getNumber('o'); break;\n                    case 'w': getNumber('w'); break;\n                    case 'm': month = getMonthNumber(); break;\n                    case 'M': month = getMonthName(); break;\n                    case 'y':\n                        var iSave = iFormat;\n                        shortYear = !doubled('y', 2);\n                        iFormat = iSave;\n                        year = getNumber('y', 2);\n                        break;\n                    case 'Y': year = getNumber('Y', 2); break;\n                    case 'J':\n                        jd = getNumber('J') + 0.5;\n                        if (value.charAt(iValue) === '.') {\n                            iValue++;\n                            getNumber('J');\n                        }\n                        break;\n                    case '@': jd = getNumber('@') / this.SECS_PER_DAY + this.UNIX_EPOCH; break;\n                    case '!': jd = getNumber('!') / this.TICKS_PER_DAY + this.TICKS_EPOCH; break;\n                    case '*': iValue = value.length; break;\n                    case \"'\":\n                        if (doubled(\"'\")) {\n                            checkLiteral();\n                        }\n                        else {\n                            literal = true;\n                        }\n                        break;\n                    default: checkLiteral();\n                }\n            }\n        }\n        if (iValue < value.length) {\n            throw main.local.unexpectedText || main.regionalOptions[''].unexpectedText;\n        }\n        if (year === -1) {\n            year = this.today().year();\n        }\n        else if (year < 100 && shortYear) {\n            year += (shortYearCutoff === -1 ? 1900 : this.today().year() -\n                this.today().year() % 100 - (year <= shortYearCutoff ? 0 : 100));\n        }\n        if (typeof month === 'string') {\n            month = parseMonth.call(this, year, month);\n        }\n        if (doy > -1) {\n            month = 1;\n            day = doy;\n            for (var dim = this.daysInMonth(year, month); day > dim; dim = this.daysInMonth(year, month)) {\n                month++;\n                day -= dim;\n            }\n        }\n        return (jd > -1 ? this.fromJD(jd) : this.newDate(year, month, day));\n    },\n\n    /** A date may be specified as an exact value or a relative one.\n        Found in the <code>jquery.calendars.plus.js</code> module.\n        @memberof BaseCalendar\n        @param dateSpec {CDate|number|string} The date as an object or string in the given format or\n                an offset - numeric days from today, or string amounts and periods, e.g. '+1m +2w'.\n        @param defaultDate {CDate} The date to use if no other supplied, may be <code>null</code>.\n        @param currentDate {CDate} The current date as a possible basis for relative dates,\n                if <code>null</code> today is used (optional)\n        @param [dateFormat] {string} The expected date format - see <a href=\"#formatDate\"><code>formatDate</code></a>.\n        @param [settings] {object} Additional options whose attributes include:\n        @property [shortYearCutoff] {number} The cutoff year for determining the century.\n        @property [dayNamesShort] {string[]} Abbreviated names of the days from Sunday.\n        @property [dayNames] {string[]} Names of the days from Sunday.\n        @property [monthNamesShort] {string[]} Abbreviated names of the months.\n        @property [monthNames] {string[]} Names of the months.\n        @return {CDate} The decoded date. */\n    determineDate: function(dateSpec, defaultDate, currentDate, dateFormat, settings) {\n        if (currentDate && typeof currentDate !== 'object') {\n            settings = dateFormat;\n            dateFormat = currentDate;\n            currentDate = null;\n        }\n        if (typeof dateFormat !== 'string') {\n            settings = dateFormat;\n            dateFormat = '';\n        }\n        var calendar = this;\n        var offsetString = function(offset) {\n            try {\n                return calendar.parseDate(dateFormat, offset, settings);\n            }\n            catch (e) {\n                // Ignore\n            }\n            offset = offset.toLowerCase();\n            var date = (offset.match(/^c/) && currentDate ?\n                currentDate.newDate() : null) || calendar.today();\n            var pattern = /([+-]?[0-9]+)\\s*(d|w|m|y)?/g;\n            var matches = pattern.exec(offset);\n            while (matches) {\n                date.add(parseInt(matches[1], 10), matches[2] || 'd');\n                matches = pattern.exec(offset);\n            }\n            return date;\n        };\n        defaultDate = (defaultDate ? defaultDate.newDate() : null);\n        dateSpec = (dateSpec == null ? defaultDate :\n            (typeof dateSpec === 'string' ? offsetString(dateSpec) : (typeof dateSpec === 'number' ?\n            (isNaN(dateSpec) || dateSpec === Infinity || dateSpec === -Infinity ? defaultDate :\n            calendar.today().add(dateSpec, 'd')) : calendar.newDate(dateSpec))));\n        return dateSpec;\n    }\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
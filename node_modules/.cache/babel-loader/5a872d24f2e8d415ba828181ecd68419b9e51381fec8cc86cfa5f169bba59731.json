{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar fxAttrs = require('../../components/fx/layout_attributes');\nvar Scene = require('./scene');\nvar getSubplotData = require('../get_data').getSubplotData;\nvar Lib = require('../../lib');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\nvar GL3D = 'gl3d';\nvar SCENE = 'scene';\nexports.name = GL3D;\nexports.attr = SCENE;\nexports.idRoot = SCENE;\nexports.idRegex = exports.attrRegex = Lib.counterRegex('scene');\nexports.attributes = require('./layout/attributes');\nexports.layoutAttributes = require('./layout/layout_attributes');\nexports.baseLayoutAttrOverrides = overrideAll({\n  hoverlabel: fxAttrs.hoverlabel\n}, 'plot', 'nested');\nexports.supplyLayoutDefaults = require('./layout/defaults');\nexports.plot = function plotGl3d(gd) {\n  var fullLayout = gd._fullLayout;\n  var fullData = gd._fullData;\n  var sceneIds = fullLayout._subplots[GL3D];\n  for (var i = 0; i < sceneIds.length; i++) {\n    var sceneId = sceneIds[i];\n    var fullSceneData = getSubplotData(fullData, GL3D, sceneId);\n    var sceneLayout = fullLayout[sceneId];\n    var scene = sceneLayout._scene;\n    if (!scene) {\n      scene = new Scene({\n        id: sceneId,\n        graphDiv: gd,\n        container: gd.querySelector('.gl-container'),\n        staticPlot: gd._context.staticPlot,\n        plotGlPixelRatio: gd._context.plotGlPixelRatio\n      }, fullLayout);\n\n      // set ref to Scene instance\n      sceneLayout._scene = scene;\n    }\n\n    // save 'initial' camera settings for modebar button\n    if (!scene.cameraInitial) {\n      scene.cameraInitial = Lib.extendDeep({}, sceneLayout.camera);\n    }\n    scene.plot(fullSceneData, fullLayout, gd.layout);\n  }\n};\nexports.clean = function (newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldSceneKeys = oldFullLayout._subplots[GL3D] || [];\n  for (var i = 0; i < oldSceneKeys.length; i++) {\n    var oldSceneKey = oldSceneKeys[i];\n    if (!newFullLayout[oldSceneKey] && !!oldFullLayout[oldSceneKey]._scene) {\n      oldFullLayout[oldSceneKey]._scene.destroy();\n      if (oldFullLayout._infolayer) {\n        oldFullLayout._infolayer.selectAll('.annotation-' + oldSceneKey).remove();\n      }\n    }\n  }\n};\nexports.toSVG = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var sceneIds = fullLayout._subplots[GL3D];\n  var size = fullLayout._size;\n  for (var i = 0; i < sceneIds.length; i++) {\n    var sceneLayout = fullLayout[sceneIds[i]];\n    var domain = sceneLayout.domain;\n    var scene = sceneLayout._scene;\n    var imageData = scene.toImage('png');\n    var image = fullLayout._glimages.append('svg:image');\n    image.attr({\n      xmlns: xmlnsNamespaces.svg,\n      'xlink:href': imageData,\n      x: size.l + size.w * domain.x[0],\n      y: size.t + size.h * (1 - domain.y[1]),\n      width: size.w * (domain.x[1] - domain.x[0]),\n      height: size.h * (domain.y[1] - domain.y[0]),\n      preserveAspectRatio: 'none'\n    });\n    scene.destroy();\n  }\n};\n\n// clean scene ids, 'scene1' -> 'scene'\nexports.cleanId = function cleanId(id) {\n  if (!id.match(/^scene[0-9]*$/)) return;\n  var sceneNum = id.substr(5);\n  if (sceneNum === '1') sceneNum = '';\n  return SCENE + sceneNum;\n};\nexports.updateFx = function (gd) {\n  var fullLayout = gd._fullLayout;\n  var subplotIds = fullLayout._subplots[GL3D];\n  for (var i = 0; i < subplotIds.length; i++) {\n    var subplotObj = fullLayout[subplotIds[i]]._scene;\n    subplotObj.updateFx(fullLayout.dragmode, fullLayout.hovermode);\n  }\n};","map":{"version":3,"names":["overrideAll","require","fxAttrs","Scene","getSubplotData","Lib","xmlnsNamespaces","GL3D","SCENE","exports","name","attr","idRoot","idRegex","attrRegex","counterRegex","attributes","layoutAttributes","baseLayoutAttrOverrides","hoverlabel","supplyLayoutDefaults","plot","plotGl3d","gd","fullLayout","_fullLayout","fullData","_fullData","sceneIds","_subplots","i","length","sceneId","fullSceneData","sceneLayout","scene","_scene","id","graphDiv","container","querySelector","staticPlot","_context","plotGlPixelRatio","cameraInitial","extendDeep","camera","layout","clean","newFullData","newFullLayout","oldFullData","oldFullLayout","oldSceneKeys","oldSceneKey","destroy","_infolayer","selectAll","remove","toSVG","size","_size","domain","imageData","toImage","image","_glimages","append","xmlns","svg","x","l","w","y","t","h","width","height","preserveAspectRatio","cleanId","match","sceneNum","substr","updateFx","subplotIds","subplotObj","dragmode","hovermode"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/gl3d/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\nvar fxAttrs = require('../../components/fx/layout_attributes');\n\nvar Scene = require('./scene');\nvar getSubplotData = require('../get_data').getSubplotData;\nvar Lib = require('../../lib');\nvar xmlnsNamespaces = require('../../constants/xmlns_namespaces');\n\nvar GL3D = 'gl3d';\nvar SCENE = 'scene';\n\n\nexports.name = GL3D;\n\nexports.attr = SCENE;\n\nexports.idRoot = SCENE;\n\nexports.idRegex = exports.attrRegex = Lib.counterRegex('scene');\n\nexports.attributes = require('./layout/attributes');\n\nexports.layoutAttributes = require('./layout/layout_attributes');\n\nexports.baseLayoutAttrOverrides = overrideAll({\n    hoverlabel: fxAttrs.hoverlabel\n}, 'plot', 'nested');\n\nexports.supplyLayoutDefaults = require('./layout/defaults');\n\nexports.plot = function plotGl3d(gd) {\n    var fullLayout = gd._fullLayout;\n    var fullData = gd._fullData;\n    var sceneIds = fullLayout._subplots[GL3D];\n\n    for(var i = 0; i < sceneIds.length; i++) {\n        var sceneId = sceneIds[i];\n        var fullSceneData = getSubplotData(fullData, GL3D, sceneId);\n        var sceneLayout = fullLayout[sceneId];\n        var scene = sceneLayout._scene;\n\n        if(!scene) {\n            scene = new Scene({\n                id: sceneId,\n                graphDiv: gd,\n                container: gd.querySelector('.gl-container'),\n                staticPlot: gd._context.staticPlot,\n                plotGlPixelRatio: gd._context.plotGlPixelRatio\n            },\n                fullLayout\n            );\n\n            // set ref to Scene instance\n            sceneLayout._scene = scene;\n        }\n\n        // save 'initial' camera settings for modebar button\n        if(!scene.cameraInitial) {\n            scene.cameraInitial = Lib.extendDeep({}, sceneLayout.camera);\n        }\n\n        scene.plot(fullSceneData, fullLayout, gd.layout);\n    }\n};\n\nexports.clean = function(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n    var oldSceneKeys = oldFullLayout._subplots[GL3D] || [];\n\n    for(var i = 0; i < oldSceneKeys.length; i++) {\n        var oldSceneKey = oldSceneKeys[i];\n\n        if(!newFullLayout[oldSceneKey] && !!oldFullLayout[oldSceneKey]._scene) {\n            oldFullLayout[oldSceneKey]._scene.destroy();\n\n            if(oldFullLayout._infolayer) {\n                oldFullLayout._infolayer\n                    .selectAll('.annotation-' + oldSceneKey)\n                    .remove();\n            }\n        }\n    }\n};\n\nexports.toSVG = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var sceneIds = fullLayout._subplots[GL3D];\n    var size = fullLayout._size;\n\n    for(var i = 0; i < sceneIds.length; i++) {\n        var sceneLayout = fullLayout[sceneIds[i]];\n        var domain = sceneLayout.domain;\n        var scene = sceneLayout._scene;\n\n        var imageData = scene.toImage('png');\n        var image = fullLayout._glimages.append('svg:image');\n\n        image.attr({\n            xmlns: xmlnsNamespaces.svg,\n            'xlink:href': imageData,\n            x: size.l + size.w * domain.x[0],\n            y: size.t + size.h * (1 - domain.y[1]),\n            width: size.w * (domain.x[1] - domain.x[0]),\n            height: size.h * (domain.y[1] - domain.y[0]),\n            preserveAspectRatio: 'none'\n        });\n\n        scene.destroy();\n    }\n};\n\n// clean scene ids, 'scene1' -> 'scene'\nexports.cleanId = function cleanId(id) {\n    if(!id.match(/^scene[0-9]*$/)) return;\n\n    var sceneNum = id.substr(5);\n    if(sceneNum === '1') sceneNum = '';\n\n    return SCENE + sceneNum;\n};\n\nexports.updateFx = function(gd) {\n    var fullLayout = gd._fullLayout;\n    var subplotIds = fullLayout._subplots[GL3D];\n\n    for(var i = 0; i < subplotIds.length; i++) {\n        var subplotObj = fullLayout[subplotIds[i]]._scene;\n        subplotObj.updateFx(fullLayout.dragmode, fullLayout.hovermode);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
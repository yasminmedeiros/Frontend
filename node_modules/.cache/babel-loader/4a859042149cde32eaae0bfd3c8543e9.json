{"ast":null,"code":"import _objectSpread from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import apiSaber from'../../services/apisaber';import DataTable from'../../components/Datatable';import Header from\"../../components/Header\";import Footer from'../../components/Footer';import{ChartPerYear}from'../../components/ChartPerYear/ChartPerYear';import{LineChartBySchool}from'../../components/LineChartBySchool/LineChartBySchool';import apisaber from'../../services/apisaber';import'./styles.css';import Select,{createFilter}from'react-select';import CustomOption from\"../../components/Options/CustomOption\";import jsPDF from'jspdf';import'jspdf-autotable';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Professional(){var dataChart={loading:true,year:2021,x:[],y:[]};var dataLineChart={loading:true,data_id:0,//4556\nuseSelect:true,x:[],y:[]};var _useState=useState(dataChart),_useState2=_slicedToArray(_useState,2),schoolsPerSize=_useState2[0],setSchoolsPerSize=_useState2[1];var _useState3=useState(dataChart),_useState4=_slicedToArray(_useState3,2),enrollmentsPerSize=_useState4[0],setEnrollmentsPerSize=_useState4[1];var _useState5=useState(dataChart),_useState6=_slicedToArray(_useState5,2),averagesPersize=_useState6[0],setAveragePerSize=_useState6[1];var _useState7=useState(dataChart),_useState8=_slicedToArray(_useState7,2),schoolsPerGre=_useState8[0],setSchoolsPerGre=_useState8[1];var _useState9=useState(dataChart),_useState10=_slicedToArray(_useState9,2),enrollmentsPerGre=_useState10[0],setEnrollmentsPerGre=_useState10[1];var _useState11=useState(dataChart),_useState12=_slicedToArray(_useState11,2),averagesPerGre=_useState12[0],setAveragesPerGre=_useState12[1];var _useState13=useState(dataChart),_useState14=_slicedToArray(_useState13,2),highestEnrollments=_useState14[0],setHighestEnrollments=_useState14[1];var _useState15=useState(dataChart),_useState16=_slicedToArray(_useState15,2),enrollmentsJP=_useState16[0],setEnrollmentsJP=_useState16[1];var _useState17=useState(dataChart),_useState18=_slicedToArray(_useState17,2),enrollmentsCG=_useState18[0],setEnrollmentsCG=_useState18[1];var _useState19=useState(dataLineChart),_useState20=_slicedToArray(_useState19,2),totalEnrollmentsInYears=_useState20[0],setTotalEnrollmentsInYears=_useState20[1];var _useState21=useState(dataLineChart),_useState22=_slicedToArray(_useState21,2),schoolsInYearsPerGre=_useState22[0],setSchoolsInYearsPerGre=_useState22[1];var _useState23=useState(dataLineChart),_useState24=_slicedToArray(_useState23,2),schoolsInYearsPerSize=_useState24[0],setSchoolsInYearsPerSize=_useState24[1];var _useState25=useState(dataLineChart),_useState26=_slicedToArray(_useState25,2),regularSchoolsInYears=_useState26[0],setRegularSchoolsInYears=_useState26[1];var _useState27=useState([]),_useState28=_slicedToArray(_useState27,2),years=_useState28[0],setYears=_useState28[1];var _useState29=useState({label:'Todos',value:3}),_useState30=_slicedToArray(_useState29,2),selectedAdministrationType=_useState30[0],setSelectedAdministrationType=_useState30[1];var _useState31=useState([]),_useState32=_slicedToArray(_useState31,2),schoolsInfos=_useState32[0],setSchoolsInfos=_useState32[1];var _useState33=useState(false),_useState34=_slicedToArray(_useState33,2),loadingTabel=_useState34[0],setLoadingTabel=_useState34[1];var _useState35=useState([{label:'Todos',value:3},{label:'Municipal',value:1},{label:'Estadual',value:0}]),_useState36=_slicedToArray(_useState35,1),optionsAdministrationType=_useState36[0];var head=['ID','Escola'];var DataTableColumns=[{field:'id',headerName:head[0],flex:0.10,headerAlign:'center',headerClassName:'theme-header',align:'center'},{field:'school',headerName:head[1],flex:0.15,headerAlign:'center',headerClassName:'theme-header',align:'center'}];function handleDownloadPdf(){var doc=new jsPDF();var lines=[];setLoadingTabel(true);schoolsInfos.forEach(function(item,index){lines.push([index+1,item.school]);});doc.autoTable({head:[],body:lines});doc.save('escolas.pdf');setLoadingTabel(false);}function handleDownloadCsv(){var serialized=schoolsInfos.map(function(item,index){return{ID:index+1,Escola:item.school};});return serialized;}var rows=schoolsInfos.map(function(item,index){return{id:index+1,school:item.school};});function onSelectYear(id,option){switch(id){case'highestEnrollments':setHighestEnrollments(_objectSpread(_objectSpread({},highestEnrollments),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-highest-enroll/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setHighestEnrollments({loading:false,year:option,x:x,y:y});});break;case'enrollmentsJP':setEnrollmentsJP(_objectSpread(_objectSpread({},enrollmentsJP),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-schools-per-city/?cityName=Jo\\xE3o Pessoa&year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsJP({loading:false,year:option,x:x,y:y});});break;case'enrollmentsCG':setEnrollmentsCG(_objectSpread(_objectSpread({},enrollmentsCG),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-schools-per-city/?cityName=Campina Grande&year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsCG({loading:false,year:option,x:x,y:y});});break;case'schoolsPerSize':setSchoolsPerSize(_objectSpread(_objectSpread({},schoolsPerSize),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-schools-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setSchoolsPerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'enrollmentsPerSize':setEnrollmentsPerSize(_objectSpread(_objectSpread({},enrollmentsPerSize),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-enrollments-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setEnrollmentsPerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'averagesPersize':setAveragePerSize(_objectSpread(_objectSpread({},averagesPersize),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-averages-by-size/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setAveragePerSize({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'schoolsPerGre':setSchoolsPerGre(_objectSpread(_objectSpread({},schoolsPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-schools-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setSchoolsPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'enrollmentsPerGre':setEnrollmentsPerGre(_objectSpread(_objectSpread({},enrollmentsPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-enrollments-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setEnrollmentsPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;case'averagesPerGre':setAveragesPerGre(_objectSpread(_objectSpread({},averagesPerGre),{},{loading:true}));apiSaber.get(\"/enrollments/get-pro-averages-by-gre/?year=\".concat(option,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setAveragesPerGre({loading:false,year:option,x:x,y:y});}).catch(function(error){return console.log(error);});break;default:break;}}function onSelectSchool(id,value){switch(id){case'schoolsInYearsPerGre':setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:true}));apisaber.get(\"/schools/pro-in-years-gre/?gre_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:false,data_id:value,x:x,y:y}));});break;case'schoolsInYearsPerSize':setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:true}));apisaber.get(\"/schools/pro-in-years-size/?size_id=\".concat(value,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:false,data_id:value,x:x,y:y}));});break;default:break;}}useEffect(function(){apiSaber.get(\"/enrollments/get-years/?type=\".concat(selectedAdministrationType.value)).then(function(response){var options=response.data.map(function(item){return item.year;});setYears(options);}).catch(function(error){return console.log(error);});if(highestEnrollments.year){apiSaber.get(\"/enrollments/get-pro-highest-enroll/?year=\".concat(highestEnrollments.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setHighestEnrollments(_objectSpread(_objectSpread({},highestEnrollments),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsJP.year){apiSaber.get(\"/enrollments/get-pro-schools-per-city/?cityName=Jo\\xE3o Pessoa&year=\".concat(enrollmentsJP.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsJP(_objectSpread(_objectSpread({},enrollmentsJP),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsCG.year){apiSaber.get(\"/enrollments/get-pro-schools-per-city/?cityName=Campina Grande&year=\".concat(enrollmentsCG.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.escolas;});var y=response.data.map(function(item){return item.sum;});setEnrollmentsCG(_objectSpread(_objectSpread({},enrollmentsCG),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(schoolsPerSize.year){apiSaber.get(\"/enrollments/get-pro-schools-by-size/?year=\".concat(schoolsPerSize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setSchoolsPerSize(_objectSpread(_objectSpread({},schoolsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsPerSize.year){apiSaber.get(\"/enrollments/get-pro-enrollments-by-size/?year=\".concat(enrollmentsPerSize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setEnrollmentsPerSize(_objectSpread(_objectSpread({},enrollmentsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(averagesPersize.year){apiSaber.get(\"/enrollments/get-pro-averages-by-size/?year=\".concat(averagesPersize.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.slice(1,17).map(function(size){return size.key;});var y=response.data.slice(1,17).map(function(size){return size.data;});setAveragePerSize(_objectSpread(_objectSpread({},averagesPersize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(schoolsPerGre.year){apiSaber.get(\"/enrollments/get-pro-schools-by-gre/?year=\".concat(schoolsPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setSchoolsPerGre(_objectSpread(_objectSpread({},schoolsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(enrollmentsPerGre.year){apiSaber.get(\"/enrollments/get-pro-enrollments-by-gre/?year=\".concat(enrollmentsPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setEnrollmentsPerGre(_objectSpread(_objectSpread({},enrollmentsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}if(averagesPerGre.year){apiSaber.get(\"/enrollments/get-pro-averages-by-gre/?year=\".concat(averagesPerGre.year,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(size){return size.key;});var y=response.data.map(function(size){return size.data;});setAveragesPerGre(_objectSpread(_objectSpread({},averagesPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});}apisaber.get(\"/schools/pro-in-years-gre/?gre_id=\".concat(schoolsInYearsPerGre.data_id===0?1:schoolsInYearsPerGre.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerGre(_objectSpread(_objectSpread({},schoolsInYearsPerGre),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apisaber.get(\"/schools/pro-in-years-size/?size_id=\".concat(schoolsInYearsPerSize.data_id===0?1:schoolsInYearsPerSize.data_id,\"&type=\").concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setSchoolsInYearsPerSize(_objectSpread(_objectSpread({},schoolsInYearsPerSize),{},{loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/pro-total-in-years?type=\".concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setTotalEnrollmentsInYears(_objectSpread(_objectSpread({},totalEnrollmentsInYears),{},{useSelect:false,loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apiSaber.get(\"/enrollments/get-pro-schools-that-were-regular-in-years/?type=\".concat(selectedAdministrationType.value)).then(function(response){var x=response.data.map(function(item){return item.key;});var y=response.data.map(function(item){return item.data;});setRegularSchoolsInYears(_objectSpread(_objectSpread({},regularSchoolsInYears),{},{useSelect:false,loading:false,x:x,y:y}));}).catch(function(error){return console.log(error);});apisaber.get(\"/enrollments/get-pro-schools-that-were-regular?type=\".concat(selectedAdministrationType.value)).then(function(response){var serialized=response.data.map(function(item){return{id:item.school_id,school:item.escolas};});setSchoolsInfos(serialized);});},[selectedAdministrationType]);// function search(rows) {\n//   return rows.filter((row) =>\n//     searchColumns.some(\n//       (column) =>\n//         row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n//     )\n//   );\n// }\n// const columns = escolas[0] && Object.keys(escolas[0]).filter((column) => column !== 'field1' && column !== 'Unnamed: 7');\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"dash\",children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{id:\"wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-area\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container-sm container-fluid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"administration-type\",children:/*#__PURE__*/_jsx(Select,{className:\"basic-single\",classNamePrefix:\"custom-select\",isSearchable:false,value:selectedAdministrationType,options:optionsAdministrationType,components:{Option:CustomOption},filterOption:createFilter({ignoreAccents:false}),onChange:function onChange(value){return setSelectedAdministrationType(value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:totalEnrollmentsInYears.x,y:totalEnrollmentsInYears.y,name:\"Matr\\xEDculas\",type:\"line\",title:\"Total de matr\\xEDculas na Para\\xEDba ao longo dos anos\",id:\"totalEnrollmentsInYears\"// onChange={onSelectSchool}\n,useSelect:totalEnrollmentsInYears.useSelect,loading:totalEnrollmentsInYears.loading,administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:highestEnrollments.x,y:highestEnrollments.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Escolas paraibanas com maior n\\xFAmero de matr\\xEDculas\",id:\"highestEnrollments\",onSelect:onSelectYear,options:years,loading:highestEnrollments.loading})})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsJP.x,y:enrollmentsJP.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"Escolas de Jo\\xE3o Pessoa com mais Matr\\xEDculas\",id:\"enrollmentsJP\",onSelect:onSelectYear,options:years,loading:enrollmentsJP.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsCG.x,y:enrollmentsCG.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Escolas de Campina Grande com mais Matr\\xEDculas\",id:\"enrollmentsCG\",onSelect:onSelectYear,options:years,loading:enrollmentsCG.loading})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:schoolsPerSize.x,y:schoolsPerSize.y,name:\"Escolas\",type:\"bar\",title:\"Total de Escolas por Porte\",id:\"schoolsPerSize\",onSelect:onSelectYear,options:years,loading:schoolsPerSize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:schoolsPerGre.x,y:schoolsPerGre.y,name:\"Escolas\",type:\"bar\",title:\"Total de Escolas por GRE\",id:\"schoolsPerGre\",onSelect:onSelectYear,options:years,loading:schoolsPerGre.loading,viewPercent:true})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsPerSize.x,y:enrollmentsPerSize.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"Total de Matr\\xEDculas por Porte\",id:\"enrollmentsPerSize\",onSelect:onSelectYear,options:years,loading:enrollmentsPerSize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:enrollmentsPerGre.x,y:enrollmentsPerGre.y,name:\"Matr\\xEDculas\",type:\"bar\",title:\"Total de Matr\\xEDculas por GRE\",id:\"enrollmentsPerGre\",onSelect:onSelectYear,options:years,loading:enrollmentsPerGre.loading,viewPercent:true})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-4 mb-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:averagesPersize.x,y:averagesPersize.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"M\\xE9dia de Matr\\xEDculas por Porte\",id:\"averagesPersize\",onSelect:onSelectYear,options:years,loading:averagesPersize.loading})})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-6 col-sm-12\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(ChartPerYear,{x:averagesPerGre.x,y:averagesPerGre.y,name:\"Matr\\xEDculas\"// color={color}\n,type:\"bar\",title:\"M\\xE9dia de Matr\\xEDculas por GRE\",id:\"averagesPerGre\",onSelect:onSelectYear,options:years,loading:averagesPerGre.loading})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:schoolsInYearsPerGre.x,y:schoolsInYearsPerGre.y,name:\"Escolas\",type:\"line\",title:\"Total de escolas por GRE ao longo dos anos\",id:\"schoolsInYearsPerGre\",onChange:onSelectSchool,useSelect:schoolsInYearsPerGre.useSelect,loading:schoolsInYearsPerGre.loading,by:\"gre\",administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:schoolsInYearsPerSize.x,y:schoolsInYearsPerSize.y,name:\"Escolas\",type:\"line\",title:\"Total de escolas por porte ao longo dos anos\",id:\"schoolsInYearsPerSize\",onChange:onSelectSchool,useSelect:schoolsInYearsPerSize.useSelect,loading:schoolsInYearsPerSize.loading,by:\"size\",administrationType:selectedAdministrationType.value})})})}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 mb-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-lg-12 col-sm-12 mb-sm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"card-box box\",children:/*#__PURE__*/_jsx(LineChartBySchool,{x:regularSchoolsInYears.x,y:regularSchoolsInYears.y,name:\"Escolas\",type:\"line\",title:\"Quantidade de escolas regulares que se tornaram profissionais ao longo dos anos\",id:\"regularSchoolsInYears\",loading:regularSchoolsInYears.loading})})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"row mt-4 bm-4\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col\",children:/*#__PURE__*/_jsx(\"div\",{className:\"table box\",children:/*#__PURE__*/_jsx(DataTable,{title:\"Escolas regulares que se tornaram profissionais\",infos:schoolsInfos,rows:rows,columns:DataTableColumns,head:head,downloadCsv:handleDownloadCsv,downloadPdf:handleDownloadPdf,loading:loadingTabel})})})})]})})}),/*#__PURE__*/_jsx(Footer,{})]});}export default Professional;","map":{"version":3,"sources":["/home/yasmin/Área de Trabalho/Frontend/src/pages/Professional/index.jsx"],"names":["React","useState","useEffect","apiSaber","DataTable","Header","Footer","ChartPerYear","LineChartBySchool","apisaber","Select","createFilter","CustomOption","jsPDF","Professional","dataChart","loading","year","x","y","dataLineChart","data_id","useSelect","schoolsPerSize","setSchoolsPerSize","enrollmentsPerSize","setEnrollmentsPerSize","averagesPersize","setAveragePerSize","schoolsPerGre","setSchoolsPerGre","enrollmentsPerGre","setEnrollmentsPerGre","averagesPerGre","setAveragesPerGre","highestEnrollments","setHighestEnrollments","enrollmentsJP","setEnrollmentsJP","enrollmentsCG","setEnrollmentsCG","totalEnrollmentsInYears","setTotalEnrollmentsInYears","schoolsInYearsPerGre","setSchoolsInYearsPerGre","schoolsInYearsPerSize","setSchoolsInYearsPerSize","regularSchoolsInYears","setRegularSchoolsInYears","years","setYears","label","value","selectedAdministrationType","setSelectedAdministrationType","schoolsInfos","setSchoolsInfos","loadingTabel","setLoadingTabel","optionsAdministrationType","head","DataTableColumns","field","headerName","flex","headerAlign","headerClassName","align","handleDownloadPdf","doc","lines","forEach","item","index","push","school","autoTable","body","save","handleDownloadCsv","serialized","map","ID","Escola","rows","id","onSelectYear","option","get","then","response","data","escolas","sum","slice","size","key","catch","error","console","log","onSelectSchool","options","school_id","Option","ignoreAccents"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport apiSaber from '../../services/apisaber';\nimport DataTable from '../../components/Datatable';\nimport Header from \"../../components/Header\";\nimport Footer from '../../components/Footer';\nimport { ChartPerYear } from '../../components/ChartPerYear/ChartPerYear';\nimport { LineChartBySchool } from '../../components/LineChartBySchool/LineChartBySchool';\nimport apisaber from '../../services/apisaber';\nimport './styles.css';\nimport Select, { createFilter } from 'react-select';\nimport CustomOption from \"../../components/Options/CustomOption\";\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\n\nfunction Professional() {\n  const dataChart = {\n    loading: true,\n    year: 2021,\n    x: [],\n    y: [],\n  };\n\n  const dataLineChart = {\n    loading: true,\n    data_id: 0, //4556\n    useSelect: true,\n    x: [],\n    y: [],\n  };\n\n  const [schoolsPerSize, setSchoolsPerSize] = useState(dataChart);\n  const [enrollmentsPerSize, setEnrollmentsPerSize] = useState(dataChart);\n  const [averagesPersize, setAveragePerSize] = useState(dataChart);\n  const [schoolsPerGre, setSchoolsPerGre] = useState(dataChart);\n  const [enrollmentsPerGre, setEnrollmentsPerGre] = useState(dataChart);\n  const [averagesPerGre, setAveragesPerGre] = useState(dataChart);\n  const [highestEnrollments, setHighestEnrollments] = useState(dataChart);\n  const [enrollmentsJP, setEnrollmentsJP] = useState(dataChart);\n  const [enrollmentsCG, setEnrollmentsCG] = useState(dataChart);\n  const [totalEnrollmentsInYears, setTotalEnrollmentsInYears] = useState(dataLineChart);\n  const [schoolsInYearsPerGre, setSchoolsInYearsPerGre] = useState(dataLineChart);\n  const [schoolsInYearsPerSize, setSchoolsInYearsPerSize] = useState(dataLineChart);\n  const [regularSchoolsInYears, setRegularSchoolsInYears] = useState(dataLineChart);\n  const [years, setYears] = useState([]);\n  const [selectedAdministrationType, setSelectedAdministrationType] = useState({ label: 'Todos', value: 3 });\n  const [schoolsInfos, setSchoolsInfos] = useState([]);\n  const [loadingTabel, setLoadingTabel] = useState(false);\n  const [optionsAdministrationType] = useState([\n    {\n      label: 'Todos',\n      value: 3,\n    },\n    {\n      label: 'Municipal',\n      value: 1,\n    },\n    {\n      label: 'Estadual',\n      value: 0,\n    }\n  ]);\n\n  const head = ['ID', 'Escola'];\n  const DataTableColumns = [\n    { field: 'id', headerName: head[0], flex: 0.10, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n    { field: 'school', headerName: head[1], flex: 0.15, headerAlign: 'center', headerClassName: 'theme-header', align: 'center' },\n\n  ];\n\n  function handleDownloadPdf() {\n    const doc = new jsPDF();\n    const lines = [];\n\n    setLoadingTabel(true);\n\n    schoolsInfos.forEach((item, index) => {\n      lines.push([\n        index + 1,\n        item.school,\n      ]);\n    });\n\n    doc.autoTable({\n      head: [],\n      body: lines,\n    });\n\n    doc.save('escolas.pdf');\n\n    setLoadingTabel(false);\n  }\n\n  function handleDownloadCsv() {\n    const serialized = schoolsInfos.map((item, index) => ({\n      ID: index + 1,\n      Escola: item.school,\n    }));\n\n    return serialized;\n  }\n\n  const rows = schoolsInfos.map((item, index) => ({\n    id: index + 1,\n    school: item.school,\n  }));\n\n  function onSelectYear(id, option) {\n    switch (id) {\n      case 'highestEnrollments':\n        setHighestEnrollments({ ...highestEnrollments, loading: true });\n        apiSaber.get(`/enrollments/get-pro-highest-enroll/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setHighestEnrollments({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'enrollmentsJP':\n        setEnrollmentsJP({ ...enrollmentsJP, loading: true });\n        apiSaber.get(`/enrollments/get-pro-schools-per-city/?cityName=João Pessoa&year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setEnrollmentsJP({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'enrollmentsCG':\n        setEnrollmentsCG({ ...enrollmentsCG, loading: true });\n        apiSaber.get(`/enrollments/get-pro-schools-per-city/?cityName=Campina Grande&year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.escolas);\n          const y = response.data.map(item => item.sum);\n\n          setEnrollmentsCG({ loading: false, year: option, x, y });\n        });\n        break;\n\n      case 'schoolsPerSize':\n        setSchoolsPerSize({ ...schoolsPerSize, loading: true });\n        apiSaber.get(`/enrollments/get-pro-schools-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setSchoolsPerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'enrollmentsPerSize':\n        setEnrollmentsPerSize({ ...enrollmentsPerSize, loading: true });\n        apiSaber.get(`/enrollments/get-pro-enrollments-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setEnrollmentsPerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'averagesPersize':\n        setAveragePerSize({ ...averagesPersize, loading: true });\n        apiSaber.get(`/enrollments/get-pro-averages-by-size/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.slice(1, 17).map(size => size.key);\n          const y = response.data.slice(1, 17).map((size) => size.data);\n\n          setAveragePerSize({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'schoolsPerGre':\n        setSchoolsPerGre({ ...schoolsPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-pro-schools-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setSchoolsPerGre({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      case 'enrollmentsPerGre':\n        setEnrollmentsPerGre({ ...enrollmentsPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-pro-enrollments-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setEnrollmentsPerGre({ loading: false, year: option, x, y });\n\n        }).catch(error => console.log(error));\n        break;\n\n      case 'averagesPerGre':\n        setAveragesPerGre({ ...averagesPerGre, loading: true });\n        apiSaber.get(`/enrollments/get-pro-averages-by-gre/?year=${option}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(size => size.key);\n          const y = response.data.map((size) => size.data);\n\n          setAveragesPerGre({ loading: false, year: option, x, y });\n        }).catch(error => console.log(error));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function onSelectSchool(id, value) {\n    switch (id) {\n      case 'schoolsInYearsPerGre':\n        setSchoolsInYearsPerGre({ ...schoolsInYearsPerGre, loading: true });\n        apisaber.get(`/schools/pro-in-years-gre/?gre_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setSchoolsInYearsPerGre({\n            ...schoolsInYearsPerGre,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      case 'schoolsInYearsPerSize':\n        setSchoolsInYearsPerSize({ ...schoolsInYearsPerSize, loading: true });\n        apisaber.get(`/schools/pro-in-years-size/?size_id=${value}&type=${selectedAdministrationType.value}`).then(response => {\n          const x = response.data.map(item => item.key);\n          const y = response.data.map(item => item.data);\n\n          setSchoolsInYearsPerSize({\n            ...schoolsInYearsPerSize,\n            loading: false,\n            data_id: value,\n            x,\n            y,\n          });\n        });\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  useEffect(() => {\n    apiSaber.get(`/enrollments/get-years/?type=${selectedAdministrationType.value}`).then(response => {\n      const options = response.data.map(item => item.year);\n      setYears(options);\n    }).catch(error => console.log(error));\n\n    if (highestEnrollments.year) {\n      apiSaber.get(`/enrollments/get-pro-highest-enroll/?year=${highestEnrollments.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setHighestEnrollments({ ...highestEnrollments, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsJP.year) {\n      apiSaber.get(`/enrollments/get-pro-schools-per-city/?cityName=João Pessoa&year=${enrollmentsJP.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setEnrollmentsJP({ ...enrollmentsJP, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsCG.year) {\n      apiSaber.get(`/enrollments/get-pro-schools-per-city/?cityName=Campina Grande&year=${enrollmentsCG.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(item => item.escolas);\n        const y = response.data.map(item => item.sum);\n\n        setEnrollmentsCG({ ...enrollmentsCG, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (schoolsPerSize.year) {\n      apiSaber.get(`/enrollments/get-pro-schools-by-size/?year=${schoolsPerSize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setSchoolsPerSize({ ...schoolsPerSize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsPerSize.year) {\n      apiSaber.get(`/enrollments/get-pro-enrollments-by-size/?year=${enrollmentsPerSize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setEnrollmentsPerSize({ ...enrollmentsPerSize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (averagesPersize.year) {\n      apiSaber.get(`/enrollments/get-pro-averages-by-size/?year=${averagesPersize.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.slice(1, 17).map(size => size.key);\n        const y = response.data.slice(1, 17).map((size) => size.data);\n\n        setAveragePerSize({ ...averagesPersize, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (schoolsPerGre.year) {\n      apiSaber.get(`/enrollments/get-pro-schools-by-gre/?year=${schoolsPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setSchoolsPerGre({ ...schoolsPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (enrollmentsPerGre.year) {\n      apiSaber.get(`/enrollments/get-pro-enrollments-by-gre/?year=${enrollmentsPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setEnrollmentsPerGre({ ...enrollmentsPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    if (averagesPerGre.year) {\n      apiSaber.get(`/enrollments/get-pro-averages-by-gre/?year=${averagesPerGre.year}&type=${selectedAdministrationType.value}`).then(response => {\n        const x = response.data.map(size => size.key);\n        const y = response.data.map((size) => size.data);\n\n        setAveragesPerGre({ ...averagesPerGre, loading: false, x, y });\n      }).catch(error => console.log(error));\n    }\n\n    apisaber.get(\n      `/schools/pro-in-years-gre/?gre_id=${schoolsInYearsPerGre.data_id === 0 ? 1 : schoolsInYearsPerGre.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setSchoolsInYearsPerGre({ ...schoolsInYearsPerGre, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apisaber.get(\n      `/schools/pro-in-years-size/?size_id=${schoolsInYearsPerSize.data_id === 0 ? 1 : schoolsInYearsPerSize.data_id}&type=${selectedAdministrationType.value}`\n    ).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setSchoolsInYearsPerSize({ ...schoolsInYearsPerSize, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/pro-total-in-years?type=${selectedAdministrationType.value}`).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setTotalEnrollmentsInYears({ ...totalEnrollmentsInYears, useSelect: false, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apiSaber.get(`/enrollments/get-pro-schools-that-were-regular-in-years/?type=${selectedAdministrationType.value}`).then(response => {\n      const x = response.data.map(item => item.key);\n      const y = response.data.map(item => item.data);\n\n      setRegularSchoolsInYears({ ...regularSchoolsInYears, useSelect: false, loading: false, x, y });\n    }).catch(error => console.log(error));\n\n    apisaber.get(`/enrollments/get-pro-schools-that-were-regular?type=${selectedAdministrationType.value}`).then(response => {\n      const serialized = response.data.map(item => {\n        return {\n          id: item.school_id,\n          school: item.escolas,\n        }\n      });\n\n      setSchoolsInfos(serialized);\n    });\n  }, [selectedAdministrationType]);\n\n  // function search(rows) {\n  //   return rows.filter((row) =>\n  //     searchColumns.some(\n  //       (column) =>\n  //         row[column].toString().toLowerCase().indexOf(query.toLowerCase()) > -1\n  //     )\n  //   );\n  // }\n\n  // const columns = escolas[0] && Object.keys(escolas[0]).filter((column) => column !== 'field1' && column !== 'Unnamed: 7');\n\n  return (\n    <div className=\"dash\">\n      <Header />\n      <div id=\"wrapper\">\n        <div className=\"content-area\">\n          <div className=\"container-sm container-fluid\">\n            <div className=\"main\">\n              <div className='administration-type'>\n                <Select\n                  className=\"basic-single\"\n                  classNamePrefix=\"custom-select\"\n                  isSearchable={false}\n                  value={selectedAdministrationType}\n                  options={optionsAdministrationType}\n                  components={{ Option: CustomOption }}\n                  filterOption={createFilter({ ignoreAccents: false })}\n                  onChange={value => setSelectedAdministrationType(value)}\n                />\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={totalEnrollmentsInYears.x}\n                      y={totalEnrollmentsInYears.y}\n                      name='Matrículas'\n                      type=\"line\"\n                      title=\"Total de matrículas na Paraíba ao longo dos anos\"\n                      id=\"totalEnrollmentsInYears\"\n                      // onChange={onSelectSchool}\n                      useSelect={totalEnrollmentsInYears.useSelect}\n                      loading={totalEnrollmentsInYears.loading}\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={highestEnrollments.x}\n                      y={highestEnrollments.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Escolas paraibanas com maior número de matrículas\"\n                      id=\"highestEnrollments\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={highestEnrollments.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsJP.x}\n                      y={enrollmentsJP.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Escolas de João Pessoa com mais Matrículas\"\n                      id=\"enrollmentsJP\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsJP.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsCG.x}\n                      y={enrollmentsCG.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Escolas de Campina Grande com mais Matrículas\"\n                      id=\"enrollmentsCG\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsCG.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={schoolsPerSize.x}\n                      y={schoolsPerSize.y}\n                      name='Escolas'\n                      type=\"bar\"\n                      title=\"Total de Escolas por Porte\"\n                      id=\"schoolsPerSize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={schoolsPerSize.loading}\n                    />\n                  </div>\n                </div>\n\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={schoolsPerGre.x}\n                      y={schoolsPerGre.y}\n                      name='Escolas'\n                      type=\"bar\"\n                      title=\"Total de Escolas por GRE\"\n                      id=\"schoolsPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={schoolsPerGre.loading}\n                      viewPercent={true}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsPerSize.x}\n                      y={enrollmentsPerSize.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Total de Matrículas por Porte\"\n                      id=\"enrollmentsPerSize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsPerSize.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={enrollmentsPerGre.x}\n                      y={enrollmentsPerGre.y}\n                      name='Matrículas'\n                      type=\"bar\"\n                      title=\"Total de Matrículas por GRE\"\n                      id=\"enrollmentsPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={enrollmentsPerGre.loading}\n                      viewPercent={true}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-6 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={averagesPersize.x}\n                      y={averagesPersize.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Média de Matrículas por Porte\"\n                      id=\"averagesPersize\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={averagesPersize.loading}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"col-lg-6 col-sm-12\">\n                  <div className=\"card-box box\">\n                    <ChartPerYear\n                      x={averagesPerGre.x}\n                      y={averagesPerGre.y}\n                      name='Matrículas'\n                      // color={color}\n                      type=\"bar\"\n                      title=\"Média de Matrículas por GRE\"\n                      id=\"averagesPerGre\"\n                      onSelect={onSelectYear}\n                      options={years}\n                      loading={averagesPerGre.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={schoolsInYearsPerGre.x}\n                      y={schoolsInYearsPerGre.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Total de escolas por GRE ao longo dos anos\"\n                      id=\"schoolsInYearsPerGre\"\n                      onChange={onSelectSchool}\n                      useSelect={schoolsInYearsPerGre.useSelect}\n                      loading={schoolsInYearsPerGre.loading}\n                      by=\"gre\"\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={schoolsInYearsPerSize.x}\n                      y={schoolsInYearsPerSize.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Total de escolas por porte ao longo dos anos\"\n                      id=\"schoolsInYearsPerSize\"\n                      onChange={onSelectSchool}\n                      useSelect={schoolsInYearsPerSize.useSelect}\n                      loading={schoolsInYearsPerSize.loading}\n                      by=\"size\"\n                      administrationType={selectedAdministrationType.value}\n                    />\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"row mt-4 mb-4\">\n                <div className=\"col-lg-12 col-sm-12 mb-sm-4\">\n                  <div className=\"card-box box\">\n                    <LineChartBySchool\n                      x={regularSchoolsInYears.x}\n                      y={regularSchoolsInYears.y}\n                      name='Escolas'\n                      type=\"line\"\n                      title=\"Quantidade de escolas regulares que se tornaram profissionais ao longo dos anos\"\n                      id=\"regularSchoolsInYears\"\n                      loading={regularSchoolsInYears.loading}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mt-4 bm-4\">\n              <div className=\"col\">\n                <div className=\"table box\">\n                  <DataTable\n                    title=\"Escolas regulares que se tornaram profissionais\"\n                    infos={schoolsInfos}\n                    rows={rows}\n                    columns={DataTableColumns}\n                    head={head}\n                    downloadCsv={handleDownloadCsv}\n                    downloadPdf={handleDownloadPdf}\n                    loading={loadingTabel}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default Professional;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"\"use strict\";\n\"use restrict\";\n\nmodule.exports = UnionFind;\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n  for (var i = 0; i < count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\nUnionFind.prototype.length = function () {\n  return this.roots.length;\n};\nUnionFind.prototype.makeSet = function () {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n};\nUnionFind.prototype.find = function (x) {\n  var roots = this.roots;\n  while (roots[x] !== x) {\n    var y = roots[x];\n    roots[x] = roots[y];\n    x = y;\n  }\n  return x;\n};\nUnionFind.prototype.link = function (x, y) {\n  var xr = this.find(x),\n    yr = this.find(y);\n  if (xr === yr) {\n    return;\n  }\n  var ranks = this.ranks,\n    roots = this.roots,\n    xd = ranks[xr],\n    yd = ranks[yr];\n  if (xd < yd) {\n    roots[xr] = yr;\n  } else if (yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n};","map":{"version":3,"names":["module","exports","UnionFind","count","roots","Array","ranks","i","prototype","length","makeSet","n","push","find","x","y","link","xr","yr","xd","yd"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/simplify-planar-graph/node_modules/union-find/index.js"],"sourcesContent":["\"use strict\"; \"use restrict\";\n\nmodule.exports = UnionFind;\n\nfunction UnionFind(count) {\n  this.roots = new Array(count);\n  this.ranks = new Array(count);\n  \n  for(var i=0; i<count; ++i) {\n    this.roots[i] = i;\n    this.ranks[i] = 0;\n  }\n}\n\nUnionFind.prototype.length = function() {\n  return this.roots.length;\n}\n\nUnionFind.prototype.makeSet = function() {\n  var n = this.roots.length;\n  this.roots.push(n);\n  this.ranks.push(0);\n  return n;\n}\n\nUnionFind.prototype.find = function(x) {\n  var roots = this.roots;\n  while(roots[x] !== x) {\n    var y = roots[x];\n    roots[x] = roots[y];\n    x = y;\n  }\n  return x;\n}\n\nUnionFind.prototype.link = function(x, y) {\n  var xr = this.find(x)\n    , yr = this.find(y);\n  if(xr === yr) {\n    return;\n  }\n  var ranks = this.ranks\n    , roots = this.roots\n    , xd    = ranks[xr]\n    , yd    = ranks[yr];\n  if(xd < yd) {\n    roots[xr] = yr;\n  } else if(yd < xd) {\n    roots[yr] = xr;\n  } else {\n    roots[yr] = xr;\n    ++ranks[xr];\n  }\n}\n\n"],"mappings":"AAAA,YAAY;AAAE,cAAc;;AAE5BA,MAAM,CAACC,OAAO,GAAGC,SAAS;AAE1B,SAASA,SAAS,CAACC,KAAK,EAAE;EACxB,IAAI,CAACC,KAAK,GAAG,IAAIC,KAAK,CAACF,KAAK,CAAC;EAC7B,IAAI,CAACG,KAAK,GAAG,IAAID,KAAK,CAACF,KAAK,CAAC;EAE7B,KAAI,IAAII,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACJ,KAAK,EAAE,EAAEI,CAAC,EAAE;IACzB,IAAI,CAACH,KAAK,CAACG,CAAC,CAAC,GAAGA,CAAC;IACjB,IAAI,CAACD,KAAK,CAACC,CAAC,CAAC,GAAG,CAAC;EACnB;AACF;AAEAL,SAAS,CAACM,SAAS,CAACC,MAAM,GAAG,YAAW;EACtC,OAAO,IAAI,CAACL,KAAK,CAACK,MAAM;AAC1B,CAAC;AAEDP,SAAS,CAACM,SAAS,CAACE,OAAO,GAAG,YAAW;EACvC,IAAIC,CAAC,GAAG,IAAI,CAACP,KAAK,CAACK,MAAM;EACzB,IAAI,CAACL,KAAK,CAACQ,IAAI,CAACD,CAAC,CAAC;EAClB,IAAI,CAACL,KAAK,CAACM,IAAI,CAAC,CAAC,CAAC;EAClB,OAAOD,CAAC;AACV,CAAC;AAEDT,SAAS,CAACM,SAAS,CAACK,IAAI,GAAG,UAASC,CAAC,EAAE;EACrC,IAAIV,KAAK,GAAG,IAAI,CAACA,KAAK;EACtB,OAAMA,KAAK,CAACU,CAAC,CAAC,KAAKA,CAAC,EAAE;IACpB,IAAIC,CAAC,GAAGX,KAAK,CAACU,CAAC,CAAC;IAChBV,KAAK,CAACU,CAAC,CAAC,GAAGV,KAAK,CAACW,CAAC,CAAC;IACnBD,CAAC,GAAGC,CAAC;EACP;EACA,OAAOD,CAAC;AACV,CAAC;AAEDZ,SAAS,CAACM,SAAS,CAACQ,IAAI,GAAG,UAASF,CAAC,EAAEC,CAAC,EAAE;EACxC,IAAIE,EAAE,GAAG,IAAI,CAACJ,IAAI,CAACC,CAAC,CAAC;IACjBI,EAAE,GAAG,IAAI,CAACL,IAAI,CAACE,CAAC,CAAC;EACrB,IAAGE,EAAE,KAAKC,EAAE,EAAE;IACZ;EACF;EACA,IAAIZ,KAAK,GAAG,IAAI,CAACA,KAAK;IAClBF,KAAK,GAAG,IAAI,CAACA,KAAK;IAClBe,EAAE,GAAMb,KAAK,CAACW,EAAE,CAAC;IACjBG,EAAE,GAAMd,KAAK,CAACY,EAAE,CAAC;EACrB,IAAGC,EAAE,GAAGC,EAAE,EAAE;IACVhB,KAAK,CAACa,EAAE,CAAC,GAAGC,EAAE;EAChB,CAAC,MAAM,IAAGE,EAAE,GAAGD,EAAE,EAAE;IACjBf,KAAK,CAACc,EAAE,CAAC,GAAGD,EAAE;EAChB,CAAC,MAAM;IACLb,KAAK,CAACc,EAAE,CAAC,GAAGD,EAAE;IACd,EAAEX,KAAK,CAACW,EAAE,CAAC;EACb;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar Axes = require('../../plots/cartesian/axes');\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\nmodule.exports = function calc(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var subplotId = trace.subplot;\n  var radialAxis = fullLayout[subplotId].radialaxis;\n  var angularAxis = fullLayout[subplotId].angularaxis;\n  var rArray = radialAxis.makeCalcdata(trace, 'r');\n  var thetaArray = angularAxis.makeCalcdata(trace, 'theta');\n  var len = trace._length;\n  var cd = new Array(len);\n  for (var i = 0; i < len; i++) {\n    var r = rArray[i];\n    var theta = thetaArray[i];\n    var cdi = cd[i] = {};\n    if (isNumeric(r) && isNumeric(theta)) {\n      cdi.r = r;\n      cdi.theta = theta;\n    } else {\n      cdi.r = BADNUM;\n    }\n  }\n  var ppad = calcMarkerSize(trace, len);\n  trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {\n    ppad: ppad\n  });\n  calcColorscale(gd, trace);\n  arraysToCalcdata(cd, trace);\n  calcSelection(cd, trace);\n  return cd;\n};","map":{"version":3,"names":["isNumeric","require","BADNUM","Axes","calcColorscale","arraysToCalcdata","calcSelection","calcMarkerSize","module","exports","calc","gd","trace","fullLayout","_fullLayout","subplotId","subplot","radialAxis","radialaxis","angularAxis","angularaxis","rArray","makeCalcdata","thetaArray","len","_length","cd","Array","i","r","theta","cdi","ppad","_extremes","x","findExtremes"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatterpolar/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar BADNUM = require('../../constants/numerical').BADNUM;\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar calcColorscale = require('../scatter/colorscale_calc');\nvar arraysToCalcdata = require('../scatter/arrays_to_calcdata');\nvar calcSelection = require('../scatter/calc_selection');\nvar calcMarkerSize = require('../scatter/calc').calcMarkerSize;\n\nmodule.exports = function calc(gd, trace) {\n    var fullLayout = gd._fullLayout;\n    var subplotId = trace.subplot;\n    var radialAxis = fullLayout[subplotId].radialaxis;\n    var angularAxis = fullLayout[subplotId].angularaxis;\n    var rArray = radialAxis.makeCalcdata(trace, 'r');\n    var thetaArray = angularAxis.makeCalcdata(trace, 'theta');\n    var len = trace._length;\n    var cd = new Array(len);\n\n    for(var i = 0; i < len; i++) {\n        var r = rArray[i];\n        var theta = thetaArray[i];\n        var cdi = cd[i] = {};\n\n        if(isNumeric(r) && isNumeric(theta)) {\n            cdi.r = r;\n            cdi.theta = theta;\n        } else {\n            cdi.r = BADNUM;\n        }\n    }\n\n    var ppad = calcMarkerSize(trace, len);\n    trace._extremes.x = Axes.findExtremes(radialAxis, rArray, {ppad: ppad});\n\n    calcColorscale(gd, trace);\n    arraysToCalcdata(cd, trace);\n    calcSelection(cd, trace);\n\n    return cd;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAIC,MAAM,GAAGD,OAAO,CAAC,2BAA2B,CAAC,CAACC,MAAM;AAExD,IAAIC,IAAI,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAEhD,IAAIG,cAAc,GAAGH,OAAO,CAAC,4BAA4B,CAAC;AAC1D,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,+BAA+B,CAAC;AAC/D,IAAIK,aAAa,GAAGL,OAAO,CAAC,2BAA2B,CAAC;AACxD,IAAIM,cAAc,GAAGN,OAAO,CAAC,iBAAiB,CAAC,CAACM,cAAc;AAE9DC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,UAAU,GAAGF,EAAE,CAACG,WAAW;EAC/B,IAAIC,SAAS,GAAGH,KAAK,CAACI,OAAO;EAC7B,IAAIC,UAAU,GAAGJ,UAAU,CAACE,SAAS,CAAC,CAACG,UAAU;EACjD,IAAIC,WAAW,GAAGN,UAAU,CAACE,SAAS,CAAC,CAACK,WAAW;EACnD,IAAIC,MAAM,GAAGJ,UAAU,CAACK,YAAY,CAACV,KAAK,EAAE,GAAG,CAAC;EAChD,IAAIW,UAAU,GAAGJ,WAAW,CAACG,YAAY,CAACV,KAAK,EAAE,OAAO,CAAC;EACzD,IAAIY,GAAG,GAAGZ,KAAK,CAACa,OAAO;EACvB,IAAIC,EAAE,GAAG,IAAIC,KAAK,CAACH,GAAG,CAAC;EAEvB,KAAI,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,EAAEI,CAAC,EAAE,EAAE;IACzB,IAAIC,CAAC,GAAGR,MAAM,CAACO,CAAC,CAAC;IACjB,IAAIE,KAAK,GAAGP,UAAU,CAACK,CAAC,CAAC;IACzB,IAAIG,GAAG,GAAGL,EAAE,CAACE,CAAC,CAAC,GAAG,CAAC,CAAC;IAEpB,IAAG5B,SAAS,CAAC6B,CAAC,CAAC,IAAI7B,SAAS,CAAC8B,KAAK,CAAC,EAAE;MACjCC,GAAG,CAACF,CAAC,GAAGA,CAAC;MACTE,GAAG,CAACD,KAAK,GAAGA,KAAK;IACrB,CAAC,MAAM;MACHC,GAAG,CAACF,CAAC,GAAG3B,MAAM;IAClB;EACJ;EAEA,IAAI8B,IAAI,GAAGzB,cAAc,CAACK,KAAK,EAAEY,GAAG,CAAC;EACrCZ,KAAK,CAACqB,SAAS,CAACC,CAAC,GAAG/B,IAAI,CAACgC,YAAY,CAAClB,UAAU,EAAEI,MAAM,EAAE;IAACW,IAAI,EAAEA;EAAI,CAAC,CAAC;EAEvE5B,cAAc,CAACO,EAAE,EAAEC,KAAK,CAAC;EACzBP,gBAAgB,CAACqB,EAAE,EAAEd,KAAK,CAAC;EAC3BN,aAAa,CAACoB,EAAE,EAAEd,KAAK,CAAC;EAExB,OAAOc,EAAE;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
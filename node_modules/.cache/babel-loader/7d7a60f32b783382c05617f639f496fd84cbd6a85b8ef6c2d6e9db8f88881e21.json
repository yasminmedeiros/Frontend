{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar interactConstants = require('../../constants/interactions');\nmodule.exports = {\n  draw: draw\n};\nvar numStripRE = / [XY][0-9]* /;\n\n/**\n * Titles - (re)draw titles on the axes and plot:\n * @param {DOM element} gd - the graphDiv\n * @param {string} titleClass - the css class of this title\n * @param {object} options - how and what to draw\n *      propContainer - the layout object containing `title` and `titlefont`\n *          attributes that apply to this title\n *      propName - the full name of the title property (for Plotly.relayout)\n *      [traceIndex] - include only if this property applies to one trace\n *          (such as a colorbar title) - then editing pipes to Plotly.restyle\n *          instead of Plotly.relayout\n *      placeholder - placeholder text for an empty editable title\n *      [avoid] {object} - include if this title should move to avoid other elements\n *          selection - d3 selection of elements to avoid\n *          side - which direction to move if there is a conflict\n *          [offsetLeft] - if these elements are subject to a translation\n *              wrt the title element\n *          [offsetTop]\n *      attributes {object} - position and alignment attributes\n *          x - pixels\n *          y - pixels\n *          text-anchor - start|middle|end\n *      transform {object} - how to transform the title after positioning\n *          rotate - degrees\n *          offset - shift up/down in the rotated frame (unused?)\n *      containerGroup - if an svg <g> element already exists to hold this\n *          title, include here. Otherwise it will go in fullLayout._infolayer\n *\n *  @return {selection} d3 selection of title container group\n */\nfunction draw(gd, titleClass, options) {\n  var cont = options.propContainer;\n  var prop = options.propName;\n  var placeholder = options.placeholder;\n  var traceIndex = options.traceIndex;\n  var avoid = options.avoid || {};\n  var attributes = options.attributes;\n  var transform = options.transform;\n  var group = options.containerGroup;\n  var fullLayout = gd._fullLayout;\n  var opacity = 1;\n  var isplaceholder = false;\n  var title = cont.title;\n  var txt = (title && title.text ? title.text : '').trim();\n  var font = title && title.font ? title.font : {};\n  var fontFamily = font.family;\n  var fontSize = font.size;\n  var fontColor = font.color;\n\n  // only make this title editable if we positively identify its property\n  // as one that has editing enabled.\n  var editAttr;\n  if (prop === 'title.text') editAttr = 'titleText';else if (prop.indexOf('axis') !== -1) editAttr = 'axisTitleText';else if (prop.indexOf('colorbar' !== -1)) editAttr = 'colorbarTitleText';\n  var editable = gd._context.edits[editAttr];\n  if (txt === '') opacity = 0;\n  // look for placeholder text while stripping out numbers from eg X2, Y3\n  // this is just for backward compatibility with the old version that had\n  // \"Click to enter X2 title\" and may have gotten saved in some old plots,\n  // we don't want this to show up when these are displayed.\n  else if (txt.replace(numStripRE, ' % ') === placeholder.replace(numStripRE, ' % ')) {\n    opacity = 0.2;\n    isplaceholder = true;\n    if (!editable) txt = '';\n  }\n  if (fullLayout.meta) {\n    txt = Lib.templateString(txt, {\n      meta: fullLayout.meta\n    });\n  }\n  var elShouldExist = txt || editable;\n  if (!group) {\n    group = Lib.ensureSingle(fullLayout._infolayer, 'g', 'g-' + titleClass);\n  }\n  var el = group.selectAll('text').data(elShouldExist ? [0] : []);\n  el.enter().append('text');\n  el.text(txt)\n  // this is hacky, but convertToTspans uses the class\n  // to determine whether to rotate mathJax...\n  // so we need to clear out any old class and put the\n  // correct one (only relevant for colorbars, at least\n  // for now) - ie don't use .classed\n  .attr('class', titleClass);\n  el.exit().remove();\n  if (!elShouldExist) return group;\n  function titleLayout(titleEl) {\n    Lib.syncOrAsync([drawTitle, scootTitle], titleEl);\n  }\n  function drawTitle(titleEl) {\n    var transformVal;\n    if (transform) {\n      transformVal = '';\n      if (transform.rotate) {\n        transformVal += 'rotate(' + [transform.rotate, attributes.x, attributes.y] + ')';\n      }\n      if (transform.offset) {\n        transformVal += 'translate(0, ' + transform.offset + ')';\n      }\n    } else {\n      transformVal = null;\n    }\n    titleEl.attr('transform', transformVal);\n    titleEl.style({\n      'font-family': fontFamily,\n      'font-size': d3.round(fontSize, 2) + 'px',\n      fill: Color.rgb(fontColor),\n      opacity: opacity * Color.opacity(fontColor),\n      'font-weight': Plots.fontWeight\n    }).attr(attributes).call(svgTextUtils.convertToTspans, gd);\n    return Plots.previousPromises(gd);\n  }\n  function scootTitle(titleElIn) {\n    var titleGroup = d3.select(titleElIn.node().parentNode);\n    if (avoid && avoid.selection && avoid.side && txt) {\n      titleGroup.attr('transform', null);\n\n      // move toward avoid.side (= left, right, top, bottom) if needed\n      // can include pad (pixels, default 2)\n      var shift = 0;\n      var backside = {\n        left: 'right',\n        right: 'left',\n        top: 'bottom',\n        bottom: 'top'\n      }[avoid.side];\n      var shiftSign = ['left', 'top'].indexOf(avoid.side) !== -1 ? -1 : 1;\n      var pad = isNumeric(avoid.pad) ? avoid.pad : 2;\n      var titlebb = Drawing.bBox(titleGroup.node());\n      var paperbb = {\n        left: 0,\n        top: 0,\n        right: fullLayout.width,\n        bottom: fullLayout.height\n      };\n      var maxshift = avoid.maxShift || (paperbb[avoid.side] - titlebb[avoid.side]) * (avoid.side === 'left' || avoid.side === 'top' ? -1 : 1);\n      // Prevent the title going off the paper\n      if (maxshift < 0) shift = maxshift;else {\n        // so we don't have to offset each avoided element,\n        // give the title the opposite offset\n        var offsetLeft = avoid.offsetLeft || 0;\n        var offsetTop = avoid.offsetTop || 0;\n        titlebb.left -= offsetLeft;\n        titlebb.right -= offsetLeft;\n        titlebb.top -= offsetTop;\n        titlebb.bottom -= offsetTop;\n\n        // iterate over a set of elements (avoid.selection)\n        // to avoid collisions with\n        avoid.selection.each(function () {\n          var avoidbb = Drawing.bBox(this);\n          if (Lib.bBoxIntersect(titlebb, avoidbb, pad)) {\n            shift = Math.max(shift, shiftSign * (avoidbb[avoid.side] - titlebb[backside]) + pad);\n          }\n        });\n        shift = Math.min(maxshift, shift);\n      }\n      if (shift > 0 || maxshift < 0) {\n        var shiftTemplate = {\n          left: [-shift, 0],\n          right: [shift, 0],\n          top: [0, -shift],\n          bottom: [0, shift]\n        }[avoid.side];\n        titleGroup.attr('transform', 'translate(' + shiftTemplate + ')');\n      }\n    }\n  }\n  el.call(titleLayout);\n  function setPlaceholder() {\n    opacity = 0;\n    isplaceholder = true;\n    el.text(placeholder).on('mouseover.opacity', function () {\n      d3.select(this).transition().duration(interactConstants.SHOW_PLACEHOLDER).style('opacity', 1);\n    }).on('mouseout.opacity', function () {\n      d3.select(this).transition().duration(interactConstants.HIDE_PLACEHOLDER).style('opacity', 0);\n    });\n  }\n  if (editable) {\n    if (!txt) setPlaceholder();else el.on('.opacity', null);\n    el.call(svgTextUtils.makeEditable, {\n      gd: gd\n    }).on('edit', function (text) {\n      if (traceIndex !== undefined) {\n        Registry.call('_guiRestyle', gd, prop, text, traceIndex);\n      } else {\n        Registry.call('_guiRelayout', gd, prop, text);\n      }\n    }).on('cancel', function () {\n      this.text(this.attr('data-unformatted')).call(titleLayout);\n    }).on('input', function (d) {\n      this.text(d || ' ').call(svgTextUtils.positionText, attributes.x, attributes.y);\n    });\n  }\n  el.classed('js-placeholder', isplaceholder);\n  return group;\n}","map":{"version":3,"names":["d3","require","isNumeric","Plots","Registry","Lib","Drawing","Color","svgTextUtils","interactConstants","module","exports","draw","numStripRE","gd","titleClass","options","cont","propContainer","prop","propName","placeholder","traceIndex","avoid","attributes","transform","group","containerGroup","fullLayout","_fullLayout","opacity","isplaceholder","title","txt","text","trim","font","fontFamily","family","fontSize","size","fontColor","color","editAttr","indexOf","editable","_context","edits","replace","meta","templateString","elShouldExist","ensureSingle","_infolayer","el","selectAll","data","enter","append","attr","exit","remove","titleLayout","titleEl","syncOrAsync","drawTitle","scootTitle","transformVal","rotate","x","y","offset","style","round","fill","rgb","fontWeight","call","convertToTspans","previousPromises","titleElIn","titleGroup","select","node","parentNode","selection","side","shift","backside","left","right","top","bottom","shiftSign","pad","titlebb","bBox","paperbb","width","height","maxshift","maxShift","offsetLeft","offsetTop","each","avoidbb","bBoxIntersect","Math","max","min","shiftTemplate","setPlaceholder","on","transition","duration","SHOW_PLACEHOLDER","HIDE_PLACEHOLDER","makeEditable","undefined","d","positionText","classed"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/components/titles/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar d3 = require('d3');\nvar isNumeric = require('fast-isnumeric');\n\nvar Plots = require('../../plots/plots');\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar Drawing = require('../drawing');\nvar Color = require('../color');\nvar svgTextUtils = require('../../lib/svg_text_utils');\nvar interactConstants = require('../../constants/interactions');\n\nmodule.exports = {\n    draw: draw\n};\n\nvar numStripRE = / [XY][0-9]* /;\n\n/**\n * Titles - (re)draw titles on the axes and plot:\n * @param {DOM element} gd - the graphDiv\n * @param {string} titleClass - the css class of this title\n * @param {object} options - how and what to draw\n *      propContainer - the layout object containing `title` and `titlefont`\n *          attributes that apply to this title\n *      propName - the full name of the title property (for Plotly.relayout)\n *      [traceIndex] - include only if this property applies to one trace\n *          (such as a colorbar title) - then editing pipes to Plotly.restyle\n *          instead of Plotly.relayout\n *      placeholder - placeholder text for an empty editable title\n *      [avoid] {object} - include if this title should move to avoid other elements\n *          selection - d3 selection of elements to avoid\n *          side - which direction to move if there is a conflict\n *          [offsetLeft] - if these elements are subject to a translation\n *              wrt the title element\n *          [offsetTop]\n *      attributes {object} - position and alignment attributes\n *          x - pixels\n *          y - pixels\n *          text-anchor - start|middle|end\n *      transform {object} - how to transform the title after positioning\n *          rotate - degrees\n *          offset - shift up/down in the rotated frame (unused?)\n *      containerGroup - if an svg <g> element already exists to hold this\n *          title, include here. Otherwise it will go in fullLayout._infolayer\n *\n *  @return {selection} d3 selection of title container group\n */\nfunction draw(gd, titleClass, options) {\n    var cont = options.propContainer;\n    var prop = options.propName;\n    var placeholder = options.placeholder;\n    var traceIndex = options.traceIndex;\n    var avoid = options.avoid || {};\n    var attributes = options.attributes;\n    var transform = options.transform;\n    var group = options.containerGroup;\n\n    var fullLayout = gd._fullLayout;\n\n    var opacity = 1;\n    var isplaceholder = false;\n    var title = cont.title;\n    var txt = (title && title.text ? title.text : '').trim();\n\n    var font = title && title.font ? title.font : {};\n    var fontFamily = font.family;\n    var fontSize = font.size;\n    var fontColor = font.color;\n\n    // only make this title editable if we positively identify its property\n    // as one that has editing enabled.\n    var editAttr;\n    if(prop === 'title.text') editAttr = 'titleText';\n    else if(prop.indexOf('axis') !== -1) editAttr = 'axisTitleText';\n    else if(prop.indexOf('colorbar' !== -1)) editAttr = 'colorbarTitleText';\n    var editable = gd._context.edits[editAttr];\n\n    if(txt === '') opacity = 0;\n    // look for placeholder text while stripping out numbers from eg X2, Y3\n    // this is just for backward compatibility with the old version that had\n    // \"Click to enter X2 title\" and may have gotten saved in some old plots,\n    // we don't want this to show up when these are displayed.\n    else if(txt.replace(numStripRE, ' % ') === placeholder.replace(numStripRE, ' % ')) {\n        opacity = 0.2;\n        isplaceholder = true;\n        if(!editable) txt = '';\n    }\n\n    if(fullLayout.meta) {\n        txt = Lib.templateString(txt, {meta: fullLayout.meta});\n    }\n\n    var elShouldExist = txt || editable;\n\n    if(!group) {\n        group = Lib.ensureSingle(fullLayout._infolayer, 'g', 'g-' + titleClass);\n    }\n\n    var el = group.selectAll('text')\n        .data(elShouldExist ? [0] : []);\n    el.enter().append('text');\n    el.text(txt)\n        // this is hacky, but convertToTspans uses the class\n        // to determine whether to rotate mathJax...\n        // so we need to clear out any old class and put the\n        // correct one (only relevant for colorbars, at least\n        // for now) - ie don't use .classed\n        .attr('class', titleClass);\n    el.exit().remove();\n\n    if(!elShouldExist) return group;\n\n    function titleLayout(titleEl) {\n        Lib.syncOrAsync([drawTitle, scootTitle], titleEl);\n    }\n\n    function drawTitle(titleEl) {\n        var transformVal;\n\n        if(transform) {\n            transformVal = '';\n            if(transform.rotate) {\n                transformVal += 'rotate(' + [transform.rotate, attributes.x, attributes.y] + ')';\n            }\n            if(transform.offset) {\n                transformVal += 'translate(0, ' + transform.offset + ')';\n            }\n        } else {\n            transformVal = null;\n        }\n\n        titleEl.attr('transform', transformVal);\n\n        titleEl.style({\n            'font-family': fontFamily,\n            'font-size': d3.round(fontSize, 2) + 'px',\n            fill: Color.rgb(fontColor),\n            opacity: opacity * Color.opacity(fontColor),\n            'font-weight': Plots.fontWeight\n        })\n        .attr(attributes)\n        .call(svgTextUtils.convertToTspans, gd);\n\n        return Plots.previousPromises(gd);\n    }\n\n    function scootTitle(titleElIn) {\n        var titleGroup = d3.select(titleElIn.node().parentNode);\n\n        if(avoid && avoid.selection && avoid.side && txt) {\n            titleGroup.attr('transform', null);\n\n            // move toward avoid.side (= left, right, top, bottom) if needed\n            // can include pad (pixels, default 2)\n            var shift = 0;\n            var backside = {\n                left: 'right',\n                right: 'left',\n                top: 'bottom',\n                bottom: 'top'\n            }[avoid.side];\n            var shiftSign = (['left', 'top'].indexOf(avoid.side) !== -1) ?\n                    -1 : 1;\n            var pad = isNumeric(avoid.pad) ? avoid.pad : 2;\n            var titlebb = Drawing.bBox(titleGroup.node());\n            var paperbb = {\n                left: 0,\n                top: 0,\n                right: fullLayout.width,\n                bottom: fullLayout.height\n            };\n            var maxshift = avoid.maxShift || (\n                (paperbb[avoid.side] - titlebb[avoid.side]) *\n                ((avoid.side === 'left' || avoid.side === 'top') ? -1 : 1));\n            // Prevent the title going off the paper\n            if(maxshift < 0) shift = maxshift;\n            else {\n                // so we don't have to offset each avoided element,\n                // give the title the opposite offset\n                var offsetLeft = avoid.offsetLeft || 0;\n                var offsetTop = avoid.offsetTop || 0;\n                titlebb.left -= offsetLeft;\n                titlebb.right -= offsetLeft;\n                titlebb.top -= offsetTop;\n                titlebb.bottom -= offsetTop;\n\n                // iterate over a set of elements (avoid.selection)\n                // to avoid collisions with\n                avoid.selection.each(function() {\n                    var avoidbb = Drawing.bBox(this);\n\n                    if(Lib.bBoxIntersect(titlebb, avoidbb, pad)) {\n                        shift = Math.max(shift, shiftSign * (\n                            avoidbb[avoid.side] - titlebb[backside]) + pad);\n                    }\n                });\n                shift = Math.min(maxshift, shift);\n            }\n            if(shift > 0 || maxshift < 0) {\n                var shiftTemplate = {\n                    left: [-shift, 0],\n                    right: [shift, 0],\n                    top: [0, -shift],\n                    bottom: [0, shift]\n                }[avoid.side];\n                titleGroup.attr('transform',\n                    'translate(' + shiftTemplate + ')');\n            }\n        }\n    }\n\n    el.call(titleLayout);\n\n    function setPlaceholder() {\n        opacity = 0;\n        isplaceholder = true;\n        el.text(placeholder)\n            .on('mouseover.opacity', function() {\n                d3.select(this).transition()\n                    .duration(interactConstants.SHOW_PLACEHOLDER).style('opacity', 1);\n            })\n            .on('mouseout.opacity', function() {\n                d3.select(this).transition()\n                    .duration(interactConstants.HIDE_PLACEHOLDER).style('opacity', 0);\n            });\n    }\n\n    if(editable) {\n        if(!txt) setPlaceholder();\n        else el.on('.opacity', null);\n\n        el.call(svgTextUtils.makeEditable, {gd: gd})\n            .on('edit', function(text) {\n                if(traceIndex !== undefined) {\n                    Registry.call('_guiRestyle', gd, prop, text, traceIndex);\n                } else {\n                    Registry.call('_guiRelayout', gd, prop, text);\n                }\n            })\n            .on('cancel', function() {\n                this.text(this.attr('data-unformatted'))\n                    .call(titleLayout);\n            })\n            .on('input', function(d) {\n                this.text(d || ' ')\n                    .call(svgTextUtils.positionText, attributes.x, attributes.y);\n            });\n    }\n    el.classed('js-placeholder', isplaceholder);\n\n    return group;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
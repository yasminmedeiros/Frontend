{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nmodule.exports = function orientText(trace, xaxis, yaxis, xy, dxy, refDxy) {\n  var dx = dxy[0] * trace.dpdx(xaxis);\n  var dy = dxy[1] * trace.dpdy(yaxis);\n  var flip = 1;\n  var offsetMultiplier = 1.0;\n  if (refDxy) {\n    var l1 = Math.sqrt(dxy[0] * dxy[0] + dxy[1] * dxy[1]);\n    var l2 = Math.sqrt(refDxy[0] * refDxy[0] + refDxy[1] * refDxy[1]);\n    var dot = (dxy[0] * refDxy[0] + dxy[1] * refDxy[1]) / l1 / l2;\n    offsetMultiplier = Math.max(0.0, dot);\n  }\n  var angle = Math.atan2(dy, dx) * 180 / Math.PI;\n  if (angle < -90) {\n    angle += 180;\n    flip = -flip;\n  } else if (angle > 90) {\n    angle -= 180;\n    flip = -flip;\n  }\n  return {\n    angle: angle,\n    flip: flip,\n    p: trace.c2p(xy, xaxis, yaxis),\n    offsetMultplier: offsetMultiplier\n  };\n};","map":{"version":3,"names":["module","exports","orientText","trace","xaxis","yaxis","xy","dxy","refDxy","dx","dpdx","dy","dpdy","flip","offsetMultiplier","l1","Math","sqrt","l2","dot","max","angle","atan2","PI","p","c2p","offsetMultplier"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/carpet/orient_text.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nmodule.exports = function orientText(trace, xaxis, yaxis, xy, dxy, refDxy) {\n    var dx = dxy[0] * trace.dpdx(xaxis);\n    var dy = dxy[1] * trace.dpdy(yaxis);\n    var flip = 1;\n\n    var offsetMultiplier = 1.0;\n    if(refDxy) {\n        var l1 = Math.sqrt(dxy[0] * dxy[0] + dxy[1] * dxy[1]);\n        var l2 = Math.sqrt(refDxy[0] * refDxy[0] + refDxy[1] * refDxy[1]);\n        var dot = (dxy[0] * refDxy[0] + dxy[1] * refDxy[1]) / l1 / l2;\n        offsetMultiplier = Math.max(0.0, dot);\n    }\n\n    var angle = Math.atan2(dy, dx) * 180 / Math.PI;\n    if(angle < -90) {\n        angle += 180;\n        flip = -flip;\n    } else if(angle > 90) {\n        angle -= 180;\n        flip = -flip;\n    }\n\n    return {\n        angle: angle,\n        flip: flip,\n        p: trace.c2p(xy, xaxis, yaxis),\n        offsetMultplier: offsetMultiplier\n    };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZA,MAAM,CAACC,OAAO,GAAG,SAASC,UAAU,CAACC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,EAAE,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACvE,IAAIC,EAAE,GAAGF,GAAG,CAAC,CAAC,CAAC,GAAGJ,KAAK,CAACO,IAAI,CAACN,KAAK,CAAC;EACnC,IAAIO,EAAE,GAAGJ,GAAG,CAAC,CAAC,CAAC,GAAGJ,KAAK,CAACS,IAAI,CAACP,KAAK,CAAC;EACnC,IAAIQ,IAAI,GAAG,CAAC;EAEZ,IAAIC,gBAAgB,GAAG,GAAG;EAC1B,IAAGN,MAAM,EAAE;IACP,IAAIO,EAAE,GAAGC,IAAI,CAACC,IAAI,CAACV,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,IAAIW,EAAE,GAAGF,IAAI,CAACC,IAAI,CAACT,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,CAAC;IACjE,IAAIW,GAAG,GAAG,CAACZ,GAAG,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC,GAAGD,GAAG,CAAC,CAAC,CAAC,GAAGC,MAAM,CAAC,CAAC,CAAC,IAAIO,EAAE,GAAGG,EAAE;IAC7DJ,gBAAgB,GAAGE,IAAI,CAACI,GAAG,CAAC,GAAG,EAAED,GAAG,CAAC;EACzC;EAEA,IAAIE,KAAK,GAAGL,IAAI,CAACM,KAAK,CAACX,EAAE,EAAEF,EAAE,CAAC,GAAG,GAAG,GAAGO,IAAI,CAACO,EAAE;EAC9C,IAAGF,KAAK,GAAG,CAAC,EAAE,EAAE;IACZA,KAAK,IAAI,GAAG;IACZR,IAAI,GAAG,CAACA,IAAI;EAChB,CAAC,MAAM,IAAGQ,KAAK,GAAG,EAAE,EAAE;IAClBA,KAAK,IAAI,GAAG;IACZR,IAAI,GAAG,CAACA,IAAI;EAChB;EAEA,OAAO;IACHQ,KAAK,EAAEA,KAAK;IACZR,IAAI,EAAEA,IAAI;IACVW,CAAC,EAAErB,KAAK,CAACsB,GAAG,CAACnB,EAAE,EAAEF,KAAK,EAAEC,KAAK,CAAC;IAC9BqB,eAAe,EAAEZ;EACrB,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
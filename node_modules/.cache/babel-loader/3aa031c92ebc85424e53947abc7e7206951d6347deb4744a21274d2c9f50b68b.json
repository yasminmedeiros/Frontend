{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar geoJsonUtils = require('../../lib/geojson_utils');\nvar Colorscale = require('../../components/colorscale');\nvar Drawing = require('../../components/drawing');\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar subTypes = require('../scatter/subtypes');\nvar convertTextOpts = require('../../plots/mapbox/convert_text_opts');\nmodule.exports = function convert(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var isVisible = trace.visible === true;\n  var hasFill = trace.fill !== 'none';\n  var hasLines = subTypes.hasLines(trace);\n  var hasMarkers = subTypes.hasMarkers(trace);\n  var hasText = subTypes.hasText(trace);\n  var hasCircles = hasMarkers && trace.marker.symbol === 'circle';\n  var hasSymbols = hasMarkers && trace.marker.symbol !== 'circle';\n  var fill = initContainer();\n  var line = initContainer();\n  var circle = initContainer();\n  var symbol = initContainer();\n  var opts = {\n    fill: fill,\n    line: line,\n    circle: circle,\n    symbol: symbol\n  };\n\n  // early return if not visible or placeholder\n  if (!isVisible) return opts;\n\n  // fill layer and line layer use the same coords\n  var lineCoords;\n  if (hasFill || hasLines) {\n    lineCoords = geoJsonUtils.calcTraceToLineCoords(calcTrace);\n  }\n  if (hasFill) {\n    fill.geojson = geoJsonUtils.makePolygon(lineCoords);\n    fill.layout.visibility = 'visible';\n    Lib.extendFlat(fill.paint, {\n      'fill-color': trace.fillcolor\n    });\n  }\n  if (hasLines) {\n    line.geojson = geoJsonUtils.makeLine(lineCoords);\n    line.layout.visibility = 'visible';\n    Lib.extendFlat(line.paint, {\n      'line-width': trace.line.width,\n      'line-color': trace.line.color,\n      'line-opacity': trace.opacity\n    });\n\n    // TODO convert line.dash into line-dasharray\n  }\n\n  if (hasCircles) {\n    var circleOpts = makeCircleOpts(calcTrace);\n    circle.geojson = circleOpts.geojson;\n    circle.layout.visibility = 'visible';\n    Lib.extendFlat(circle.paint, {\n      'circle-color': circleOpts.mcc,\n      'circle-radius': circleOpts.mrc,\n      'circle-opacity': circleOpts.mo\n    });\n  }\n  if (hasSymbols || hasText) {\n    symbol.geojson = makeSymbolGeoJSON(calcTrace);\n    Lib.extendFlat(symbol.layout, {\n      visibility: 'visible',\n      'icon-image': '{symbol}-15',\n      'text-field': '{text}'\n    });\n    if (hasSymbols) {\n      Lib.extendFlat(symbol.layout, {\n        'icon-size': trace.marker.size / 10\n      });\n      Lib.extendFlat(symbol.paint, {\n        'icon-opacity': trace.opacity * trace.marker.opacity,\n        // TODO does not work ??\n        'icon-color': trace.marker.color\n      });\n    }\n    if (hasText) {\n      var iconSize = (trace.marker || {}).size;\n      var textOpts = convertTextOpts(trace.textposition, iconSize);\n\n      // all data-driven below !!\n\n      Lib.extendFlat(symbol.layout, {\n        'text-size': trace.textfont.size,\n        'text-anchor': textOpts.anchor,\n        'text-offset': textOpts.offset\n\n        // TODO font family\n        // 'text-font': symbol.textfont.family.split(', '),\n      });\n\n      Lib.extendFlat(symbol.paint, {\n        'text-color': trace.textfont.color,\n        'text-opacity': trace.opacity\n      });\n    }\n  }\n  return opts;\n};\nfunction initContainer() {\n  return {\n    geojson: geoJsonUtils.makeBlank(),\n    layout: {\n      visibility: 'none'\n    },\n    paint: {}\n  };\n}\nfunction makeCircleOpts(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var marker = trace.marker;\n  var selectedpoints = trace.selectedpoints;\n  var arrayColor = Lib.isArrayOrTypedArray(marker.color);\n  var arraySize = Lib.isArrayOrTypedArray(marker.size);\n  var arrayOpacity = Lib.isArrayOrTypedArray(marker.opacity);\n  var i;\n  function addTraceOpacity(o) {\n    return trace.opacity * o;\n  }\n  function size2radius(s) {\n    return s / 2;\n  }\n  var colorFn;\n  if (arrayColor) {\n    if (Colorscale.hasColorscale(trace, 'marker')) {\n      colorFn = Colorscale.makeColorScaleFunc(Colorscale.extractScale(marker, {\n        cLetter: 'c'\n      }));\n    } else {\n      colorFn = Lib.identity;\n    }\n  }\n  var sizeFn;\n  if (arraySize) {\n    sizeFn = makeBubbleSizeFn(trace);\n  }\n  var opacityFn;\n  if (arrayOpacity) {\n    opacityFn = function opacityFn(mo) {\n      var mo2 = isNumeric(mo) ? +Lib.constrain(mo, 0, 1) : 0;\n      return addTraceOpacity(mo2);\n    };\n  }\n  var features = [];\n  for (i = 0; i < calcTrace.length; i++) {\n    var calcPt = calcTrace[i];\n    var lonlat = calcPt.lonlat;\n    if (isBADNUM(lonlat)) continue;\n    var props = {};\n    if (colorFn) props.mcc = calcPt.mcc = colorFn(calcPt.mc);\n    if (sizeFn) props.mrc = calcPt.mrc = sizeFn(calcPt.ms);\n    if (opacityFn) props.mo = opacityFn(calcPt.mo);\n    if (selectedpoints) props.selected = calcPt.selected || 0;\n    features.push({\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: lonlat\n      },\n      properties: props\n    });\n  }\n  var fns;\n  if (selectedpoints) {\n    fns = Drawing.makeSelectedPointStyleFns(trace);\n    for (i = 0; i < features.length; i++) {\n      var d = features[i].properties;\n      if (fns.selectedOpacityFn) {\n        d.mo = addTraceOpacity(fns.selectedOpacityFn(d));\n      }\n      if (fns.selectedColorFn) {\n        d.mcc = fns.selectedColorFn(d);\n      }\n      if (fns.selectedSizeFn) {\n        d.mrc = fns.selectedSizeFn(d);\n      }\n    }\n  }\n  return {\n    geojson: {\n      type: 'FeatureCollection',\n      features: features\n    },\n    mcc: arrayColor || fns && fns.selectedColorFn ? {\n      type: 'identity',\n      property: 'mcc'\n    } : marker.color,\n    mrc: arraySize || fns && fns.selectedSizeFn ? {\n      type: 'identity',\n      property: 'mrc'\n    } : size2radius(marker.size),\n    mo: arrayOpacity || fns && fns.selectedOpacityFn ? {\n      type: 'identity',\n      property: 'mo'\n    } : addTraceOpacity(marker.opacity)\n  };\n}\nfunction makeSymbolGeoJSON(calcTrace) {\n  var trace = calcTrace[0].trace;\n  var marker = trace.marker || {};\n  var symbol = marker.symbol;\n  var text = trace.text;\n  var fillSymbol = symbol !== 'circle' ? getFillFunc(symbol) : blankFillFunc;\n  var fillText = subTypes.hasText(trace) ? getFillFunc(text) : blankFillFunc;\n  var features = [];\n  for (var i = 0; i < calcTrace.length; i++) {\n    var calcPt = calcTrace[i];\n    if (isBADNUM(calcPt.lonlat)) continue;\n    features.push({\n      type: 'Feature',\n      geometry: {\n        type: 'Point',\n        coordinates: calcPt.lonlat\n      },\n      properties: {\n        symbol: fillSymbol(calcPt.mx),\n        text: fillText(calcPt.tx)\n      }\n    });\n  }\n  return {\n    type: 'FeatureCollection',\n    features: features\n  };\n}\nfunction getFillFunc(attr) {\n  if (Lib.isArrayOrTypedArray(attr)) {\n    return function (v) {\n      return v;\n    };\n  } else if (attr) {\n    return function () {\n      return attr;\n    };\n  } else {\n    return blankFillFunc;\n  }\n}\nfunction blankFillFunc() {\n  return '';\n}\n\n// only need to check lon (OR lat)\nfunction isBADNUM(lonlat) {\n  return lonlat[0] === BADNUM;\n}","map":{"version":3,"names":["isNumeric","require","Lib","BADNUM","geoJsonUtils","Colorscale","Drawing","makeBubbleSizeFn","subTypes","convertTextOpts","module","exports","convert","calcTrace","trace","isVisible","visible","hasFill","fill","hasLines","hasMarkers","hasText","hasCircles","marker","symbol","hasSymbols","initContainer","line","circle","opts","lineCoords","calcTraceToLineCoords","geojson","makePolygon","layout","visibility","extendFlat","paint","fillcolor","makeLine","width","color","opacity","circleOpts","makeCircleOpts","mcc","mrc","mo","makeSymbolGeoJSON","size","iconSize","textOpts","textposition","textfont","anchor","offset","makeBlank","selectedpoints","arrayColor","isArrayOrTypedArray","arraySize","arrayOpacity","i","addTraceOpacity","o","size2radius","s","colorFn","hasColorscale","makeColorScaleFunc","extractScale","cLetter","identity","sizeFn","opacityFn","mo2","constrain","features","length","calcPt","lonlat","isBADNUM","props","mc","ms","selected","push","type","geometry","coordinates","properties","fns","makeSelectedPointStyleFns","d","selectedOpacityFn","selectedColorFn","selectedSizeFn","property","text","fillSymbol","getFillFunc","blankFillFunc","fillText","mx","tx","attr","v"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/scattermapbox/convert.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\nvar BADNUM = require('../../constants/numerical').BADNUM;\nvar geoJsonUtils = require('../../lib/geojson_utils');\n\nvar Colorscale = require('../../components/colorscale');\nvar Drawing = require('../../components/drawing');\nvar makeBubbleSizeFn = require('../scatter/make_bubble_size_func');\nvar subTypes = require('../scatter/subtypes');\nvar convertTextOpts = require('../../plots/mapbox/convert_text_opts');\n\nmodule.exports = function convert(calcTrace) {\n    var trace = calcTrace[0].trace;\n\n    var isVisible = (trace.visible === true);\n    var hasFill = (trace.fill !== 'none');\n    var hasLines = subTypes.hasLines(trace);\n    var hasMarkers = subTypes.hasMarkers(trace);\n    var hasText = subTypes.hasText(trace);\n    var hasCircles = (hasMarkers && trace.marker.symbol === 'circle');\n    var hasSymbols = (hasMarkers && trace.marker.symbol !== 'circle');\n\n    var fill = initContainer();\n    var line = initContainer();\n    var circle = initContainer();\n    var symbol = initContainer();\n\n    var opts = {\n        fill: fill,\n        line: line,\n        circle: circle,\n        symbol: symbol\n    };\n\n    // early return if not visible or placeholder\n    if(!isVisible) return opts;\n\n    // fill layer and line layer use the same coords\n    var lineCoords;\n    if(hasFill || hasLines) {\n        lineCoords = geoJsonUtils.calcTraceToLineCoords(calcTrace);\n    }\n\n    if(hasFill) {\n        fill.geojson = geoJsonUtils.makePolygon(lineCoords);\n        fill.layout.visibility = 'visible';\n\n        Lib.extendFlat(fill.paint, {\n            'fill-color': trace.fillcolor\n        });\n    }\n\n    if(hasLines) {\n        line.geojson = geoJsonUtils.makeLine(lineCoords);\n        line.layout.visibility = 'visible';\n\n        Lib.extendFlat(line.paint, {\n            'line-width': trace.line.width,\n            'line-color': trace.line.color,\n            'line-opacity': trace.opacity\n        });\n\n        // TODO convert line.dash into line-dasharray\n    }\n\n    if(hasCircles) {\n        var circleOpts = makeCircleOpts(calcTrace);\n        circle.geojson = circleOpts.geojson;\n        circle.layout.visibility = 'visible';\n\n        Lib.extendFlat(circle.paint, {\n            'circle-color': circleOpts.mcc,\n            'circle-radius': circleOpts.mrc,\n            'circle-opacity': circleOpts.mo\n        });\n    }\n\n    if(hasSymbols || hasText) {\n        symbol.geojson = makeSymbolGeoJSON(calcTrace);\n\n        Lib.extendFlat(symbol.layout, {\n            visibility: 'visible',\n            'icon-image': '{symbol}-15',\n            'text-field': '{text}'\n        });\n\n        if(hasSymbols) {\n            Lib.extendFlat(symbol.layout, {\n                'icon-size': trace.marker.size / 10\n            });\n\n            Lib.extendFlat(symbol.paint, {\n                'icon-opacity': trace.opacity * trace.marker.opacity,\n\n                // TODO does not work ??\n                'icon-color': trace.marker.color\n            });\n        }\n\n        if(hasText) {\n            var iconSize = (trace.marker || {}).size;\n            var textOpts = convertTextOpts(trace.textposition, iconSize);\n\n            // all data-driven below !!\n\n            Lib.extendFlat(symbol.layout, {\n                'text-size': trace.textfont.size,\n                'text-anchor': textOpts.anchor,\n                'text-offset': textOpts.offset\n\n                // TODO font family\n                // 'text-font': symbol.textfont.family.split(', '),\n            });\n\n            Lib.extendFlat(symbol.paint, {\n                'text-color': trace.textfont.color,\n                'text-opacity': trace.opacity\n            });\n        }\n    }\n\n    return opts;\n};\n\nfunction initContainer() {\n    return {\n        geojson: geoJsonUtils.makeBlank(),\n        layout: { visibility: 'none' },\n        paint: {}\n    };\n}\n\nfunction makeCircleOpts(calcTrace) {\n    var trace = calcTrace[0].trace;\n    var marker = trace.marker;\n    var selectedpoints = trace.selectedpoints;\n    var arrayColor = Lib.isArrayOrTypedArray(marker.color);\n    var arraySize = Lib.isArrayOrTypedArray(marker.size);\n    var arrayOpacity = Lib.isArrayOrTypedArray(marker.opacity);\n    var i;\n\n    function addTraceOpacity(o) { return trace.opacity * o; }\n\n    function size2radius(s) { return s / 2; }\n\n    var colorFn;\n    if(arrayColor) {\n        if(Colorscale.hasColorscale(trace, 'marker')) {\n            colorFn = Colorscale.makeColorScaleFunc(\n                 Colorscale.extractScale(marker, {cLetter: 'c'})\n             );\n        } else {\n            colorFn = Lib.identity;\n        }\n    }\n\n    var sizeFn;\n    if(arraySize) {\n        sizeFn = makeBubbleSizeFn(trace);\n    }\n\n    var opacityFn;\n    if(arrayOpacity) {\n        opacityFn = function(mo) {\n            var mo2 = isNumeric(mo) ? +Lib.constrain(mo, 0, 1) : 0;\n            return addTraceOpacity(mo2);\n        };\n    }\n\n    var features = [];\n    for(i = 0; i < calcTrace.length; i++) {\n        var calcPt = calcTrace[i];\n        var lonlat = calcPt.lonlat;\n\n        if(isBADNUM(lonlat)) continue;\n\n        var props = {};\n        if(colorFn) props.mcc = calcPt.mcc = colorFn(calcPt.mc);\n        if(sizeFn) props.mrc = calcPt.mrc = sizeFn(calcPt.ms);\n        if(opacityFn) props.mo = opacityFn(calcPt.mo);\n        if(selectedpoints) props.selected = calcPt.selected || 0;\n\n        features.push({\n            type: 'Feature',\n            geometry: {type: 'Point', coordinates: lonlat},\n            properties: props\n        });\n    }\n\n    var fns;\n    if(selectedpoints) {\n        fns = Drawing.makeSelectedPointStyleFns(trace);\n\n        for(i = 0; i < features.length; i++) {\n            var d = features[i].properties;\n\n            if(fns.selectedOpacityFn) {\n                d.mo = addTraceOpacity(fns.selectedOpacityFn(d));\n            }\n            if(fns.selectedColorFn) {\n                d.mcc = fns.selectedColorFn(d);\n            }\n            if(fns.selectedSizeFn) {\n                d.mrc = fns.selectedSizeFn(d);\n            }\n        }\n    }\n\n    return {\n        geojson: {type: 'FeatureCollection', features: features},\n        mcc: arrayColor || (fns && fns.selectedColorFn) ?\n            {type: 'identity', property: 'mcc'} :\n            marker.color,\n        mrc: arraySize || (fns && fns.selectedSizeFn) ?\n            {type: 'identity', property: 'mrc'} :\n            size2radius(marker.size),\n        mo: arrayOpacity || (fns && fns.selectedOpacityFn) ?\n            {type: 'identity', property: 'mo'} :\n            addTraceOpacity(marker.opacity)\n    };\n}\n\nfunction makeSymbolGeoJSON(calcTrace) {\n    var trace = calcTrace[0].trace;\n\n    var marker = trace.marker || {};\n    var symbol = marker.symbol;\n    var text = trace.text;\n\n    var fillSymbol = (symbol !== 'circle') ?\n        getFillFunc(symbol) :\n        blankFillFunc;\n\n    var fillText = subTypes.hasText(trace) ?\n        getFillFunc(text) :\n        blankFillFunc;\n\n    var features = [];\n\n    for(var i = 0; i < calcTrace.length; i++) {\n        var calcPt = calcTrace[i];\n\n        if(isBADNUM(calcPt.lonlat)) continue;\n\n        features.push({\n            type: 'Feature',\n            geometry: {\n                type: 'Point',\n                coordinates: calcPt.lonlat\n            },\n            properties: {\n                symbol: fillSymbol(calcPt.mx),\n                text: fillText(calcPt.tx)\n            }\n        });\n    }\n\n    return {\n        type: 'FeatureCollection',\n        features: features\n    };\n}\n\nfunction getFillFunc(attr) {\n    if(Lib.isArrayOrTypedArray(attr)) {\n        return function(v) { return v; };\n    }\n    else if(attr) {\n        return function() { return attr; };\n    }\n    else {\n        return blankFillFunc;\n    }\n}\n\nfunction blankFillFunc() { return ''; }\n\n// only need to check lon (OR lat)\nfunction isBADNUM(lonlat) {\n    return lonlat[0] === BADNUM;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
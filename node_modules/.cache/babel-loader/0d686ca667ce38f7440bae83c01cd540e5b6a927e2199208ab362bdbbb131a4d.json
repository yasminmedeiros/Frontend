{"ast":null,"code":"var π = Math.PI;\nvar _120 = radians(120);\nmodule.exports = normalize;\n\n/**\n * describe `path` in terms of cubic bézier \n * curves and move commands\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction normalize(path) {\n  // init state\n  var prev;\n  var result = [];\n  var bezierX = 0;\n  var bezierY = 0;\n  var startX = 0;\n  var startY = 0;\n  var quadX = null;\n  var quadY = null;\n  var x = 0;\n  var y = 0;\n  for (var i = 0, len = path.length; i < len; i++) {\n    var seg = path[i];\n    var command = seg[0];\n    switch (command) {\n      case 'M':\n        startX = seg[1];\n        startY = seg[2];\n        break;\n      case 'A':\n        seg = arc(x, y, seg[1], seg[2], radians(seg[3]), seg[4], seg[5], seg[6], seg[7]);\n        // split multi part\n        seg.unshift('C');\n        if (seg.length > 7) {\n          result.push(seg.splice(0, 7));\n          seg.unshift('C');\n        }\n        break;\n      case 'S':\n        // default control point\n        var cx = x;\n        var cy = y;\n        if (prev == 'C' || prev == 'S') {\n          cx += cx - bezierX; // reflect the previous command's control\n          cy += cy - bezierY; // point relative to the current point\n        }\n\n        seg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]];\n        break;\n      case 'T':\n        if (prev == 'Q' || prev == 'T') {\n          quadX = x * 2 - quadX; // as with 'S' reflect previous control point\n          quadY = y * 2 - quadY;\n        } else {\n          quadX = x;\n          quadY = y;\n        }\n        seg = quadratic(x, y, quadX, quadY, seg[1], seg[2]);\n        break;\n      case 'Q':\n        quadX = seg[1];\n        quadY = seg[2];\n        seg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4]);\n        break;\n      case 'L':\n        seg = line(x, y, seg[1], seg[2]);\n        break;\n      case 'H':\n        seg = line(x, y, seg[1], y);\n        break;\n      case 'V':\n        seg = line(x, y, x, seg[1]);\n        break;\n      case 'Z':\n        seg = line(x, y, startX, startY);\n        break;\n    }\n\n    // update state\n    prev = command;\n    x = seg[seg.length - 2];\n    y = seg[seg.length - 1];\n    if (seg.length > 4) {\n      bezierX = seg[seg.length - 4];\n      bezierY = seg[seg.length - 3];\n    } else {\n      bezierX = x;\n      bezierY = y;\n    }\n    result.push(seg);\n  }\n  return result;\n}\nfunction line(x1, y1, x2, y2) {\n  return ['C', x1, y1, x2, y2, x2, y2];\n}\nfunction quadratic(x1, y1, cx, cy, x2, y2) {\n  return ['C', x1 / 3 + 2 / 3 * cx, y1 / 3 + 2 / 3 * cy, x2 / 3 + 2 / 3 * cx, y2 / 3 + 2 / 3 * cy, x2, y2];\n}\n\n// This function is ripped from \n// github.com/DmitryBaranovskiy/raphael/blob/4d97d4/raphael.js#L2216-L2304 \n// which references w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n// TODO: make it human readable\n\nfunction arc(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  if (!recursive) {\n    var xy = rotate(x1, y1, -angle);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -angle);\n    x2 = xy.x;\n    y2 = xy.y;\n    var x = (x1 - x2) / 2;\n    var y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n    if (h > 1) {\n      h = Math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    var rx2 = rx * rx;\n    var ry2 = ry * ry;\n    var k = (large_arc_flag == sweep_flag ? -1 : 1) * Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)));\n    if (k == Infinity) k = 1; // neutralize\n    var cx = k * rx * y / ry + (x1 + x2) / 2;\n    var cy = k * -ry * x / rx + (y1 + y2) / 2;\n    var f1 = Math.asin(((y1 - cy) / ry).toFixed(9));\n    var f2 = Math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? π - f1 : f1;\n    f2 = x2 < cx ? π - f2 : f2;\n    if (f1 < 0) f1 = π * 2 + f1;\n    if (f2 < 0) f2 = π * 2 + f2;\n    if (sweep_flag && f1 > f2) f1 = f1 - π * 2;\n    if (!sweep_flag && f2 > f1) f2 = f2 - π * 2;\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  // greater than 120 degrees requires multiple segments\n  if (Math.abs(f2 - f1) > _120) {\n    var f2old = f2;\n    var x2old = x2;\n    var y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * Math.cos(f2);\n    y2 = cy + ry * Math.sin(f2);\n    var res = arc(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n  var t = Math.tan((f2 - f1) / 4);\n  var hx = 4 / 3 * rx * t;\n  var hy = 4 / 3 * ry * t;\n  var curve = [2 * x1 - (x1 + hx * Math.sin(f1)), 2 * y1 - (y1 - hy * Math.cos(f1)), x2 + hx * Math.sin(f2), y2 - hy * Math.cos(f2), x2, y2];\n  if (recursive) return curve;\n  if (res) curve = curve.concat(res);\n  for (var i = 0; i < curve.length;) {\n    var rot = rotate(curve[i], curve[i + 1], angle);\n    curve[i++] = rot.x;\n    curve[i++] = rot.y;\n  }\n  return curve;\n}\nfunction rotate(x, y, rad) {\n  return {\n    x: x * Math.cos(rad) - y * Math.sin(rad),\n    y: x * Math.sin(rad) + y * Math.cos(rad)\n  };\n}\nfunction radians(degress) {\n  return degress * (π / 180);\n}","map":{"version":3,"names":["π","Math","PI","_120","radians","module","exports","normalize","path","prev","result","bezierX","bezierY","startX","startY","quadX","quadY","x","y","i","len","length","seg","command","arc","unshift","push","splice","cx","cy","quadratic","line","x1","y1","x2","y2","rx","ry","angle","large_arc_flag","sweep_flag","recursive","xy","rotate","h","sqrt","rx2","ry2","k","abs","Infinity","f1","asin","toFixed","f2","f2old","x2old","y2old","cos","sin","res","t","tan","hx","hy","curve","concat","rot","rad","degress"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/normalize-svg-path/index.js"],"sourcesContent":["\nvar π = Math.PI\nvar _120 = radians(120)\n\nmodule.exports = normalize\n\n/**\n * describe `path` in terms of cubic bézier \n * curves and move commands\n *\n * @param {Array} path\n * @return {Array}\n */\n\nfunction normalize(path){\n\t// init state\n\tvar prev\n\tvar result = []\n\tvar bezierX = 0\n\tvar bezierY = 0\n\tvar startX = 0\n\tvar startY = 0\n\tvar quadX = null\n\tvar quadY = null\n\tvar x = 0\n\tvar y = 0\n\n\tfor (var i = 0, len = path.length; i < len; i++) {\n\t\tvar seg = path[i]\n\t\tvar command = seg[0]\n\t\tswitch (command) {\n\t\t\tcase 'M':\n\t\t\t\tstartX = seg[1]\n\t\t\t\tstartY = seg[2]\n\t\t\t\tbreak\n\t\t\tcase 'A':\n\t\t\t\tseg = arc(x, y,seg[1],seg[2],radians(seg[3]),seg[4],seg[5],seg[6],seg[7])\n\t\t\t\t// split multi part\n\t\t\t\tseg.unshift('C')\n\t\t\t\tif (seg.length > 7) {\n\t\t\t\t\tresult.push(seg.splice(0, 7))\n\t\t\t\t\tseg.unshift('C')\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\tcase 'S':\n\t\t\t\t// default control point\n\t\t\t\tvar cx = x\n\t\t\t\tvar cy = y\n\t\t\t\tif (prev == 'C' || prev == 'S') {\n\t\t\t\t\tcx += cx - bezierX // reflect the previous command's control\n\t\t\t\t\tcy += cy - bezierY // point relative to the current point\n\t\t\t\t}\n\t\t\t\tseg = ['C', cx, cy, seg[1], seg[2], seg[3], seg[4]]\n\t\t\t\tbreak\n\t\t\tcase 'T':\n\t\t\t\tif (prev == 'Q' || prev == 'T') {\n\t\t\t\t\tquadX = x * 2 - quadX // as with 'S' reflect previous control point\n\t\t\t\t\tquadY = y * 2 - quadY\n\t\t\t\t} else {\n\t\t\t\t\tquadX = x\n\t\t\t\t\tquadY = y\n\t\t\t\t}\n\t\t\t\tseg = quadratic(x, y, quadX, quadY, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'Q':\n\t\t\t\tquadX = seg[1]\n\t\t\t\tquadY = seg[2]\n\t\t\t\tseg = quadratic(x, y, seg[1], seg[2], seg[3], seg[4])\n\t\t\t\tbreak\n\t\t\tcase 'L':\n\t\t\t\tseg = line(x, y, seg[1], seg[2])\n\t\t\t\tbreak\n\t\t\tcase 'H':\n\t\t\t\tseg = line(x, y, seg[1], y)\n\t\t\t\tbreak\n\t\t\tcase 'V':\n\t\t\t\tseg = line(x, y, x, seg[1])\n\t\t\t\tbreak\n\t\t\tcase 'Z':\n\t\t\t\tseg = line(x, y, startX, startY)\n\t\t\t\tbreak\n\t\t}\n\n\t\t// update state\n\t\tprev = command\n\t\tx = seg[seg.length - 2]\n\t\ty = seg[seg.length - 1]\n\t\tif (seg.length > 4) {\n\t\t\tbezierX = seg[seg.length - 4]\n\t\t\tbezierY = seg[seg.length - 3]\n\t\t} else {\n\t\t\tbezierX = x\n\t\t\tbezierY = y\n\t\t}\n\t\tresult.push(seg)\n\t}\n\n\treturn result\n}\n\nfunction line(x1, y1, x2, y2){\n\treturn ['C', x1, y1, x2, y2, x2, y2]\n}\n\nfunction quadratic(x1, y1, cx, cy, x2, y2){\n\treturn [\n\t\t'C',\n\t\tx1/3 + (2/3) * cx,\n\t\ty1/3 + (2/3) * cy,\n\t\tx2/3 + (2/3) * cx,\n\t\ty2/3 + (2/3) * cy,\n\t\tx2,\n\t\ty2\n\t]\n}\n\n// This function is ripped from \n// github.com/DmitryBaranovskiy/raphael/blob/4d97d4/raphael.js#L2216-L2304 \n// which references w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n// TODO: make it human readable\n\nfunction arc(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n\tif (!recursive) {\n\t\tvar xy = rotate(x1, y1, -angle)\n\t\tx1 = xy.x\n\t\ty1 = xy.y\n\t\txy = rotate(x2, y2, -angle)\n\t\tx2 = xy.x\n\t\ty2 = xy.y\n\t\tvar x = (x1 - x2) / 2\n\t\tvar y = (y1 - y2) / 2\n\t\tvar h = (x * x) / (rx * rx) + (y * y) / (ry * ry)\n\t\tif (h > 1) {\n\t\t\th = Math.sqrt(h)\n\t\t\trx = h * rx\n\t\t\try = h * ry\n\t\t}\n\t\tvar rx2 = rx * rx\n\t\tvar ry2 = ry * ry\n\t\tvar k = (large_arc_flag == sweep_flag ? -1 : 1)\n\t\t\t* Math.sqrt(Math.abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x)))\n\t\tif (k == Infinity) k = 1 // neutralize\n\t\tvar cx = k * rx * y / ry + (x1 + x2) / 2\n\t\tvar cy = k * -ry * x / rx + (y1 + y2) / 2\n\t\tvar f1 = Math.asin(((y1 - cy) / ry).toFixed(9))\n\t\tvar f2 = Math.asin(((y2 - cy) / ry).toFixed(9))\n\n\t\tf1 = x1 < cx ? π - f1 : f1\n\t\tf2 = x2 < cx ? π - f2 : f2\n\t\tif (f1 < 0) f1 = π * 2 + f1\n\t\tif (f2 < 0) f2 = π * 2 + f2\n\t\tif (sweep_flag && f1 > f2) f1 = f1 - π * 2\n\t\tif (!sweep_flag && f2 > f1) f2 = f2 - π * 2\n\t} else {\n\t\tf1 = recursive[0]\n\t\tf2 = recursive[1]\n\t\tcx = recursive[2]\n\t\tcy = recursive[3]\n\t}\n\t// greater than 120 degrees requires multiple segments\n\tif (Math.abs(f2 - f1) > _120) {\n\t\tvar f2old = f2\n\t\tvar x2old = x2\n\t\tvar y2old = y2\n\t\tf2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1)\n\t\tx2 = cx + rx * Math.cos(f2)\n\t\ty2 = cy + ry * Math.sin(f2)\n\t\tvar res = arc(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy])\n\t}\n\tvar t = Math.tan((f2 - f1) / 4)\n\tvar hx = 4 / 3 * rx * t\n\tvar hy = 4 / 3 * ry * t\n\tvar curve = [\n\t\t2 * x1 - (x1 + hx * Math.sin(f1)),\n\t\t2 * y1 - (y1 - hy * Math.cos(f1)),\n\t\tx2 + hx * Math.sin(f2),\n\t\ty2 - hy * Math.cos(f2),\n\t\tx2,\n\t\ty2\n\t]\n\tif (recursive) return curve\n\tif (res) curve = curve.concat(res)\n\tfor (var i = 0; i < curve.length;) {\n\t\tvar rot = rotate(curve[i], curve[i+1], angle)\n\t\tcurve[i++] = rot.x\n\t\tcurve[i++] = rot.y\n\t}\n\treturn curve\n}\n\nfunction rotate(x, y, rad){\n\treturn {\n\t\tx: x * Math.cos(rad) - y * Math.sin(rad),\n\t\ty: x * Math.sin(rad) + y * Math.cos(rad)\n\t}\n}\n\nfunction radians(degress){\n\treturn degress * (π / 180)\n}\n"],"mappings":"AACA,IAAIA,CAAC,GAAGC,IAAI,CAACC,EAAE;AACf,IAAIC,IAAI,GAAGC,OAAO,CAAC,GAAG,CAAC;AAEvBC,MAAM,CAACC,OAAO,GAAGC,SAAS;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAS,CAACC,IAAI,EAAC;EACvB;EACA,IAAIC,IAAI;EACR,IAAIC,MAAM,GAAG,EAAE;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,OAAO,GAAG,CAAC;EACf,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,MAAM,GAAG,CAAC;EACd,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,KAAK,GAAG,IAAI;EAChB,IAAIC,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAG,CAAC;EAET,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGZ,IAAI,CAACa,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;IAChD,IAAIG,GAAG,GAAGd,IAAI,CAACW,CAAC,CAAC;IACjB,IAAII,OAAO,GAAGD,GAAG,CAAC,CAAC,CAAC;IACpB,QAAQC,OAAO;MACd,KAAK,GAAG;QACPV,MAAM,GAAGS,GAAG,CAAC,CAAC,CAAC;QACfR,MAAM,GAAGQ,GAAG,CAAC,CAAC,CAAC;QACf;MACD,KAAK,GAAG;QACPA,GAAG,GAAGE,GAAG,CAACP,CAAC,EAAEC,CAAC,EAACI,GAAG,CAAC,CAAC,CAAC,EAACA,GAAG,CAAC,CAAC,CAAC,EAAClB,OAAO,CAACkB,GAAG,CAAC,CAAC,CAAC,CAAC,EAACA,GAAG,CAAC,CAAC,CAAC,EAACA,GAAG,CAAC,CAAC,CAAC,EAACA,GAAG,CAAC,CAAC,CAAC,EAACA,GAAG,CAAC,CAAC,CAAC,CAAC;QACzE;QACAA,GAAG,CAACG,OAAO,CAAC,GAAG,CAAC;QAChB,IAAIH,GAAG,CAACD,MAAM,GAAG,CAAC,EAAE;UACnBX,MAAM,CAACgB,IAAI,CAACJ,GAAG,CAACK,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;UAC7BL,GAAG,CAACG,OAAO,CAAC,GAAG,CAAC;QACjB;QACA;MACD,KAAK,GAAG;QACP;QACA,IAAIG,EAAE,GAAGX,CAAC;QACV,IAAIY,EAAE,GAAGX,CAAC;QACV,IAAIT,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE;UAC/BmB,EAAE,IAAIA,EAAE,GAAGjB,OAAO,EAAC;UACnBkB,EAAE,IAAIA,EAAE,GAAGjB,OAAO,EAAC;QACpB;;QACAU,GAAG,GAAG,CAAC,GAAG,EAAEM,EAAE,EAAEC,EAAE,EAAEP,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;QACnD;MACD,KAAK,GAAG;QACP,IAAIb,IAAI,IAAI,GAAG,IAAIA,IAAI,IAAI,GAAG,EAAE;UAC/BM,KAAK,GAAGE,CAAC,GAAG,CAAC,GAAGF,KAAK,EAAC;UACtBC,KAAK,GAAGE,CAAC,GAAG,CAAC,GAAGF,KAAK;QACtB,CAAC,MAAM;UACND,KAAK,GAAGE,CAAC;UACTD,KAAK,GAAGE,CAAC;QACV;QACAI,GAAG,GAAGQ,SAAS,CAACb,CAAC,EAAEC,CAAC,EAAEH,KAAK,EAAEC,KAAK,EAAEM,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;QACnD;MACD,KAAK,GAAG;QACPP,KAAK,GAAGO,GAAG,CAAC,CAAC,CAAC;QACdN,KAAK,GAAGM,GAAG,CAAC,CAAC,CAAC;QACdA,GAAG,GAAGQ,SAAS,CAACb,CAAC,EAAEC,CAAC,EAAEI,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;QACrD;MACD,KAAK,GAAG;QACPA,GAAG,GAAGS,IAAI,CAACd,CAAC,EAAEC,CAAC,EAAEI,GAAG,CAAC,CAAC,CAAC,EAAEA,GAAG,CAAC,CAAC,CAAC,CAAC;QAChC;MACD,KAAK,GAAG;QACPA,GAAG,GAAGS,IAAI,CAACd,CAAC,EAAEC,CAAC,EAAEI,GAAG,CAAC,CAAC,CAAC,EAAEJ,CAAC,CAAC;QAC3B;MACD,KAAK,GAAG;QACPI,GAAG,GAAGS,IAAI,CAACd,CAAC,EAAEC,CAAC,EAAED,CAAC,EAAEK,GAAG,CAAC,CAAC,CAAC,CAAC;QAC3B;MACD,KAAK,GAAG;QACPA,GAAG,GAAGS,IAAI,CAACd,CAAC,EAAEC,CAAC,EAAEL,MAAM,EAAEC,MAAM,CAAC;QAChC;IAAK;;IAGP;IACAL,IAAI,GAAGc,OAAO;IACdN,CAAC,GAAGK,GAAG,CAACA,GAAG,CAACD,MAAM,GAAG,CAAC,CAAC;IACvBH,CAAC,GAAGI,GAAG,CAACA,GAAG,CAACD,MAAM,GAAG,CAAC,CAAC;IACvB,IAAIC,GAAG,CAACD,MAAM,GAAG,CAAC,EAAE;MACnBV,OAAO,GAAGW,GAAG,CAACA,GAAG,CAACD,MAAM,GAAG,CAAC,CAAC;MAC7BT,OAAO,GAAGU,GAAG,CAACA,GAAG,CAACD,MAAM,GAAG,CAAC,CAAC;IAC9B,CAAC,MAAM;MACNV,OAAO,GAAGM,CAAC;MACXL,OAAO,GAAGM,CAAC;IACZ;IACAR,MAAM,CAACgB,IAAI,CAACJ,GAAG,CAAC;EACjB;EAEA,OAAOZ,MAAM;AACd;AAEA,SAASqB,IAAI,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAC;EAC5B,OAAO,CAAC,GAAG,EAAEH,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAED,EAAE,EAAEC,EAAE,CAAC;AACrC;AAEA,SAASL,SAAS,CAACE,EAAE,EAAEC,EAAE,EAAEL,EAAE,EAAEC,EAAE,EAAEK,EAAE,EAAEC,EAAE,EAAC;EACzC,OAAO,CACN,GAAG,EACHH,EAAE,GAAC,CAAC,GAAI,CAAC,GAAC,CAAC,GAAIJ,EAAE,EACjBK,EAAE,GAAC,CAAC,GAAI,CAAC,GAAC,CAAC,GAAIJ,EAAE,EACjBK,EAAE,GAAC,CAAC,GAAI,CAAC,GAAC,CAAC,GAAIN,EAAE,EACjBO,EAAE,GAAC,CAAC,GAAI,CAAC,GAAC,CAAC,GAAIN,EAAE,EACjBK,EAAE,EACFC,EAAE,CACF;AACF;;AAEA;AACA;AACA;AACA;;AAEA,SAASX,GAAG,CAACQ,EAAE,EAAEC,EAAE,EAAEG,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAEC,cAAc,EAAEC,UAAU,EAAEN,EAAE,EAAEC,EAAE,EAAEM,SAAS,EAAE;EAClF,IAAI,CAACA,SAAS,EAAE;IACf,IAAIC,EAAE,GAAGC,MAAM,CAACX,EAAE,EAAEC,EAAE,EAAE,CAACK,KAAK,CAAC;IAC/BN,EAAE,GAAGU,EAAE,CAACzB,CAAC;IACTgB,EAAE,GAAGS,EAAE,CAACxB,CAAC;IACTwB,EAAE,GAAGC,MAAM,CAACT,EAAE,EAAEC,EAAE,EAAE,CAACG,KAAK,CAAC;IAC3BJ,EAAE,GAAGQ,EAAE,CAACzB,CAAC;IACTkB,EAAE,GAAGO,EAAE,CAACxB,CAAC;IACT,IAAID,CAAC,GAAG,CAACe,EAAE,GAAGE,EAAE,IAAI,CAAC;IACrB,IAAIhB,CAAC,GAAG,CAACe,EAAE,GAAGE,EAAE,IAAI,CAAC;IACrB,IAAIS,CAAC,GAAI3B,CAAC,GAAGA,CAAC,IAAKmB,EAAE,GAAGA,EAAE,CAAC,GAAIlB,CAAC,GAAGA,CAAC,IAAKmB,EAAE,GAAGA,EAAE,CAAC;IACjD,IAAIO,CAAC,GAAG,CAAC,EAAE;MACVA,CAAC,GAAG3C,IAAI,CAAC4C,IAAI,CAACD,CAAC,CAAC;MAChBR,EAAE,GAAGQ,CAAC,GAAGR,EAAE;MACXC,EAAE,GAAGO,CAAC,GAAGP,EAAE;IACZ;IACA,IAAIS,GAAG,GAAGV,EAAE,GAAGA,EAAE;IACjB,IAAIW,GAAG,GAAGV,EAAE,GAAGA,EAAE;IACjB,IAAIW,CAAC,GAAG,CAACT,cAAc,IAAIC,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,IAC3CvC,IAAI,CAAC4C,IAAI,CAAC5C,IAAI,CAACgD,GAAG,CAAC,CAACH,GAAG,GAAGC,GAAG,GAAGD,GAAG,GAAG5B,CAAC,GAAGA,CAAC,GAAG6B,GAAG,GAAG9B,CAAC,GAAGA,CAAC,KAAK6B,GAAG,GAAG5B,CAAC,GAAGA,CAAC,GAAG6B,GAAG,GAAG9B,CAAC,GAAGA,CAAC,CAAC,CAAC,CAAC;IAC7F,IAAI+B,CAAC,IAAIE,QAAQ,EAAEF,CAAC,GAAG,CAAC,EAAC;IACzB,IAAIpB,EAAE,GAAGoB,CAAC,GAAGZ,EAAE,GAAGlB,CAAC,GAAGmB,EAAE,GAAG,CAACL,EAAE,GAAGE,EAAE,IAAI,CAAC;IACxC,IAAIL,EAAE,GAAGmB,CAAC,GAAG,CAACX,EAAE,GAAGpB,CAAC,GAAGmB,EAAE,GAAG,CAACH,EAAE,GAAGE,EAAE,IAAI,CAAC;IACzC,IAAIgB,EAAE,GAAGlD,IAAI,CAACmD,IAAI,CAAC,CAAC,CAACnB,EAAE,GAAGJ,EAAE,IAAIQ,EAAE,EAAEgB,OAAO,CAAC,CAAC,CAAC,CAAC;IAC/C,IAAIC,EAAE,GAAGrD,IAAI,CAACmD,IAAI,CAAC,CAAC,CAACjB,EAAE,GAAGN,EAAE,IAAIQ,EAAE,EAAEgB,OAAO,CAAC,CAAC,CAAC,CAAC;IAE/CF,EAAE,GAAGnB,EAAE,GAAGJ,EAAE,GAAG5B,CAAC,GAAGmD,EAAE,GAAGA,EAAE;IAC1BG,EAAE,GAAGpB,EAAE,GAAGN,EAAE,GAAG5B,CAAC,GAAGsD,EAAE,GAAGA,EAAE;IAC1B,IAAIH,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGnD,CAAC,GAAG,CAAC,GAAGmD,EAAE;IAC3B,IAAIG,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGtD,CAAC,GAAG,CAAC,GAAGsD,EAAE;IAC3B,IAAId,UAAU,IAAIW,EAAE,GAAGG,EAAE,EAAEH,EAAE,GAAGA,EAAE,GAAGnD,CAAC,GAAG,CAAC;IAC1C,IAAI,CAACwC,UAAU,IAAIc,EAAE,GAAGH,EAAE,EAAEG,EAAE,GAAGA,EAAE,GAAGtD,CAAC,GAAG,CAAC;EAC5C,CAAC,MAAM;IACNmD,EAAE,GAAGV,SAAS,CAAC,CAAC,CAAC;IACjBa,EAAE,GAAGb,SAAS,CAAC,CAAC,CAAC;IACjBb,EAAE,GAAGa,SAAS,CAAC,CAAC,CAAC;IACjBZ,EAAE,GAAGY,SAAS,CAAC,CAAC,CAAC;EAClB;EACA;EACA,IAAIxC,IAAI,CAACgD,GAAG,CAACK,EAAE,GAAGH,EAAE,CAAC,GAAGhD,IAAI,EAAE;IAC7B,IAAIoD,KAAK,GAAGD,EAAE;IACd,IAAIE,KAAK,GAAGtB,EAAE;IACd,IAAIuB,KAAK,GAAGtB,EAAE;IACdmB,EAAE,GAAGH,EAAE,GAAGhD,IAAI,IAAIqC,UAAU,IAAIc,EAAE,GAAGH,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACjDjB,EAAE,GAAGN,EAAE,GAAGQ,EAAE,GAAGnC,IAAI,CAACyD,GAAG,CAACJ,EAAE,CAAC;IAC3BnB,EAAE,GAAGN,EAAE,GAAGQ,EAAE,GAAGpC,IAAI,CAAC0D,GAAG,CAACL,EAAE,CAAC;IAC3B,IAAIM,GAAG,GAAGpC,GAAG,CAACU,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,KAAK,EAAE,CAAC,EAAEE,UAAU,EAAEgB,KAAK,EAAEC,KAAK,EAAE,CAACH,EAAE,EAAEC,KAAK,EAAE3B,EAAE,EAAEC,EAAE,CAAC,CAAC;EACvF;EACA,IAAIgC,CAAC,GAAG5D,IAAI,CAAC6D,GAAG,CAAC,CAACR,EAAE,GAAGH,EAAE,IAAI,CAAC,CAAC;EAC/B,IAAIY,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG3B,EAAE,GAAGyB,CAAC;EACvB,IAAIG,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG3B,EAAE,GAAGwB,CAAC;EACvB,IAAII,KAAK,GAAG,CACX,CAAC,GAAGjC,EAAE,IAAIA,EAAE,GAAG+B,EAAE,GAAG9D,IAAI,CAAC0D,GAAG,CAACR,EAAE,CAAC,CAAC,EACjC,CAAC,GAAGlB,EAAE,IAAIA,EAAE,GAAG+B,EAAE,GAAG/D,IAAI,CAACyD,GAAG,CAACP,EAAE,CAAC,CAAC,EACjCjB,EAAE,GAAG6B,EAAE,GAAG9D,IAAI,CAAC0D,GAAG,CAACL,EAAE,CAAC,EACtBnB,EAAE,GAAG6B,EAAE,GAAG/D,IAAI,CAACyD,GAAG,CAACJ,EAAE,CAAC,EACtBpB,EAAE,EACFC,EAAE,CACF;EACD,IAAIM,SAAS,EAAE,OAAOwB,KAAK;EAC3B,IAAIL,GAAG,EAAEK,KAAK,GAAGA,KAAK,CAACC,MAAM,CAACN,GAAG,CAAC;EAClC,KAAK,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG8C,KAAK,CAAC5C,MAAM,GAAG;IAClC,IAAI8C,GAAG,GAAGxB,MAAM,CAACsB,KAAK,CAAC9C,CAAC,CAAC,EAAE8C,KAAK,CAAC9C,CAAC,GAAC,CAAC,CAAC,EAAEmB,KAAK,CAAC;IAC7C2B,KAAK,CAAC9C,CAAC,EAAE,CAAC,GAAGgD,GAAG,CAAClD,CAAC;IAClBgD,KAAK,CAAC9C,CAAC,EAAE,CAAC,GAAGgD,GAAG,CAACjD,CAAC;EACnB;EACA,OAAO+C,KAAK;AACb;AAEA,SAAStB,MAAM,CAAC1B,CAAC,EAAEC,CAAC,EAAEkD,GAAG,EAAC;EACzB,OAAO;IACNnD,CAAC,EAAEA,CAAC,GAAGhB,IAAI,CAACyD,GAAG,CAACU,GAAG,CAAC,GAAGlD,CAAC,GAAGjB,IAAI,CAAC0D,GAAG,CAACS,GAAG,CAAC;IACxClD,CAAC,EAAED,CAAC,GAAGhB,IAAI,CAAC0D,GAAG,CAACS,GAAG,CAAC,GAAGlD,CAAC,GAAGjB,IAAI,CAACyD,GAAG,CAACU,GAAG;EACxC,CAAC;AACF;AAEA,SAAShE,OAAO,CAACiE,OAAO,EAAC;EACxB,OAAOA,OAAO,IAAIrE,CAAC,GAAG,GAAG,CAAC;AAC3B"},"metadata":{},"sourceType":"script","externalDependencies":[]}
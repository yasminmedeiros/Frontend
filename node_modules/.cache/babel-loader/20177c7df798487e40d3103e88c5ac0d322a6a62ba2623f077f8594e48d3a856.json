{"ast":null,"code":"module.exports = forEach;\nvar vec = require('./create')();\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n  var i, l;\n  if (!stride) {\n    stride = 3;\n  }\n  if (!offset) {\n    offset = 0;\n  }\n  if (count) {\n    l = Math.min(count * stride + offset, a.length);\n  } else {\n    l = a.length;\n  }\n  for (i = offset; i < l; i += stride) {\n    vec[0] = a[i];\n    vec[1] = a[i + 1];\n    vec[2] = a[i + 2];\n    fn(vec, vec, arg);\n    a[i] = vec[0];\n    a[i + 1] = vec[1];\n    a[i + 2] = vec[2];\n  }\n  return a;\n}","map":{"version":3,"names":["module","exports","forEach","vec","require","a","stride","offset","count","fn","arg","i","l","Math","min","length"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-vec3/forEach.js"],"sourcesContent":["module.exports = forEach;\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n        var i, l\n        if(!stride) {\n            stride = 3\n        }\n\n        if(!offset) {\n            offset = 0\n        }\n        \n        if(count) {\n            l = Math.min((count * stride) + offset, a.length)\n        } else {\n            l = a.length\n        }\n\n        for(i = offset; i < l; i += stride) {\n            vec[0] = a[i] \n            vec[1] = a[i+1] \n            vec[2] = a[i+2]\n            fn(vec, vec, arg)\n            a[i] = vec[0] \n            a[i+1] = vec[1] \n            a[i+2] = vec[2]\n        }\n        \n        return a\n}"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,OAAO;AAExB,IAAIC,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC,EAAE;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,OAAO,CAACG,CAAC,EAAEC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,EAAE,EAAEC,GAAG,EAAE;EAC5C,IAAIC,CAAC,EAAEC,CAAC;EACR,IAAG,CAACN,MAAM,EAAE;IACRA,MAAM,GAAG,CAAC;EACd;EAEA,IAAG,CAACC,MAAM,EAAE;IACRA,MAAM,GAAG,CAAC;EACd;EAEA,IAAGC,KAAK,EAAE;IACNI,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAEN,KAAK,GAAGF,MAAM,GAAIC,MAAM,EAAEF,CAAC,CAACU,MAAM,CAAC;EACrD,CAAC,MAAM;IACHH,CAAC,GAAGP,CAAC,CAACU,MAAM;EAChB;EAEA,KAAIJ,CAAC,GAAGJ,MAAM,EAAEI,CAAC,GAAGC,CAAC,EAAED,CAAC,IAAIL,MAAM,EAAE;IAChCH,GAAG,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACM,CAAC,CAAC;IACbR,GAAG,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACM,CAAC,GAAC,CAAC,CAAC;IACfR,GAAG,CAAC,CAAC,CAAC,GAAGE,CAAC,CAACM,CAAC,GAAC,CAAC,CAAC;IACfF,EAAE,CAACN,GAAG,EAAEA,GAAG,EAAEO,GAAG,CAAC;IACjBL,CAAC,CAACM,CAAC,CAAC,GAAGR,GAAG,CAAC,CAAC,CAAC;IACbE,CAAC,CAACM,CAAC,GAAC,CAAC,CAAC,GAAGR,GAAG,CAAC,CAAC,CAAC;IACfE,CAAC,CAACM,CAAC,GAAC,CAAC,CAAC,GAAGR,GAAG,CAAC,CAAC,CAAC;EACnB;EAEA,OAAOE,CAAC;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
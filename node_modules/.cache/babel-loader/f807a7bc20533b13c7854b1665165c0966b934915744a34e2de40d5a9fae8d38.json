{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar calcColorscale = require('../../components/colorscale/calc');\nvar Lib = require('../../lib');\nvar wrap = require('../../lib/gup').wrap;\nmodule.exports = function calc(gd, trace) {\n  var cs = !!trace.line.colorscale && Lib.isArrayOrTypedArray(trace.line.color);\n  var color = cs ? trace.line.color : constHalf(trace._length);\n  var cscale = cs ? trace.line.colorscale : [[0, trace.line.color], [1, trace.line.color]];\n  if (hasColorscale(trace, 'line')) {\n    calcColorscale(gd, trace, {\n      vals: color,\n      containerStr: 'line',\n      cLetter: 'c'\n    });\n  }\n  return wrap({\n    lineColor: color,\n    cscale: cscale\n  });\n};\nfunction constHalf(len) {\n  var out = new Array(len);\n  for (var i = 0; i < len; i++) {\n    out[i] = 0.5;\n  }\n  return out;\n}","map":{"version":3,"names":["hasColorscale","require","calcColorscale","Lib","wrap","module","exports","calc","gd","trace","cs","line","colorscale","isArrayOrTypedArray","color","constHalf","_length","cscale","vals","containerStr","cLetter","lineColor","len","out","Array","i"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/parcoords/calc.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar hasColorscale = require('../../components/colorscale/helpers').hasColorscale;\nvar calcColorscale = require('../../components/colorscale/calc');\nvar Lib = require('../../lib');\nvar wrap = require('../../lib/gup').wrap;\n\nmodule.exports = function calc(gd, trace) {\n    var cs = !!trace.line.colorscale && Lib.isArrayOrTypedArray(trace.line.color);\n    var color = cs ? trace.line.color : constHalf(trace._length);\n    var cscale = cs ? trace.line.colorscale : [[0, trace.line.color], [1, trace.line.color]];\n\n    if(hasColorscale(trace, 'line')) {\n        calcColorscale(gd, trace, {\n            vals: color,\n            containerStr: 'line',\n            cLetter: 'c'\n        });\n    }\n\n    return wrap({\n        lineColor: color,\n        cscale: cscale\n    });\n};\n\nfunction constHalf(len) {\n    var out = new Array(len);\n    for(var i = 0; i < len; i++) {\n        out[i] = 0.5;\n    }\n    return out;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,aAAa,GAAGC,OAAO,CAAC,qCAAqC,CAAC,CAACD,aAAa;AAChF,IAAIE,cAAc,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAChE,IAAIE,GAAG,GAAGF,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIG,IAAI,GAAGH,OAAO,CAAC,eAAe,CAAC,CAACG,IAAI;AAExCC,MAAM,CAACC,OAAO,GAAG,SAASC,IAAI,CAACC,EAAE,EAAEC,KAAK,EAAE;EACtC,IAAIC,EAAE,GAAG,CAAC,CAACD,KAAK,CAACE,IAAI,CAACC,UAAU,IAAIT,GAAG,CAACU,mBAAmB,CAACJ,KAAK,CAACE,IAAI,CAACG,KAAK,CAAC;EAC7E,IAAIA,KAAK,GAAGJ,EAAE,GAAGD,KAAK,CAACE,IAAI,CAACG,KAAK,GAAGC,SAAS,CAACN,KAAK,CAACO,OAAO,CAAC;EAC5D,IAAIC,MAAM,GAAGP,EAAE,GAAGD,KAAK,CAACE,IAAI,CAACC,UAAU,GAAG,CAAC,CAAC,CAAC,EAAEH,KAAK,CAACE,IAAI,CAACG,KAAK,CAAC,EAAE,CAAC,CAAC,EAAEL,KAAK,CAACE,IAAI,CAACG,KAAK,CAAC,CAAC;EAExF,IAAGd,aAAa,CAACS,KAAK,EAAE,MAAM,CAAC,EAAE;IAC7BP,cAAc,CAACM,EAAE,EAAEC,KAAK,EAAE;MACtBS,IAAI,EAAEJ,KAAK;MACXK,YAAY,EAAE,MAAM;MACpBC,OAAO,EAAE;IACb,CAAC,CAAC;EACN;EAEA,OAAOhB,IAAI,CAAC;IACRiB,SAAS,EAAEP,KAAK;IAChBG,MAAM,EAAEA;EACZ,CAAC,CAAC;AACN,CAAC;AAED,SAASF,SAAS,CAACO,GAAG,EAAE;EACpB,IAAIC,GAAG,GAAG,IAAIC,KAAK,CAACF,GAAG,CAAC;EACxB,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,GAAG,EAAEG,CAAC,EAAE,EAAE;IACzBF,GAAG,CAACE,CAAC,CAAC,GAAG,GAAG;EAChB;EACA,OAAOF,GAAG;AACd"},"metadata":{},"sourceType":"script","externalDependencies":[]}
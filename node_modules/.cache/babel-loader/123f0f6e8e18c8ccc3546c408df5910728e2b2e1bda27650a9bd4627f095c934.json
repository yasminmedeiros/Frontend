{"ast":null,"code":"'use strict';\n\nmodule.exports = createLines;\nvar createBuffer = require('gl-buffer');\nvar createVAO = require('gl-vao');\nvar createShader = require('./shaders').line;\nvar MAJOR_AXIS = [0, 0, 0];\nvar MINOR_AXIS = [0, 0, 0];\nvar SCREEN_AXIS = [0, 0, 0];\nvar OFFSET_VEC = [0, 0, 0];\nvar SHAPE = [1, 1];\nfunction zeroVec(a) {\n  a[0] = a[1] = a[2] = 0;\n  return a;\n}\nfunction copyVec(a, b) {\n  a[0] = b[0];\n  a[1] = b[1];\n  a[2] = b[2];\n  return a;\n}\nfunction Lines(gl, vertBuffer, vao, shader, tickCount, tickOffset, gridCount, gridOffset) {\n  this.gl = gl;\n  this.vertBuffer = vertBuffer;\n  this.vao = vao;\n  this.shader = shader;\n  this.tickCount = tickCount;\n  this.tickOffset = tickOffset;\n  this.gridCount = gridCount;\n  this.gridOffset = gridOffset;\n}\nvar proto = Lines.prototype;\nproto.bind = function (model, view, projection) {\n  this.shader.bind();\n  this.shader.uniforms.model = model;\n  this.shader.uniforms.view = view;\n  this.shader.uniforms.projection = projection;\n  SHAPE[0] = this.gl.drawingBufferWidth;\n  SHAPE[1] = this.gl.drawingBufferHeight;\n  this.shader.uniforms.screenShape = SHAPE;\n  this.vao.bind();\n};\nproto.unbind = function () {\n  this.vao.unbind();\n};\nproto.drawAxisLine = function (j, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS);\n  this.shader.uniforms.majorAxis = MINOR_AXIS;\n  minorAxis[j] = bounds[1][j] - bounds[0][j];\n  this.shader.uniforms.minorAxis = minorAxis;\n  var noffset = copyVec(OFFSET_VEC, offset);\n  noffset[j] += bounds[0][j];\n  this.shader.uniforms.offset = noffset;\n  this.shader.uniforms.lineWidth = lineWidth;\n  this.shader.uniforms.color = color;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[(j + 2) % 3] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.vao.draw(this.gl.TRIANGLES, 6);\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[(j + 1) % 3] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.vao.draw(this.gl.TRIANGLES, 6);\n};\nproto.drawAxisTicks = function (j, offset, minorAxis, color, lineWidth) {\n  if (!this.tickCount[j]) {\n    return;\n  }\n  var majorAxis = zeroVec(MAJOR_AXIS);\n  majorAxis[j] = 1;\n  this.shader.uniforms.majorAxis = majorAxis;\n  this.shader.uniforms.offset = offset;\n  this.shader.uniforms.minorAxis = minorAxis;\n  this.shader.uniforms.color = color;\n  this.shader.uniforms.lineWidth = lineWidth;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[j] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[j], this.tickOffset[j]);\n};\nproto.drawGrid = function (i, j, bounds, offset, color, lineWidth) {\n  if (!this.gridCount[i]) {\n    return;\n  }\n  var minorAxis = zeroVec(MINOR_AXIS);\n  minorAxis[j] = bounds[1][j] - bounds[0][j];\n  this.shader.uniforms.minorAxis = minorAxis;\n  var noffset = copyVec(OFFSET_VEC, offset);\n  noffset[j] += bounds[0][j];\n  this.shader.uniforms.offset = noffset;\n  var majorAxis = zeroVec(MAJOR_AXIS);\n  majorAxis[i] = 1;\n  this.shader.uniforms.majorAxis = majorAxis;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[i] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.shader.uniforms.lineWidth = lineWidth;\n  this.shader.uniforms.color = color;\n  this.vao.draw(this.gl.TRIANGLES, this.gridCount[i], this.gridOffset[i]);\n};\nproto.drawZero = function (j, i, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS);\n  this.shader.uniforms.majorAxis = minorAxis;\n  minorAxis[j] = bounds[1][j] - bounds[0][j];\n  this.shader.uniforms.minorAxis = minorAxis;\n  var noffset = copyVec(OFFSET_VEC, offset);\n  noffset[j] += bounds[0][j];\n  this.shader.uniforms.offset = noffset;\n  var screenAxis = zeroVec(SCREEN_AXIS);\n  screenAxis[i] = 1;\n  this.shader.uniforms.screenAxis = screenAxis;\n  this.shader.uniforms.lineWidth = lineWidth;\n  this.shader.uniforms.color = color;\n  this.vao.draw(this.gl.TRIANGLES, 6);\n};\nproto.dispose = function () {\n  this.vao.dispose();\n  this.vertBuffer.dispose();\n  this.shader.dispose();\n};\nfunction createLines(gl, bounds, ticks) {\n  var vertices = [];\n  var tickOffset = [0, 0, 0];\n  var tickCount = [0, 0, 0];\n\n  //Create grid lines for each axis/direction\n  var gridOffset = [0, 0, 0];\n  var gridCount = [0, 0, 0];\n\n  //Add zero line\n  vertices.push(0, 0, 1, 0, 1, 1, 0, 0, -1, 0, 0, -1, 0, 1, 1, 0, 1, -1);\n  for (var i = 0; i < 3; ++i) {\n    //Axis tick marks\n    var start = vertices.length / 3 | 0;\n    for (var j = 0; j < ticks[i].length; ++j) {\n      var x = +ticks[i][j].x;\n      vertices.push(x, 0, 1, x, 1, 1, x, 0, -1, x, 0, -1, x, 1, 1, x, 1, -1);\n    }\n    var end = vertices.length / 3 | 0;\n    tickOffset[i] = start;\n    tickCount[i] = end - start;\n\n    //Grid lines\n    var start = vertices.length / 3 | 0;\n    for (var k = 0; k < ticks[i].length; ++k) {\n      var x = +ticks[i][k].x;\n      vertices.push(x, 0, 1, x, 1, 1, x, 0, -1, x, 0, -1, x, 1, 1, x, 1, -1);\n    }\n    var end = vertices.length / 3 | 0;\n    gridOffset[i] = start;\n    gridCount[i] = end - start;\n  }\n\n  //Create cube VAO\n  var vertBuf = createBuffer(gl, new Float32Array(vertices));\n  var vao = createVAO(gl, [{\n    \"buffer\": vertBuf,\n    \"type\": gl.FLOAT,\n    \"size\": 3,\n    \"stride\": 0,\n    \"offset\": 0\n  }]);\n  var shader = createShader(gl);\n  shader.attributes.position.location = 0;\n  return new Lines(gl, vertBuf, vao, shader, tickCount, tickOffset, gridCount, gridOffset);\n}","map":{"version":3,"names":["module","exports","createLines","createBuffer","require","createVAO","createShader","line","MAJOR_AXIS","MINOR_AXIS","SCREEN_AXIS","OFFSET_VEC","SHAPE","zeroVec","a","copyVec","b","Lines","gl","vertBuffer","vao","shader","tickCount","tickOffset","gridCount","gridOffset","proto","prototype","bind","model","view","projection","uniforms","drawingBufferWidth","drawingBufferHeight","screenShape","unbind","drawAxisLine","j","bounds","offset","color","lineWidth","minorAxis","majorAxis","noffset","screenAxis","draw","TRIANGLES","drawAxisTicks","drawGrid","i","drawZero","dispose","ticks","vertices","push","start","length","x","end","k","vertBuf","Float32Array","FLOAT","attributes","position","location"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/gl-axes3d/lib/lines.js"],"sourcesContent":["'use strict'\n\nmodule.exports    = createLines\n\nvar createBuffer  = require('gl-buffer')\nvar createVAO     = require('gl-vao')\nvar createShader  = require('./shaders').line\n\nvar MAJOR_AXIS = [0,0,0]\nvar MINOR_AXIS = [0,0,0]\nvar SCREEN_AXIS = [0,0,0]\nvar OFFSET_VEC = [0,0,0]\nvar SHAPE = [1,1]\n\nfunction zeroVec(a) {\n  a[0] = a[1] = a[2] = 0\n  return a\n}\n\nfunction copyVec(a,b) {\n  a[0] = b[0]\n  a[1] = b[1]\n  a[2] = b[2]\n  return a\n}\n\nfunction Lines(gl, vertBuffer, vao, shader, tickCount, tickOffset, gridCount, gridOffset) {\n  this.gl         = gl\n  this.vertBuffer = vertBuffer\n  this.vao        = vao\n  this.shader     = shader\n  this.tickCount  = tickCount\n  this.tickOffset = tickOffset\n  this.gridCount  = gridCount\n  this.gridOffset = gridOffset\n}\n\nvar proto = Lines.prototype\n\nproto.bind = function(model, view, projection) {\n  this.shader.bind()\n  this.shader.uniforms.model = model\n  this.shader.uniforms.view = view\n  this.shader.uniforms.projection = projection\n\n  SHAPE[0] = this.gl.drawingBufferWidth\n  SHAPE[1] = this.gl.drawingBufferHeight\n\n  this.shader.uniforms.screenShape = SHAPE\n  this.vao.bind()\n}\n\nproto.unbind = function() {\n  this.vao.unbind()\n}\n\nproto.drawAxisLine = function(j, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS)\n  this.shader.uniforms.majorAxis = MINOR_AXIS\n\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\n  this.shader.uniforms.minorAxis = minorAxis\n\n  var noffset = copyVec(OFFSET_VEC, offset)\n  noffset[j] += bounds[0][j]\n  this.shader.uniforms.offset = noffset\n\n  this.shader.uniforms.lineWidth = lineWidth\n\n  this.shader.uniforms.color = color\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[(j+2)%3] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.vao.draw(this.gl.TRIANGLES, 6)\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[(j+1)%3] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.vao.draw(this.gl.TRIANGLES, 6)\n}\n\nproto.drawAxisTicks = function(j, offset, minorAxis, color, lineWidth) {\n  if(!this.tickCount[j]) {\n    return\n  }\n\n  var majorAxis = zeroVec(MAJOR_AXIS)\n  majorAxis[j]  = 1\n  this.shader.uniforms.majorAxis = majorAxis\n  this.shader.uniforms.offset    = offset\n  this.shader.uniforms.minorAxis = minorAxis\n  this.shader.uniforms.color     = color\n  this.shader.uniforms.lineWidth = lineWidth\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[j] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.vao.draw(this.gl.TRIANGLES, this.tickCount[j], this.tickOffset[j])\n}\n\n\nproto.drawGrid = function(i, j, bounds, offset, color, lineWidth) {\n  if(!this.gridCount[i]) {\n    return\n  }\n\n  var minorAxis = zeroVec(MINOR_AXIS)\n  minorAxis[j]  = bounds[1][j] - bounds[0][j]\n  this.shader.uniforms.minorAxis = minorAxis\n\n  var noffset = copyVec(OFFSET_VEC, offset)\n  noffset[j] += bounds[0][j]\n  this.shader.uniforms.offset = noffset\n\n  var majorAxis = zeroVec(MAJOR_AXIS)\n  majorAxis[i]  = 1\n  this.shader.uniforms.majorAxis = majorAxis\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[i] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.shader.uniforms.lineWidth = lineWidth\n\n  this.shader.uniforms.color = color\n  this.vao.draw(this.gl.TRIANGLES, this.gridCount[i], this.gridOffset[i])\n}\n\nproto.drawZero = function(j, i, bounds, offset, color, lineWidth) {\n  var minorAxis = zeroVec(MINOR_AXIS)\n  this.shader.uniforms.majorAxis = minorAxis\n\n  minorAxis[j] = bounds[1][j] - bounds[0][j]\n  this.shader.uniforms.minorAxis = minorAxis\n\n  var noffset = copyVec(OFFSET_VEC, offset)\n  noffset[j] += bounds[0][j]\n  this.shader.uniforms.offset = noffset\n\n  var screenAxis = zeroVec(SCREEN_AXIS)\n  screenAxis[i] = 1\n  this.shader.uniforms.screenAxis = screenAxis\n  this.shader.uniforms.lineWidth = lineWidth\n\n  this.shader.uniforms.color = color\n  this.vao.draw(this.gl.TRIANGLES, 6)\n}\n\nproto.dispose = function() {\n  this.vao.dispose()\n  this.vertBuffer.dispose()\n  this.shader.dispose()\n}\n\nfunction createLines(gl, bounds, ticks) {\n  var vertices    = []\n  var tickOffset  = [0,0,0]\n  var tickCount   = [0,0,0]\n\n  //Create grid lines for each axis/direction\n  var gridOffset = [0,0,0]\n  var gridCount  = [0,0,0]\n\n  //Add zero line\n  vertices.push(\n    0,0,1,   0,1,1,   0,0,-1,\n    0,0,-1,  0,1,1,   0,1,-1)\n\n  for(var i=0; i<3; ++i) {\n    //Axis tick marks\n    var start = ((vertices.length / 3)|0)\n    for(var j=0; j<ticks[i].length; ++j) {\n      var x = +ticks[i][j].x\n      vertices.push(\n        x,0,1,   x,1,1,   x,0,-1,\n        x,0,-1,  x,1,1,   x,1,-1)\n    }\n    var end = ((vertices.length / 3)|0)\n    tickOffset[i] = start\n    tickCount[i]  = end - start\n\n    //Grid lines\n    var start = ((vertices.length / 3)|0)\n    for(var k=0; k<ticks[i].length; ++k) {\n      var x = +ticks[i][k].x\n      vertices.push(\n        x,0,1,   x,1,1,   x,0,-1,\n        x,0,-1,  x,1,1,   x,1,-1)\n    }\n    var end = ((vertices.length / 3)|0)\n    gridOffset[i] = start\n    gridCount[i]  = end - start\n  }\n\n  //Create cube VAO\n  var vertBuf = createBuffer(gl, new Float32Array(vertices))\n  var vao = createVAO(gl, [\n    { \"buffer\": vertBuf,\n      \"type\": gl.FLOAT,\n      \"size\": 3,\n      \"stride\": 0,\n      \"offset\": 0\n    }\n  ])\n  var shader = createShader(gl)\n  shader.attributes.position.location = 0\n  return new Lines(gl, vertBuf, vao, shader, tickCount, tickOffset, gridCount, gridOffset)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
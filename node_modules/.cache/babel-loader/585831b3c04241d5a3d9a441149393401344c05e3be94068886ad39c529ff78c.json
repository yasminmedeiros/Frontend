{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar Lib = require('../../lib');\nvar Fx = require('../../components/fx');\nvar Color = require('../../components/color');\nvar fillHoverText = require('../scatter/fill_hover_text');\nvar DIRSYMBOL = {\n  increasing: '▲',\n  decreasing: '▼'\n};\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var trace = cd[0].trace;\n  if (trace.hoverlabel.split) {\n    return hoverSplit(pointData, xval, yval, hovermode);\n  }\n  return hoverOnPoints(pointData, xval, yval, hovermode);\n}\nfunction getClosestPoint(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var xa = pointData.xa;\n  var trace = cd[0].trace;\n  var t = cd[0].t;\n  var type = trace.type;\n  var minAttr = type === 'ohlc' ? 'l' : 'min';\n  var maxAttr = type === 'ohlc' ? 'h' : 'max';\n  var hoverPseudoDistance, spikePseudoDistance;\n\n  // potentially shift xval for grouped candlesticks\n  var centerShift = t.bPos || 0;\n  var shiftPos = function shiftPos(di) {\n    return di.pos + centerShift - xval;\n  };\n\n  // ohlc and candlestick call displayHalfWidth different things...\n  var displayHalfWidth = t.bdPos || t.tickLen;\n  var hoverHalfWidth = t.wHover;\n\n  // if two figures are overlaying, let the narrowest one win\n  var pseudoDistance = Math.min(1, displayHalfWidth / Math.abs(xa.r2c(xa.range[1]) - xa.r2c(xa.range[0])));\n  hoverPseudoDistance = pointData.maxHoverDistance - pseudoDistance;\n  spikePseudoDistance = pointData.maxSpikeDistance - pseudoDistance;\n  function dx(di) {\n    var pos = shiftPos(di);\n    return Fx.inbox(pos - hoverHalfWidth, pos + hoverHalfWidth, hoverPseudoDistance);\n  }\n  function dy(di) {\n    var min = di[minAttr];\n    var max = di[maxAttr];\n    return min === max || Fx.inbox(min - yval, max - yval, hoverPseudoDistance);\n  }\n  function dxy(di) {\n    return (dx(di) + dy(di)) / 2;\n  }\n  var distfn = Fx.getDistanceFunction(hovermode, dx, dy, dxy);\n  Fx.getClosest(cd, distfn, pointData);\n  if (pointData.index === false) return null;\n  var di = cd[pointData.index];\n  if (di.empty) return null;\n  var dir = di.dir;\n  var container = trace[dir];\n  var lc = container.line.color;\n  if (Color.opacity(lc) && container.line.width) pointData.color = lc;else pointData.color = container.fillcolor;\n  pointData.x0 = xa.c2p(di.pos + centerShift - displayHalfWidth, true);\n  pointData.x1 = xa.c2p(di.pos + centerShift + displayHalfWidth, true);\n  pointData.xLabelVal = di.pos;\n  pointData.spikeDistance = dxy(di) * spikePseudoDistance / hoverPseudoDistance;\n  pointData.xSpike = xa.c2p(di.pos, true);\n  return pointData;\n}\nfunction hoverSplit(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var ya = pointData.ya;\n  var trace = cd[0].trace;\n  var t = cd[0].t;\n  var closeBoxData = [];\n  var closestPoint = getClosestPoint(pointData, xval, yval, hovermode);\n  // skip the rest (for this trace) if we didn't find a close point\n  if (!closestPoint) return [];\n  var cdIndex = closestPoint.index;\n  var di = cd[cdIndex];\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var hoverParts = hoverinfo.split('+');\n  var isAll = hoverinfo === 'all';\n  var hasY = isAll || hoverParts.indexOf('y') !== -1;\n\n  // similar to hoverOnPoints, we return nothing\n  // if all or y is not present.\n  if (!hasY) return [];\n  var attrs = ['high', 'open', 'close', 'low'];\n\n  // several attributes can have the same y-coordinate. We will\n  // bunch them together in a single text block. For this, we keep\n  // a dictionary mapping y-coord -> point data.\n  var usedVals = {};\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    var val = trace[attr][closestPoint.index];\n    var valPx = ya.c2p(val, true);\n    var pointData2;\n    if (val in usedVals) {\n      pointData2 = usedVals[val];\n      pointData2.yLabel += '<br>' + t.labels[attr] + Axes.hoverLabelText(ya, val);\n    } else {\n      // copy out to a new object for each new y-value to label\n      pointData2 = Lib.extendFlat({}, closestPoint);\n      pointData2.y0 = pointData2.y1 = valPx;\n      pointData2.yLabelVal = val;\n      pointData2.yLabel = t.labels[attr] + Axes.hoverLabelText(ya, val);\n      pointData2.name = '';\n      closeBoxData.push(pointData2);\n      usedVals[val] = pointData2;\n    }\n  }\n  return closeBoxData;\n}\nfunction hoverOnPoints(pointData, xval, yval, hovermode) {\n  var cd = pointData.cd;\n  var ya = pointData.ya;\n  var trace = cd[0].trace;\n  var t = cd[0].t;\n  var closestPoint = getClosestPoint(pointData, xval, yval, hovermode);\n  // skip the rest (for this trace) if we didn't find a close point\n  if (!closestPoint) return [];\n\n  // we don't make a calcdata point if we're missing any piece (x/o/h/l/c)\n  // so we need to fix the index here to point to the data arrays\n  var cdIndex = closestPoint.index;\n  var di = cd[cdIndex];\n  var i = closestPoint.index = di.i;\n  var dir = di.dir;\n  function getLabelLine(attr) {\n    return t.labels[attr] + Axes.hoverLabelText(ya, trace[attr][i]);\n  }\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var hoverParts = hoverinfo.split('+');\n  var isAll = hoverinfo === 'all';\n  var hasY = isAll || hoverParts.indexOf('y') !== -1;\n  var hasText = isAll || hoverParts.indexOf('text') !== -1;\n  var textParts = hasY ? [getLabelLine('open'), getLabelLine('high'), getLabelLine('low'), getLabelLine('close') + '  ' + DIRSYMBOL[dir]] : [];\n  if (hasText) fillHoverText(di, trace, textParts);\n\n  // don't make .yLabelVal or .text, since we're managing hoverinfo\n  // put it all in .extraText\n  closestPoint.extraText = textParts.join('<br>');\n\n  // this puts the label *and the spike* at the midpoint of the box, ie\n  // halfway between open and close, not between high and low.\n  closestPoint.y0 = closestPoint.y1 = ya.c2p(di.yc, true);\n  return [closestPoint];\n}\nmodule.exports = {\n  hoverPoints: hoverPoints,\n  hoverSplit: hoverSplit,\n  hoverOnPoints: hoverOnPoints\n};","map":{"version":3,"names":["Axes","require","Lib","Fx","Color","fillHoverText","DIRSYMBOL","increasing","decreasing","hoverPoints","pointData","xval","yval","hovermode","cd","trace","hoverlabel","split","hoverSplit","hoverOnPoints","getClosestPoint","xa","t","type","minAttr","maxAttr","hoverPseudoDistance","spikePseudoDistance","centerShift","bPos","shiftPos","di","pos","displayHalfWidth","bdPos","tickLen","hoverHalfWidth","wHover","pseudoDistance","Math","min","abs","r2c","range","maxHoverDistance","maxSpikeDistance","dx","inbox","dy","max","dxy","distfn","getDistanceFunction","getClosest","index","empty","dir","container","lc","line","color","opacity","width","fillcolor","x0","c2p","x1","xLabelVal","spikeDistance","xSpike","ya","closeBoxData","closestPoint","cdIndex","hoverinfo","hi","hoverParts","isAll","hasY","indexOf","attrs","usedVals","i","length","attr","val","valPx","pointData2","yLabel","labels","hoverLabelText","extendFlat","y0","y1","yLabelVal","name","push","getLabelLine","hasText","textParts","extraText","join","yc","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/ohlc/hover.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\nvar Lib = require('../../lib');\nvar Fx = require('../../components/fx');\nvar Color = require('../../components/color');\nvar fillHoverText = require('../scatter/fill_hover_text');\n\nvar DIRSYMBOL = {\n    increasing: '▲',\n    decreasing: '▼'\n};\n\nfunction hoverPoints(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var trace = cd[0].trace;\n\n    if(trace.hoverlabel.split) {\n        return hoverSplit(pointData, xval, yval, hovermode);\n    }\n\n    return hoverOnPoints(pointData, xval, yval, hovermode);\n}\n\nfunction getClosestPoint(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var xa = pointData.xa;\n    var trace = cd[0].trace;\n    var t = cd[0].t;\n\n    var type = trace.type;\n    var minAttr = type === 'ohlc' ? 'l' : 'min';\n    var maxAttr = type === 'ohlc' ? 'h' : 'max';\n\n    var hoverPseudoDistance, spikePseudoDistance;\n\n    // potentially shift xval for grouped candlesticks\n    var centerShift = t.bPos || 0;\n    var shiftPos = function(di) { return di.pos + centerShift - xval; };\n\n    // ohlc and candlestick call displayHalfWidth different things...\n    var displayHalfWidth = t.bdPos || t.tickLen;\n    var hoverHalfWidth = t.wHover;\n\n    // if two figures are overlaying, let the narrowest one win\n    var pseudoDistance = Math.min(1, displayHalfWidth / Math.abs(xa.r2c(xa.range[1]) - xa.r2c(xa.range[0])));\n    hoverPseudoDistance = pointData.maxHoverDistance - pseudoDistance;\n    spikePseudoDistance = pointData.maxSpikeDistance - pseudoDistance;\n\n    function dx(di) {\n        var pos = shiftPos(di);\n        return Fx.inbox(pos - hoverHalfWidth, pos + hoverHalfWidth, hoverPseudoDistance);\n    }\n\n    function dy(di) {\n        var min = di[minAttr];\n        var max = di[maxAttr];\n        return min === max || Fx.inbox(min - yval, max - yval, hoverPseudoDistance);\n    }\n\n    function dxy(di) { return (dx(di) + dy(di)) / 2; }\n\n    var distfn = Fx.getDistanceFunction(hovermode, dx, dy, dxy);\n    Fx.getClosest(cd, distfn, pointData);\n\n    if(pointData.index === false) return null;\n\n    var di = cd[pointData.index];\n\n    if(di.empty) return null;\n\n    var dir = di.dir;\n    var container = trace[dir];\n    var lc = container.line.color;\n\n    if(Color.opacity(lc) && container.line.width) pointData.color = lc;\n    else pointData.color = container.fillcolor;\n\n    pointData.x0 = xa.c2p(di.pos + centerShift - displayHalfWidth, true);\n    pointData.x1 = xa.c2p(di.pos + centerShift + displayHalfWidth, true);\n\n    pointData.xLabelVal = di.pos;\n\n    pointData.spikeDistance = dxy(di) * spikePseudoDistance / hoverPseudoDistance;\n    pointData.xSpike = xa.c2p(di.pos, true);\n\n    return pointData;\n}\n\nfunction hoverSplit(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var ya = pointData.ya;\n    var trace = cd[0].trace;\n    var t = cd[0].t;\n    var closeBoxData = [];\n\n    var closestPoint = getClosestPoint(pointData, xval, yval, hovermode);\n    // skip the rest (for this trace) if we didn't find a close point\n    if(!closestPoint) return [];\n\n    var cdIndex = closestPoint.index;\n    var di = cd[cdIndex];\n    var hoverinfo = di.hi || trace.hoverinfo;\n    var hoverParts = hoverinfo.split('+');\n    var isAll = hoverinfo === 'all';\n    var hasY = isAll || hoverParts.indexOf('y') !== -1;\n\n    // similar to hoverOnPoints, we return nothing\n    // if all or y is not present.\n    if(!hasY) return [];\n\n    var attrs = ['high', 'open', 'close', 'low'];\n\n    // several attributes can have the same y-coordinate. We will\n    // bunch them together in a single text block. For this, we keep\n    // a dictionary mapping y-coord -> point data.\n    var usedVals = {};\n\n    for(var i = 0; i < attrs.length; i++) {\n        var attr = attrs[i];\n\n        var val = trace[attr][closestPoint.index];\n        var valPx = ya.c2p(val, true);\n        var pointData2;\n        if(val in usedVals) {\n            pointData2 = usedVals[val];\n            pointData2.yLabel += '<br>' + t.labels[attr] + Axes.hoverLabelText(ya, val);\n        }\n        else {\n            // copy out to a new object for each new y-value to label\n            pointData2 = Lib.extendFlat({}, closestPoint);\n\n            pointData2.y0 = pointData2.y1 = valPx;\n            pointData2.yLabelVal = val;\n            pointData2.yLabel = t.labels[attr] + Axes.hoverLabelText(ya, val);\n\n            pointData2.name = '';\n\n            closeBoxData.push(pointData2);\n            usedVals[val] = pointData2;\n        }\n    }\n\n    return closeBoxData;\n}\n\nfunction hoverOnPoints(pointData, xval, yval, hovermode) {\n    var cd = pointData.cd;\n    var ya = pointData.ya;\n    var trace = cd[0].trace;\n    var t = cd[0].t;\n\n    var closestPoint = getClosestPoint(pointData, xval, yval, hovermode);\n    // skip the rest (for this trace) if we didn't find a close point\n    if(!closestPoint) return [];\n\n    // we don't make a calcdata point if we're missing any piece (x/o/h/l/c)\n    // so we need to fix the index here to point to the data arrays\n    var cdIndex = closestPoint.index;\n    var di = cd[cdIndex];\n    var i = closestPoint.index = di.i;\n    var dir = di.dir;\n\n    function getLabelLine(attr) {\n        return t.labels[attr] + Axes.hoverLabelText(ya, trace[attr][i]);\n    }\n\n    var hoverinfo = di.hi || trace.hoverinfo;\n    var hoverParts = hoverinfo.split('+');\n    var isAll = hoverinfo === 'all';\n    var hasY = isAll || hoverParts.indexOf('y') !== -1;\n    var hasText = isAll || hoverParts.indexOf('text') !== -1;\n\n    var textParts = hasY ? [\n        getLabelLine('open'),\n        getLabelLine('high'),\n        getLabelLine('low'),\n        getLabelLine('close') + '  ' + DIRSYMBOL[dir]\n    ] : [];\n    if(hasText) fillHoverText(di, trace, textParts);\n\n    // don't make .yLabelVal or .text, since we're managing hoverinfo\n    // put it all in .extraText\n    closestPoint.extraText = textParts.join('<br>');\n\n    // this puts the label *and the spike* at the midpoint of the box, ie\n    // halfway between open and close, not between high and low.\n    closestPoint.y0 = closestPoint.y1 = ya.c2p(di.yc, true);\n\n    return [closestPoint];\n}\n\nmodule.exports = {\n    hoverPoints: hoverPoints,\n    hoverSplit: hoverSplit,\n    hoverOnPoints: hoverOnPoints\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
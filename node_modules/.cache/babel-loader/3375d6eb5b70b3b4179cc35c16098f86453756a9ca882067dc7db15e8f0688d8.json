{"ast":null,"code":"import _createForOfIteratorHelper from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _slicedToArray from\"/home/yasmin/\\xC1rea de Trabalho/Frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import'plotly.js';import Plotly from'react-plotly.js';import{useEffect}from\"react\";import{useState}from\"react\";import{Spinner}from\"../Spinner\";import'./styles.css';import{NoDataMessage}from\"../NoDataMessage\";import{jsx as _jsx}from\"react/jsx-runtime\";var PlotlyMapBox=function PlotlyMapBox(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),config=_useState4[0],setConfig=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),layout=_useState6[0],setLayout=_useState6[1];function verifyEmptyData(data){var _iterator=_createForOfIteratorHelper(data),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var item=_step.value;var value=parseInt(item.data);if(value>0||value!=\"0\")return true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}return false;}useEffect(function(){var lon=[];var lat=[];var z=[];props.locations.forEach(function(school){lon.push(parseFloat(school.longitude));lat.push(parseFloat(school.latitude));z.push(parseInt(school.data));});setData([{lon:lon,lat:lat,radius:10,z:z,type:\"densitymapbox\",coloraxis:'coloraxis',zmin:0,zmax:10000// hoverinfo: 'skip'\n}]);setLayout({mapbox:{center:{lon:-37.2779,lat:-7.02556},style:\"outdoors\",zoom:6},// width: 1000,\ncoloraxis:{colorscale:\"Viridis\"},title:{text:\"<b>\".concat(props.title,\"</b>\"),font:{family:'Helvetica, Arial, sans-serif',size:18,color:'#000000'}},margin:{t:30,b:30}});setConfig({mapboxAccessToken:\"pk.eyJ1IjoiYW5uaWViZWx0cmFvIiwiYSI6ImNrajdpZGlhODF1aTkzMG5wcjJrN2w0dWsifQ.w5XFiBxyFEbkQwRtekWV7Q\",responsive:true});},[props.locations,props.title]);return/*#__PURE__*/_jsx(\"div\",{id:\"plotly\",children:props.locations.length>0?verifyEmptyData(props.locations)?/*#__PURE__*/_jsx(Plotly,{data:data,layout:layout,config:config,style:{width:'100%',height:'100%'}}):/*#__PURE__*/_jsx(NoDataMessage,{}):/*#__PURE__*/_jsx(Spinner,{className:\"spinner-plotly\"})});};export default PlotlyMapBox;","map":{"version":3,"names":["React","Plotly","useEffect","useState","Spinner","NoDataMessage","PlotlyMapBox","props","data","setData","config","setConfig","layout","setLayout","verifyEmptyData","item","value","parseInt","lon","lat","z","locations","forEach","school","push","parseFloat","longitude","latitude","radius","type","coloraxis","zmin","zmax","mapbox","center","style","zoom","colorscale","title","text","font","family","size","color","margin","t","b","mapboxAccessToken","responsive","length","width","height"],"sources":["/home/yasmin/Área de Trabalho/Frontend/src/components/PlotlyMapBox/index.jsx"],"sourcesContent":["import React from \"react\";\nimport 'plotly.js';\nimport Plotly from 'react-plotly.js';\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Spinner } from \"../Spinner\";\nimport './styles.css';\nimport { NoDataMessage } from \"../NoDataMessage\";\n\nconst PlotlyMapBox = (props) => {\n    const [data, setData] = useState();\n    const [config, setConfig] = useState();\n    const [layout, setLayout] = useState();\n\n    function verifyEmptyData(data) {\n        for (const item of data) {\n            let value = parseInt(item.data);\n            if (value > 0 || value != \"0\") return true;\n        }\n\n        return false;\n    }\n\n    useEffect(() => {\n        let lon = [];\n        let lat = [];\n        let z = [];\n    \n        props.locations.forEach(school => {\n            lon.push(parseFloat(school.longitude));\n            lat.push(parseFloat(school.latitude));\n            z.push(parseInt(school.data));\n        });\n\n        setData([{\n            lon: lon, lat: lat, radius: 10,\n            z: z,\n            type: \"densitymapbox\",\n            coloraxis: 'coloraxis', zmin: 0, zmax: 10000,\n            // hoverinfo: 'skip'\n        }]);\n\n        setLayout({\n            mapbox: {\n                center: { lon: -37.2779, lat: -7.02556 },\n                style: \"outdoors\",\n                zoom: 6,\n            },\n            // width: 1000,\n            coloraxis: { colorscale: \"Viridis\" },\n            title: {\n                text: `<b>${props.title}</b>`,\n                font: {\n                    family: 'Helvetica, Arial, sans-serif',\n                    size: 18,\n                    color: '#000000'\n                }\n            },\n            margin: { t: 30, b: 30 }\n        });\n\n        setConfig({\n            mapboxAccessToken: \"pk.eyJ1IjoiYW5uaWViZWx0cmFvIiwiYSI6ImNrajdpZGlhODF1aTkzMG5wcjJrN2w0dWsifQ.w5XFiBxyFEbkQwRtekWV7Q\",\n            responsive: true \n        });\n\n    }, [props.locations, props.title]);\n\n    return (\n        <div id=\"plotly\">\n            { props.locations.length > 0 ? (\n                verifyEmptyData(props.locations) ? (\n                    <Plotly\n                    data={data}\n                    layout={layout}\n                    config={config}\n                    style={{ width: '100%', height: '100%' }}\n                />\n                ) : (\n                    <NoDataMessage />\n                )\n            ) : (\n                <Spinner className=\"spinner-plotly\" />\n            )}\n        </div>\n    );\n};\n\nexport default PlotlyMapBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
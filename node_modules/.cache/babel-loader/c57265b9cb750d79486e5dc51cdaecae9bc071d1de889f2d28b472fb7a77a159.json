{"ast":null,"code":"/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* http://keith-wood.name/calendars.html\n  Traditional Chinese calendar for jQuery v2.0.2.\n  Written by Nicolas Riesco (enquiries@nicolasriesco.net) December 2016.\n  Available under the MIT (http://keith-wood.name/licence.html) license. \n  Please attribute the author if you use it. */\n\nvar main = require('../main');\nvar assign = require('object-assign');\nvar gregorianCalendar = main.instance();\n\n/** Implementation of the traditional Chinese calendar.\n    Source of calendar tables https://github.com/isee15/Lunar-Solar-Calendar-Converter .\n    @class ChineseCalendar\n    @param [language=''] {string} The language code (default English) for localisation. */\nfunction ChineseCalendar(language) {\n  this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\nChineseCalendar.prototype = new main.baseCalendar();\nassign(ChineseCalendar.prototype, {\n  /** The calendar name.\n      @memberof ChineseCalendar */\n  name: 'Chinese',\n  /** Julian date of start of Gregorian epoch: 1 January 0001 CE.\n     @memberof GregorianCalendar */\n  jdEpoch: 1721425.5,\n  /** <code>true</code> if has a year zero, <code>false</code> if not.\n      @memberof ChineseCalendar */\n  hasYearZero: false,\n  /** The minimum month number.\n      This calendar uses month indices to account for intercalary months. \n      @memberof ChineseCalendar */\n  minMonth: 0,\n  /** The first month in the year.\n      This calendar uses month indices to account for intercalary months. \n      @memberof ChineseCalendar */\n  firstMonth: 0,\n  /** The minimum day number.\n      @memberof ChineseCalendar */\n  minDay: 1,\n  /** Localisations for the plugin.\n      Entries are objects indexed by the language code ('' being the default US/English).\n      Each object has the following attributes.\n      @memberof ChineseCalendar\n      @property name {string} The calendar name.\n      @property epochs {string[]} The epoch names.\n      @property monthNames {string[]} The long names of the months of the year.\n      @property monthNamesShort {string[]} The short names of the months of the year.\n      @property dayNames {string[]} The long names of the days of the week.\n      @property dayNamesShort {string[]} The short names of the days of the week.\n      @property dayNamesMin {string[]} The minimal names of the days of the week.\n      @property dateFormat {string} The date format for this calendar.\n              See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\n      @property firstDay {number} The number of the first day of the week, starting at 0.\n      @property isRTL {number} <code>true</code> if this localisation reads right-to-left. */\n  regionalOptions: {\n    // Localisations\n    '': {\n      name: 'Chinese',\n      epochs: ['BEC', 'EC'],\n      monthNumbers: function monthNumbers(date, padded) {\n        if (typeof date === 'string') {\n          var match = date.match(MONTH_NUMBER_REGEXP);\n          return match ? match[0] : '';\n        }\n        var year = this._validateYear(date);\n        var monthIndex = date.month();\n        var month = '' + this.toChineseMonth(year, monthIndex);\n        if (padded && month.length < 2) {\n          month = \"0\" + month;\n        }\n        if (this.isIntercalaryMonth(year, monthIndex)) {\n          month += 'i';\n        }\n        return month;\n      },\n      monthNames: function monthNames(date) {\n        if (typeof date === 'string') {\n          var match = date.match(MONTH_NAME_REGEXP);\n          return match ? match[0] : '';\n        }\n        var year = this._validateYear(date);\n        var monthIndex = date.month();\n        var month = this.toChineseMonth(year, monthIndex);\n        var monthName = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'][month - 1];\n        if (this.isIntercalaryMonth(year, monthIndex)) {\n          monthName = '闰' + monthName;\n        }\n        return monthName;\n      },\n      monthNamesShort: function monthNamesShort(date) {\n        if (typeof date === 'string') {\n          var match = date.match(MONTH_SHORT_NAME_REGEXP);\n          return match ? match[0] : '';\n        }\n        var year = this._validateYear(date);\n        var monthIndex = date.month();\n        var month = this.toChineseMonth(year, monthIndex);\n        var monthName = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'][month - 1];\n        if (this.isIntercalaryMonth(year, monthIndex)) {\n          monthName = '闰' + monthName;\n        }\n        return monthName;\n      },\n      parseMonth: function parseMonth(year, monthString) {\n        year = this._validateYear(year);\n        var month = parseInt(monthString);\n        var isIntercalary;\n        if (!isNaN(month)) {\n          var i = monthString[monthString.length - 1];\n          isIntercalary = i === 'i' || i === 'I';\n        } else {\n          if (monthString[0] === '闰') {\n            isIntercalary = true;\n            monthString = monthString.substring(1);\n          }\n          if (monthString[monthString.length - 1] === '月') {\n            monthString = monthString.substring(0, monthString.length - 1);\n          }\n          month = 1 + ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'].indexOf(monthString);\n        }\n        var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n        return monthIndex;\n      },\n      dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      digits: null,\n      dateFormat: 'yyyy/mm/dd',\n      firstDay: 1,\n      isRTL: false\n    }\n  },\n  /** Check that a candidate date is from the same calendar and is valid.\n      @memberof BaseCalendar\n      @private\n      @param year {CDate|number} The date or the year to validate.\n      @param error {string} Error message if invalid.\n      @return {number} The year.\n      @throws Error if year out of range. */\n  _validateYear: function _validateYear(year, error) {\n    if (year.year) {\n      year = year.year();\n    }\n    if (typeof year !== 'number' || year < 1888 || year > 2111) {\n      throw error.replace(/\\{0\\}/, this.local.name);\n    }\n    return year;\n  },\n  /** Retrieve the month index (i.e. accounting for intercalary months).\n      @memberof ChineseCalendar\n      @param year {number} The year.\n      @param month {number} The month (1 for first month).\n      @param [isIntercalary=false] {boolean} If month is intercalary.\n      @return {number} The month index (0 for first month).\n      @throws Error if an invalid month/year or a different calendar used. */\n  toMonthIndex: function toMonthIndex(year, month, isIntercalary) {\n    // compute intercalary month in the year (0 if none)\n    var intercalaryMonth = this.intercalaryMonth(year);\n\n    // validate month\n    var invalidIntercalaryMonth = isIntercalary && month !== intercalaryMonth;\n    if (invalidIntercalaryMonth || month < 1 || month > 12) {\n      throw main.local.invalidMonth.replace(/\\{0\\}/, this.local.name);\n    }\n\n    // compute month index\n    var monthIndex;\n    if (!intercalaryMonth) {\n      monthIndex = month - 1;\n    } else if (!isIntercalary && month <= intercalaryMonth) {\n      monthIndex = month - 1;\n    } else {\n      monthIndex = month;\n    }\n    return monthIndex;\n  },\n  /** Retrieve the month (i.e. accounting for intercalary months).\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date or the year to examine.\n      @param monthIndex {number} The month index (0 for first month).\n      @return {number} The month (1 for first month).\n      @throws Error if an invalid month/year or a different calendar used. */\n  toChineseMonth: function toChineseMonth(year, monthIndex) {\n    if (year.year) {\n      year = year.year();\n      monthIndex = year.month();\n    }\n\n    // compute intercalary month in the year (0 if none)\n    var intercalaryMonth = this.intercalaryMonth(year);\n\n    // validate month\n    var maxMonthIndex = intercalaryMonth ? 12 : 11;\n    if (monthIndex < 0 || monthIndex > maxMonthIndex) {\n      throw main.local.invalidMonth.replace(/\\{0\\}/, this.local.name);\n    }\n\n    // compute Chinese month\n    var month;\n    if (!intercalaryMonth) {\n      month = monthIndex + 1;\n    } else if (monthIndex < intercalaryMonth) {\n      month = monthIndex + 1;\n    } else {\n      month = monthIndex;\n    }\n    return month;\n  },\n  /** Determine the intercalary month of a year (if any).\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {number} The intercalary month number, or 0 if none.\n      @throws Error if an invalid year or a different calendar used. */\n  intercalaryMonth: function intercalaryMonth(year) {\n    year = this._validateYear(year);\n    var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n    var intercalaryMonth = monthDaysTable >> 13;\n    return intercalaryMonth;\n  },\n  /** Determine whether this date is an intercalary month.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [monthIndex] {number} The month index to examine.\n      @return {boolean} <code>true</code> if this is an intercalary month, <code>false</code> if not.\n      @throws Error if an invalid year or a different calendar used. */\n  isIntercalaryMonth: function isIntercalaryMonth(year, monthIndex) {\n    if (year.year) {\n      year = year.year();\n      monthIndex = year.month();\n    }\n    var intercalaryMonth = this.intercalaryMonth(year);\n    return !!intercalaryMonth && intercalaryMonth === monthIndex;\n  },\n  /** Determine whether this date is in a leap year.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\n      @throws Error if an invalid year or a different calendar used. */\n  leapYear: function leapYear(year) {\n    return this.intercalaryMonth(year) !== 0;\n  },\n  /** Determine the week of the year for a date - ISO 8601.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [monthIndex] {number} The month index to examine.\n      @param [day] {number} The day to examine.\n      @return {number} The week of the year.\n      @throws Error if an invalid date or a different calendar used. */\n  weekOfYear: function weekOfYear(year, monthIndex, day) {\n    // compute Chinese new year\n    var validatedYear = this._validateYear(year, main.local.invalidyear);\n    var packedDate = CHINESE_NEW_YEAR[validatedYear - CHINESE_NEW_YEAR[0]];\n    var y = packedDate >> 9 & 0xFFF;\n    var m = packedDate >> 5 & 0x0F;\n    var d = packedDate & 0x1F;\n\n    // find first Thrusday of the year\n    var firstThursday;\n    firstThursday = gregorianCalendar.newDate(y, m, d);\n    firstThursday.add(4 - (firstThursday.dayOfWeek() || 7), 'd');\n\n    // compute days from first Thursday\n    var offset = this.toJD(year, monthIndex, day) - firstThursday.toJD();\n    return 1 + Math.floor(offset / 7);\n  },\n  /** Retrieve the number of months in a year.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @return {number} The number of months.\n      @throws Error if an invalid year or a different calendar used. */\n  monthsInYear: function monthsInYear(year) {\n    return this.leapYear(year) ? 13 : 12;\n  },\n  /** Retrieve the number of days in a month.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year of the month.\n      @param [monthIndex] {number} The month index.\n      @return {number} The number of days in this month.\n      @throws Error if an invalid month/year or a different calendar used. */\n  daysInMonth: function daysInMonth(year, monthIndex) {\n    if (year.year) {\n      monthIndex = year.month();\n      year = year.year();\n    }\n    year = this._validateYear(year);\n    var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n    var intercalaryMonth = monthDaysTable >> 13;\n    var maxMonthIndex = intercalaryMonth ? 12 : 11;\n    if (monthIndex > maxMonthIndex) {\n      throw main.local.invalidMonth.replace(/\\{0\\}/, this.local.name);\n    }\n    var daysInMonth = monthDaysTable & 1 << 12 - monthIndex ? 30 : 29;\n    return daysInMonth;\n  },\n  /** Determine whether this date is a week day.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to examine or the year to examine.\n      @param [monthIndex] {number} The month index to examine.\n      @param [day] {number} The day to examine.\n      @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\n      @throws Error if an invalid date or a different calendar used. */\n  weekDay: function weekDay(year, monthIndex, day) {\n    return (this.dayOfWeek(year, monthIndex, day) || 7) < 6;\n  },\n  /** Retrieve the Julian date equivalent for this date,\n      i.e. days since January 1, 4713 BCE Greenwich noon.\n      @memberof ChineseCalendar\n      @param year {CDate|number} The date to convert or the year to convert.\n      @param [monthIndex] {number} The month index to convert.\n      @param [day] {number} The day to convert.\n      @return {number} The equivalent Julian date.\n      @throws Error if an invalid date or a different calendar used. */\n  toJD: function toJD(year, monthIndex, day) {\n    var date = this._validate(year, month, day, main.local.invalidDate);\n    year = this._validateYear(date.year());\n    monthIndex = date.month();\n    day = date.day();\n    var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n    var month = this.toChineseMonth(year, monthIndex);\n    var solar = toSolar(year, month, day, isIntercalary);\n    return gregorianCalendar.toJD(solar.year, solar.month, solar.day);\n  },\n  /** Create a new date from a Julian date.\n      @memberof ChineseCalendar\n      @param jd {number} The Julian date to convert.\n      @return {CDate} The equivalent date. */\n  fromJD: function fromJD(jd) {\n    var date = gregorianCalendar.fromJD(jd);\n    var lunar = toLunar(date.year(), date.month(), date.day());\n    var monthIndex = this.toMonthIndex(lunar.year, lunar.month, lunar.isIntercalary);\n    return this.newDate(lunar.year, monthIndex, lunar.day);\n  },\n  /** Create a new date from a string.\n      @memberof ChineseCalendar\n      @param dateString {string} String representing a Chinese date\n      @return {CDate} The new date.\n      @throws Error if an invalid date. */\n  fromString: function fromString(dateString) {\n    var match = dateString.match(DATE_REGEXP);\n    var year = this._validateYear(+match[1]);\n    var month = +match[2];\n    var isIntercalary = !!match[3];\n    var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n    var day = +match[4];\n    return this.newDate(year, monthIndex, day);\n  },\n  /** Add period(s) to a date.\n      Cater for no year zero.\n      @memberof ChineseCalendar\n      @param date {CDate} The starting date.\n      @param offset {number} The number of periods to adjust by.\n      @param period {string} One of 'y' for year, 'm' for month, 'w' for week, 'd' for day.\n      @return {CDate} The updated date.\n      @throws Error if a different calendar used. */\n  add: function add(date, offset, period) {\n    var year = date.year();\n    var monthIndex = date.month();\n    var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n    var month = this.toChineseMonth(year, monthIndex);\n    var cdate = Object.getPrototypeOf(ChineseCalendar.prototype).add.call(this, date, offset, period);\n    if (period === 'y') {\n      // Resync month\n      var resultYear = cdate.year();\n      var resultMonthIndex = cdate.month();\n\n      // Using the fact the month index of an intercalary month\n      // equals its month number:\n      var resultCanBeIntercalaryMonth = this.isIntercalaryMonth(resultYear, month);\n      var correctedMonthIndex = isIntercalary && resultCanBeIntercalaryMonth ? this.toMonthIndex(resultYear, month, true) : this.toMonthIndex(resultYear, month, false);\n      if (correctedMonthIndex !== resultMonthIndex) {\n        cdate.month(correctedMonthIndex);\n      }\n    }\n    return cdate;\n  }\n});\n\n// Used by ChineseCalendar.prototype.fromString\nvar DATE_REGEXP = /^\\s*(-?\\d\\d\\d\\d|\\d\\d)[-/](\\d?\\d)([iI]?)[-/](\\d?\\d)/m;\nvar MONTH_NUMBER_REGEXP = /^\\d?\\d[iI]?/m;\nvar MONTH_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?月/m;\nvar MONTH_SHORT_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?/m;\n\n// Chinese calendar implementation\nmain.calendars.chinese = ChineseCalendar;\n\n// Chinese calendar tables from year 1888 to 2111\n//\n// Source:\n// https://github.com/isee15/Lunar-Solar-Calendar-Converter.git\n\n// Table of intercalary months and days per month from year 1888 to 2111\n//\n// bit (12 - i):        days in the i^th month\n//                      (= 0 if i^th lunar month has 29 days)\n//                      (= 1 if i^th lunar month has 30 days)\n//                      (first month in lunar year is i = 0)\n// bits (13,14,15,16):  intercalary month\n//                      (= 0 if lunar year has no intercalary month)\nvar LUNAR_MONTH_DAYS = [1887, 0x1694, 0x16aa, 0x4ad5, 0xab6, 0xc4b7, 0x4ae, 0xa56, 0xb52a, 0x1d2a, 0xd54, 0x75aa, 0x156a, 0x1096d, 0x95c, 0x14ae, 0xaa4d, 0x1a4c, 0x1b2a, 0x8d55, 0xad4, 0x135a, 0x495d, 0x95c, 0xd49b, 0x149a, 0x1a4a, 0xbaa5, 0x16a8, 0x1ad4, 0x52da, 0x12b6, 0xe937, 0x92e, 0x1496, 0xb64b, 0xd4a, 0xda8, 0x95b5, 0x56c, 0x12ae, 0x492f, 0x92e, 0xcc96, 0x1a94, 0x1d4a, 0xada9, 0xb5a, 0x56c, 0x726e, 0x125c, 0xf92d, 0x192a, 0x1a94, 0xdb4a, 0x16aa, 0xad4, 0x955b, 0x4ba, 0x125a, 0x592b, 0x152a, 0xf695, 0xd94, 0x16aa, 0xaab5, 0x9b4, 0x14b6, 0x6a57, 0xa56, 0x1152a, 0x1d2a, 0xd54, 0xd5aa, 0x156a, 0x96c, 0x94ae, 0x14ae, 0xa4c, 0x7d26, 0x1b2a, 0xeb55, 0xad4, 0x12da, 0xa95d, 0x95a, 0x149a, 0x9a4d, 0x1a4a, 0x11aa5, 0x16a8, 0x16d4, 0xd2da, 0x12b6, 0x936, 0x9497, 0x1496, 0x1564b, 0xd4a, 0xda8, 0xd5b4, 0x156c, 0x12ae, 0xa92f, 0x92e, 0xc96, 0x6d4a, 0x1d4a, 0x10d65, 0xb58, 0x156c, 0xb26d, 0x125c, 0x192c, 0x9a95, 0x1a94, 0x1b4a, 0x4b55, 0xad4, 0xf55b, 0x4ba, 0x125a, 0xb92b, 0x152a, 0x1694, 0x96aa, 0x15aa, 0x12ab5, 0x974, 0x14b6, 0xca57, 0xa56, 0x1526, 0x8e95, 0xd54, 0x15aa, 0x49b5, 0x96c, 0xd4ae, 0x149c, 0x1a4c, 0xbd26, 0x1aa6, 0xb54, 0x6d6a, 0x12da, 0x1695d, 0x95a, 0x149a, 0xda4b, 0x1a4a, 0x1aa4, 0xbb54, 0x16b4, 0xada, 0x495b, 0x936, 0xf497, 0x1496, 0x154a, 0xb6a5, 0xda4, 0x15b4, 0x6ab6, 0x126e, 0x1092f, 0x92e, 0xc96, 0xcd4a, 0x1d4a, 0xd64, 0x956c, 0x155c, 0x125c, 0x792e, 0x192c, 0xfa95, 0x1a94, 0x1b4a, 0xab55, 0xad4, 0x14da, 0x8a5d, 0xa5a, 0x1152b, 0x152a, 0x1694, 0xd6aa, 0x15aa, 0xab4, 0x94ba, 0x14b6, 0xa56, 0x7527, 0xd26, 0xee53, 0xd54, 0x15aa, 0xa9b5, 0x96c, 0x14ae, 0x8a4e, 0x1a4c, 0x11d26, 0x1aa4, 0x1b54, 0xcd6a, 0xada, 0x95c, 0x949d, 0x149a, 0x1a2a, 0x5b25, 0x1aa4, 0xfb52, 0x16b4, 0xaba, 0xa95b, 0x936, 0x1496, 0x9a4b, 0x154a, 0x136a5, 0xda4, 0x15ac];\n\n// Table of Chinese New Years from year 1888 to 2111\n// \n// bits (0 to 4):   solar day\n// bits (5 to 8):   solar month\n// bits (9 to 20):  solar year\nvar CHINESE_NEW_YEAR = [1887, 0xec04c, 0xec23f, 0xec435, 0xec649, 0xec83e, 0xeca51, 0xecc46, 0xece3a, 0xed04d, 0xed242, 0xed436, 0xed64a, 0xed83f, 0xeda53, 0xedc48, 0xede3d, 0xee050, 0xee244, 0xee439, 0xee64d, 0xee842, 0xeea36, 0xeec4a, 0xeee3e, 0xef052, 0xef246, 0xef43a, 0xef64e, 0xef843, 0xefa37, 0xefc4b, 0xefe41, 0xf0054, 0xf0248, 0xf043c, 0xf0650, 0xf0845, 0xf0a38, 0xf0c4d, 0xf0e42, 0xf1037, 0xf124a, 0xf143e, 0xf1651, 0xf1846, 0xf1a3a, 0xf1c4e, 0xf1e44, 0xf2038, 0xf224b, 0xf243f, 0xf2653, 0xf2848, 0xf2a3b, 0xf2c4f, 0xf2e45, 0xf3039, 0xf324d, 0xf3442, 0xf3636, 0xf384a, 0xf3a3d, 0xf3c51, 0xf3e46, 0xf403b, 0xf424e, 0xf4443, 0xf4638, 0xf484c, 0xf4a3f, 0xf4c52, 0xf4e48, 0xf503c, 0xf524f, 0xf5445, 0xf5639, 0xf584d, 0xf5a42, 0xf5c35, 0xf5e49, 0xf603e, 0xf6251, 0xf6446, 0xf663b, 0xf684f, 0xf6a43, 0xf6c37, 0xf6e4b, 0xf703f, 0xf7252, 0xf7447, 0xf763c, 0xf7850, 0xf7a45, 0xf7c39, 0xf7e4d, 0xf8042, 0xf8254, 0xf8449, 0xf863d, 0xf8851, 0xf8a46, 0xf8c3b, 0xf8e4f, 0xf9044, 0xf9237, 0xf944a, 0xf963f, 0xf9853, 0xf9a47, 0xf9c3c, 0xf9e50, 0xfa045, 0xfa238, 0xfa44c, 0xfa641, 0xfa836, 0xfaa49, 0xfac3d, 0xfae52, 0xfb047, 0xfb23a, 0xfb44e, 0xfb643, 0xfb837, 0xfba4a, 0xfbc3f, 0xfbe53, 0xfc048, 0xfc23c, 0xfc450, 0xfc645, 0xfc839, 0xfca4c, 0xfcc41, 0xfce36, 0xfd04a, 0xfd23d, 0xfd451, 0xfd646, 0xfd83a, 0xfda4d, 0xfdc43, 0xfde37, 0xfe04b, 0xfe23f, 0xfe453, 0xfe648, 0xfe83c, 0xfea4f, 0xfec44, 0xfee38, 0xff04c, 0xff241, 0xff436, 0xff64a, 0xff83e, 0xffa51, 0xffc46, 0xffe3a, 0x10004e, 0x100242, 0x100437, 0x10064b, 0x100841, 0x100a53, 0x100c48, 0x100e3c, 0x10104f, 0x101244, 0x101438, 0x10164c, 0x101842, 0x101a35, 0x101c49, 0x101e3d, 0x102051, 0x102245, 0x10243a, 0x10264e, 0x102843, 0x102a37, 0x102c4b, 0x102e3f, 0x103053, 0x103247, 0x10343b, 0x10364f, 0x103845, 0x103a38, 0x103c4c, 0x103e42, 0x104036, 0x104249, 0x10443d, 0x104651, 0x104846, 0x104a3a, 0x104c4e, 0x104e43, 0x105038, 0x10524a, 0x10543e, 0x105652, 0x105847, 0x105a3b, 0x105c4f, 0x105e45, 0x106039, 0x10624c, 0x106441, 0x106635, 0x106849, 0x106a3d, 0x106c51, 0x106e47, 0x10703c, 0x10724f, 0x107444, 0x107638, 0x10784c, 0x107a3f, 0x107c53, 0x107e48];\nfunction toLunar(yearOrDate, monthOrResult, day, result) {\n  var solarDate;\n  var lunarDate;\n  if (typeof yearOrDate === 'object') {\n    solarDate = yearOrDate;\n    lunarDate = monthOrResult || {};\n  } else {\n    var isValidYear = typeof yearOrDate === 'number' && yearOrDate >= 1888 && yearOrDate <= 2111;\n    if (!isValidYear) throw new Error(\"Solar year outside range 1888-2111\");\n    var isValidMonth = typeof monthOrResult === 'number' && monthOrResult >= 1 && monthOrResult <= 12;\n    if (!isValidMonth) throw new Error(\"Solar month outside range 1 - 12\");\n    var isValidDay = typeof day === 'number' && day >= 1 && day <= 31;\n    if (!isValidDay) throw new Error(\"Solar day outside range 1 - 31\");\n    solarDate = {\n      year: yearOrDate,\n      month: monthOrResult,\n      day: day\n    };\n    lunarDate = result || {};\n  }\n\n  // Compute Chinese new year and lunar year\n  var chineseNewYearPackedDate = CHINESE_NEW_YEAR[solarDate.year - CHINESE_NEW_YEAR[0]];\n  var packedDate = solarDate.year << 9 | solarDate.month << 5 | solarDate.day;\n  lunarDate.year = packedDate >= chineseNewYearPackedDate ? solarDate.year : solarDate.year - 1;\n  chineseNewYearPackedDate = CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n  var y = chineseNewYearPackedDate >> 9 & 0xFFF;\n  var m = chineseNewYearPackedDate >> 5 & 0x0F;\n  var d = chineseNewYearPackedDate & 0x1F;\n\n  // Compute days from new year\n  var daysFromNewYear;\n  var chineseNewYearJSDate = new Date(y, m - 1, d);\n  var jsDate = new Date(solarDate.year, solarDate.month - 1, solarDate.day);\n  daysFromNewYear = Math.round((jsDate - chineseNewYearJSDate) / (24 * 3600 * 1000));\n\n  // Compute lunar month and day\n  var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n  var i;\n  for (i = 0; i < 13; i++) {\n    var daysInMonth = monthDaysTable & 1 << 12 - i ? 30 : 29;\n    if (daysFromNewYear < daysInMonth) {\n      break;\n    }\n    daysFromNewYear -= daysInMonth;\n  }\n  var intercalaryMonth = monthDaysTable >> 13;\n  if (!intercalaryMonth || i < intercalaryMonth) {\n    lunarDate.isIntercalary = false;\n    lunarDate.month = 1 + i;\n  } else if (i === intercalaryMonth) {\n    lunarDate.isIntercalary = true;\n    lunarDate.month = i;\n  } else {\n    lunarDate.isIntercalary = false;\n    lunarDate.month = i;\n  }\n  lunarDate.day = 1 + daysFromNewYear;\n  return lunarDate;\n}\nfunction toSolar(yearOrDate, monthOrResult, day, isIntercalaryOrResult, result) {\n  var solarDate;\n  var lunarDate;\n  if (typeof yearOrDate === 'object') {\n    lunarDate = yearOrDate;\n    solarDate = monthOrResult || {};\n  } else {\n    var isValidYear = typeof yearOrDate === 'number' && yearOrDate >= 1888 && yearOrDate <= 2111;\n    if (!isValidYear) throw new Error(\"Lunar year outside range 1888-2111\");\n    var isValidMonth = typeof monthOrResult === 'number' && monthOrResult >= 1 && monthOrResult <= 12;\n    if (!isValidMonth) throw new Error(\"Lunar month outside range 1 - 12\");\n    var isValidDay = typeof day === 'number' && day >= 1 && day <= 30;\n    if (!isValidDay) throw new Error(\"Lunar day outside range 1 - 30\");\n    var isIntercalary;\n    if (typeof isIntercalaryOrResult === 'object') {\n      isIntercalary = false;\n      solarDate = isIntercalaryOrResult;\n    } else {\n      isIntercalary = !!isIntercalaryOrResult;\n      solarDate = result || {};\n    }\n    lunarDate = {\n      year: yearOrDate,\n      month: monthOrResult,\n      day: day,\n      isIntercalary: isIntercalary\n    };\n  }\n\n  // Compute days from new year\n  var daysFromNewYear;\n  daysFromNewYear = lunarDate.day - 1;\n  var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n  var intercalaryMonth = monthDaysTable >> 13;\n  var monthsFromNewYear;\n  if (!intercalaryMonth) {\n    monthsFromNewYear = lunarDate.month - 1;\n  } else if (lunarDate.month > intercalaryMonth) {\n    monthsFromNewYear = lunarDate.month;\n  } else if (lunarDate.isIntercalary) {\n    monthsFromNewYear = lunarDate.month;\n  } else {\n    monthsFromNewYear = lunarDate.month - 1;\n  }\n  for (var i = 0; i < monthsFromNewYear; i++) {\n    var daysInMonth = monthDaysTable & 1 << 12 - i ? 30 : 29;\n    daysFromNewYear += daysInMonth;\n  }\n\n  // Compute Chinese new year\n  var packedDate = CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n  var y = packedDate >> 9 & 0xFFF;\n  var m = packedDate >> 5 & 0x0F;\n  var d = packedDate & 0x1F;\n\n  // Compute solar date\n  var jsDate = new Date(y, m - 1, d + daysFromNewYear);\n  solarDate.year = jsDate.getFullYear();\n  solarDate.month = 1 + jsDate.getMonth();\n  solarDate.day = jsDate.getDate();\n  return solarDate;\n}","map":{"version":3,"names":["main","require","assign","gregorianCalendar","instance","ChineseCalendar","language","local","regionalOptions","prototype","baseCalendar","name","jdEpoch","hasYearZero","minMonth","firstMonth","minDay","epochs","monthNumbers","date","padded","match","MONTH_NUMBER_REGEXP","year","_validateYear","monthIndex","month","toChineseMonth","length","isIntercalaryMonth","monthNames","MONTH_NAME_REGEXP","monthName","monthNamesShort","MONTH_SHORT_NAME_REGEXP","parseMonth","monthString","parseInt","isIntercalary","isNaN","i","substring","indexOf","toMonthIndex","dayNames","dayNamesShort","dayNamesMin","digits","dateFormat","firstDay","isRTL","error","replace","intercalaryMonth","invalidIntercalaryMonth","invalidMonth","maxMonthIndex","monthDaysTable","LUNAR_MONTH_DAYS","leapYear","weekOfYear","day","validatedYear","invalidyear","packedDate","CHINESE_NEW_YEAR","y","m","d","firstThursday","newDate","add","dayOfWeek","offset","toJD","Math","floor","monthsInYear","daysInMonth","weekDay","_validate","invalidDate","solar","toSolar","fromJD","jd","lunar","toLunar","fromString","dateString","DATE_REGEXP","period","cdate","Object","getPrototypeOf","call","resultYear","resultMonthIndex","resultCanBeIntercalaryMonth","correctedMonthIndex","calendars","chinese","yearOrDate","monthOrResult","result","solarDate","lunarDate","isValidYear","Error","isValidMonth","isValidDay","chineseNewYearPackedDate","daysFromNewYear","chineseNewYearJSDate","Date","jsDate","round","isIntercalaryOrResult","monthsFromNewYear","getFullYear","getMonth","getDate"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/world-calendars/dist/calendars/chinese.js"],"sourcesContent":["/*\n * World Calendars\n * https://github.com/alexcjohnson/world-calendars\n *\n * Batch-converted from kbwood/calendars\n * Many thanks to Keith Wood and all of the contributors to the original project!\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n﻿/* http://keith-wood.name/calendars.html\n   Traditional Chinese calendar for jQuery v2.0.2.\n   Written by Nicolas Riesco (enquiries@nicolasriesco.net) December 2016.\n   Available under the MIT (http://keith-wood.name/licence.html) license. \n   Please attribute the author if you use it. */\n\nvar main = require('../main');\nvar assign = require('object-assign');\n\n\nvar gregorianCalendar = main.instance();\n\n/** Implementation of the traditional Chinese calendar.\n    Source of calendar tables https://github.com/isee15/Lunar-Solar-Calendar-Converter .\n    @class ChineseCalendar\n    @param [language=''] {string} The language code (default English) for localisation. */\nfunction ChineseCalendar(language) {\n    this.local = this.regionalOptions[language || ''] || this.regionalOptions[''];\n}\n\nChineseCalendar.prototype = new main.baseCalendar;\n\nassign(ChineseCalendar.prototype, {\n    /** The calendar name.\n        @memberof ChineseCalendar */\n    name: 'Chinese',\n     /** Julian date of start of Gregorian epoch: 1 January 0001 CE.\n        @memberof GregorianCalendar */\n    jdEpoch: 1721425.5,\n    /** <code>true</code> if has a year zero, <code>false</code> if not.\n        @memberof ChineseCalendar */\n    hasYearZero: false,\n    /** The minimum month number.\n        This calendar uses month indices to account for intercalary months. \n        @memberof ChineseCalendar */\n    minMonth: 0,\n    /** The first month in the year.\n        This calendar uses month indices to account for intercalary months. \n        @memberof ChineseCalendar */\n    firstMonth: 0,\n    /** The minimum day number.\n        @memberof ChineseCalendar */\n    minDay: 1,\n\n    /** Localisations for the plugin.\n        Entries are objects indexed by the language code ('' being the default US/English).\n        Each object has the following attributes.\n        @memberof ChineseCalendar\n        @property name {string} The calendar name.\n        @property epochs {string[]} The epoch names.\n        @property monthNames {string[]} The long names of the months of the year.\n        @property monthNamesShort {string[]} The short names of the months of the year.\n        @property dayNames {string[]} The long names of the days of the week.\n        @property dayNamesShort {string[]} The short names of the days of the week.\n        @property dayNamesMin {string[]} The minimal names of the days of the week.\n        @property dateFormat {string} The date format for this calendar.\n                See the options on <a href=\"BaseCalendar.html#formatDate\"><code>formatDate</code></a> for details.\n        @property firstDay {number} The number of the first day of the week, starting at 0.\n        @property isRTL {number} <code>true</code> if this localisation reads right-to-left. */\n    regionalOptions: { // Localisations\n        '': {\n            name: 'Chinese',\n            epochs: ['BEC', 'EC'],\n            monthNumbers: function(date, padded) {\n                if (typeof date === 'string') {\n                    var match = date.match(MONTH_NUMBER_REGEXP);\n                    return (match) ? match[0] : '';\n                }\n\n                var year = this._validateYear(date);\n                var monthIndex = date.month();\n\n                var month = '' + this.toChineseMonth(year, monthIndex);\n\n                if (padded && month.length < 2) {\n                    month = \"0\" + month;\n                }\n\n                if (this.isIntercalaryMonth(year, monthIndex)) {\n                    month += 'i';\n                }\n\n                return month;\n            },\n            monthNames: function(date) {\n                if (typeof date === 'string') {\n                    var match = date.match(MONTH_NAME_REGEXP);\n                    return (match) ? match[0] : '';\n                }\n\n                var year = this._validateYear(date);\n                var monthIndex = date.month();\n\n                var month = this.toChineseMonth(year, monthIndex);\n\n                var monthName = ['一月','二月','三月','四月','五月','六月',\n                    '七月','八月','九月','十月','十一月','十二月'][month - 1];\n\n                if (this.isIntercalaryMonth(year, monthIndex)) {\n                    monthName = '闰' + monthName;\n                }\n\n                return monthName;\n            },\n            monthNamesShort: function(date) {\n                if (typeof date === 'string') {\n                    var match = date.match(MONTH_SHORT_NAME_REGEXP);\n                    return (match) ? match[0] : '';\n                }\n\n                var year = this._validateYear(date);\n                var monthIndex = date.month();\n\n                var month = this.toChineseMonth(year, monthIndex);\n\n                var monthName = ['一','二','三','四','五','六',\n                    '七','八','九','十','十一','十二'][month - 1];\n\n                if (this.isIntercalaryMonth(year, monthIndex)) {\n                    monthName = '闰' + monthName;\n                }\n\n                return monthName;\n            },\n            parseMonth: function(year, monthString) {\n                year = this._validateYear(year);\n                var month = parseInt(monthString);\n                var isIntercalary;\n\n                if (!isNaN(month)) {\n                    var i = monthString[monthString.length - 1];\n                    isIntercalary = (i === 'i' || i === 'I');\n                } else {\n                    if (monthString[0] === '闰') {\n                        isIntercalary = true;\n                        monthString = monthString.substring(1);\n                    }\n                    if (monthString[monthString.length - 1] === '月') {\n                        monthString = monthString.substring(0, monthString.length - 1);\n                    }\n                    month = 1 +\n                        ['一','二','三','四','五','六',\n                        '七','八','九','十','十一','十二'].indexOf(monthString);\n                }\n\n                var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n                return monthIndex;\n            },\n            dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n            digits: null,\n            dateFormat: 'yyyy/mm/dd',\n            firstDay: 1,\n            isRTL: false\n        }\n    },\n\n    /** Check that a candidate date is from the same calendar and is valid.\n        @memberof BaseCalendar\n        @private\n        @param year {CDate|number} The date or the year to validate.\n        @param error {string} Error message if invalid.\n        @return {number} The year.\n        @throws Error if year out of range. */\n    _validateYear: function(year, error) {\n        if (year.year) {\n            year = year.year();\n        }\n\n        if (typeof year !== 'number' || year < 1888 || year > 2111) {\n            throw error.replace(/\\{0\\}/, this.local.name);\n        }\n\n        return year;\n    },\n\n    /** Retrieve the month index (i.e. accounting for intercalary months).\n        @memberof ChineseCalendar\n        @param year {number} The year.\n        @param month {number} The month (1 for first month).\n        @param [isIntercalary=false] {boolean} If month is intercalary.\n        @return {number} The month index (0 for first month).\n        @throws Error if an invalid month/year or a different calendar used. */\n    toMonthIndex: function(year, month, isIntercalary) {\n        // compute intercalary month in the year (0 if none)\n        var intercalaryMonth = this.intercalaryMonth(year);\n\n        // validate month\n        var invalidIntercalaryMonth = \n            (isIntercalary && month !== intercalaryMonth);\n        if (invalidIntercalaryMonth || month < 1 || month > 12) {\n            throw main.local.invalidMonth\n                .replace(/\\{0\\}/, this.local.name);\n        }\n\n        // compute month index\n        var monthIndex;\n\n        if (!intercalaryMonth) {\n            monthIndex = month - 1;\n        } else if(!isIntercalary && month <= intercalaryMonth) {\n            monthIndex = month - 1;\n        } else {\n            monthIndex = month;\n        }\n\n        return monthIndex;\n    },\n\n    /** Retrieve the month (i.e. accounting for intercalary months).\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date or the year to examine.\n        @param monthIndex {number} The month index (0 for first month).\n        @return {number} The month (1 for first month).\n        @throws Error if an invalid month/year or a different calendar used. */\n    toChineseMonth: function(year, monthIndex) {\n        if (year.year) {\n            year = year.year();\n            monthIndex = year.month();\n        }\n\n        // compute intercalary month in the year (0 if none)\n        var intercalaryMonth = this.intercalaryMonth(year);\n\n        // validate month\n        var maxMonthIndex = (intercalaryMonth) ? 12 : 11;\n        if (monthIndex < 0 || monthIndex > maxMonthIndex) {\n            throw main.local.invalidMonth\n                .replace(/\\{0\\}/, this.local.name);\n        }\n\n        // compute Chinese month\n        var month;\n\n        if (!intercalaryMonth) {\n            month = monthIndex + 1;\n        } else if(monthIndex < intercalaryMonth) {\n            month = monthIndex + 1;\n        } else {\n            month = monthIndex;\n        }\n\n        return month;\n    },\n\n    /** Determine the intercalary month of a year (if any).\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {number} The intercalary month number, or 0 if none.\n        @throws Error if an invalid year or a different calendar used. */\n    intercalaryMonth: function(year) {\n        year = this._validateYear(year);\n\n        var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n        var intercalaryMonth = monthDaysTable >> 13;\n\n        return intercalaryMonth;\n    },\n\n    /** Determine whether this date is an intercalary month.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [monthIndex] {number} The month index to examine.\n        @return {boolean} <code>true</code> if this is an intercalary month, <code>false</code> if not.\n        @throws Error if an invalid year or a different calendar used. */\n    isIntercalaryMonth: function(year, monthIndex) {\n        if (year.year) {\n            year = year.year();\n            monthIndex = year.month();\n        }\n\n        var intercalaryMonth = this.intercalaryMonth(year);\n\n        return !!intercalaryMonth && intercalaryMonth === monthIndex;\n    },\n\n    /** Determine whether this date is in a leap year.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {boolean} <code>true</code> if this is a leap year, <code>false</code> if not.\n        @throws Error if an invalid year or a different calendar used. */\n    leapYear: function(year) {\n        return (this.intercalaryMonth(year) !== 0);\n    },\n\n    /** Determine the week of the year for a date - ISO 8601.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [monthIndex] {number} The month index to examine.\n        @param [day] {number} The day to examine.\n        @return {number} The week of the year.\n        @throws Error if an invalid date or a different calendar used. */\n    weekOfYear: function(year, monthIndex, day) {\n        // compute Chinese new year\n        var validatedYear =\n            this._validateYear(year, main.local.invalidyear);\n        var packedDate =\n            CHINESE_NEW_YEAR[validatedYear - CHINESE_NEW_YEAR[0]];\n\n        var y = (packedDate >> 9) & 0xFFF;\n        var m = (packedDate >> 5) & 0x0F;\n        var d = packedDate & 0x1F;\n        \n        // find first Thrusday of the year\n        var firstThursday;\n        firstThursday = gregorianCalendar.newDate(y, m, d);\n        firstThursday.add(4 - (firstThursday.dayOfWeek() || 7), 'd');\n\n        // compute days from first Thursday\n        var offset =\n            this.toJD(year, monthIndex, day) - firstThursday.toJD();\n        return 1 + Math.floor(offset / 7);\n    },\n\n    /** Retrieve the number of months in a year.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @return {number} The number of months.\n        @throws Error if an invalid year or a different calendar used. */\n    monthsInYear: function(year) {\n        return (this.leapYear(year)) ? 13 : 12;\n    },\n\n    /** Retrieve the number of days in a month.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year of the month.\n        @param [monthIndex] {number} The month index.\n        @return {number} The number of days in this month.\n        @throws Error if an invalid month/year or a different calendar used. */\n    daysInMonth: function(year, monthIndex) {\n        if (year.year) {\n            monthIndex = year.month();\n            year = year.year();\n        }\n\n        year = this._validateYear(year);\n\n        var monthDaysTable = LUNAR_MONTH_DAYS[year - LUNAR_MONTH_DAYS[0]];\n\n        var intercalaryMonth = monthDaysTable >> 13;\n        var maxMonthIndex = (intercalaryMonth) ? 12 : 11;\n        if (monthIndex > maxMonthIndex) {\n            throw main.local.invalidMonth\n                .replace(/\\{0\\}/, this.local.name);\n        }\n\n        var daysInMonth = (monthDaysTable & (1 << (12 - monthIndex))) ?\n            30 : 29;\n\n        return daysInMonth;\n    },\n\n    /** Determine whether this date is a week day.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to examine or the year to examine.\n        @param [monthIndex] {number} The month index to examine.\n        @param [day] {number} The day to examine.\n        @return {boolean} <code>true</code> if a week day, <code>false</code> if not.\n        @throws Error if an invalid date or a different calendar used. */\n    weekDay: function(year, monthIndex, day) {\n        return (this.dayOfWeek(year, monthIndex, day) || 7) < 6;\n    },\n\n    /** Retrieve the Julian date equivalent for this date,\n        i.e. days since January 1, 4713 BCE Greenwich noon.\n        @memberof ChineseCalendar\n        @param year {CDate|number} The date to convert or the year to convert.\n        @param [monthIndex] {number} The month index to convert.\n        @param [day] {number} The day to convert.\n        @return {number} The equivalent Julian date.\n        @throws Error if an invalid date or a different calendar used. */\n    toJD: function(year, monthIndex, day) {\n        var date = this._validate(year, month, day, main.local.invalidDate);\n        year = this._validateYear(date.year());\n        monthIndex = date.month();\n        day = date.day();\n\n        var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n        var month = this.toChineseMonth(year, monthIndex);\n\n        var solar = toSolar(year, month, day, isIntercalary);\n\n        return gregorianCalendar.toJD(solar.year, solar.month, solar.day);\n    },\n\n    /** Create a new date from a Julian date.\n        @memberof ChineseCalendar\n        @param jd {number} The Julian date to convert.\n        @return {CDate} The equivalent date. */\n    fromJD: function(jd) {\n        var date = gregorianCalendar.fromJD(jd);\n        var lunar = toLunar(date.year(), date.month(), date.day());\n        var monthIndex = this.toMonthIndex(\n            lunar.year, lunar.month, lunar.isIntercalary);\n        return this.newDate(lunar.year, monthIndex, lunar.day);\n    },\n\n    /** Create a new date from a string.\n        @memberof ChineseCalendar\n        @param dateString {string} String representing a Chinese date\n        @return {CDate} The new date.\n        @throws Error if an invalid date. */\n    fromString: function(dateString) {\n        var match = dateString.match(DATE_REGEXP);\n\n        var year = this._validateYear(+match[1]);\n\n        var month = +match[2];\n        var isIntercalary = !!match[3];\n        var monthIndex = this.toMonthIndex(year, month, isIntercalary);\n\n        var day = +match[4];\n\n        return this.newDate(year, monthIndex, day);\n    },\n\n    /** Add period(s) to a date.\n        Cater for no year zero.\n        @memberof ChineseCalendar\n        @param date {CDate} The starting date.\n        @param offset {number} The number of periods to adjust by.\n        @param period {string} One of 'y' for year, 'm' for month, 'w' for week, 'd' for day.\n        @return {CDate} The updated date.\n        @throws Error if a different calendar used. */\n    add: function(date, offset, period) {\n        var year = date.year();\n        var monthIndex = date.month();\n        var isIntercalary = this.isIntercalaryMonth(year, monthIndex);\n        var month = this.toChineseMonth(year, monthIndex);\n\n        var cdate = Object.getPrototypeOf(ChineseCalendar.prototype)\n            .add.call(this, date, offset, period);\n\n        if (period === 'y') {\n            // Resync month\n            var resultYear = cdate.year();\n            var resultMonthIndex = cdate.month();\n\n            // Using the fact the month index of an intercalary month\n            // equals its month number:\n            var resultCanBeIntercalaryMonth =\n                this.isIntercalaryMonth(resultYear, month);\n\n            var correctedMonthIndex =\n                (isIntercalary && resultCanBeIntercalaryMonth) ?\n                this.toMonthIndex(resultYear, month, true) :\n                this.toMonthIndex(resultYear, month, false);\n\n            if (correctedMonthIndex !== resultMonthIndex) {\n                cdate.month(correctedMonthIndex);\n            }\n        }\n\n        return cdate;\n    },\n});\n\n// Used by ChineseCalendar.prototype.fromString\nvar DATE_REGEXP = /^\\s*(-?\\d\\d\\d\\d|\\d\\d)[-/](\\d?\\d)([iI]?)[-/](\\d?\\d)/m;\nvar MONTH_NUMBER_REGEXP = /^\\d?\\d[iI]?/m;\nvar MONTH_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?月/m;\nvar MONTH_SHORT_NAME_REGEXP = /^闰?十?[一二三四五六七八九]?/m;\n\n// Chinese calendar implementation\nmain.calendars.chinese = ChineseCalendar;\n\n// Chinese calendar tables from year 1888 to 2111\n//\n// Source:\n// https://github.com/isee15/Lunar-Solar-Calendar-Converter.git\n\n// Table of intercalary months and days per month from year 1888 to 2111\n//\n// bit (12 - i):        days in the i^th month\n//                      (= 0 if i^th lunar month has 29 days)\n//                      (= 1 if i^th lunar month has 30 days)\n//                      (first month in lunar year is i = 0)\n// bits (13,14,15,16):  intercalary month\n//                      (= 0 if lunar year has no intercalary month)\nvar LUNAR_MONTH_DAYS = [1887, 0x1694, 0x16aa, 0x4ad5,\n    0xab6, 0xc4b7, 0x4ae, 0xa56, 0xb52a, 0x1d2a, 0xd54, 0x75aa, 0x156a,\n    0x1096d, 0x95c, 0x14ae, 0xaa4d, 0x1a4c, 0x1b2a, 0x8d55, 0xad4,\n    0x135a, 0x495d, 0x95c, 0xd49b, 0x149a, 0x1a4a, 0xbaa5, 0x16a8,\n    0x1ad4, 0x52da, 0x12b6, 0xe937, 0x92e, 0x1496, 0xb64b, 0xd4a,\n    0xda8, 0x95b5, 0x56c, 0x12ae, 0x492f, 0x92e, 0xcc96, 0x1a94,\n    0x1d4a, 0xada9, 0xb5a, 0x56c, 0x726e, 0x125c, 0xf92d, 0x192a,\n    0x1a94, 0xdb4a, 0x16aa, 0xad4, 0x955b, 0x4ba, 0x125a, 0x592b,\n    0x152a, 0xf695, 0xd94, 0x16aa, 0xaab5, 0x9b4, 0x14b6, 0x6a57,\n    0xa56, 0x1152a, 0x1d2a, 0xd54, 0xd5aa, 0x156a, 0x96c, 0x94ae,\n    0x14ae, 0xa4c, 0x7d26, 0x1b2a, 0xeb55, 0xad4, 0x12da, 0xa95d,\n    0x95a, 0x149a, 0x9a4d, 0x1a4a, 0x11aa5, 0x16a8, 0x16d4, 0xd2da,\n    0x12b6, 0x936, 0x9497, 0x1496, 0x1564b, 0xd4a, 0xda8, 0xd5b4,\n    0x156c, 0x12ae, 0xa92f, 0x92e, 0xc96, 0x6d4a, 0x1d4a, 0x10d65,\n    0xb58, 0x156c, 0xb26d, 0x125c, 0x192c, 0x9a95, 0x1a94, 0x1b4a,\n    0x4b55, 0xad4, 0xf55b, 0x4ba, 0x125a, 0xb92b, 0x152a, 0x1694,\n    0x96aa, 0x15aa, 0x12ab5, 0x974, 0x14b6, 0xca57, 0xa56, 0x1526,\n    0x8e95, 0xd54, 0x15aa, 0x49b5, 0x96c, 0xd4ae, 0x149c, 0x1a4c,\n    0xbd26, 0x1aa6, 0xb54, 0x6d6a, 0x12da, 0x1695d, 0x95a, 0x149a,\n    0xda4b, 0x1a4a, 0x1aa4, 0xbb54, 0x16b4, 0xada, 0x495b, 0x936,\n    0xf497, 0x1496, 0x154a, 0xb6a5, 0xda4, 0x15b4, 0x6ab6, 0x126e,\n    0x1092f, 0x92e, 0xc96, 0xcd4a, 0x1d4a, 0xd64, 0x956c, 0x155c,\n    0x125c, 0x792e, 0x192c, 0xfa95, 0x1a94, 0x1b4a, 0xab55, 0xad4,\n    0x14da, 0x8a5d, 0xa5a, 0x1152b, 0x152a, 0x1694, 0xd6aa, 0x15aa,\n    0xab4, 0x94ba, 0x14b6, 0xa56, 0x7527, 0xd26, 0xee53, 0xd54, 0x15aa,\n    0xa9b5, 0x96c, 0x14ae, 0x8a4e, 0x1a4c, 0x11d26, 0x1aa4, 0x1b54,\n    0xcd6a, 0xada, 0x95c, 0x949d, 0x149a, 0x1a2a, 0x5b25, 0x1aa4,\n    0xfb52, 0x16b4, 0xaba, 0xa95b, 0x936, 0x1496, 0x9a4b, 0x154a,\n    0x136a5, 0xda4, 0x15ac];\n\n// Table of Chinese New Years from year 1888 to 2111\n// \n// bits (0 to 4):   solar day\n// bits (5 to 8):   solar month\n// bits (9 to 20):  solar year\nvar CHINESE_NEW_YEAR = [1887, 0xec04c, 0xec23f, 0xec435, 0xec649,\n    0xec83e, 0xeca51, 0xecc46, 0xece3a, 0xed04d, 0xed242, 0xed436,\n    0xed64a, 0xed83f, 0xeda53, 0xedc48, 0xede3d, 0xee050, 0xee244,\n    0xee439, 0xee64d, 0xee842, 0xeea36, 0xeec4a, 0xeee3e, 0xef052,\n    0xef246, 0xef43a, 0xef64e, 0xef843, 0xefa37, 0xefc4b, 0xefe41,\n    0xf0054, 0xf0248, 0xf043c, 0xf0650, 0xf0845, 0xf0a38, 0xf0c4d,\n    0xf0e42, 0xf1037, 0xf124a, 0xf143e, 0xf1651, 0xf1846, 0xf1a3a,\n    0xf1c4e, 0xf1e44, 0xf2038, 0xf224b, 0xf243f, 0xf2653, 0xf2848,\n    0xf2a3b, 0xf2c4f, 0xf2e45, 0xf3039, 0xf324d, 0xf3442, 0xf3636,\n    0xf384a, 0xf3a3d, 0xf3c51, 0xf3e46, 0xf403b, 0xf424e, 0xf4443,\n    0xf4638, 0xf484c, 0xf4a3f, 0xf4c52, 0xf4e48, 0xf503c, 0xf524f,\n    0xf5445, 0xf5639, 0xf584d, 0xf5a42, 0xf5c35, 0xf5e49, 0xf603e,\n    0xf6251, 0xf6446, 0xf663b, 0xf684f, 0xf6a43, 0xf6c37, 0xf6e4b,\n    0xf703f, 0xf7252, 0xf7447, 0xf763c, 0xf7850, 0xf7a45, 0xf7c39,\n    0xf7e4d, 0xf8042, 0xf8254, 0xf8449, 0xf863d, 0xf8851, 0xf8a46,\n    0xf8c3b, 0xf8e4f, 0xf9044, 0xf9237, 0xf944a, 0xf963f, 0xf9853,\n    0xf9a47, 0xf9c3c, 0xf9e50, 0xfa045, 0xfa238, 0xfa44c, 0xfa641,\n    0xfa836, 0xfaa49, 0xfac3d, 0xfae52, 0xfb047, 0xfb23a, 0xfb44e,\n    0xfb643, 0xfb837, 0xfba4a, 0xfbc3f, 0xfbe53, 0xfc048, 0xfc23c,\n    0xfc450, 0xfc645, 0xfc839, 0xfca4c, 0xfcc41, 0xfce36, 0xfd04a,\n    0xfd23d, 0xfd451, 0xfd646, 0xfd83a, 0xfda4d, 0xfdc43, 0xfde37,\n    0xfe04b, 0xfe23f, 0xfe453, 0xfe648, 0xfe83c, 0xfea4f, 0xfec44,\n    0xfee38, 0xff04c, 0xff241, 0xff436, 0xff64a, 0xff83e, 0xffa51,\n    0xffc46, 0xffe3a, 0x10004e, 0x100242, 0x100437, 0x10064b, 0x100841,\n    0x100a53, 0x100c48, 0x100e3c, 0x10104f, 0x101244, 0x101438,\n    0x10164c, 0x101842, 0x101a35, 0x101c49, 0x101e3d, 0x102051,\n    0x102245, 0x10243a, 0x10264e, 0x102843, 0x102a37, 0x102c4b,\n    0x102e3f, 0x103053, 0x103247, 0x10343b, 0x10364f, 0x103845,\n    0x103a38, 0x103c4c, 0x103e42, 0x104036, 0x104249, 0x10443d,\n    0x104651, 0x104846, 0x104a3a, 0x104c4e, 0x104e43, 0x105038,\n    0x10524a, 0x10543e, 0x105652, 0x105847, 0x105a3b, 0x105c4f,\n    0x105e45, 0x106039, 0x10624c, 0x106441, 0x106635, 0x106849,\n    0x106a3d, 0x106c51, 0x106e47, 0x10703c, 0x10724f, 0x107444,\n    0x107638, 0x10784c, 0x107a3f, 0x107c53, 0x107e48];\n\nfunction toLunar(yearOrDate, monthOrResult, day, result) {\n    var solarDate;\n    var lunarDate;\n\n    if(typeof yearOrDate === 'object') {\n        solarDate = yearOrDate;\n        lunarDate = monthOrResult || {};\n\n    } else {\n        var isValidYear = (typeof yearOrDate === 'number') &&\n            (yearOrDate >= 1888) && (yearOrDate <= 2111);\n        if(!isValidYear)\n            throw new Error(\"Solar year outside range 1888-2111\");\n\n        var isValidMonth = (typeof monthOrResult === 'number') &&\n            (monthOrResult >= 1) && (monthOrResult <= 12);\n        if(!isValidMonth)\n            throw new Error(\"Solar month outside range 1 - 12\");\n\n        var isValidDay = (typeof day === 'number') && (day >= 1) && (day <= 31);\n        if(!isValidDay)\n            throw new Error(\"Solar day outside range 1 - 31\");\n\n        solarDate = {\n            year: yearOrDate,\n            month: monthOrResult,\n            day: day,\n        };\n        lunarDate = result || {};\n    }\n\n    // Compute Chinese new year and lunar year\n    var chineseNewYearPackedDate =\n        CHINESE_NEW_YEAR[solarDate.year - CHINESE_NEW_YEAR[0]];\n\n    var packedDate = (solarDate.year << 9) | (solarDate.month << 5)\n        | solarDate.day;\n\n    lunarDate.year = (packedDate >= chineseNewYearPackedDate) ?\n        solarDate.year :\n        solarDate.year - 1;\n\n    chineseNewYearPackedDate =\n        CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n\n    var y = (chineseNewYearPackedDate >> 9) & 0xFFF;\n    var m = (chineseNewYearPackedDate >> 5) & 0x0F;\n    var d = chineseNewYearPackedDate & 0x1F;\n\n    // Compute days from new year\n    var daysFromNewYear;\n\n    var chineseNewYearJSDate = new Date(y, m -1, d);\n    var jsDate = new Date(solarDate.year, solarDate.month - 1, solarDate.day);\n\n    daysFromNewYear = Math.round(\n        (jsDate - chineseNewYearJSDate) / (24 * 3600 * 1000));\n\n    // Compute lunar month and day\n    var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n\n    var i;\n    for(i = 0; i < 13; i++) {\n        var daysInMonth = (monthDaysTable & (1 << (12 - i))) ? 30 : 29;\n\n        if (daysFromNewYear < daysInMonth) {\n            break;\n        }\n\n        daysFromNewYear -= daysInMonth;\n    }\n\n    var intercalaryMonth = monthDaysTable >> 13;\n    if (!intercalaryMonth || i < intercalaryMonth) {\n        lunarDate.isIntercalary = false;\n        lunarDate.month = 1 + i;\n    } else if (i === intercalaryMonth) {\n        lunarDate.isIntercalary = true;\n        lunarDate.month = i;\n    } else {\n        lunarDate.isIntercalary = false;\n        lunarDate.month = i;\n    }\n\n    lunarDate.day = 1 + daysFromNewYear;\n\n    return lunarDate;\n}\n\nfunction toSolar(yearOrDate, monthOrResult, day, isIntercalaryOrResult, result) {\n    var solarDate;\n    var lunarDate;\n\n    if(typeof yearOrDate === 'object') {\n        lunarDate = yearOrDate;\n        solarDate = monthOrResult || {};\n\n    } else {\n        var isValidYear = (typeof yearOrDate === 'number') &&\n            (yearOrDate >= 1888) && (yearOrDate <= 2111);\n        if(!isValidYear)\n            throw new Error(\"Lunar year outside range 1888-2111\");\n\n        var isValidMonth = (typeof monthOrResult === 'number') &&\n            (monthOrResult >= 1) && (monthOrResult <= 12);\n        if(!isValidMonth)\n            throw new Error(\"Lunar month outside range 1 - 12\");\n\n        var isValidDay = (typeof day === 'number') && (day >= 1) && (day <= 30);\n        if(!isValidDay)\n            throw new Error(\"Lunar day outside range 1 - 30\");\n\n        var isIntercalary;\n        if(typeof isIntercalaryOrResult === 'object') {\n            isIntercalary = false;\n            solarDate = isIntercalaryOrResult;\n        } else {\n            isIntercalary = !!isIntercalaryOrResult;\n            solarDate = result || {};\n        }\n\n        lunarDate = {\n            year: yearOrDate,\n            month: monthOrResult,\n            day: day,\n            isIntercalary: isIntercalary,\n        };\n    }\n\n    // Compute days from new year\n    var daysFromNewYear;\n\n    daysFromNewYear = lunarDate.day - 1;\n\n    var monthDaysTable = LUNAR_MONTH_DAYS[lunarDate.year - LUNAR_MONTH_DAYS[0]];\n    var intercalaryMonth = monthDaysTable >> 13;\n\n    var monthsFromNewYear;\n    if (!intercalaryMonth) {\n        monthsFromNewYear = lunarDate.month - 1;\n    } else if (lunarDate.month > intercalaryMonth) {\n        monthsFromNewYear = lunarDate.month;\n    } else if (lunarDate.isIntercalary) {\n        monthsFromNewYear = lunarDate.month;\n    } else {\n        monthsFromNewYear = lunarDate.month - 1;\n    }\n\n    for(var i = 0; i < monthsFromNewYear; i++) {\n        var daysInMonth = (monthDaysTable & (1 << (12 - i))) ? 30 : 29;\n        daysFromNewYear += daysInMonth;\n    }\n\n    // Compute Chinese new year\n    var packedDate = CHINESE_NEW_YEAR[lunarDate.year - CHINESE_NEW_YEAR[0]];\n\n    var y = (packedDate >> 9) & 0xFFF;\n    var m = (packedDate >> 5) & 0x0F;\n    var d = packedDate & 0x1F;\n\n    // Compute solar date\n    var jsDate = new Date(y, m - 1, d + daysFromNewYear);\n\n    solarDate.year = jsDate.getFullYear();\n    solarDate.month = 1 + jsDate.getMonth();\n    solarDate.day = jsDate.getDate();\n\n    return solarDate;\n}\n\n"],"mappings":"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AAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAC5D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAC7D,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC7D,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC5D,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAC7D,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC5D,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAC7D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAC5D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC7D,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAC5D,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAC7D,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAC9D,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAClE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAC9D,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MA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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Template = require('../../plot_api/plot_template');\nvar basePlotLayoutAttributes = require('../layout_attributes');\nvar layoutAttributes = require('./layout_attributes');\nvar handleTypeDefaults = require('./type_defaults');\nvar handleAxisDefaults = require('./axis_defaults');\nvar handleConstraintDefaults = require('./constraint_defaults');\nvar handlePositionDefaults = require('./position_defaults');\nvar axisIds = require('./axis_ids');\nvar id2name = axisIds.id2name;\nvar name2id = axisIds.name2id;\nvar Registry = require('../../registry');\nvar traceIs = Registry.traceIs;\nvar getComponentMethod = Registry.getComponentMethod;\nfunction appendList(cont, k, item) {\n  if (Array.isArray(cont[k])) cont[k].push(item);else cont[k] = [item];\n}\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  var ax2traces = {};\n  var xaCheater = {};\n  var xaNonCheater = {};\n  var outerTicks = {};\n  var noGrids = {};\n  var i, j;\n\n  // look for axes in the data\n  for (i = 0; i < fullData.length; i++) {\n    var trace = fullData[i];\n    if (!traceIs(trace, 'cartesian') && !traceIs(trace, 'gl2d')) continue;\n    var xaName;\n    if (trace.xaxis) {\n      xaName = id2name(trace.xaxis);\n      appendList(ax2traces, xaName, trace);\n    } else if (trace.xaxes) {\n      for (j = 0; j < trace.xaxes.length; j++) {\n        appendList(ax2traces, id2name(trace.xaxes[j]), trace);\n      }\n    }\n    var yaName;\n    if (trace.yaxis) {\n      yaName = id2name(trace.yaxis);\n      appendList(ax2traces, yaName, trace);\n    } else if (trace.yaxes) {\n      for (j = 0; j < trace.yaxes.length; j++) {\n        appendList(ax2traces, id2name(trace.yaxes[j]), trace);\n      }\n    }\n\n    // Two things trigger axis visibility:\n    // 1. is not carpet\n    // 2. carpet that's not cheater\n    if (!traceIs(trace, 'carpet') || trace.type === 'carpet' && !trace._cheater) {\n      if (xaName) xaNonCheater[xaName] = 1;\n    }\n\n    // The above check for definitely-not-cheater is not adequate. This\n    // second list tracks which axes *could* be a cheater so that the\n    // full condition triggering hiding is:\n    //   *could* be a cheater and *is not definitely visible*\n    if (trace.type === 'carpet' && trace._cheater) {\n      if (xaName) xaCheater[xaName] = 1;\n    }\n\n    // check for default formatting tweaks\n    if (traceIs(trace, '2dMap')) {\n      outerTicks[xaName] = 1;\n      outerTicks[yaName] = 1;\n    }\n    if (traceIs(trace, 'oriented')) {\n      var positionAxis = trace.orientation === 'h' ? yaName : xaName;\n      noGrids[positionAxis] = 1;\n    }\n  }\n  var subplots = layoutOut._subplots;\n  var xIds = subplots.xaxis;\n  var yIds = subplots.yaxis;\n  var xNames = Lib.simpleMap(xIds, id2name);\n  var yNames = Lib.simpleMap(yIds, id2name);\n  var axNames = xNames.concat(yNames);\n\n  // plot_bgcolor only makes sense if there's a (2D) plot!\n  // TODO: bgcolor for each subplot, to inherit from the main one\n  var plotBgColor = Color.background;\n  if (xIds.length && yIds.length) {\n    plotBgColor = Lib.coerce(layoutIn, layoutOut, basePlotLayoutAttributes, 'plot_bgcolor');\n  }\n  var bgColor = Color.combine(plotBgColor, layoutOut.paper_bgcolor);\n  var axName, axLetter, axLayoutIn, axLayoutOut;\n  function coerce(attr, dflt) {\n    return Lib.coerce(axLayoutIn, axLayoutOut, layoutAttributes, attr, dflt);\n  }\n  function coerce2(attr, dflt) {\n    return Lib.coerce2(axLayoutIn, axLayoutOut, layoutAttributes, attr, dflt);\n  }\n  function getCounterAxes(axLetter) {\n    return axLetter === 'x' ? yIds : xIds;\n  }\n  var counterAxes = {\n    x: getCounterAxes('x'),\n    y: getCounterAxes('y')\n  };\n  function getOverlayableAxes(axLetter, axName) {\n    var list = axLetter === 'x' ? xNames : yNames;\n    var out = [];\n    for (var j = 0; j < list.length; j++) {\n      var axName2 = list[j];\n      if (axName2 !== axName && !(layoutIn[axName2] || {}).overlaying) {\n        out.push(name2id(axName2));\n      }\n    }\n    return out;\n  }\n\n  // first pass creates the containers, determines types, and handles most of the settings\n  for (i = 0; i < axNames.length; i++) {\n    axName = axNames[i];\n    axLetter = axName.charAt(0);\n    if (!Lib.isPlainObject(layoutIn[axName])) {\n      layoutIn[axName] = {};\n    }\n    axLayoutIn = layoutIn[axName];\n    axLayoutOut = Template.newContainer(layoutOut, axName, axLetter + 'axis');\n    var traces = ax2traces[axName] || [];\n    axLayoutOut._traceIndices = traces.map(function (t) {\n      return t._expandedIndex;\n    });\n    axLayoutOut._annIndices = [];\n    axLayoutOut._shapeIndices = [];\n    axLayoutOut._imgIndices = [];\n    axLayoutOut._subplotsWith = [];\n    axLayoutOut._counterAxes = [];\n\n    // set up some private properties\n    axLayoutOut._name = axLayoutOut._attr = axName;\n    var id = axLayoutOut._id = name2id(axName);\n    var overlayableAxes = getOverlayableAxes(axLetter, axName);\n    var defaultOptions = {\n      letter: axLetter,\n      font: layoutOut.font,\n      outerTicks: outerTicks[axName],\n      showGrid: !noGrids[axName],\n      data: traces,\n      bgColor: bgColor,\n      calendar: layoutOut.calendar,\n      automargin: true,\n      cheateronly: axLetter === 'x' && xaCheater[axName] && !xaNonCheater[axName],\n      splomStash: ((layoutOut._splomAxes || {})[axLetter] || {})[id]\n    };\n    coerce('uirevision', layoutOut.uirevision);\n    handleTypeDefaults(axLayoutIn, axLayoutOut, coerce, defaultOptions);\n    handleAxisDefaults(axLayoutIn, axLayoutOut, coerce, defaultOptions, layoutOut);\n    var spikecolor = coerce2('spikecolor');\n    var spikethickness = coerce2('spikethickness');\n    var spikedash = coerce2('spikedash');\n    var spikemode = coerce2('spikemode');\n    var spikesnap = coerce2('spikesnap');\n    var showSpikes = coerce('showspikes', !!spikecolor || !!spikethickness || !!spikedash || !!spikemode || !!spikesnap);\n    if (!showSpikes) {\n      delete axLayoutOut.spikecolor;\n      delete axLayoutOut.spikethickness;\n      delete axLayoutOut.spikedash;\n      delete axLayoutOut.spikemode;\n      delete axLayoutOut.spikesnap;\n    }\n    var positioningOptions = {\n      letter: axLetter,\n      counterAxes: counterAxes[axLetter],\n      overlayableAxes: overlayableAxes,\n      grid: layoutOut.grid\n    };\n    handlePositionDefaults(axLayoutIn, axLayoutOut, coerce, positioningOptions);\n    axLayoutOut._input = axLayoutIn;\n  }\n\n  // quick second pass for range slider and selector defaults\n  var rangeSliderDefaults = getComponentMethod('rangeslider', 'handleDefaults');\n  var rangeSelectorDefaults = getComponentMethod('rangeselector', 'handleDefaults');\n  for (i = 0; i < xNames.length; i++) {\n    axName = xNames[i];\n    axLayoutIn = layoutIn[axName];\n    axLayoutOut = layoutOut[axName];\n    rangeSliderDefaults(layoutIn, layoutOut, axName);\n    if (axLayoutOut.type === 'date') {\n      rangeSelectorDefaults(axLayoutIn, axLayoutOut, layoutOut, yNames, axLayoutOut.calendar);\n    }\n    coerce('fixedrange');\n  }\n  for (i = 0; i < yNames.length; i++) {\n    axName = yNames[i];\n    axLayoutIn = layoutIn[axName];\n    axLayoutOut = layoutOut[axName];\n    var anchoredAxis = layoutOut[id2name(axLayoutOut.anchor)];\n    var fixedRangeDflt = getComponentMethod('rangeslider', 'isVisible')(anchoredAxis);\n    coerce('fixedrange', fixedRangeDflt);\n  }\n\n  // Finally, handle scale constraints. We need to do this after all axes have\n  // coerced both `type` (so we link only axes of the same type) and\n  // `fixedrange` (so we can avoid linking from OR TO a fixed axis).\n\n  // sets of axes linked by `scaleanchor` along with the scaleratios compounded\n  // together, populated in handleConstraintDefaults\n  layoutOut._axisConstraintGroups = [];\n  var allAxisIds = counterAxes.x.concat(counterAxes.y);\n  for (i = 0; i < axNames.length; i++) {\n    axName = axNames[i];\n    axLetter = axName.charAt(0);\n    axLayoutIn = layoutIn[axName];\n    axLayoutOut = layoutOut[axName];\n    handleConstraintDefaults(axLayoutIn, axLayoutOut, coerce, allAxisIds, layoutOut);\n  }\n};","map":{"version":3,"names":["Lib","require","Color","Template","basePlotLayoutAttributes","layoutAttributes","handleTypeDefaults","handleAxisDefaults","handleConstraintDefaults","handlePositionDefaults","axisIds","id2name","name2id","Registry","traceIs","getComponentMethod","appendList","cont","k","item","Array","isArray","push","module","exports","supplyLayoutDefaults","layoutIn","layoutOut","fullData","ax2traces","xaCheater","xaNonCheater","outerTicks","noGrids","i","j","length","trace","xaName","xaxis","xaxes","yaName","yaxis","yaxes","type","_cheater","positionAxis","orientation","subplots","_subplots","xIds","yIds","xNames","simpleMap","yNames","axNames","concat","plotBgColor","background","coerce","bgColor","combine","paper_bgcolor","axName","axLetter","axLayoutIn","axLayoutOut","attr","dflt","coerce2","getCounterAxes","counterAxes","x","y","getOverlayableAxes","list","out","axName2","overlaying","charAt","isPlainObject","newContainer","traces","_traceIndices","map","t","_expandedIndex","_annIndices","_shapeIndices","_imgIndices","_subplotsWith","_counterAxes","_name","_attr","id","_id","overlayableAxes","defaultOptions","letter","font","showGrid","data","calendar","automargin","cheateronly","splomStash","_splomAxes","uirevision","spikecolor","spikethickness","spikedash","spikemode","spikesnap","showSpikes","positioningOptions","grid","_input","rangeSliderDefaults","rangeSelectorDefaults","anchoredAxis","anchor","fixedRangeDflt","_axisConstraintGroups","allAxisIds"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/layout_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Template = require('../../plot_api/plot_template');\nvar basePlotLayoutAttributes = require('../layout_attributes');\n\nvar layoutAttributes = require('./layout_attributes');\nvar handleTypeDefaults = require('./type_defaults');\nvar handleAxisDefaults = require('./axis_defaults');\nvar handleConstraintDefaults = require('./constraint_defaults');\nvar handlePositionDefaults = require('./position_defaults');\n\nvar axisIds = require('./axis_ids');\nvar id2name = axisIds.id2name;\nvar name2id = axisIds.name2id;\n\nvar Registry = require('../../registry');\nvar traceIs = Registry.traceIs;\nvar getComponentMethod = Registry.getComponentMethod;\n\nfunction appendList(cont, k, item) {\n    if(Array.isArray(cont[k])) cont[k].push(item);\n    else cont[k] = [item];\n}\n\nmodule.exports = function supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    var ax2traces = {};\n    var xaCheater = {};\n    var xaNonCheater = {};\n    var outerTicks = {};\n    var noGrids = {};\n    var i, j;\n\n    // look for axes in the data\n    for(i = 0; i < fullData.length; i++) {\n        var trace = fullData[i];\n        if(!traceIs(trace, 'cartesian') && !traceIs(trace, 'gl2d')) continue;\n\n        var xaName;\n        if(trace.xaxis) {\n            xaName = id2name(trace.xaxis);\n            appendList(ax2traces, xaName, trace);\n        } else if(trace.xaxes) {\n            for(j = 0; j < trace.xaxes.length; j++) {\n                appendList(ax2traces, id2name(trace.xaxes[j]), trace);\n            }\n        }\n\n        var yaName;\n        if(trace.yaxis) {\n            yaName = id2name(trace.yaxis);\n            appendList(ax2traces, yaName, trace);\n        } else if(trace.yaxes) {\n            for(j = 0; j < trace.yaxes.length; j++) {\n                appendList(ax2traces, id2name(trace.yaxes[j]), trace);\n            }\n        }\n\n        // Two things trigger axis visibility:\n        // 1. is not carpet\n        // 2. carpet that's not cheater\n        if(!traceIs(trace, 'carpet') || (trace.type === 'carpet' && !trace._cheater)) {\n            if(xaName) xaNonCheater[xaName] = 1;\n        }\n\n        // The above check for definitely-not-cheater is not adequate. This\n        // second list tracks which axes *could* be a cheater so that the\n        // full condition triggering hiding is:\n        //   *could* be a cheater and *is not definitely visible*\n        if(trace.type === 'carpet' && trace._cheater) {\n            if(xaName) xaCheater[xaName] = 1;\n        }\n\n        // check for default formatting tweaks\n        if(traceIs(trace, '2dMap')) {\n            outerTicks[xaName] = 1;\n            outerTicks[yaName] = 1;\n        }\n\n        if(traceIs(trace, 'oriented')) {\n            var positionAxis = trace.orientation === 'h' ? yaName : xaName;\n            noGrids[positionAxis] = 1;\n        }\n    }\n\n    var subplots = layoutOut._subplots;\n    var xIds = subplots.xaxis;\n    var yIds = subplots.yaxis;\n    var xNames = Lib.simpleMap(xIds, id2name);\n    var yNames = Lib.simpleMap(yIds, id2name);\n    var axNames = xNames.concat(yNames);\n\n    // plot_bgcolor only makes sense if there's a (2D) plot!\n    // TODO: bgcolor for each subplot, to inherit from the main one\n    var plotBgColor = Color.background;\n    if(xIds.length && yIds.length) {\n        plotBgColor = Lib.coerce(layoutIn, layoutOut, basePlotLayoutAttributes, 'plot_bgcolor');\n    }\n\n    var bgColor = Color.combine(plotBgColor, layoutOut.paper_bgcolor);\n\n    var axName, axLetter, axLayoutIn, axLayoutOut;\n\n    function coerce(attr, dflt) {\n        return Lib.coerce(axLayoutIn, axLayoutOut, layoutAttributes, attr, dflt);\n    }\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(axLayoutIn, axLayoutOut, layoutAttributes, attr, dflt);\n    }\n\n    function getCounterAxes(axLetter) {\n        return (axLetter === 'x') ? yIds : xIds;\n    }\n\n    var counterAxes = {x: getCounterAxes('x'), y: getCounterAxes('y')};\n\n    function getOverlayableAxes(axLetter, axName) {\n        var list = (axLetter === 'x') ? xNames : yNames;\n        var out = [];\n\n        for(var j = 0; j < list.length; j++) {\n            var axName2 = list[j];\n\n            if(axName2 !== axName && !(layoutIn[axName2] || {}).overlaying) {\n                out.push(name2id(axName2));\n            }\n        }\n\n        return out;\n    }\n\n    // first pass creates the containers, determines types, and handles most of the settings\n    for(i = 0; i < axNames.length; i++) {\n        axName = axNames[i];\n        axLetter = axName.charAt(0);\n\n        if(!Lib.isPlainObject(layoutIn[axName])) {\n            layoutIn[axName] = {};\n        }\n\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = Template.newContainer(layoutOut, axName, axLetter + 'axis');\n\n        var traces = ax2traces[axName] || [];\n        axLayoutOut._traceIndices = traces.map(function(t) { return t._expandedIndex; });\n        axLayoutOut._annIndices = [];\n        axLayoutOut._shapeIndices = [];\n        axLayoutOut._imgIndices = [];\n        axLayoutOut._subplotsWith = [];\n        axLayoutOut._counterAxes = [];\n\n        // set up some private properties\n        axLayoutOut._name = axLayoutOut._attr = axName;\n        var id = axLayoutOut._id = name2id(axName);\n\n        var overlayableAxes = getOverlayableAxes(axLetter, axName);\n\n        var defaultOptions = {\n            letter: axLetter,\n            font: layoutOut.font,\n            outerTicks: outerTicks[axName],\n            showGrid: !noGrids[axName],\n            data: traces,\n            bgColor: bgColor,\n            calendar: layoutOut.calendar,\n            automargin: true,\n            cheateronly: axLetter === 'x' && xaCheater[axName] && !xaNonCheater[axName],\n            splomStash: ((layoutOut._splomAxes || {})[axLetter] || {})[id]\n        };\n\n        coerce('uirevision', layoutOut.uirevision);\n\n        handleTypeDefaults(axLayoutIn, axLayoutOut, coerce, defaultOptions);\n        handleAxisDefaults(axLayoutIn, axLayoutOut, coerce, defaultOptions, layoutOut);\n\n        var spikecolor = coerce2('spikecolor');\n        var spikethickness = coerce2('spikethickness');\n        var spikedash = coerce2('spikedash');\n        var spikemode = coerce2('spikemode');\n        var spikesnap = coerce2('spikesnap');\n        var showSpikes = coerce('showspikes', !!spikecolor || !!spikethickness || !!spikedash || !!spikemode || !!spikesnap);\n\n        if(!showSpikes) {\n            delete axLayoutOut.spikecolor;\n            delete axLayoutOut.spikethickness;\n            delete axLayoutOut.spikedash;\n            delete axLayoutOut.spikemode;\n            delete axLayoutOut.spikesnap;\n        }\n\n        var positioningOptions = {\n            letter: axLetter,\n            counterAxes: counterAxes[axLetter],\n            overlayableAxes: overlayableAxes,\n            grid: layoutOut.grid\n        };\n\n        handlePositionDefaults(axLayoutIn, axLayoutOut, coerce, positioningOptions);\n\n        axLayoutOut._input = axLayoutIn;\n    }\n\n    // quick second pass for range slider and selector defaults\n    var rangeSliderDefaults = getComponentMethod('rangeslider', 'handleDefaults');\n    var rangeSelectorDefaults = getComponentMethod('rangeselector', 'handleDefaults');\n\n    for(i = 0; i < xNames.length; i++) {\n        axName = xNames[i];\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName];\n\n        rangeSliderDefaults(layoutIn, layoutOut, axName);\n\n        if(axLayoutOut.type === 'date') {\n            rangeSelectorDefaults(\n                axLayoutIn,\n                axLayoutOut,\n                layoutOut,\n                yNames,\n                axLayoutOut.calendar\n            );\n        }\n\n        coerce('fixedrange');\n    }\n\n    for(i = 0; i < yNames.length; i++) {\n        axName = yNames[i];\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName];\n\n        var anchoredAxis = layoutOut[id2name(axLayoutOut.anchor)];\n\n        var fixedRangeDflt = getComponentMethod('rangeslider', 'isVisible')(anchoredAxis);\n\n        coerce('fixedrange', fixedRangeDflt);\n    }\n\n    // Finally, handle scale constraints. We need to do this after all axes have\n    // coerced both `type` (so we link only axes of the same type) and\n    // `fixedrange` (so we can avoid linking from OR TO a fixed axis).\n\n    // sets of axes linked by `scaleanchor` along with the scaleratios compounded\n    // together, populated in handleConstraintDefaults\n    layoutOut._axisConstraintGroups = [];\n    var allAxisIds = counterAxes.x.concat(counterAxes.y);\n\n    for(i = 0; i < axNames.length; i++) {\n        axName = axNames[i];\n        axLetter = axName.charAt(0);\n\n        axLayoutIn = layoutIn[axName];\n        axLayoutOut = layoutOut[axName];\n\n        handleConstraintDefaults(axLayoutIn, axLayoutOut, coerce, allAxisIds, layoutOut);\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIC,KAAK,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC7C,IAAIE,QAAQ,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AACtD,IAAIG,wBAAwB,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AAE9D,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AACrD,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AACnD,IAAIM,kBAAkB,GAAGN,OAAO,CAAC,iBAAiB,CAAC;AACnD,IAAIO,wBAAwB,GAAGP,OAAO,CAAC,uBAAuB,CAAC;AAC/D,IAAIQ,sBAAsB,GAAGR,OAAO,CAAC,qBAAqB,CAAC;AAE3D,IAAIS,OAAO,GAAGT,OAAO,CAAC,YAAY,CAAC;AACnC,IAAIU,OAAO,GAAGD,OAAO,CAACC,OAAO;AAC7B,IAAIC,OAAO,GAAGF,OAAO,CAACE,OAAO;AAE7B,IAAIC,QAAQ,GAAGZ,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIa,OAAO,GAAGD,QAAQ,CAACC,OAAO;AAC9B,IAAIC,kBAAkB,GAAGF,QAAQ,CAACE,kBAAkB;AAEpD,SAASC,UAAU,CAACC,IAAI,EAAEC,CAAC,EAAEC,IAAI,EAAE;EAC/B,IAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACC,CAAC,CAAC,CAAC,EAAED,IAAI,CAACC,CAAC,CAAC,CAACI,IAAI,CAACH,IAAI,CAAC,CAAC,KACzCF,IAAI,CAACC,CAAC,CAAC,GAAG,CAACC,IAAI,CAAC;AACzB;AAEAI,MAAM,CAACC,OAAO,GAAG,SAASC,oBAAoB,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EAC1E,IAAIC,SAAS,GAAG,CAAC,CAAC;EAClB,IAAIC,SAAS,GAAG,CAAC,CAAC;EAClB,IAAIC,YAAY,GAAG,CAAC,CAAC;EACrB,IAAIC,UAAU,GAAG,CAAC,CAAC;EACnB,IAAIC,OAAO,GAAG,CAAC,CAAC;EAChB,IAAIC,CAAC,EAAEC,CAAC;;EAER;EACA,KAAID,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,CAACQ,MAAM,EAAEF,CAAC,EAAE,EAAE;IACjC,IAAIG,KAAK,GAAGT,QAAQ,CAACM,CAAC,CAAC;IACvB,IAAG,CAACpB,OAAO,CAACuB,KAAK,EAAE,WAAW,CAAC,IAAI,CAACvB,OAAO,CAACuB,KAAK,EAAE,MAAM,CAAC,EAAE;IAE5D,IAAIC,MAAM;IACV,IAAGD,KAAK,CAACE,KAAK,EAAE;MACZD,MAAM,GAAG3B,OAAO,CAAC0B,KAAK,CAACE,KAAK,CAAC;MAC7BvB,UAAU,CAACa,SAAS,EAAES,MAAM,EAAED,KAAK,CAAC;IACxC,CAAC,MAAM,IAAGA,KAAK,CAACG,KAAK,EAAE;MACnB,KAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,KAAK,CAACG,KAAK,CAACJ,MAAM,EAAED,CAAC,EAAE,EAAE;QACpCnB,UAAU,CAACa,SAAS,EAAElB,OAAO,CAAC0B,KAAK,CAACG,KAAK,CAACL,CAAC,CAAC,CAAC,EAAEE,KAAK,CAAC;MACzD;IACJ;IAEA,IAAII,MAAM;IACV,IAAGJ,KAAK,CAACK,KAAK,EAAE;MACZD,MAAM,GAAG9B,OAAO,CAAC0B,KAAK,CAACK,KAAK,CAAC;MAC7B1B,UAAU,CAACa,SAAS,EAAEY,MAAM,EAAEJ,KAAK,CAAC;IACxC,CAAC,MAAM,IAAGA,KAAK,CAACM,KAAK,EAAE;MACnB,KAAIR,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,KAAK,CAACM,KAAK,CAACP,MAAM,EAAED,CAAC,EAAE,EAAE;QACpCnB,UAAU,CAACa,SAAS,EAAElB,OAAO,CAAC0B,KAAK,CAACM,KAAK,CAACR,CAAC,CAAC,CAAC,EAAEE,KAAK,CAAC;MACzD;IACJ;;IAEA;IACA;IACA;IACA,IAAG,CAACvB,OAAO,CAACuB,KAAK,EAAE,QAAQ,CAAC,IAAKA,KAAK,CAACO,IAAI,KAAK,QAAQ,IAAI,CAACP,KAAK,CAACQ,QAAS,EAAE;MAC1E,IAAGP,MAAM,EAAEP,YAAY,CAACO,MAAM,CAAC,GAAG,CAAC;IACvC;;IAEA;IACA;IACA;IACA;IACA,IAAGD,KAAK,CAACO,IAAI,KAAK,QAAQ,IAAIP,KAAK,CAACQ,QAAQ,EAAE;MAC1C,IAAGP,MAAM,EAAER,SAAS,CAACQ,MAAM,CAAC,GAAG,CAAC;IACpC;;IAEA;IACA,IAAGxB,OAAO,CAACuB,KAAK,EAAE,OAAO,CAAC,EAAE;MACxBL,UAAU,CAACM,MAAM,CAAC,GAAG,CAAC;MACtBN,UAAU,CAACS,MAAM,CAAC,GAAG,CAAC;IAC1B;IAEA,IAAG3B,OAAO,CAACuB,KAAK,EAAE,UAAU,CAAC,EAAE;MAC3B,IAAIS,YAAY,GAAGT,KAAK,CAACU,WAAW,KAAK,GAAG,GAAGN,MAAM,GAAGH,MAAM;MAC9DL,OAAO,CAACa,YAAY,CAAC,GAAG,CAAC;IAC7B;EACJ;EAEA,IAAIE,QAAQ,GAAGrB,SAAS,CAACsB,SAAS;EAClC,IAAIC,IAAI,GAAGF,QAAQ,CAACT,KAAK;EACzB,IAAIY,IAAI,GAAGH,QAAQ,CAACN,KAAK;EACzB,IAAIU,MAAM,GAAGpD,GAAG,CAACqD,SAAS,CAACH,IAAI,EAAEvC,OAAO,CAAC;EACzC,IAAI2C,MAAM,GAAGtD,GAAG,CAACqD,SAAS,CAACF,IAAI,EAAExC,OAAO,CAAC;EACzC,IAAI4C,OAAO,GAAGH,MAAM,CAACI,MAAM,CAACF,MAAM,CAAC;;EAEnC;EACA;EACA,IAAIG,WAAW,GAAGvD,KAAK,CAACwD,UAAU;EAClC,IAAGR,IAAI,CAACd,MAAM,IAAIe,IAAI,CAACf,MAAM,EAAE;IAC3BqB,WAAW,GAAGzD,GAAG,CAAC2D,MAAM,CAACjC,QAAQ,EAAEC,SAAS,EAAEvB,wBAAwB,EAAE,cAAc,CAAC;EAC3F;EAEA,IAAIwD,OAAO,GAAG1D,KAAK,CAAC2D,OAAO,CAACJ,WAAW,EAAE9B,SAAS,CAACmC,aAAa,CAAC;EAEjE,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,WAAW;EAE7C,SAASP,MAAM,CAACQ,IAAI,EAAEC,IAAI,EAAE;IACxB,OAAOpE,GAAG,CAAC2D,MAAM,CAACM,UAAU,EAAEC,WAAW,EAAE7D,gBAAgB,EAAE8D,IAAI,EAAEC,IAAI,CAAC;EAC5E;EAEA,SAASC,OAAO,CAACF,IAAI,EAAEC,IAAI,EAAE;IACzB,OAAOpE,GAAG,CAACqE,OAAO,CAACJ,UAAU,EAAEC,WAAW,EAAE7D,gBAAgB,EAAE8D,IAAI,EAAEC,IAAI,CAAC;EAC7E;EAEA,SAASE,cAAc,CAACN,QAAQ,EAAE;IAC9B,OAAQA,QAAQ,KAAK,GAAG,GAAIb,IAAI,GAAGD,IAAI;EAC3C;EAEA,IAAIqB,WAAW,GAAG;IAACC,CAAC,EAAEF,cAAc,CAAC,GAAG,CAAC;IAAEG,CAAC,EAAEH,cAAc,CAAC,GAAG;EAAC,CAAC;EAElE,SAASI,kBAAkB,CAACV,QAAQ,EAAED,MAAM,EAAE;IAC1C,IAAIY,IAAI,GAAIX,QAAQ,KAAK,GAAG,GAAIZ,MAAM,GAAGE,MAAM;IAC/C,IAAIsB,GAAG,GAAG,EAAE;IAEZ,KAAI,IAAIzC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwC,IAAI,CAACvC,MAAM,EAAED,CAAC,EAAE,EAAE;MACjC,IAAI0C,OAAO,GAAGF,IAAI,CAACxC,CAAC,CAAC;MAErB,IAAG0C,OAAO,KAAKd,MAAM,IAAI,CAAC,CAACrC,QAAQ,CAACmD,OAAO,CAAC,IAAI,CAAC,CAAC,EAAEC,UAAU,EAAE;QAC5DF,GAAG,CAACtD,IAAI,CAACV,OAAO,CAACiE,OAAO,CAAC,CAAC;MAC9B;IACJ;IAEA,OAAOD,GAAG;EACd;;EAEA;EACA,KAAI1C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqB,OAAO,CAACnB,MAAM,EAAEF,CAAC,EAAE,EAAE;IAChC6B,MAAM,GAAGR,OAAO,CAACrB,CAAC,CAAC;IACnB8B,QAAQ,GAAGD,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC;IAE3B,IAAG,CAAC/E,GAAG,CAACgF,aAAa,CAACtD,QAAQ,CAACqC,MAAM,CAAC,CAAC,EAAE;MACrCrC,QAAQ,CAACqC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzB;IAEAE,UAAU,GAAGvC,QAAQ,CAACqC,MAAM,CAAC;IAC7BG,WAAW,GAAG/D,QAAQ,CAAC8E,YAAY,CAACtD,SAAS,EAAEoC,MAAM,EAAEC,QAAQ,GAAG,MAAM,CAAC;IAEzE,IAAIkB,MAAM,GAAGrD,SAAS,CAACkC,MAAM,CAAC,IAAI,EAAE;IACpCG,WAAW,CAACiB,aAAa,GAAGD,MAAM,CAACE,GAAG,CAAC,UAASC,CAAC,EAAE;MAAE,OAAOA,CAAC,CAACC,cAAc;IAAE,CAAC,CAAC;IAChFpB,WAAW,CAACqB,WAAW,GAAG,EAAE;IAC5BrB,WAAW,CAACsB,aAAa,GAAG,EAAE;IAC9BtB,WAAW,CAACuB,WAAW,GAAG,EAAE;IAC5BvB,WAAW,CAACwB,aAAa,GAAG,EAAE;IAC9BxB,WAAW,CAACyB,YAAY,GAAG,EAAE;;IAE7B;IACAzB,WAAW,CAAC0B,KAAK,GAAG1B,WAAW,CAAC2B,KAAK,GAAG9B,MAAM;IAC9C,IAAI+B,EAAE,GAAG5B,WAAW,CAAC6B,GAAG,GAAGnF,OAAO,CAACmD,MAAM,CAAC;IAE1C,IAAIiC,eAAe,GAAGtB,kBAAkB,CAACV,QAAQ,EAAED,MAAM,CAAC;IAE1D,IAAIkC,cAAc,GAAG;MACjBC,MAAM,EAAElC,QAAQ;MAChBmC,IAAI,EAAExE,SAAS,CAACwE,IAAI;MACpBnE,UAAU,EAAEA,UAAU,CAAC+B,MAAM,CAAC;MAC9BqC,QAAQ,EAAE,CAACnE,OAAO,CAAC8B,MAAM,CAAC;MAC1BsC,IAAI,EAAEnB,MAAM;MACZtB,OAAO,EAAEA,OAAO;MAChB0C,QAAQ,EAAE3E,SAAS,CAAC2E,QAAQ;MAC5BC,UAAU,EAAE,IAAI;MAChBC,WAAW,EAAExC,QAAQ,KAAK,GAAG,IAAIlC,SAAS,CAACiC,MAAM,CAAC,IAAI,CAAChC,YAAY,CAACgC,MAAM,CAAC;MAC3E0C,UAAU,EAAE,CAAC,CAAC9E,SAAS,CAAC+E,UAAU,IAAI,CAAC,CAAC,EAAE1C,QAAQ,CAAC,IAAI,CAAC,CAAC,EAAE8B,EAAE;IACjE,CAAC;IAEDnC,MAAM,CAAC,YAAY,EAAEhC,SAAS,CAACgF,UAAU,CAAC;IAE1CrG,kBAAkB,CAAC2D,UAAU,EAAEC,WAAW,EAAEP,MAAM,EAAEsC,cAAc,CAAC;IACnE1F,kBAAkB,CAAC0D,UAAU,EAAEC,WAAW,EAAEP,MAAM,EAAEsC,cAAc,EAAEtE,SAAS,CAAC;IAE9E,IAAIiF,UAAU,GAAGvC,OAAO,CAAC,YAAY,CAAC;IACtC,IAAIwC,cAAc,GAAGxC,OAAO,CAAC,gBAAgB,CAAC;IAC9C,IAAIyC,SAAS,GAAGzC,OAAO,CAAC,WAAW,CAAC;IACpC,IAAI0C,SAAS,GAAG1C,OAAO,CAAC,WAAW,CAAC;IACpC,IAAI2C,SAAS,GAAG3C,OAAO,CAAC,WAAW,CAAC;IACpC,IAAI4C,UAAU,GAAGtD,MAAM,CAAC,YAAY,EAAE,CAAC,CAACiD,UAAU,IAAI,CAAC,CAACC,cAAc,IAAI,CAAC,CAACC,SAAS,IAAI,CAAC,CAACC,SAAS,IAAI,CAAC,CAACC,SAAS,CAAC;IAEpH,IAAG,CAACC,UAAU,EAAE;MACZ,OAAO/C,WAAW,CAAC0C,UAAU;MAC7B,OAAO1C,WAAW,CAAC2C,cAAc;MACjC,OAAO3C,WAAW,CAAC4C,SAAS;MAC5B,OAAO5C,WAAW,CAAC6C,SAAS;MAC5B,OAAO7C,WAAW,CAAC8C,SAAS;IAChC;IAEA,IAAIE,kBAAkB,GAAG;MACrBhB,MAAM,EAAElC,QAAQ;MAChBO,WAAW,EAAEA,WAAW,CAACP,QAAQ,CAAC;MAClCgC,eAAe,EAAEA,eAAe;MAChCmB,IAAI,EAAExF,SAAS,CAACwF;IACpB,CAAC;IAED1G,sBAAsB,CAACwD,UAAU,EAAEC,WAAW,EAAEP,MAAM,EAAEuD,kBAAkB,CAAC;IAE3EhD,WAAW,CAACkD,MAAM,GAAGnD,UAAU;EACnC;;EAEA;EACA,IAAIoD,mBAAmB,GAAGtG,kBAAkB,CAAC,aAAa,EAAE,gBAAgB,CAAC;EAC7E,IAAIuG,qBAAqB,GAAGvG,kBAAkB,CAAC,eAAe,EAAE,gBAAgB,CAAC;EAEjF,KAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGkB,MAAM,CAAChB,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC/B6B,MAAM,GAAGX,MAAM,CAAClB,CAAC,CAAC;IAClB+B,UAAU,GAAGvC,QAAQ,CAACqC,MAAM,CAAC;IAC7BG,WAAW,GAAGvC,SAAS,CAACoC,MAAM,CAAC;IAE/BsD,mBAAmB,CAAC3F,QAAQ,EAAEC,SAAS,EAAEoC,MAAM,CAAC;IAEhD,IAAGG,WAAW,CAACtB,IAAI,KAAK,MAAM,EAAE;MAC5B0E,qBAAqB,CACjBrD,UAAU,EACVC,WAAW,EACXvC,SAAS,EACT2B,MAAM,EACNY,WAAW,CAACoC,QAAQ,CACvB;IACL;IAEA3C,MAAM,CAAC,YAAY,CAAC;EACxB;EAEA,KAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoB,MAAM,CAAClB,MAAM,EAAEF,CAAC,EAAE,EAAE;IAC/B6B,MAAM,GAAGT,MAAM,CAACpB,CAAC,CAAC;IAClB+B,UAAU,GAAGvC,QAAQ,CAACqC,MAAM,CAAC;IAC7BG,WAAW,GAAGvC,SAAS,CAACoC,MAAM,CAAC;IAE/B,IAAIwD,YAAY,GAAG5F,SAAS,CAAChB,OAAO,CAACuD,WAAW,CAACsD,MAAM,CAAC,CAAC;IAEzD,IAAIC,cAAc,GAAG1G,kBAAkB,CAAC,aAAa,EAAE,WAAW,CAAC,CAACwG,YAAY,CAAC;IAEjF5D,MAAM,CAAC,YAAY,EAAE8D,cAAc,CAAC;EACxC;;EAEA;EACA;EACA;;EAEA;EACA;EACA9F,SAAS,CAAC+F,qBAAqB,GAAG,EAAE;EACpC,IAAIC,UAAU,GAAGpD,WAAW,CAACC,CAAC,CAAChB,MAAM,CAACe,WAAW,CAACE,CAAC,CAAC;EAEpD,KAAIvC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqB,OAAO,CAACnB,MAAM,EAAEF,CAAC,EAAE,EAAE;IAChC6B,MAAM,GAAGR,OAAO,CAACrB,CAAC,CAAC;IACnB8B,QAAQ,GAAGD,MAAM,CAACgB,MAAM,CAAC,CAAC,CAAC;IAE3Bd,UAAU,GAAGvC,QAAQ,CAACqC,MAAM,CAAC;IAC7BG,WAAW,GAAGvC,SAAS,CAACoC,MAAM,CAAC;IAE/BvD,wBAAwB,CAACyD,UAAU,EAAEC,WAAW,EAAEP,MAAM,EAAEgE,UAAU,EAAEhG,SAAS,CAAC;EACpF;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
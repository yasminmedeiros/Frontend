{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n/** Fill hover 'pointData' container with 'correct' hover text value\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is not set,\n *   the text elements will be seen in the hover labels.\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is set,\n *   hovertext takes precedence over text\n *   i.e. the hoverinfo elements will be seen in the hover labels\n *\n *  @param {object} calcPt\n *  @param {object} trace\n *  @param {object || array} contOut (mutated here)\n */\nmodule.exports = function fillHoverText(calcPt, trace, contOut) {\n  var fill = Array.isArray(contOut) ? function (v) {\n    contOut.push(v);\n  } : function (v) {\n    contOut.text = v;\n  };\n  var htx = Lib.extractOption(calcPt, trace, 'htx', 'hovertext');\n  if (isValid(htx)) return fill(htx);\n  var tx = Lib.extractOption(calcPt, trace, 'tx', 'text');\n  if (isValid(tx)) return fill(tx);\n};\n\n// accept all truthy values and 0 (which gets cast to '0' in the hover labels)\nfunction isValid(v) {\n  return v || v === 0;\n}","map":{"version":3,"names":["Lib","require","module","exports","fillHoverText","calcPt","trace","contOut","fill","Array","isArray","v","push","text","htx","extractOption","isValid","tx"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/scatter/fill_hover_text.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\n\n/** Fill hover 'pointData' container with 'correct' hover text value\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is not set,\n *   the text elements will be seen in the hover labels.\n *\n * - If trace hoverinfo contains a 'text' flag and hovertext is set,\n *   hovertext takes precedence over text\n *   i.e. the hoverinfo elements will be seen in the hover labels\n *\n *  @param {object} calcPt\n *  @param {object} trace\n *  @param {object || array} contOut (mutated here)\n */\nmodule.exports = function fillHoverText(calcPt, trace, contOut) {\n    var fill = Array.isArray(contOut) ?\n        function(v) { contOut.push(v); } :\n        function(v) { contOut.text = v; };\n\n    var htx = Lib.extractOption(calcPt, trace, 'htx', 'hovertext');\n    if(isValid(htx)) return fill(htx);\n\n    var tx = Lib.extractOption(calcPt, trace, 'tx', 'text');\n    if(isValid(tx)) return fill(tx);\n};\n\n// accept all truthy values and 0 (which gets cast to '0' in the hover labels)\nfunction isValid(v) {\n    return v || v === 0;\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,WAAW,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,SAASC,aAAa,CAACC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAE;EAC5D,IAAIC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAACH,OAAO,CAAC,GAC7B,UAASI,CAAC,EAAE;IAAEJ,OAAO,CAACK,IAAI,CAACD,CAAC,CAAC;EAAE,CAAC,GAChC,UAASA,CAAC,EAAE;IAAEJ,OAAO,CAACM,IAAI,GAAGF,CAAC;EAAE,CAAC;EAErC,IAAIG,GAAG,GAAGd,GAAG,CAACe,aAAa,CAACV,MAAM,EAAEC,KAAK,EAAE,KAAK,EAAE,WAAW,CAAC;EAC9D,IAAGU,OAAO,CAACF,GAAG,CAAC,EAAE,OAAON,IAAI,CAACM,GAAG,CAAC;EAEjC,IAAIG,EAAE,GAAGjB,GAAG,CAACe,aAAa,CAACV,MAAM,EAAEC,KAAK,EAAE,IAAI,EAAE,MAAM,CAAC;EACvD,IAAGU,OAAO,CAACC,EAAE,CAAC,EAAE,OAAOT,IAAI,CAACS,EAAE,CAAC;AACnC,CAAC;;AAED;AACA,SAASD,OAAO,CAACL,CAAC,EAAE;EAChB,OAAOA,CAAC,IAAIA,CAAC,KAAK,CAAC;AACvB"},"metadata":{},"sourceType":"script","externalDependencies":[]}
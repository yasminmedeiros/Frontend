{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\nvar color = module.exports = {};\nvar colorAttrs = require('./attributes');\ncolor.defaults = colorAttrs.defaults;\nvar defaultLine = color.defaultLine = colorAttrs.defaultLine;\ncolor.lightLine = colorAttrs.lightLine;\nvar background = color.background = colorAttrs.background;\n\n/*\n * tinyRGB: turn a tinycolor into an rgb string, but\n * unlike the built-in tinycolor.toRgbString this never includes alpha\n */\ncolor.tinyRGB = function (tc) {\n  var c = tc.toRgb();\n  return 'rgb(' + Math.round(c.r) + ', ' + Math.round(c.g) + ', ' + Math.round(c.b) + ')';\n};\ncolor.rgb = function (cstr) {\n  return color.tinyRGB(tinycolor(cstr));\n};\ncolor.opacity = function (cstr) {\n  return cstr ? tinycolor(cstr).getAlpha() : 0;\n};\ncolor.addOpacity = function (cstr, op) {\n  var c = tinycolor(cstr).toRgb();\n  return 'rgba(' + Math.round(c.r) + ', ' + Math.round(c.g) + ', ' + Math.round(c.b) + ', ' + op + ')';\n};\n\n// combine two colors into one apparent color\n// if back has transparency or is missing,\n// color.background is assumed behind it\ncolor.combine = function (front, back) {\n  var fc = tinycolor(front).toRgb();\n  if (fc.a === 1) return tinycolor(front).toRgbString();\n  var bc = tinycolor(back || background).toRgb();\n  var bcflat = bc.a === 1 ? bc : {\n    r: 255 * (1 - bc.a) + bc.r * bc.a,\n    g: 255 * (1 - bc.a) + bc.g * bc.a,\n    b: 255 * (1 - bc.a) + bc.b * bc.a\n  };\n  var fcflat = {\n    r: bcflat.r * (1 - fc.a) + fc.r * fc.a,\n    g: bcflat.g * (1 - fc.a) + fc.g * fc.a,\n    b: bcflat.b * (1 - fc.a) + fc.b * fc.a\n  };\n  return tinycolor(fcflat).toRgbString();\n};\n\n/*\n * Create a color that contrasts with cstr.\n *\n * If cstr is a dark color, we lighten it; if it's light, we darken.\n *\n * If lightAmount / darkAmount are used, we adjust by these percentages,\n * otherwise we go all the way to white or black.\n */\ncolor.contrast = function (cstr, lightAmount, darkAmount) {\n  var tc = tinycolor(cstr);\n  if (tc.getAlpha() !== 1) tc = tinycolor(color.combine(cstr, background));\n  var newColor = tc.isDark() ? lightAmount ? tc.lighten(lightAmount) : background : darkAmount ? tc.darken(darkAmount) : defaultLine;\n  return newColor.toString();\n};\ncolor.stroke = function (s, c) {\n  var tc = tinycolor(c);\n  s.style({\n    'stroke': color.tinyRGB(tc),\n    'stroke-opacity': tc.getAlpha()\n  });\n};\ncolor.fill = function (s, c) {\n  var tc = tinycolor(c);\n  s.style({\n    'fill': color.tinyRGB(tc),\n    'fill-opacity': tc.getAlpha()\n  });\n};\n\n// search container for colors with the deprecated rgb(fractions) format\n// and convert them to rgb(0-255 values)\ncolor.clean = function (container) {\n  if (!container || typeof container !== 'object') return;\n  var keys = Object.keys(container);\n  var i, j, key, val;\n  for (i = 0; i < keys.length; i++) {\n    key = keys[i];\n    val = container[key];\n\n    // only sanitize keys that end in \"color\" or \"colorscale\"\n    if (key.substr(key.length - 5) === 'color') {\n      if (Array.isArray(val)) {\n        for (j = 0; j < val.length; j++) {\n          val[j] = cleanOne(val[j]);\n        }\n      } else container[key] = cleanOne(val);\n    } else if (key.substr(key.length - 10) === 'colorscale' && Array.isArray(val)) {\n      // colorscales have the format [[0, color1], [frac, color2], ... [1, colorN]]\n      for (j = 0; j < val.length; j++) {\n        if (Array.isArray(val[j])) val[j][1] = cleanOne(val[j][1]);\n      }\n    }\n    // recurse into arrays of objects, and plain objects\n    else if (Array.isArray(val)) {\n      var el0 = val[0];\n      if (!Array.isArray(el0) && el0 && typeof el0 === 'object') {\n        for (j = 0; j < val.length; j++) {\n          color.clean(val[j]);\n        }\n      }\n    } else if (val && typeof val === 'object') color.clean(val);\n  }\n};\nfunction cleanOne(val) {\n  if (isNumeric(val) || typeof val !== 'string') return val;\n  var valTrim = val.trim();\n  if (valTrim.substr(0, 3) !== 'rgb') return val;\n  var match = valTrim.match(/^rgba?\\s*\\(([^()]*)\\)$/);\n  if (!match) return val;\n  var parts = match[1].trim().split(/\\s*[\\s,]\\s*/);\n  var rgba = valTrim.charAt(3) === 'a' && parts.length === 4;\n  if (!rgba && parts.length !== 3) return val;\n  for (var i = 0; i < parts.length; i++) {\n    if (!parts[i].length) return val;\n    parts[i] = Number(parts[i]);\n\n    // all parts must be non-negative numbers\n    if (!(parts[i] >= 0)) return val;\n    // alpha>1 gets clipped to 1\n    if (i === 3) {\n      if (parts[i] > 1) parts[i] = 1;\n    }\n    // r, g, b must be < 1 (ie 1 itself is not allowed)\n    else if (parts[i] >= 1) return val;\n  }\n  var rgbStr = Math.round(parts[0] * 255) + ', ' + Math.round(parts[1] * 255) + ', ' + Math.round(parts[2] * 255);\n  if (rgba) return 'rgba(' + rgbStr + ', ' + parts[3] + ')';\n  return 'rgb(' + rgbStr + ')';\n}","map":{"version":3,"names":["tinycolor","require","isNumeric","color","module","exports","colorAttrs","defaults","defaultLine","lightLine","background","tinyRGB","tc","c","toRgb","Math","round","r","g","b","rgb","cstr","opacity","getAlpha","addOpacity","op","combine","front","back","fc","a","toRgbString","bc","bcflat","fcflat","contrast","lightAmount","darkAmount","newColor","isDark","lighten","darken","toString","stroke","s","style","fill","clean","container","keys","Object","i","j","key","val","length","substr","Array","isArray","cleanOne","el0","valTrim","trim","match","parts","split","rgba","charAt","Number","rgbStr"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/components/color/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar tinycolor = require('tinycolor2');\nvar isNumeric = require('fast-isnumeric');\n\nvar color = module.exports = {};\n\nvar colorAttrs = require('./attributes');\ncolor.defaults = colorAttrs.defaults;\nvar defaultLine = color.defaultLine = colorAttrs.defaultLine;\ncolor.lightLine = colorAttrs.lightLine;\nvar background = color.background = colorAttrs.background;\n\n/*\n * tinyRGB: turn a tinycolor into an rgb string, but\n * unlike the built-in tinycolor.toRgbString this never includes alpha\n */\ncolor.tinyRGB = function(tc) {\n    var c = tc.toRgb();\n    return 'rgb(' + Math.round(c.r) + ', ' +\n        Math.round(c.g) + ', ' + Math.round(c.b) + ')';\n};\n\ncolor.rgb = function(cstr) { return color.tinyRGB(tinycolor(cstr)); };\n\ncolor.opacity = function(cstr) { return cstr ? tinycolor(cstr).getAlpha() : 0; };\n\ncolor.addOpacity = function(cstr, op) {\n    var c = tinycolor(cstr).toRgb();\n    return 'rgba(' + Math.round(c.r) + ', ' +\n        Math.round(c.g) + ', ' + Math.round(c.b) + ', ' + op + ')';\n};\n\n// combine two colors into one apparent color\n// if back has transparency or is missing,\n// color.background is assumed behind it\ncolor.combine = function(front, back) {\n    var fc = tinycolor(front).toRgb();\n    if(fc.a === 1) return tinycolor(front).toRgbString();\n\n    var bc = tinycolor(back || background).toRgb();\n    var bcflat = bc.a === 1 ? bc : {\n        r: 255 * (1 - bc.a) + bc.r * bc.a,\n        g: 255 * (1 - bc.a) + bc.g * bc.a,\n        b: 255 * (1 - bc.a) + bc.b * bc.a\n    };\n    var fcflat = {\n        r: bcflat.r * (1 - fc.a) + fc.r * fc.a,\n        g: bcflat.g * (1 - fc.a) + fc.g * fc.a,\n        b: bcflat.b * (1 - fc.a) + fc.b * fc.a\n    };\n    return tinycolor(fcflat).toRgbString();\n};\n\n/*\n * Create a color that contrasts with cstr.\n *\n * If cstr is a dark color, we lighten it; if it's light, we darken.\n *\n * If lightAmount / darkAmount are used, we adjust by these percentages,\n * otherwise we go all the way to white or black.\n */\ncolor.contrast = function(cstr, lightAmount, darkAmount) {\n    var tc = tinycolor(cstr);\n\n    if(tc.getAlpha() !== 1) tc = tinycolor(color.combine(cstr, background));\n\n    var newColor = tc.isDark() ?\n        (lightAmount ? tc.lighten(lightAmount) : background) :\n        (darkAmount ? tc.darken(darkAmount) : defaultLine);\n\n    return newColor.toString();\n};\n\ncolor.stroke = function(s, c) {\n    var tc = tinycolor(c);\n    s.style({'stroke': color.tinyRGB(tc), 'stroke-opacity': tc.getAlpha()});\n};\n\ncolor.fill = function(s, c) {\n    var tc = tinycolor(c);\n    s.style({\n        'fill': color.tinyRGB(tc),\n        'fill-opacity': tc.getAlpha()\n    });\n};\n\n// search container for colors with the deprecated rgb(fractions) format\n// and convert them to rgb(0-255 values)\ncolor.clean = function(container) {\n    if(!container || typeof container !== 'object') return;\n\n    var keys = Object.keys(container);\n    var i, j, key, val;\n\n    for(i = 0; i < keys.length; i++) {\n        key = keys[i];\n        val = container[key];\n\n        // only sanitize keys that end in \"color\" or \"colorscale\"\n        if(key.substr(key.length - 5) === 'color') {\n            if(Array.isArray(val)) {\n                for(j = 0; j < val.length; j++) val[j] = cleanOne(val[j]);\n            }\n            else container[key] = cleanOne(val);\n        }\n        else if(key.substr(key.length - 10) === 'colorscale' && Array.isArray(val)) {\n            // colorscales have the format [[0, color1], [frac, color2], ... [1, colorN]]\n            for(j = 0; j < val.length; j++) {\n                if(Array.isArray(val[j])) val[j][1] = cleanOne(val[j][1]);\n            }\n        }\n        // recurse into arrays of objects, and plain objects\n        else if(Array.isArray(val)) {\n            var el0 = val[0];\n            if(!Array.isArray(el0) && el0 && typeof el0 === 'object') {\n                for(j = 0; j < val.length; j++) color.clean(val[j]);\n            }\n        }\n        else if(val && typeof val === 'object') color.clean(val);\n    }\n};\n\nfunction cleanOne(val) {\n    if(isNumeric(val) || typeof val !== 'string') return val;\n\n    var valTrim = val.trim();\n    if(valTrim.substr(0, 3) !== 'rgb') return val;\n\n    var match = valTrim.match(/^rgba?\\s*\\(([^()]*)\\)$/);\n    if(!match) return val;\n\n    var parts = match[1].trim().split(/\\s*[\\s,]\\s*/);\n    var rgba = valTrim.charAt(3) === 'a' && parts.length === 4;\n    if(!rgba && parts.length !== 3) return val;\n\n    for(var i = 0; i < parts.length; i++) {\n        if(!parts[i].length) return val;\n        parts[i] = Number(parts[i]);\n\n        // all parts must be non-negative numbers\n        if(!(parts[i] >= 0)) return val;\n        // alpha>1 gets clipped to 1\n        if(i === 3) {\n            if(parts[i] > 1) parts[i] = 1;\n        }\n        // r, g, b must be < 1 (ie 1 itself is not allowed)\n        else if(parts[i] >= 1) return val;\n    }\n\n    var rgbStr = Math.round(parts[0] * 255) + ', ' +\n        Math.round(parts[1] * 255) + ', ' +\n        Math.round(parts[2] * 255);\n\n    if(rgba) return 'rgba(' + rgbStr + ', ' + parts[3] + ')';\n    return 'rgb(' + rgbStr + ')';\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
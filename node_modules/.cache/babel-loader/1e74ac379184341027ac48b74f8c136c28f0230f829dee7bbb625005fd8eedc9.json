{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Registry = require('../../registry');\nvar handleXYDefaults = require('../scatter/xy_defaults');\nvar handleStyleDefaults = require('../bar/style_defaults');\nvar attributes = require('./attributes');\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n  var coerceFont = Lib.coerceFont;\n  var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n  coerce('orientation', traceOut.x && !traceOut.y ? 'h' : 'v');\n  coerce('base');\n  coerce('offset');\n  coerce('width');\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  var textPosition = coerce('textposition');\n  var hasBoth = Array.isArray(textPosition) || textPosition === 'auto';\n  var hasInside = hasBoth || textPosition === 'inside';\n  var hasOutside = hasBoth || textPosition === 'outside';\n  if (hasInside || hasOutside) {\n    var textFont = coerceFont(coerce, 'textfont', layout.font);\n\n    // Note that coercing `insidetextfont` is always needed –\n    // even if `textposition` is `outside` for each trace – since\n    // an outside label can become an inside one, for example because\n    // of a bar being stacked on top of it.\n    var insideTextFontDefault = Lib.extendFlat({}, textFont);\n    var isTraceTextfontColorSet = traceIn.textfont && traceIn.textfont.color;\n    var isColorInheritedFromLayoutFont = !isTraceTextfontColorSet;\n    if (isColorInheritedFromLayoutFont) {\n      delete insideTextFontDefault.color;\n    }\n    coerceFont(coerce, 'insidetextfont', insideTextFontDefault);\n    if (hasOutside) coerceFont(coerce, 'outsidetextfont', textFont);\n    coerce('constraintext');\n    coerce('selected.textfont.color');\n    coerce('unselected.textfont.color');\n    coerce('cliponaxis');\n  }\n  handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n  var lineColor = (traceOut.marker.line || {}).color;\n\n  // override defaultColor for error bars with defaultLine\n  var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {\n    axis: 'y'\n  });\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {\n    axis: 'x',\n    inherit: 'y'\n  });\n  Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};","map":{"version":3,"names":["Lib","require","Color","Registry","handleXYDefaults","handleStyleDefaults","attributes","module","exports","supplyDefaults","traceIn","traceOut","defaultColor","layout","coerce","attr","dflt","coerceFont","len","visible","x","y","textPosition","hasBoth","Array","isArray","hasInside","hasOutside","textFont","font","insideTextFontDefault","extendFlat","isTraceTextfontColorSet","textfont","color","isColorInheritedFromLayoutFont","lineColor","marker","line","errorBarsSupplyDefaults","getComponentMethod","defaultLine","axis","inherit","coerceSelectionMarkerOpacity"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/bar/defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar Lib = require('../../lib');\nvar Color = require('../../components/color');\nvar Registry = require('../../registry');\n\nvar handleXYDefaults = require('../scatter/xy_defaults');\nvar handleStyleDefaults = require('../bar/style_defaults');\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n    }\n\n    var coerceFont = Lib.coerceFont;\n\n    var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n    if(!len) {\n        traceOut.visible = false;\n        return;\n    }\n\n    coerce('orientation', (traceOut.x && !traceOut.y) ? 'h' : 'v');\n    coerce('base');\n    coerce('offset');\n    coerce('width');\n\n    coerce('text');\n    coerce('hovertext');\n    coerce('hovertemplate');\n\n    var textPosition = coerce('textposition');\n\n    var hasBoth = Array.isArray(textPosition) || textPosition === 'auto';\n    var hasInside = hasBoth || textPosition === 'inside';\n    var hasOutside = hasBoth || textPosition === 'outside';\n\n    if(hasInside || hasOutside) {\n        var textFont = coerceFont(coerce, 'textfont', layout.font);\n\n        // Note that coercing `insidetextfont` is always needed –\n        // even if `textposition` is `outside` for each trace – since\n        // an outside label can become an inside one, for example because\n        // of a bar being stacked on top of it.\n        var insideTextFontDefault = Lib.extendFlat({}, textFont);\n        var isTraceTextfontColorSet = traceIn.textfont && traceIn.textfont.color;\n        var isColorInheritedFromLayoutFont = !isTraceTextfontColorSet;\n        if(isColorInheritedFromLayoutFont) {\n            delete insideTextFontDefault.color;\n        }\n        coerceFont(coerce, 'insidetextfont', insideTextFontDefault);\n\n        if(hasOutside) coerceFont(coerce, 'outsidetextfont', textFont);\n\n        coerce('constraintext');\n        coerce('selected.textfont.color');\n        coerce('unselected.textfont.color');\n        coerce('cliponaxis');\n    }\n\n    handleStyleDefaults(traceIn, traceOut, coerce, defaultColor, layout);\n\n    var lineColor = (traceOut.marker.line || {}).color;\n\n    // override defaultColor for error bars with defaultLine\n    var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {axis: 'y'});\n    errorBarsSupplyDefaults(traceIn, traceOut, lineColor || Color.defaultLine, {axis: 'x', inherit: 'y'});\n\n    Lib.coerceSelectionMarkerOpacity(traceOut, coerce);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nfunction findCategories(ax, opts) {\n  var dataAttr = opts.dataAttr || ax._id.charAt(0);\n  var lookup = {};\n  var axData;\n  var i, j;\n  if (opts.axData) {\n    // non-x/y case\n    axData = opts.axData;\n  } else {\n    // x/y case\n    axData = [];\n    for (i = 0; i < opts.data.length; i++) {\n      var trace = opts.data[i];\n      if (trace[dataAttr + 'axis'] === ax._id) {\n        axData.push(trace);\n      }\n    }\n  }\n  for (i = 0; i < axData.length; i++) {\n    var vals = axData[i][dataAttr];\n    for (j = 0; j < vals.length; j++) {\n      var v = vals[j];\n      if (v !== null && v !== undefined) {\n        lookup[v] = 1;\n      }\n    }\n  }\n  return Object.keys(lookup);\n}\n\n/**\n * Fills in category* default and initial categories.\n *\n * @param {object} containerIn : input axis object\n * @param {object} containerOut : full axis object\n * @param {function} coerce : Lib.coerce fn wrapper\n * @param {object} opts :\n *   - data {array} : (full) data trace\n * OR\n *   - axData {array} : (full) data associated with axis being coerced here\n *   - dataAttr {string} : attribute name corresponding to coordinate array\n */\nmodule.exports = function handleCategoryOrderDefaults(containerIn, containerOut, coerce, opts) {\n  if (containerOut.type !== 'category') return;\n  var arrayIn = containerIn.categoryarray;\n  var isValidArray = Array.isArray(arrayIn) && arrayIn.length > 0;\n\n  // override default 'categoryorder' value when non-empty array is supplied\n  var orderDefault;\n  if (isValidArray) orderDefault = 'array';\n  var order = coerce('categoryorder', orderDefault);\n  var array;\n\n  // coerce 'categoryarray' only in array order case\n  if (order === 'array') {\n    array = coerce('categoryarray');\n  }\n\n  // cannot set 'categoryorder' to 'array' with an invalid 'categoryarray'\n  if (!isValidArray && order === 'array') {\n    order = containerOut.categoryorder = 'trace';\n  }\n\n  // set up things for makeCalcdata\n  if (order === 'trace') {\n    containerOut._initialCategories = [];\n  } else if (order === 'array') {\n    containerOut._initialCategories = array.slice();\n  } else {\n    array = findCategories(containerOut, opts).sort();\n    if (order === 'category ascending') {\n      containerOut._initialCategories = array;\n    } else if (order === 'category descending') {\n      containerOut._initialCategories = array.reverse();\n    }\n  }\n};","map":{"version":3,"names":["findCategories","ax","opts","dataAttr","_id","charAt","lookup","axData","i","j","data","length","trace","push","vals","v","undefined","Object","keys","module","exports","handleCategoryOrderDefaults","containerIn","containerOut","coerce","type","arrayIn","categoryarray","isValidArray","Array","isArray","orderDefault","order","array","categoryorder","_initialCategories","slice","sort","reverse"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/category_order_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nfunction findCategories(ax, opts) {\n    var dataAttr = opts.dataAttr || ax._id.charAt(0);\n    var lookup = {};\n    var axData;\n    var i, j;\n\n    if(opts.axData) {\n        // non-x/y case\n        axData = opts.axData;\n    } else {\n        // x/y case\n        axData = [];\n        for(i = 0; i < opts.data.length; i++) {\n            var trace = opts.data[i];\n            if(trace[dataAttr + 'axis'] === ax._id) {\n                axData.push(trace);\n            }\n        }\n    }\n\n    for(i = 0; i < axData.length; i++) {\n        var vals = axData[i][dataAttr];\n        for(j = 0; j < vals.length; j++) {\n            var v = vals[j];\n            if(v !== null && v !== undefined) {\n                lookup[v] = 1;\n            }\n        }\n    }\n\n    return Object.keys(lookup);\n}\n\n/**\n * Fills in category* default and initial categories.\n *\n * @param {object} containerIn : input axis object\n * @param {object} containerOut : full axis object\n * @param {function} coerce : Lib.coerce fn wrapper\n * @param {object} opts :\n *   - data {array} : (full) data trace\n * OR\n *   - axData {array} : (full) data associated with axis being coerced here\n *   - dataAttr {string} : attribute name corresponding to coordinate array\n */\nmodule.exports = function handleCategoryOrderDefaults(containerIn, containerOut, coerce, opts) {\n    if(containerOut.type !== 'category') return;\n\n    var arrayIn = containerIn.categoryarray;\n    var isValidArray = (Array.isArray(arrayIn) && arrayIn.length > 0);\n\n    // override default 'categoryorder' value when non-empty array is supplied\n    var orderDefault;\n    if(isValidArray) orderDefault = 'array';\n\n    var order = coerce('categoryorder', orderDefault);\n    var array;\n\n    // coerce 'categoryarray' only in array order case\n    if(order === 'array') {\n        array = coerce('categoryarray');\n    }\n\n    // cannot set 'categoryorder' to 'array' with an invalid 'categoryarray'\n    if(!isValidArray && order === 'array') {\n        order = containerOut.categoryorder = 'trace';\n    }\n\n    // set up things for makeCalcdata\n    if(order === 'trace') {\n        containerOut._initialCategories = [];\n    } else if(order === 'array') {\n        containerOut._initialCategories = array.slice();\n    } else {\n        array = findCategories(containerOut, opts).sort();\n        if(order === 'category ascending') {\n            containerOut._initialCategories = array;\n        } else if(order === 'category descending') {\n            containerOut._initialCategories = array.reverse();\n        }\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,SAASA,cAAc,CAACC,EAAE,EAAEC,IAAI,EAAE;EAC9B,IAAIC,QAAQ,GAAGD,IAAI,CAACC,QAAQ,IAAIF,EAAE,CAACG,GAAG,CAACC,MAAM,CAAC,CAAC,CAAC;EAChD,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAIC,MAAM;EACV,IAAIC,CAAC,EAAEC,CAAC;EAER,IAAGP,IAAI,CAACK,MAAM,EAAE;IACZ;IACAA,MAAM,GAAGL,IAAI,CAACK,MAAM;EACxB,CAAC,MAAM;IACH;IACAA,MAAM,GAAG,EAAE;IACX,KAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,IAAI,CAACQ,IAAI,CAACC,MAAM,EAAEH,CAAC,EAAE,EAAE;MAClC,IAAII,KAAK,GAAGV,IAAI,CAACQ,IAAI,CAACF,CAAC,CAAC;MACxB,IAAGI,KAAK,CAACT,QAAQ,GAAG,MAAM,CAAC,KAAKF,EAAE,CAACG,GAAG,EAAE;QACpCG,MAAM,CAACM,IAAI,CAACD,KAAK,CAAC;MACtB;IACJ;EACJ;EAEA,KAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,MAAM,CAACI,MAAM,EAAEH,CAAC,EAAE,EAAE;IAC/B,IAAIM,IAAI,GAAGP,MAAM,CAACC,CAAC,CAAC,CAACL,QAAQ,CAAC;IAC9B,KAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGK,IAAI,CAACH,MAAM,EAAEF,CAAC,EAAE,EAAE;MAC7B,IAAIM,CAAC,GAAGD,IAAI,CAACL,CAAC,CAAC;MACf,IAAGM,CAAC,KAAK,IAAI,IAAIA,CAAC,KAAKC,SAAS,EAAE;QAC9BV,MAAM,CAACS,CAAC,CAAC,GAAG,CAAC;MACjB;IACJ;EACJ;EAEA,OAAOE,MAAM,CAACC,IAAI,CAACZ,MAAM,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAa,MAAM,CAACC,OAAO,GAAG,SAASC,2BAA2B,CAACC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEtB,IAAI,EAAE;EAC3F,IAAGqB,YAAY,CAACE,IAAI,KAAK,UAAU,EAAE;EAErC,IAAIC,OAAO,GAAGJ,WAAW,CAACK,aAAa;EACvC,IAAIC,YAAY,GAAIC,KAAK,CAACC,OAAO,CAACJ,OAAO,CAAC,IAAIA,OAAO,CAACf,MAAM,GAAG,CAAE;;EAEjE;EACA,IAAIoB,YAAY;EAChB,IAAGH,YAAY,EAAEG,YAAY,GAAG,OAAO;EAEvC,IAAIC,KAAK,GAAGR,MAAM,CAAC,eAAe,EAAEO,YAAY,CAAC;EACjD,IAAIE,KAAK;;EAET;EACA,IAAGD,KAAK,KAAK,OAAO,EAAE;IAClBC,KAAK,GAAGT,MAAM,CAAC,eAAe,CAAC;EACnC;;EAEA;EACA,IAAG,CAACI,YAAY,IAAII,KAAK,KAAK,OAAO,EAAE;IACnCA,KAAK,GAAGT,YAAY,CAACW,aAAa,GAAG,OAAO;EAChD;;EAEA;EACA,IAAGF,KAAK,KAAK,OAAO,EAAE;IAClBT,YAAY,CAACY,kBAAkB,GAAG,EAAE;EACxC,CAAC,MAAM,IAAGH,KAAK,KAAK,OAAO,EAAE;IACzBT,YAAY,CAACY,kBAAkB,GAAGF,KAAK,CAACG,KAAK,EAAE;EACnD,CAAC,MAAM;IACHH,KAAK,GAAGjC,cAAc,CAACuB,YAAY,EAAErB,IAAI,CAAC,CAACmC,IAAI,EAAE;IACjD,IAAGL,KAAK,KAAK,oBAAoB,EAAE;MAC/BT,YAAY,CAACY,kBAAkB,GAAGF,KAAK;IAC3C,CAAC,MAAM,IAAGD,KAAK,KAAK,qBAAqB,EAAE;MACvCT,YAAY,CAACY,kBAAkB,GAAGF,KAAK,CAACK,OAAO,EAAE;IACrD;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
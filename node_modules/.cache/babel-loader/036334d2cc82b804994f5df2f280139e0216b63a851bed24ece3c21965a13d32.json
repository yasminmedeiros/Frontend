{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar createMesh = require('gl-mesh3d');\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar zip3 = require('../../plots/gl3d/zip3');\nvar Lib = require('../../lib');\nfunction distinctVals(col) {\n  return Lib.distinctVals(col).vals;\n}\nfunction IsosurfaceTrace(scene, mesh, uid) {\n  this.scene = scene;\n  this.uid = uid;\n  this.mesh = mesh;\n  this.name = '';\n  this.data = null;\n  this.showContour = false;\n}\nvar proto = IsosurfaceTrace.prototype;\nfunction findNearestOnAxis(w, arr) {\n  for (var q = arr.length - 1; q > 0; q--) {\n    var min = Math.min(arr[q], arr[q - 1]);\n    var max = Math.max(arr[q], arr[q - 1]);\n    if (max > min && min < w && w <= max) {\n      return {\n        id: q,\n        distRatio: (max - w) / (max - min)\n      };\n    }\n  }\n  return {\n    id: 0,\n    distRatio: 0\n  };\n}\nproto.handlePick = function (selection) {\n  if (selection.object === this.mesh) {\n    var rawId = selection.data.index;\n    var x = this.data._x[rawId];\n    var y = this.data._y[rawId];\n    var z = this.data._z[rawId];\n    var height = this.data._Ys.length;\n    var depth = this.data._Zs.length;\n    var i = findNearestOnAxis(x, this.data._Xs).id;\n    var j = findNearestOnAxis(y, this.data._Ys).id;\n    var k = findNearestOnAxis(z, this.data._Zs).id;\n    var selectIndex = selection.index = k + depth * j + depth * height * i;\n    selection.traceCoordinate = [this.data._x[selectIndex], this.data._y[selectIndex], this.data._z[selectIndex], this.data.value[selectIndex]];\n    var text = this.data.text;\n    if (Array.isArray(text) && text[selectIndex] !== undefined) {\n      selection.textLabel = text[selectIndex];\n    } else if (text) {\n      selection.textLabel = text;\n    }\n    return true;\n  }\n};\nproto.update = function (data) {\n  var scene = this.scene;\n  var layout = scene.fullSceneLayout;\n  this.data = generateIsosurfaceMesh(data);\n\n  // Unpack position data\n  function toDataCoords(axis, coord, scale, calendar) {\n    return coord.map(function (x) {\n      return axis.d2l(x, 0, calendar) * scale;\n    });\n  }\n  var positions = zip3(toDataCoords(layout.xaxis, data._x, scene.dataScale[0], data.xcalendar), toDataCoords(layout.yaxis, data._y, scene.dataScale[1], data.ycalendar), toDataCoords(layout.zaxis, data._z, scene.dataScale[2], data.zcalendar));\n  var cells = zip3(data._i, data._j, data._k);\n  var config = {\n    positions: positions,\n    cells: cells,\n    lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n    ambient: data.lighting.ambient,\n    diffuse: data.lighting.diffuse,\n    specular: data.lighting.specular,\n    roughness: data.lighting.roughness,\n    fresnel: data.lighting.fresnel,\n    vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n    faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n    opacity: 1,\n    // Note: no need to create transparent surfaces\n    contourEnable: data.contour.show,\n    contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n    contourWidth: data.contour.width,\n    useFacetNormals: data.flatshading\n  };\n  config.vertexIntensity = data._intensity;\n  config.vertexIntensityBounds = [data.cmin, data.cmax];\n  config.colormap = parseColorScale(data);\n\n  // Update mesh\n  this.mesh.update(config);\n};\nproto.dispose = function () {\n  this.scene.glplot.remove(this.mesh);\n  this.mesh.dispose();\n};\nfunction generateIsosurfaceMesh(data) {\n  data._i = [];\n  data._j = [];\n  data._k = [];\n  var showSurface = data.surface.show;\n  var showSpaceframe = data.spaceframe.show;\n  var surfaceFill = data.surface.fill;\n  var spaceframeFill = data.spaceframe.fill;\n  var drawingSurface = false;\n  var drawingSpaceframe = false;\n  var drawingEdge = false;\n  var numFaces = 0;\n  var numVertices;\n  var beginVertextLength;\n  var Xs = distinctVals(data.x.slice(0, data._len));\n  var Ys = distinctVals(data.y.slice(0, data._len));\n  var Zs = distinctVals(data.z.slice(0, data._len));\n  var width = Xs.length;\n  var height = Ys.length;\n  var depth = Zs.length;\n  function getIndex(i, j, k) {\n    return k + depth * j + depth * height * i;\n  }\n  var minValues = data._minValues;\n  var maxValues = data._maxValues;\n  var vMin = data._vMin;\n  var vMax = data._vMax;\n  var allXs;\n  var allYs;\n  var allZs;\n  var allVs;\n  function findVertexId(x, y, z) {\n    // could be used to find the vertex id of previously generated vertex within the group\n\n    var len = allVs.length;\n    for (var f = beginVertextLength; f < len; f++) {\n      if (x === allXs[f] && y === allYs[f] && z === allZs[f]) {\n        return f;\n      }\n    }\n    return -1;\n  }\n  function beginGroup() {\n    beginVertextLength = numVertices;\n  }\n  function emptyVertices() {\n    allXs = [];\n    allYs = [];\n    allZs = [];\n    allVs = [];\n    numVertices = 0;\n    beginGroup();\n  }\n  function addVertex(x, y, z, v) {\n    allXs.push(x);\n    allYs.push(y);\n    allZs.push(z);\n    allVs.push(v);\n    numVertices++;\n    return numVertices - 1;\n  }\n  function addFace(a, b, c) {\n    data._i.push(a);\n    data._j.push(b);\n    data._k.push(c);\n    numFaces++;\n    return numFaces - 1;\n  }\n  function getCenter(A, B, C) {\n    var M = [];\n    for (var i = 0; i < A.length; i++) {\n      M[i] = (A[i] + B[i] + C[i]) / 3.0;\n    }\n    return M;\n  }\n  function getBetween(A, B, r) {\n    var M = [];\n    for (var i = 0; i < A.length; i++) {\n      M[i] = A[i] * (1 - r) + r * B[i];\n    }\n    return M;\n  }\n  var activeFill;\n  function setFill(fill) {\n    activeFill = fill;\n  }\n  function createOpenTri(xyzv, abc) {\n    var A = xyzv[0];\n    var B = xyzv[1];\n    var C = xyzv[2];\n    var G = getCenter(A, B, C);\n    var r = Math.sqrt(1 - activeFill);\n    var p1 = getBetween(G, A, r);\n    var p2 = getBetween(G, B, r);\n    var p3 = getBetween(G, C, r);\n    var a = abc[0];\n    var b = abc[1];\n    var c = abc[2];\n    return {\n      xyzv: [[A, B, p2], [p2, p1, A], [B, C, p3], [p3, p2, B], [C, A, p1], [p1, p3, C]],\n      abc: [[a, b, -1], [-1, -1, a], [b, c, -1], [-1, -1, b], [c, a, -1], [-1, -1, c]]\n    };\n  }\n  function styleIncludes(style, char) {\n    if (style === 'all' || style === null) return true;\n    return style.indexOf(char) > -1;\n  }\n  function mapValue(style, value) {\n    if (style === null) return value;\n    return style;\n  }\n  function drawTri(style, xyzv, abc) {\n    beginGroup();\n    var allXYZVs = [xyzv];\n    var allABCs = [abc];\n    if (activeFill >= 1) {\n      allXYZVs = [xyzv];\n      allABCs = [abc];\n    } else if (activeFill > 0) {\n      var openTri = createOpenTri(xyzv, abc);\n      allXYZVs = openTri.xyzv;\n      allABCs = openTri.abc;\n    }\n    for (var f = 0; f < allXYZVs.length; f++) {\n      xyzv = allXYZVs[f];\n      abc = allABCs[f];\n      var pnts = [];\n      for (var i = 0; i < 3; i++) {\n        var x = xyzv[i][0];\n        var y = xyzv[i][1];\n        var z = xyzv[i][2];\n        var v = xyzv[i][3];\n        var id = abc[i] > -1 ? abc[i] : findVertexId(x, y, z);\n        if (id > -1) {\n          pnts[i] = id;\n        } else {\n          pnts[i] = addVertex(x, y, z, mapValue(style, v));\n        }\n      }\n      addFace(pnts[0], pnts[1], pnts[2]);\n    }\n  }\n  function drawQuad(style, xyzv, abcd) {\n    var makeTri = function makeTri(i, j, k) {\n      drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n    };\n    makeTri(0, 1, 2);\n    makeTri(2, 3, 0);\n  }\n  function drawTetra(style, xyzv, abcd) {\n    var makeTri = function makeTri(i, j, k) {\n      drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n    };\n    makeTri(0, 1, 2);\n    makeTri(3, 0, 1);\n    makeTri(2, 3, 0);\n    makeTri(1, 2, 3);\n  }\n  function calcIntersection(pointOut, pointIn, min, max) {\n    var value = pointOut[3];\n    if (value < min) value = min;\n    if (value > max) value = max;\n    var ratio = (pointOut[3] - value) / (pointOut[3] - pointIn[3]);\n    var result = [];\n    for (var s = 0; s < 4; s++) {\n      result[s] = (1 - ratio) * pointOut[s] + ratio * pointIn[s];\n    }\n    return result;\n  }\n  function inRange(value, min, max) {\n    return value >= min && value <= max;\n  }\n  function almostInFinalRange(value) {\n    var vErr = 0.01 * (vMax - vMin);\n    return value >= vMin - vErr && value <= vMax + vErr;\n  }\n  function getXYZV(indecies) {\n    var xyzv = [];\n    for (var q = 0; q < 4; q++) {\n      var index = indecies[q];\n      xyzv.push([data.x[index], data.y[index], data.z[index], data.value[index]]);\n    }\n    return xyzv;\n  }\n  function tryCreateTri(style, xyzv, abc, min, max, isSecondPass) {\n    abc = [-1, -1, -1]; // Note: for the moment we had to override indices\n    // for planar surfaces (i.e. caps and slices) due to group shading\n    // bug of gl-mesh3d. But don't worry this would run faster!\n\n    var tryDrawTri = function tryDrawTri(style, xyzv, abc) {\n      if (\n      // we check here if the points are in `real` iso-min/max range\n      almostInFinalRange(xyzv[0][3]) && almostInFinalRange(xyzv[1][3]) && almostInFinalRange(xyzv[2][3])) {\n        drawTri(style, xyzv, abc);\n      } else if (!isSecondPass) {\n        tryCreateTri(style, xyzv, abc, vMin, vMax, true); // i.e. second pass\n      }\n    };\n\n    var ok = [inRange(xyzv[0][3], min, max), inRange(xyzv[1][3], min, max), inRange(xyzv[2][3], min, max)];\n    var interpolated = false;\n    if (!ok[0] && !ok[1] && !ok[2]) {\n      return interpolated;\n    }\n    if (ok[0] && ok[1] && ok[2]) {\n      if (!drawingEdge) {\n        tryDrawTri(style, xyzv, abc);\n      }\n      return interpolated;\n    }\n    [[0, 1, 2], [2, 0, 1], [1, 2, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && !ok[e[2]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var p1 = calcIntersection(C, A, min, max);\n        var p2 = calcIntersection(C, B, min, max);\n        tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]);\n        tryDrawTri(style, [A, B, p2], [abc[e[0]], abc[e[1]], -1]);\n        interpolated = true;\n      }\n    });\n    if (interpolated) return interpolated;\n    [[0, 1, 2], [1, 2, 0], [2, 0, 1]].forEach(function (e) {\n      if (ok[e[0]] && !ok[e[1]] && !ok[e[2]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var p1 = calcIntersection(B, A, min, max);\n        var p2 = calcIntersection(C, A, min, max);\n        tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]);\n        interpolated = true;\n      }\n    });\n    return interpolated;\n  }\n  function tryCreateTetra(style, abcd, min, max) {\n    var xyzv = getXYZV(abcd);\n    var ok = [inRange(xyzv[0][3], min, max), inRange(xyzv[1][3], min, max), inRange(xyzv[2][3], min, max), inRange(xyzv[3][3], min, max)];\n    var interpolated = false;\n    if (!ok[0] && !ok[1] && !ok[2] && !ok[3]) {\n      return interpolated;\n    }\n    if (ok[0] && ok[1] && ok[2] && ok[3]) {\n      if (drawingSpaceframe) {\n        drawTetra(style, xyzv, abcd);\n      }\n      return interpolated;\n    }\n    [[0, 1, 2, 3], [3, 0, 1, 2], [2, 3, 0, 1], [1, 2, 3, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        if (drawingSpaceframe) {\n          drawTri(style, [A, B, C], [abcd[e[0]], abcd[e[1]], abcd[e[2]]]);\n        } else {\n          var p1 = calcIntersection(D, A, min, max);\n          var p2 = calcIntersection(D, B, min, max);\n          var p3 = calcIntersection(D, C, min, max);\n          drawTri(null, [p1, p2, p3], [-1, -1, -1]);\n        }\n        interpolated = true;\n      }\n    });\n    if (interpolated) return interpolated;\n    [[0, 1, 2, 3], [1, 2, 3, 0], [2, 3, 0, 1], [3, 0, 1, 2], [0, 2, 3, 1], [1, 3, 2, 0]].forEach(function (e) {\n      if (ok[e[0]] && ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        var p1 = calcIntersection(C, A, min, max);\n        var p2 = calcIntersection(C, B, min, max);\n        var p3 = calcIntersection(D, B, min, max);\n        var p4 = calcIntersection(D, A, min, max);\n        if (drawingSpaceframe) {\n          drawTri(style, [A, p4, p1], [abcd[e[0]], -1, -1]);\n          drawTri(style, [B, p2, p3], [abcd[e[1]], -1, -1]);\n        } else {\n          drawQuad(null, [p1, p2, p3, p4], [-1, -1, -1, -1]);\n        }\n        interpolated = true;\n      }\n    });\n    if (interpolated) return interpolated;\n    [[0, 1, 2, 3], [1, 2, 3, 0], [2, 3, 0, 1], [3, 0, 1, 2]].forEach(function (e) {\n      if (ok[e[0]] && !ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n        var A = xyzv[e[0]];\n        var B = xyzv[e[1]];\n        var C = xyzv[e[2]];\n        var D = xyzv[e[3]];\n        var p1 = calcIntersection(B, A, min, max);\n        var p2 = calcIntersection(C, A, min, max);\n        var p3 = calcIntersection(D, A, min, max);\n        if (drawingSpaceframe) {\n          drawTri(style, [A, p1, p2], [abcd[e[0]], -1, -1]);\n          drawTri(style, [A, p2, p3], [abcd[e[0]], -1, -1]);\n          drawTri(style, [A, p3, p1], [abcd[e[0]], -1, -1]);\n        } else {\n          drawTri(null, [p1, p2, p3], [-1, -1, -1]);\n        }\n        interpolated = true;\n      }\n    });\n    return interpolated;\n  }\n  function addCube(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max) {\n    if (drawingSurface) {\n      if (styleIncludes(style, 'A')) {\n        tryCreateTetra(null, [p000, p001, p010, p100], min, max);\n      }\n      if (styleIncludes(style, 'B')) {\n        tryCreateTetra(null, [p001, p010, p011, p111], min, max);\n      }\n      if (styleIncludes(style, 'C')) {\n        tryCreateTetra(null, [p001, p100, p101, p111], min, max);\n      }\n      if (styleIncludes(style, 'D')) {\n        tryCreateTetra(null, [p010, p100, p110, p111], min, max);\n      }\n      if (styleIncludes(style, 'E')) {\n        tryCreateTetra(null, [p001, p010, p100, p111], min, max);\n      }\n    }\n    if (drawingSpaceframe) {\n      tryCreateTetra(style, [p001, p010, p100, p111], min, max);\n    }\n  }\n  function addRect(style, a, b, c, d, min, max) {\n    tryCreateTri(style, getXYZV([a, b, c]), [a, b, c], min, max);\n    tryCreateTri(style, getXYZV([c, d, a]), [c, d, a], min, max);\n  }\n  function begin2dCell(style, p00, p01, p10, p11, min, max, isEven) {\n    // used to create caps and/or slices on exact axis points\n    if (isEven) {\n      addRect(style, p00, p01, p11, p10, min, max);\n    } else {\n      addRect(style, p01, p11, p10, p00, min, max);\n    }\n  }\n  function beginSection(style, i, j, k, min, max, distRatios) {\n    // used to create slices between axis points\n\n    var A, B, C, D;\n    var makeSection = function makeSection() {\n      tryCreateTri(style, [A, B, C], [-1, -1, -1], min, max);\n      tryCreateTri(style, [C, D, A], [-1, -1, -1], min, max);\n    };\n    var rX = distRatios[0];\n    var rY = distRatios[1];\n    var rZ = distRatios[2];\n    if (rX) {\n      A = getBetween(getXYZV([getIndex(i, j - 0, k - 0)])[0], getXYZV([getIndex(i - 1, j - 0, k - 0)])[0], rX);\n      B = getBetween(getXYZV([getIndex(i, j - 0, k - 1)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rX);\n      C = getBetween(getXYZV([getIndex(i, j - 1, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rX);\n      D = getBetween(getXYZV([getIndex(i, j - 1, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rX);\n      makeSection();\n    }\n    if (rY) {\n      A = getBetween(getXYZV([getIndex(i - 0, j, k - 0)])[0], getXYZV([getIndex(i - 0, j - 1, k - 0)])[0], rY);\n      B = getBetween(getXYZV([getIndex(i - 0, j, k - 1)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rY);\n      C = getBetween(getXYZV([getIndex(i - 1, j, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rY);\n      D = getBetween(getXYZV([getIndex(i - 1, j, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rY);\n      makeSection();\n    }\n    if (rZ) {\n      A = getBetween(getXYZV([getIndex(i - 0, j - 0, k)])[0], getXYZV([getIndex(i - 0, j - 0, k - 1)])[0], rZ);\n      B = getBetween(getXYZV([getIndex(i - 0, j - 1, k)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rZ);\n      C = getBetween(getXYZV([getIndex(i - 1, j - 1, k)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rZ);\n      D = getBetween(getXYZV([getIndex(i - 1, j - 0, k)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rZ);\n      makeSection();\n    }\n  }\n  function begin3dCell(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max, isEven) {\n    // used to create spaceframe and/or iso-surfaces\n    var cellStyle = style;\n    if (isEven) {\n      if (drawingSurface && style === 'even') cellStyle = null;\n      addCube(cellStyle, p000, p001, p010, p011, p100, p101, p110, p111, min, max);\n    } else {\n      if (drawingSurface && style === 'odd') cellStyle = null;\n      addCube(cellStyle, p111, p110, p101, p100, p011, p010, p001, p000, min, max);\n    }\n  }\n  function draw2dX(style, items, min, max) {\n    for (var q = 0; q < items.length; q++) {\n      var i = items[q];\n      for (var k = 1; k < depth; k++) {\n        for (var j = 1; j < height; j++) {\n          begin2dCell(style, getIndex(i, j - 1, k - 1), getIndex(i, j - 1, k), getIndex(i, j, k - 1), getIndex(i, j, k), min, max, (i + j + k) % 2);\n        }\n      }\n    }\n  }\n  function draw2dY(style, items, min, max) {\n    for (var q = 0; q < items.length; q++) {\n      var j = items[q];\n      for (var i = 1; i < width; i++) {\n        for (var k = 1; k < depth; k++) {\n          begin2dCell(style, getIndex(i - 1, j, k - 1), getIndex(i, j, k - 1), getIndex(i - 1, j, k), getIndex(i, j, k), min, max, (i + j + k) % 2);\n        }\n      }\n    }\n  }\n  function draw2dZ(style, items, min, max) {\n    for (var q = 0; q < items.length; q++) {\n      var k = items[q];\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          begin2dCell(style, getIndex(i - 1, j - 1, k), getIndex(i - 1, j, k), getIndex(i, j - 1, k), getIndex(i, j, k), min, max, (i + j + k) % 2);\n        }\n      }\n    }\n  }\n  function draw3d(style, min, max) {\n    for (var k = 1; k < depth; k++) {\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          begin3dCell(style, getIndex(i - 1, j - 1, k - 1), getIndex(i - 1, j - 1, k), getIndex(i - 1, j, k - 1), getIndex(i - 1, j, k), getIndex(i, j - 1, k - 1), getIndex(i, j - 1, k), getIndex(i, j, k - 1), getIndex(i, j, k), min, max, (i + j + k) % 2);\n        }\n      }\n    }\n  }\n  function drawSpaceframe(style, min, max) {\n    drawingSpaceframe = true;\n    draw3d(style, min, max);\n    drawingSpaceframe = false;\n  }\n  function drawSurface(style, min, max) {\n    drawingSurface = true;\n    draw3d(style, min, max);\n    drawingSurface = false;\n  }\n  function drawSectionX(style, items, min, max, distRatios) {\n    for (var q = 0; q < items.length; q++) {\n      var i = items[q];\n      for (var k = 1; k < depth; k++) {\n        for (var j = 1; j < height; j++) {\n          beginSection(style, i, j, k, min, max, distRatios[q]);\n        }\n      }\n    }\n  }\n  function drawSectionY(style, items, min, max, distRatios) {\n    for (var q = 0; q < items.length; q++) {\n      var j = items[q];\n      for (var i = 1; i < width; i++) {\n        for (var k = 1; k < depth; k++) {\n          beginSection(style, i, j, k, min, max, distRatios[q]);\n        }\n      }\n    }\n  }\n  function drawSectionZ(style, items, min, max, distRatios) {\n    for (var q = 0; q < items.length; q++) {\n      var k = items[q];\n      for (var j = 1; j < height; j++) {\n        for (var i = 1; i < width; i++) {\n          beginSection(style, i, j, k, min, max, distRatios[q]);\n        }\n      }\n    }\n  }\n  function createRange(a, b) {\n    var range = [];\n    for (var q = a; q < b; q++) {\n      range.push(q);\n    }\n    return range;\n  }\n  function insertGridPoints() {\n    for (var i = 0; i < width; i++) {\n      for (var j = 0; j < height; j++) {\n        for (var k = 0; k < depth; k++) {\n          var index = getIndex(i, j, k);\n          addVertex(data.x[index], data.y[index], data.z[index], data.value[index]);\n        }\n      }\n    }\n  }\n  function drawAll() {\n    emptyVertices();\n\n    // insert grid points\n    insertGridPoints();\n    var activeStyle = null;\n\n    // draw spaceframes\n    if (showSpaceframe && spaceframeFill) {\n      setFill(spaceframeFill);\n      drawSpaceframe(activeStyle, vMin, vMax);\n    }\n\n    // draw iso-surfaces\n    if (showSurface && surfaceFill) {\n      setFill(surfaceFill);\n      var surfacePattern = data.surface.pattern;\n      var surfaceCount = data.surface.count;\n      for (var q = 0; q < surfaceCount; q++) {\n        var ratio = surfaceCount === 1 ? 0.5 : q / (surfaceCount - 1);\n        var level = (1 - ratio) * vMin + ratio * vMax;\n        var d1 = Math.abs(level - minValues);\n        var d2 = Math.abs(level - maxValues);\n        var ranges = d1 > d2 ? [minValues, level] : [level, maxValues];\n        drawSurface(surfacePattern, ranges[0], ranges[1]);\n      }\n    }\n    var setupMinMax = [[Math.min(vMin, maxValues), Math.max(vMin, maxValues)], [Math.min(minValues, vMax), Math.max(minValues, vMax)]];\n    ['x', 'y', 'z'].forEach(function (e) {\n      for (var s = 0; s < setupMinMax.length; s++) {\n        drawingEdge = s === 0 ? false : true;\n        var activeMin = setupMinMax[s][0];\n        var activeMax = setupMinMax[s][1];\n\n        // draw slices\n        var slice = data.slices[e];\n        if (slice.show && slice.fill) {\n          setFill(slice.fill);\n          var exactIndices = [];\n          var ceilIndices = [];\n          var distRatios = [];\n          if (slice.locations.length) {\n            for (var q = 0; q < slice.locations.length; q++) {\n              var near = findNearestOnAxis(slice.locations[q], e === 'x' ? Xs : e === 'y' ? Ys : Zs);\n              if (near.distRatio === 0) {\n                exactIndices.push(near.id);\n              } else if (near.id > 0) {\n                ceilIndices.push(near.id);\n                if (e === 'x') {\n                  distRatios.push([near.distRatio, 0, 0]);\n                } else if (e === 'y') {\n                  distRatios.push([0, near.distRatio, 0]);\n                } else {\n                  distRatios.push([0, 0, near.distRatio]);\n                }\n              }\n            }\n          } else {\n            if (e === 'x') {\n              exactIndices = createRange(1, width - 1);\n            } else if (e === 'y') {\n              exactIndices = createRange(1, height - 1);\n            } else {\n              exactIndices = createRange(1, depth - 1);\n            }\n          }\n          if (ceilIndices.length > 0) {\n            if (e === 'x') {\n              drawSectionX(activeStyle, ceilIndices, activeMin, activeMax, distRatios);\n            } else if (e === 'y') {\n              drawSectionY(activeStyle, ceilIndices, activeMin, activeMax, distRatios);\n            } else {\n              drawSectionZ(activeStyle, ceilIndices, activeMin, activeMax, distRatios);\n            }\n          }\n          if (exactIndices.length > 0) {\n            if (e === 'x') {\n              draw2dX(activeStyle, exactIndices, activeMin, activeMax);\n            } else if (e === 'y') {\n              draw2dY(activeStyle, exactIndices, activeMin, activeMax);\n            } else {\n              draw2dZ(activeStyle, exactIndices, activeMin, activeMax);\n            }\n          }\n        }\n\n        // draw caps\n        var cap = data.caps[e];\n        if (cap.show && cap.fill) {\n          setFill(cap.fill);\n          if (e === 'x') {\n            draw2dX(activeStyle, [0, width - 1], activeMin, activeMax);\n          } else if (e === 'y') {\n            draw2dY(activeStyle, [0, height - 1], activeMin, activeMax);\n          } else {\n            draw2dZ(activeStyle, [0, depth - 1], activeMin, activeMax);\n          }\n        }\n      }\n    });\n\n    // remove vertices arrays (i.e. grid points) in case no face was created.\n    if (numFaces === 0) {\n      emptyVertices();\n    }\n    data._x = allXs;\n    data._y = allYs;\n    data._z = allZs;\n    data._intensity = allVs;\n    data._Xs = Xs;\n    data._Ys = Ys;\n    data._Zs = Zs;\n  }\n  drawAll();\n  return data;\n}\nfunction createIsosurfaceTrace(scene, data) {\n  var gl = scene.glplot.gl;\n  var mesh = createMesh({\n    gl: gl\n  });\n  var result = new IsosurfaceTrace(scene, mesh, data.uid);\n  mesh._trace = result;\n  result.update(data);\n  scene.glplot.add(mesh);\n  return result;\n}\nmodule.exports = createIsosurfaceTrace;","map":{"version":3,"names":["createMesh","require","parseColorScale","str2RgbaArray","zip3","Lib","distinctVals","col","vals","IsosurfaceTrace","scene","mesh","uid","name","data","showContour","proto","prototype","findNearestOnAxis","w","arr","q","length","min","Math","max","id","distRatio","handlePick","selection","object","rawId","index","x","_x","y","_y","z","_z","height","_Ys","depth","_Zs","i","_Xs","j","k","selectIndex","traceCoordinate","value","text","Array","isArray","undefined","textLabel","update","layout","fullSceneLayout","generateIsosurfaceMesh","toDataCoords","axis","coord","scale","calendar","map","d2l","positions","xaxis","dataScale","xcalendar","yaxis","ycalendar","zaxis","zcalendar","cells","_i","_j","_k","config","lightPosition","lightposition","ambient","lighting","diffuse","specular","roughness","fresnel","vertexNormalsEpsilon","vertexnormalsepsilon","faceNormalsEpsilon","facenormalsepsilon","opacity","contourEnable","contour","show","contourColor","color","slice","contourWidth","width","useFacetNormals","flatshading","vertexIntensity","_intensity","vertexIntensityBounds","cmin","cmax","colormap","dispose","glplot","remove","showSurface","surface","showSpaceframe","spaceframe","surfaceFill","fill","spaceframeFill","drawingSurface","drawingSpaceframe","drawingEdge","numFaces","numVertices","beginVertextLength","Xs","_len","Ys","Zs","getIndex","minValues","_minValues","maxValues","_maxValues","vMin","_vMin","vMax","_vMax","allXs","allYs","allZs","allVs","findVertexId","len","f","beginGroup","emptyVertices","addVertex","v","push","addFace","a","b","c","getCenter","A","B","C","M","getBetween","r","activeFill","setFill","createOpenTri","xyzv","abc","G","sqrt","p1","p2","p3","styleIncludes","style","char","indexOf","mapValue","drawTri","allXYZVs","allABCs","openTri","pnts","drawQuad","abcd","makeTri","drawTetra","calcIntersection","pointOut","pointIn","ratio","result","s","inRange","almostInFinalRange","vErr","getXYZV","indecies","tryCreateTri","isSecondPass","tryDrawTri","ok","interpolated","forEach","e","tryCreateTetra","D","p4","addCube","p000","p001","p010","p011","p100","p101","p110","p111","addRect","d","begin2dCell","p00","p01","p10","p11","isEven","beginSection","distRatios","makeSection","rX","rY","rZ","begin3dCell","cellStyle","draw2dX","items","draw2dY","draw2dZ","draw3d","drawSpaceframe","drawSurface","drawSectionX","drawSectionY","drawSectionZ","createRange","range","insertGridPoints","drawAll","activeStyle","surfacePattern","pattern","surfaceCount","count","level","d1","abs","d2","ranges","setupMinMax","activeMin","activeMax","slices","exactIndices","ceilIndices","locations","near","cap","caps","createIsosurfaceTrace","gl","_trace","add","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/isosurface/convert.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\nvar createMesh = require('gl-mesh3d');\n\nvar parseColorScale = require('../../lib/gl_format_color').parseColorScale;\nvar str2RgbaArray = require('../../lib/str2rgbarray');\nvar zip3 = require('../../plots/gl3d/zip3');\nvar Lib = require('../../lib');\n\nfunction distinctVals(col) {\n    return Lib.distinctVals(col).vals;\n}\n\nfunction IsosurfaceTrace(scene, mesh, uid) {\n    this.scene = scene;\n    this.uid = uid;\n    this.mesh = mesh;\n    this.name = '';\n    this.data = null;\n    this.showContour = false;\n}\n\nvar proto = IsosurfaceTrace.prototype;\n\nfunction findNearestOnAxis(w, arr) {\n    for(var q = arr.length - 1; q > 0; q--) {\n        var min = Math.min(arr[q], arr[q - 1]);\n        var max = Math.max(arr[q], arr[q - 1]);\n        if(max > min && min < w && w <= max) {\n            return {\n                id: q,\n                distRatio: (max - w) / (max - min)\n            };\n        }\n    }\n    return {\n        id: 0,\n        distRatio: 0\n    };\n}\n\nproto.handlePick = function(selection) {\n    if(selection.object === this.mesh) {\n\n        var rawId = selection.data.index;\n\n        var x = this.data._x[rawId];\n        var y = this.data._y[rawId];\n        var z = this.data._z[rawId];\n\n        var height = this.data._Ys.length;\n        var depth = this.data._Zs.length;\n\n        var i = findNearestOnAxis(x, this.data._Xs).id;\n        var j = findNearestOnAxis(y, this.data._Ys).id;\n        var k = findNearestOnAxis(z, this.data._Zs).id;\n\n        var selectIndex = selection.index = k + depth * j + depth * height * i;\n\n        selection.traceCoordinate = [\n            this.data._x[selectIndex],\n            this.data._y[selectIndex],\n            this.data._z[selectIndex],\n            this.data.value[selectIndex]\n        ];\n\n        var text = this.data.text;\n        if(Array.isArray(text) && text[selectIndex] !== undefined) {\n            selection.textLabel = text[selectIndex];\n        } else if(text) {\n            selection.textLabel = text;\n        }\n\n        return true;\n    }\n};\n\nproto.update = function(data) {\n    var scene = this.scene;\n    var layout = scene.fullSceneLayout;\n\n    this.data = generateIsosurfaceMesh(data);\n\n    // Unpack position data\n    function toDataCoords(axis, coord, scale, calendar) {\n        return coord.map(function(x) {\n            return axis.d2l(x, 0, calendar) * scale;\n        });\n    }\n\n    var positions = zip3(\n        toDataCoords(layout.xaxis, data._x, scene.dataScale[0], data.xcalendar),\n        toDataCoords(layout.yaxis, data._y, scene.dataScale[1], data.ycalendar),\n        toDataCoords(layout.zaxis, data._z, scene.dataScale[2], data.zcalendar));\n\n    var cells = zip3(data._i, data._j, data._k);\n\n    var config = {\n        positions: positions,\n        cells: cells,\n        lightPosition: [data.lightposition.x, data.lightposition.y, data.lightposition.z],\n        ambient: data.lighting.ambient,\n        diffuse: data.lighting.diffuse,\n        specular: data.lighting.specular,\n        roughness: data.lighting.roughness,\n        fresnel: data.lighting.fresnel,\n        vertexNormalsEpsilon: data.lighting.vertexnormalsepsilon,\n        faceNormalsEpsilon: data.lighting.facenormalsepsilon,\n        opacity: 1, // Note: no need to create transparent surfaces\n        contourEnable: data.contour.show,\n        contourColor: str2RgbaArray(data.contour.color).slice(0, 3),\n        contourWidth: data.contour.width,\n        useFacetNormals: data.flatshading\n    };\n\n    config.vertexIntensity = data._intensity;\n    config.vertexIntensityBounds = [data.cmin, data.cmax];\n    config.colormap = parseColorScale(data);\n\n    // Update mesh\n    this.mesh.update(config);\n};\n\nproto.dispose = function() {\n    this.scene.glplot.remove(this.mesh);\n    this.mesh.dispose();\n};\n\nfunction generateIsosurfaceMesh(data) {\n\n    data._i = [];\n    data._j = [];\n    data._k = [];\n\n    var showSurface = data.surface.show;\n    var showSpaceframe = data.spaceframe.show;\n\n    var surfaceFill = data.surface.fill;\n    var spaceframeFill = data.spaceframe.fill;\n\n    var drawingSurface = false;\n    var drawingSpaceframe = false;\n    var drawingEdge = false;\n\n    var numFaces = 0;\n    var numVertices;\n    var beginVertextLength;\n\n    var Xs = distinctVals(data.x.slice(0, data._len));\n    var Ys = distinctVals(data.y.slice(0, data._len));\n    var Zs = distinctVals(data.z.slice(0, data._len));\n\n    var width = Xs.length;\n    var height = Ys.length;\n    var depth = Zs.length;\n\n    function getIndex(i, j, k) {\n        return k + depth * j + depth * height * i;\n    }\n\n    var minValues = data._minValues;\n    var maxValues = data._maxValues;\n\n    var vMin = data._vMin;\n    var vMax = data._vMax;\n\n    var allXs;\n    var allYs;\n    var allZs;\n    var allVs;\n\n    function findVertexId(x, y, z) {\n        // could be used to find the vertex id of previously generated vertex within the group\n\n        var len = allVs.length;\n        for(var f = beginVertextLength; f < len; f++) {\n            if(\n                x === allXs[f] &&\n                y === allYs[f] &&\n                z === allZs[f]\n            ) {\n                return f;\n            }\n        }\n        return -1;\n    }\n\n    function beginGroup() {\n        beginVertextLength = numVertices;\n    }\n\n    function emptyVertices() {\n        allXs = [];\n        allYs = [];\n        allZs = [];\n        allVs = [];\n        numVertices = 0;\n\n        beginGroup();\n    }\n\n    function addVertex(x, y, z, v) {\n        allXs.push(x);\n        allYs.push(y);\n        allZs.push(z);\n        allVs.push(v);\n        numVertices++;\n\n        return numVertices - 1;\n    }\n\n    function addFace(a, b, c) {\n        data._i.push(a);\n        data._j.push(b);\n        data._k.push(c);\n        numFaces++;\n\n        return numFaces - 1;\n    }\n\n    function getCenter(A, B, C) {\n        var M = [];\n        for(var i = 0; i < A.length; i++) {\n            M[i] = (A[i] + B[i] + C[i]) / 3.0;\n        }\n        return M;\n    }\n\n    function getBetween(A, B, r) {\n        var M = [];\n        for(var i = 0; i < A.length; i++) {\n            M[i] = A[i] * (1 - r) + r * B[i];\n        }\n        return M;\n    }\n\n    var activeFill;\n    function setFill(fill) {\n        activeFill = fill;\n    }\n\n    function createOpenTri(xyzv, abc) {\n        var A = xyzv[0];\n        var B = xyzv[1];\n        var C = xyzv[2];\n        var G = getCenter(A, B, C);\n\n        var r = Math.sqrt(1 - activeFill);\n        var p1 = getBetween(G, A, r);\n        var p2 = getBetween(G, B, r);\n        var p3 = getBetween(G, C, r);\n\n        var a = abc[0];\n        var b = abc[1];\n        var c = abc[2];\n\n        return {\n            xyzv: [\n                [A, B, p2], [p2, p1, A],\n                [B, C, p3], [p3, p2, B],\n                [C, A, p1], [p1, p3, C]\n            ],\n            abc: [\n                [a, b, -1], [-1, -1, a],\n                [b, c, -1], [-1, -1, b],\n                [c, a, -1], [-1, -1, c]\n            ]\n        };\n    }\n\n    function styleIncludes(style, char) {\n        if(style === 'all' || style === null) return true;\n        return (style.indexOf(char) > -1);\n    }\n\n    function mapValue(style, value) {\n        if(style === null) return value;\n        return style;\n    }\n\n    function drawTri(style, xyzv, abc) {\n\n        beginGroup();\n\n        var allXYZVs = [xyzv];\n        var allABCs = [abc];\n        if(activeFill >= 1) {\n            allXYZVs = [xyzv];\n            allABCs = [abc];\n        } else if(activeFill > 0) {\n            var openTri = createOpenTri(xyzv, abc);\n            allXYZVs = openTri.xyzv;\n            allABCs = openTri.abc;\n        }\n\n        for(var f = 0; f < allXYZVs.length; f++) {\n\n            xyzv = allXYZVs[f];\n            abc = allABCs[f];\n\n            var pnts = [];\n            for(var i = 0; i < 3; i++) {\n\n                var x = xyzv[i][0];\n                var y = xyzv[i][1];\n                var z = xyzv[i][2];\n                var v = xyzv[i][3];\n\n                var id = (abc[i] > -1) ? abc[i] : findVertexId(x, y, z);\n                if(id > -1) {\n                    pnts[i] = id;\n                } else {\n                    pnts[i] = addVertex(x, y, z, mapValue(style, v));\n                }\n            }\n\n            addFace(pnts[0], pnts[1], pnts[2]);\n        }\n    }\n\n    function drawQuad(style, xyzv, abcd) {\n        var makeTri = function(i, j, k) {\n            drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n        };\n\n        makeTri(0, 1, 2);\n        makeTri(2, 3, 0);\n    }\n\n    function drawTetra(style, xyzv, abcd) {\n        var makeTri = function(i, j, k) {\n            drawTri(style, [xyzv[i], xyzv[j], xyzv[k]], [abcd[i], abcd[j], abcd[k]]);\n        };\n\n        makeTri(0, 1, 2);\n        makeTri(3, 0, 1);\n        makeTri(2, 3, 0);\n        makeTri(1, 2, 3);\n    }\n\n    function calcIntersection(pointOut, pointIn, min, max) {\n        var value = pointOut[3];\n\n        if(value < min) value = min;\n        if(value > max) value = max;\n\n        var ratio = (pointOut[3] - value) / (pointOut[3] - pointIn[3]);\n\n        var result = [];\n        for(var s = 0; s < 4; s++) {\n            result[s] = (1 - ratio) * pointOut[s] + ratio * pointIn[s];\n        }\n        return result;\n    }\n\n    function inRange(value, min, max) {\n        return (\n            value >= min &&\n            value <= max\n        );\n    }\n\n    function almostInFinalRange(value) {\n        var vErr = 0.01 * (vMax - vMin);\n        return (\n            value >= vMin - vErr &&\n            value <= vMax + vErr\n        );\n    }\n\n    function getXYZV(indecies) {\n        var xyzv = [];\n        for(var q = 0; q < 4; q++) {\n            var index = indecies[q];\n            xyzv.push(\n                [\n                    data.x[index],\n                    data.y[index],\n                    data.z[index],\n                    data.value[index]\n                ]\n            );\n        }\n\n        return xyzv;\n    }\n\n    function tryCreateTri(style, xyzv, abc, min, max, isSecondPass) {\n\n        abc = [-1, -1, -1]; // Note: for the moment we had to override indices\n        // for planar surfaces (i.e. caps and slices) due to group shading\n        // bug of gl-mesh3d. But don't worry this would run faster!\n\n        var tryDrawTri = function(style, xyzv, abc) {\n            if( // we check here if the points are in `real` iso-min/max range\n                almostInFinalRange(xyzv[0][3]) &&\n                almostInFinalRange(xyzv[1][3]) &&\n                almostInFinalRange(xyzv[2][3])\n            ) {\n                drawTri(style, xyzv, abc);\n            } else if(!isSecondPass) {\n                tryCreateTri(style, xyzv, abc, vMin, vMax, true); // i.e. second pass\n            }\n        };\n\n        var ok = [\n            inRange(xyzv[0][3], min, max),\n            inRange(xyzv[1][3], min, max),\n            inRange(xyzv[2][3], min, max)\n        ];\n\n        var interpolated = false;\n\n        if(!ok[0] && !ok[1] && !ok[2]) {\n            return interpolated;\n        }\n\n        if(ok[0] && ok[1] && ok[2]) {\n            if(!drawingEdge) {\n                tryDrawTri(style, xyzv, abc);\n            }\n            return interpolated;\n        }\n\n        [\n            [0, 1, 2],\n            [2, 0, 1],\n            [1, 2, 0]\n        ].forEach(function(e) {\n            if(ok[e[0]] && ok[e[1]] && !ok[e[2]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n\n                var p1 = calcIntersection(C, A, min, max);\n                var p2 = calcIntersection(C, B, min, max);\n\n                tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]);\n                tryDrawTri(style, [A, B, p2], [abc[e[0]], abc[e[1]], -1]);\n\n                interpolated = true;\n            }\n        });\n        if(interpolated) return interpolated;\n\n        [\n            [0, 1, 2],\n            [1, 2, 0],\n            [2, 0, 1]\n        ].forEach(function(e) {\n            if(ok[e[0]] && !ok[e[1]] && !ok[e[2]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n\n                var p1 = calcIntersection(B, A, min, max);\n                var p2 = calcIntersection(C, A, min, max);\n\n                tryDrawTri(style, [p2, p1, A], [-1, -1, abc[e[0]]]);\n\n                interpolated = true;\n            }\n        });\n        return interpolated;\n    }\n\n    function tryCreateTetra(style, abcd, min, max) {\n\n        var xyzv = getXYZV(abcd);\n\n        var ok = [\n            inRange(xyzv[0][3], min, max),\n            inRange(xyzv[1][3], min, max),\n            inRange(xyzv[2][3], min, max),\n            inRange(xyzv[3][3], min, max)\n        ];\n\n        var interpolated = false;\n\n        if(!ok[0] && !ok[1] && !ok[2] && !ok[3]) {\n            return interpolated;\n        }\n\n        if(ok[0] && ok[1] && ok[2] && ok[3]) {\n            if(drawingSpaceframe) {\n                drawTetra(style, xyzv, abcd);\n            }\n            return interpolated;\n        }\n\n        [\n            [0, 1, 2, 3],\n            [3, 0, 1, 2],\n            [2, 3, 0, 1],\n            [1, 2, 3, 0]\n        ].forEach(function(e) {\n            if(ok[e[0]] && ok[e[1]] && ok[e[2]] && !ok[e[3]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n                var D = xyzv[e[3]];\n\n                if(drawingSpaceframe) {\n                    drawTri(style, [A, B, C], [abcd[e[0]], abcd[e[1]], abcd[e[2]]]);\n                } else {\n                    var p1 = calcIntersection(D, A, min, max);\n                    var p2 = calcIntersection(D, B, min, max);\n                    var p3 = calcIntersection(D, C, min, max);\n\n                    drawTri(null, [p1, p2, p3], [-1, -1, -1]);\n                }\n\n                interpolated = true;\n            }\n        });\n        if(interpolated) return interpolated;\n\n        [\n            [0, 1, 2, 3],\n            [1, 2, 3, 0],\n            [2, 3, 0, 1],\n            [3, 0, 1, 2],\n            [0, 2, 3, 1],\n            [1, 3, 2, 0]\n        ].forEach(function(e) {\n            if(ok[e[0]] && ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n                var D = xyzv[e[3]];\n\n                var p1 = calcIntersection(C, A, min, max);\n                var p2 = calcIntersection(C, B, min, max);\n                var p3 = calcIntersection(D, B, min, max);\n                var p4 = calcIntersection(D, A, min, max);\n\n                if(drawingSpaceframe) {\n                    drawTri(style, [A, p4, p1], [abcd[e[0]], -1, -1]);\n                    drawTri(style, [B, p2, p3], [abcd[e[1]], -1, -1]);\n                } else {\n                    drawQuad(null, [p1, p2, p3, p4], [-1, -1, -1, -1]);\n                }\n\n                interpolated = true;\n            }\n        });\n        if(interpolated) return interpolated;\n\n        [\n            [0, 1, 2, 3],\n            [1, 2, 3, 0],\n            [2, 3, 0, 1],\n            [3, 0, 1, 2]\n        ].forEach(function(e) {\n            if(ok[e[0]] && !ok[e[1]] && !ok[e[2]] && !ok[e[3]]) {\n                var A = xyzv[e[0]];\n                var B = xyzv[e[1]];\n                var C = xyzv[e[2]];\n                var D = xyzv[e[3]];\n\n                var p1 = calcIntersection(B, A, min, max);\n                var p2 = calcIntersection(C, A, min, max);\n                var p3 = calcIntersection(D, A, min, max);\n\n                if(drawingSpaceframe) {\n                    drawTri(style, [A, p1, p2], [abcd[e[0]], -1, -1]);\n                    drawTri(style, [A, p2, p3], [abcd[e[0]], -1, -1]);\n                    drawTri(style, [A, p3, p1], [abcd[e[0]], -1, -1]);\n                } else {\n                    drawTri(null, [p1, p2, p3], [-1, -1, -1]);\n                }\n\n                interpolated = true;\n            }\n        });\n        return interpolated;\n    }\n\n    function addCube(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max) {\n\n        if(drawingSurface) {\n            if(styleIncludes(style, 'A')) {\n                tryCreateTetra(null, [p000, p001, p010, p100], min, max);\n            }\n            if(styleIncludes(style, 'B')) {\n                tryCreateTetra(null, [p001, p010, p011, p111], min, max);\n            }\n            if(styleIncludes(style, 'C')) {\n                tryCreateTetra(null, [p001, p100, p101, p111], min, max);\n            }\n            if(styleIncludes(style, 'D')) {\n                tryCreateTetra(null, [p010, p100, p110, p111], min, max);\n            }\n            if(styleIncludes(style, 'E')) {\n                tryCreateTetra(null, [p001, p010, p100, p111], min, max);\n            }\n        }\n\n        if(drawingSpaceframe) {\n            tryCreateTetra(style, [p001, p010, p100, p111], min, max);\n        }\n    }\n\n    function addRect(style, a, b, c, d, min, max) {\n        tryCreateTri(style, getXYZV([a, b, c]), [a, b, c], min, max);\n        tryCreateTri(style, getXYZV([c, d, a]), [c, d, a], min, max);\n    }\n\n    function begin2dCell(style, p00, p01, p10, p11, min, max, isEven) {\n        // used to create caps and/or slices on exact axis points\n        if(isEven) {\n            addRect(style, p00, p01, p11, p10, min, max);\n        } else {\n            addRect(style, p01, p11, p10, p00, min, max);\n        }\n    }\n\n    function beginSection(style, i, j, k, min, max, distRatios) {\n        // used to create slices between axis points\n\n        var A, B, C, D;\n\n        var makeSection = function() {\n            tryCreateTri(style, [A, B, C], [-1, -1, -1], min, max);\n            tryCreateTri(style, [C, D, A], [-1, -1, -1], min, max);\n        };\n\n        var rX = distRatios[0];\n        var rY = distRatios[1];\n        var rZ = distRatios[2];\n\n        if(rX) {\n            A = getBetween(getXYZV([getIndex(i, j - 0, k - 0)])[0], getXYZV([getIndex(i - 1, j - 0, k - 0)])[0], rX);\n            B = getBetween(getXYZV([getIndex(i, j - 0, k - 1)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rX);\n            C = getBetween(getXYZV([getIndex(i, j - 1, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rX);\n            D = getBetween(getXYZV([getIndex(i, j - 1, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rX);\n            makeSection();\n        }\n\n        if(rY) {\n            A = getBetween(getXYZV([getIndex(i - 0, j, k - 0)])[0], getXYZV([getIndex(i - 0, j - 1, k - 0)])[0], rY);\n            B = getBetween(getXYZV([getIndex(i - 0, j, k - 1)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rY);\n            C = getBetween(getXYZV([getIndex(i - 1, j, k - 1)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rY);\n            D = getBetween(getXYZV([getIndex(i - 1, j, k - 0)])[0], getXYZV([getIndex(i - 1, j - 1, k - 0)])[0], rY);\n            makeSection();\n        }\n\n        if(rZ) {\n            A = getBetween(getXYZV([getIndex(i - 0, j - 0, k)])[0], getXYZV([getIndex(i - 0, j - 0, k - 1)])[0], rZ);\n            B = getBetween(getXYZV([getIndex(i - 0, j - 1, k)])[0], getXYZV([getIndex(i - 0, j - 1, k - 1)])[0], rZ);\n            C = getBetween(getXYZV([getIndex(i - 1, j - 1, k)])[0], getXYZV([getIndex(i - 1, j - 1, k - 1)])[0], rZ);\n            D = getBetween(getXYZV([getIndex(i - 1, j - 0, k)])[0], getXYZV([getIndex(i - 1, j - 0, k - 1)])[0], rZ);\n            makeSection();\n        }\n    }\n\n    function begin3dCell(style, p000, p001, p010, p011, p100, p101, p110, p111, min, max, isEven) {\n        // used to create spaceframe and/or iso-surfaces\n        var cellStyle = style;\n        if(isEven) {\n            if(drawingSurface && style === 'even') cellStyle = null;\n            addCube(cellStyle, p000, p001, p010, p011, p100, p101, p110, p111, min, max);\n        } else {\n            if(drawingSurface && style === 'odd') cellStyle = null;\n            addCube(cellStyle, p111, p110, p101, p100, p011, p010, p001, p000, min, max);\n        }\n    }\n\n    function draw2dX(style, items, min, max) {\n        for(var q = 0; q < items.length; q++) {\n            var i = items[q];\n            for(var k = 1; k < depth; k++) {\n                for(var j = 1; j < height; j++) {\n                    begin2dCell(style,\n                        getIndex(i, j - 1, k - 1),\n                        getIndex(i, j - 1, k),\n                        getIndex(i, j, k - 1),\n                        getIndex(i, j, k),\n                        min,\n                        max,\n                        (i + j + k) % 2\n                    );\n                }\n            }\n        }\n    }\n\n    function draw2dY(style, items, min, max) {\n        for(var q = 0; q < items.length; q++) {\n            var j = items[q];\n            for(var i = 1; i < width; i++) {\n                for(var k = 1; k < depth; k++) {\n                    begin2dCell(style,\n                        getIndex(i - 1, j, k - 1),\n                        getIndex(i, j, k - 1),\n                        getIndex(i - 1, j, k),\n                        getIndex(i, j, k),\n                        min,\n                        max,\n                        (i + j + k) % 2\n                    );\n                }\n            }\n        }\n    }\n\n    function draw2dZ(style, items, min, max) {\n        for(var q = 0; q < items.length; q++) {\n            var k = items[q];\n            for(var j = 1; j < height; j++) {\n                for(var i = 1; i < width; i++) {\n                    begin2dCell(style,\n                        getIndex(i - 1, j - 1, k),\n                        getIndex(i - 1, j, k),\n                        getIndex(i, j - 1, k),\n                        getIndex(i, j, k),\n                        min,\n                        max,\n                        (i + j + k) % 2\n                    );\n                }\n            }\n        }\n    }\n\n    function draw3d(style, min, max) {\n        for(var k = 1; k < depth; k++) {\n            for(var j = 1; j < height; j++) {\n                for(var i = 1; i < width; i++) {\n                    begin3dCell(style,\n                        getIndex(i - 1, j - 1, k - 1),\n                        getIndex(i - 1, j - 1, k),\n                        getIndex(i - 1, j, k - 1),\n                        getIndex(i - 1, j, k),\n                        getIndex(i, j - 1, k - 1),\n                        getIndex(i, j - 1, k),\n                        getIndex(i, j, k - 1),\n                        getIndex(i, j, k),\n                        min,\n                        max,\n                        (i + j + k) % 2\n                    );\n                }\n            }\n        }\n    }\n\n    function drawSpaceframe(style, min, max) {\n        drawingSpaceframe = true;\n        draw3d(style, min, max);\n        drawingSpaceframe = false;\n    }\n\n    function drawSurface(style, min, max) {\n        drawingSurface = true;\n        draw3d(style, min, max);\n        drawingSurface = false;\n    }\n\n    function drawSectionX(style, items, min, max, distRatios) {\n        for(var q = 0; q < items.length; q++) {\n            var i = items[q];\n            for(var k = 1; k < depth; k++) {\n                for(var j = 1; j < height; j++) {\n                    beginSection(style, i, j, k, min, max, distRatios[q]);\n                }\n            }\n        }\n    }\n\n    function drawSectionY(style, items, min, max, distRatios) {\n        for(var q = 0; q < items.length; q++) {\n            var j = items[q];\n            for(var i = 1; i < width; i++) {\n                for(var k = 1; k < depth; k++) {\n                    beginSection(style, i, j, k, min, max, distRatios[q]);\n                }\n            }\n        }\n    }\n\n    function drawSectionZ(style, items, min, max, distRatios) {\n        for(var q = 0; q < items.length; q++) {\n            var k = items[q];\n            for(var j = 1; j < height; j++) {\n                for(var i = 1; i < width; i++) {\n                    beginSection(style, i, j, k, min, max, distRatios[q]);\n                }\n            }\n        }\n    }\n\n    function createRange(a, b) {\n        var range = [];\n        for(var q = a; q < b; q++) {\n            range.push(q);\n        }\n        return range;\n    }\n\n    function insertGridPoints() {\n        for(var i = 0; i < width; i++) {\n            for(var j = 0; j < height; j++) {\n                for(var k = 0; k < depth; k++) {\n                    var index = getIndex(i, j, k);\n                    addVertex(\n                        data.x[index],\n                        data.y[index],\n                        data.z[index],\n                        data.value[index]\n                    );\n                }\n            }\n        }\n    }\n\n    function drawAll() {\n\n        emptyVertices();\n\n        // insert grid points\n        insertGridPoints();\n\n        var activeStyle = null;\n\n        // draw spaceframes\n        if(showSpaceframe && spaceframeFill) {\n            setFill(spaceframeFill);\n\n            drawSpaceframe(activeStyle, vMin, vMax);\n        }\n\n        // draw iso-surfaces\n        if(showSurface && surfaceFill) {\n            setFill(surfaceFill);\n\n            var surfacePattern = data.surface.pattern;\n            var surfaceCount = data.surface.count;\n            for(var q = 0; q < surfaceCount; q++) {\n                var ratio = (surfaceCount === 1) ? 0.5 : q / (surfaceCount - 1);\n                var level = (1 - ratio) * vMin + ratio * vMax;\n\n                var d1 = Math.abs(level - minValues);\n                var d2 = Math.abs(level - maxValues);\n                var ranges = (d1 > d2) ?\n                    [minValues, level] :\n                    [level, maxValues];\n\n                drawSurface(surfacePattern, ranges[0], ranges[1]);\n            }\n        }\n\n        var setupMinMax = [\n            [ Math.min(vMin, maxValues), Math.max(vMin, maxValues) ],\n            [ Math.min(minValues, vMax), Math.max(minValues, vMax) ]\n        ];\n\n        ['x', 'y', 'z'].forEach(function(e) {\n            for(var s = 0; s < setupMinMax.length; s++) {\n\n                drawingEdge = (s === 0) ? false : true;\n\n                var activeMin = setupMinMax[s][0];\n                var activeMax = setupMinMax[s][1];\n\n                // draw slices\n                var slice = data.slices[e];\n                if(slice.show && slice.fill) {\n                    setFill(slice.fill);\n\n                    var exactIndices = [];\n                    var ceilIndices = [];\n                    var distRatios = [];\n                    if(slice.locations.length) {\n\n                        for(var q = 0; q < slice.locations.length; q++) {\n\n                            var near = findNearestOnAxis(\n                                slice.locations[q],\n                                (e === 'x') ? Xs :\n                                (e === 'y') ? Ys : Zs\n                            );\n\n                            if(near.distRatio === 0) {\n                                exactIndices.push(near.id);\n                            } else if(near.id > 0) {\n                                ceilIndices.push(near.id);\n                                if(e === 'x') {\n                                    distRatios.push([near.distRatio, 0, 0]);\n                                } else if(e === 'y') {\n                                    distRatios.push([0, near.distRatio, 0]);\n                                } else {\n                                    distRatios.push([0, 0, near.distRatio]);\n                                }\n                            }\n                        }\n                    } else {\n                        if(e === 'x') {\n                            exactIndices = createRange(1, width - 1);\n                        } else if(e === 'y') {\n                            exactIndices = createRange(1, height - 1);\n                        } else {\n                            exactIndices = createRange(1, depth - 1);\n                        }\n                    }\n\n                    if(ceilIndices.length > 0) {\n                        if(e === 'x') {\n                            drawSectionX(activeStyle, ceilIndices, activeMin, activeMax, distRatios);\n                        } else if(e === 'y') {\n                            drawSectionY(activeStyle, ceilIndices, activeMin, activeMax, distRatios);\n                        } else {\n                            drawSectionZ(activeStyle, ceilIndices, activeMin, activeMax, distRatios);\n                        }\n                    }\n\n                    if(exactIndices.length > 0) {\n                        if(e === 'x') {\n                            draw2dX(activeStyle, exactIndices, activeMin, activeMax);\n                        } else if(e === 'y') {\n                            draw2dY(activeStyle, exactIndices, activeMin, activeMax);\n                        } else {\n                            draw2dZ(activeStyle, exactIndices, activeMin, activeMax);\n                        }\n                    }\n                }\n\n                // draw caps\n                var cap = data.caps[e];\n                if(cap.show && cap.fill) {\n                    setFill(cap.fill);\n                    if(e === 'x') {\n                        draw2dX(activeStyle, [0, width - 1], activeMin, activeMax);\n                    } else if(e === 'y') {\n                        draw2dY(activeStyle, [0, height - 1], activeMin, activeMax);\n                    } else {\n                        draw2dZ(activeStyle, [0, depth - 1], activeMin, activeMax);\n                    }\n                }\n            }\n        });\n\n        // remove vertices arrays (i.e. grid points) in case no face was created.\n        if(numFaces === 0) {\n            emptyVertices();\n        }\n\n        data._x = allXs;\n        data._y = allYs;\n        data._z = allZs;\n        data._intensity = allVs;\n\n        data._Xs = Xs;\n        data._Ys = Ys;\n        data._Zs = Zs;\n    }\n\n    drawAll();\n\n    return data;\n}\n\nfunction createIsosurfaceTrace(scene, data) {\n\n    var gl = scene.glplot.gl;\n    var mesh = createMesh({gl: gl});\n    var result = new IsosurfaceTrace(scene, mesh, data.uid);\n\n    mesh._trace = result;\n    result.update(data);\n    scene.glplot.add(mesh);\n    return result;\n}\n\nmodule.exports = createIsosurfaceTrace;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
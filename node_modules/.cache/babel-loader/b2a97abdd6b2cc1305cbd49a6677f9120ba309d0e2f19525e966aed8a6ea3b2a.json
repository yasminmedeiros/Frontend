{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\nfunction _supply(layoutIn, layoutOut, fullData, coerce, traceType) {\n  var hasTraceType;\n  var category = traceType + 'Layout';\n  for (var i = 0; i < fullData.length; i++) {\n    if (Registry.traceIs(fullData[i], category)) {\n      hasTraceType = true;\n      break;\n    }\n  }\n  if (!hasTraceType) return;\n  coerce(traceType + 'mode');\n  coerce(traceType + 'gap');\n  coerce(traceType + 'groupgap');\n}\nfunction supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n  }\n  _supply(layoutIn, layoutOut, fullData, coerce, 'box');\n}\nmodule.exports = {\n  supplyLayoutDefaults: supplyLayoutDefaults,\n  _supply: _supply\n};","map":{"version":3,"names":["Registry","require","Lib","layoutAttributes","_supply","layoutIn","layoutOut","fullData","coerce","traceType","hasTraceType","category","i","length","traceIs","supplyLayoutDefaults","attr","dflt","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/box/layout_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar Registry = require('../../registry');\nvar Lib = require('../../lib');\nvar layoutAttributes = require('./layout_attributes');\n\nfunction _supply(layoutIn, layoutOut, fullData, coerce, traceType) {\n    var hasTraceType;\n    var category = traceType + 'Layout';\n    for(var i = 0; i < fullData.length; i++) {\n        if(Registry.traceIs(fullData[i], category)) {\n            hasTraceType = true;\n            break;\n        }\n    }\n    if(!hasTraceType) return;\n\n    coerce(traceType + 'mode');\n    coerce(traceType + 'gap');\n    coerce(traceType + 'groupgap');\n}\n\nfunction supplyLayoutDefaults(layoutIn, layoutOut, fullData) {\n    function coerce(attr, dflt) {\n        return Lib.coerce(layoutIn, layoutOut, layoutAttributes, attr, dflt);\n    }\n    _supply(layoutIn, layoutOut, fullData, coerce, 'box');\n}\n\nmodule.exports = {\n    supplyLayoutDefaults: supplyLayoutDefaults,\n    _supply: _supply\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACxC,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIE,gBAAgB,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AAErD,SAASG,OAAO,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,EAAE;EAC/D,IAAIC,YAAY;EAChB,IAAIC,QAAQ,GAAGF,SAAS,GAAG,QAAQ;EACnC,KAAI,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,QAAQ,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACrC,IAAGZ,QAAQ,CAACc,OAAO,CAACP,QAAQ,CAACK,CAAC,CAAC,EAAED,QAAQ,CAAC,EAAE;MACxCD,YAAY,GAAG,IAAI;MACnB;IACJ;EACJ;EACA,IAAG,CAACA,YAAY,EAAE;EAElBF,MAAM,CAACC,SAAS,GAAG,MAAM,CAAC;EAC1BD,MAAM,CAACC,SAAS,GAAG,KAAK,CAAC;EACzBD,MAAM,CAACC,SAAS,GAAG,UAAU,CAAC;AAClC;AAEA,SAASM,oBAAoB,CAACV,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAE;EACzD,SAASC,MAAM,CAACQ,IAAI,EAAEC,IAAI,EAAE;IACxB,OAAOf,GAAG,CAACM,MAAM,CAACH,QAAQ,EAAEC,SAAS,EAAEH,gBAAgB,EAAEa,IAAI,EAAEC,IAAI,CAAC;EACxE;EACAb,OAAO,CAACC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,EAAE,KAAK,CAAC;AACzD;AAEAU,MAAM,CAACC,OAAO,GAAG;EACbJ,oBAAoB,EAAEA,oBAAoB;EAC1CX,OAAO,EAAEA;AACb,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
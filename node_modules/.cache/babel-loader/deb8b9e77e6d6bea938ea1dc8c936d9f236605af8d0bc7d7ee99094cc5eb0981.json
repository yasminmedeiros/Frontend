{"ast":null,"code":"import bbox from \"./bbox\";\nexport default function (topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology),\n    name,\n    dx = bb[0],\n    kx = (bb[2] - dx) / (n - 1) || 1,\n    dy = bb[1],\n    ky = (bb[3] - dy) / (n - 1) || 1;\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\":\n        o.geometries.forEach(quantizeGeometry);\n        break;\n      case \"Point\":\n        quantizePoint(o.coordinates);\n        break;\n      case \"MultiPoint\":\n        o.coordinates.forEach(quantizePoint);\n        break;\n    }\n  }\n  topology.arcs.forEach(function (arc) {\n    var i = 1,\n      j = 1,\n      n = arc.length,\n      pi = arc[0],\n      x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n      y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n      pj,\n      x1,\n      y1;\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n    arc.length = j;\n  });\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n  return topology;\n}","map":{"version":3,"names":["bbox","topology","n","Math","floor","Error","transform","bb","name","dx","kx","dy","ky","quantizePoint","p","round","quantizeGeometry","o","type","geometries","forEach","coordinates","arcs","arc","i","j","length","pi","x0","y0","pj","x1","y1","objects","scale","translate"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/topojson-client/src/quantize.js"],"sourcesContent":["import bbox from \"./bbox\";\n\nexport default function(topology, n) {\n  if (!((n = Math.floor(n)) >= 2)) throw new Error(\"n must be ≥2\");\n  if (topology.transform) throw new Error(\"already quantized\");\n  var bb = bbox(topology), name,\n      dx = bb[0], kx = (bb[2] - dx) / (n - 1) || 1,\n      dy = bb[1], ky = (bb[3] - dy) / (n - 1) || 1;\n\n  function quantizePoint(p) {\n    p[0] = Math.round((p[0] - dx) / kx);\n    p[1] = Math.round((p[1] - dy) / ky);\n  }\n\n  function quantizeGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(quantizeGeometry); break;\n      case \"Point\": quantizePoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(quantizePoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = 1,\n        j = 1,\n        n = arc.length,\n        pi = arc[0],\n        x0 = pi[0] = Math.round((pi[0] - dx) / kx),\n        y0 = pi[1] = Math.round((pi[1] - dy) / ky),\n        pj,\n        x1,\n        y1;\n\n    for (; i < n; ++i) {\n      pi = arc[i];\n      x1 = Math.round((pi[0] - dx) / kx);\n      y1 = Math.round((pi[1] - dy) / ky);\n      if (x1 !== x0 || y1 !== y0) {\n        pj = arc[j++];\n        pj[0] = x1 - x0, x0 = x1;\n        pj[1] = y1 - y0, y0 = y1;\n      }\n    }\n\n    if (j < 2) {\n      pj = arc[j++];\n      pj[0] = 0;\n      pj[1] = 0;\n    }\n\n    arc.length = j;\n  });\n\n  for (name in topology.objects) {\n    quantizeGeometry(topology.objects[name]);\n  }\n\n  topology.transform = {\n    scale: [kx, ky],\n    translate: [dx, dy]\n  };\n\n  return topology;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
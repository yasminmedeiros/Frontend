{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\nvar Registry = require('../registry');\nvar Lib = require('../lib');\nvar helpers = require('./helpers');\nvar clonePlot = require('./cloneplot');\nvar toSVG = require('./tosvg');\nvar svgToImg = require('./svgtoimg');\n\n/**\n * @param {object} gd figure Object\n * @param {object} opts option object\n * @param opts.format 'jpeg' | 'png' | 'webp' | 'svg'\n */\nfunction toImage(gd, opts) {\n  // first clone the GD so we can operate in a clean environment\n  var ev = new EventEmitter();\n  var clone = clonePlot(gd, {\n    format: 'png'\n  });\n  var clonedGd = clone.gd;\n\n  // put the cloned div somewhere off screen before attaching to DOM\n  clonedGd.style.position = 'absolute';\n  clonedGd.style.left = '-5000px';\n  document.body.appendChild(clonedGd);\n  function wait() {\n    var delay = helpers.getDelay(clonedGd._fullLayout);\n    setTimeout(function () {\n      var svg = toSVG(clonedGd);\n      var canvas = document.createElement('canvas');\n      canvas.id = Lib.randstr();\n      ev = svgToImg({\n        format: opts.format,\n        width: clonedGd._fullLayout.width,\n        height: clonedGd._fullLayout.height,\n        canvas: canvas,\n        emitter: ev,\n        svg: svg\n      });\n      ev.clean = function () {\n        if (clonedGd) document.body.removeChild(clonedGd);\n      };\n    }, delay);\n  }\n  var redrawFunc = helpers.getRedrawFunc(clonedGd);\n  Registry.call('plot', clonedGd, clone.data, clone.layout, clone.config).then(redrawFunc).then(wait).catch(function (err) {\n    ev.emit('error', err);\n  });\n  return ev;\n}\nmodule.exports = toImage;","map":{"version":3,"names":["EventEmitter","require","Registry","Lib","helpers","clonePlot","toSVG","svgToImg","toImage","gd","opts","ev","clone","format","clonedGd","style","position","left","document","body","appendChild","wait","delay","getDelay","_fullLayout","setTimeout","svg","canvas","createElement","id","randstr","width","height","emitter","clean","removeChild","redrawFunc","getRedrawFunc","call","data","layout","config","then","catch","err","emit","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/snapshot/toimage.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar Registry = require('../registry');\nvar Lib = require('../lib');\n\nvar helpers = require('./helpers');\nvar clonePlot = require('./cloneplot');\nvar toSVG = require('./tosvg');\nvar svgToImg = require('./svgtoimg');\n\n/**\n * @param {object} gd figure Object\n * @param {object} opts option object\n * @param opts.format 'jpeg' | 'png' | 'webp' | 'svg'\n */\nfunction toImage(gd, opts) {\n\n    // first clone the GD so we can operate in a clean environment\n    var ev = new EventEmitter();\n\n    var clone = clonePlot(gd, {format: 'png'});\n    var clonedGd = clone.gd;\n\n    // put the cloned div somewhere off screen before attaching to DOM\n    clonedGd.style.position = 'absolute';\n    clonedGd.style.left = '-5000px';\n    document.body.appendChild(clonedGd);\n\n    function wait() {\n        var delay = helpers.getDelay(clonedGd._fullLayout);\n\n        setTimeout(function() {\n            var svg = toSVG(clonedGd);\n\n            var canvas = document.createElement('canvas');\n            canvas.id = Lib.randstr();\n\n            ev = svgToImg({\n                format: opts.format,\n                width: clonedGd._fullLayout.width,\n                height: clonedGd._fullLayout.height,\n                canvas: canvas,\n                emitter: ev,\n                svg: svg\n            });\n\n            ev.clean = function() {\n                if(clonedGd) document.body.removeChild(clonedGd);\n            };\n\n        }, delay);\n    }\n\n    var redrawFunc = helpers.getRedrawFunc(clonedGd);\n\n    Registry.call('plot', clonedGd, clone.data, clone.layout, clone.config)\n        .then(redrawFunc)\n        .then(wait)\n        .catch(function(err) {\n            ev.emit('error', err);\n        });\n\n\n    return ev;\n}\n\nmodule.exports = toImage;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACD,YAAY;AAEjD,IAAIE,QAAQ,GAAGD,OAAO,CAAC,aAAa,CAAC;AACrC,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAE3B,IAAIG,OAAO,GAAGH,OAAO,CAAC,WAAW,CAAC;AAClC,IAAII,SAAS,GAAGJ,OAAO,CAAC,aAAa,CAAC;AACtC,IAAIK,KAAK,GAAGL,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIM,QAAQ,GAAGN,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA,SAASO,OAAO,CAACC,EAAE,EAAEC,IAAI,EAAE;EAEvB;EACA,IAAIC,EAAE,GAAG,IAAIX,YAAY,EAAE;EAE3B,IAAIY,KAAK,GAAGP,SAAS,CAACI,EAAE,EAAE;IAACI,MAAM,EAAE;EAAK,CAAC,CAAC;EAC1C,IAAIC,QAAQ,GAAGF,KAAK,CAACH,EAAE;;EAEvB;EACAK,QAAQ,CAACC,KAAK,CAACC,QAAQ,GAAG,UAAU;EACpCF,QAAQ,CAACC,KAAK,CAACE,IAAI,GAAG,SAAS;EAC/BC,QAAQ,CAACC,IAAI,CAACC,WAAW,CAACN,QAAQ,CAAC;EAEnC,SAASO,IAAI,GAAG;IACZ,IAAIC,KAAK,GAAGlB,OAAO,CAACmB,QAAQ,CAACT,QAAQ,CAACU,WAAW,CAAC;IAElDC,UAAU,CAAC,YAAW;MAClB,IAAIC,GAAG,GAAGpB,KAAK,CAACQ,QAAQ,CAAC;MAEzB,IAAIa,MAAM,GAAGT,QAAQ,CAACU,aAAa,CAAC,QAAQ,CAAC;MAC7CD,MAAM,CAACE,EAAE,GAAG1B,GAAG,CAAC2B,OAAO,EAAE;MAEzBnB,EAAE,GAAGJ,QAAQ,CAAC;QACVM,MAAM,EAAEH,IAAI,CAACG,MAAM;QACnBkB,KAAK,EAAEjB,QAAQ,CAACU,WAAW,CAACO,KAAK;QACjCC,MAAM,EAAElB,QAAQ,CAACU,WAAW,CAACQ,MAAM;QACnCL,MAAM,EAAEA,MAAM;QACdM,OAAO,EAAEtB,EAAE;QACXe,GAAG,EAAEA;MACT,CAAC,CAAC;MAEFf,EAAE,CAACuB,KAAK,GAAG,YAAW;QAClB,IAAGpB,QAAQ,EAAEI,QAAQ,CAACC,IAAI,CAACgB,WAAW,CAACrB,QAAQ,CAAC;MACpD,CAAC;IAEL,CAAC,EAAEQ,KAAK,CAAC;EACb;EAEA,IAAIc,UAAU,GAAGhC,OAAO,CAACiC,aAAa,CAACvB,QAAQ,CAAC;EAEhDZ,QAAQ,CAACoC,IAAI,CAAC,MAAM,EAAExB,QAAQ,EAAEF,KAAK,CAAC2B,IAAI,EAAE3B,KAAK,CAAC4B,MAAM,EAAE5B,KAAK,CAAC6B,MAAM,CAAC,CAClEC,IAAI,CAACN,UAAU,CAAC,CAChBM,IAAI,CAACrB,IAAI,CAAC,CACVsB,KAAK,CAAC,UAASC,GAAG,EAAE;IACjBjC,EAAE,CAACkC,IAAI,CAAC,OAAO,EAAED,GAAG,CAAC;EACzB,CAAC,CAAC;EAGN,OAAOjC,EAAE;AACb;AAEAmC,MAAM,CAACC,OAAO,GAAGvC,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}
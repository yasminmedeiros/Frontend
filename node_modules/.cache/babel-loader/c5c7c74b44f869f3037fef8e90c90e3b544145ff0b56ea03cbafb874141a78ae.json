{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\n\n// constants for dynamic jitter (ie less jitter for sparser points)\nvar JITTERCOUNT = 5; // points either side of this to include\nvar JITTERSPREAD = 0.01; // fraction of IQR to count as \"dense\"\n\nfunction plot(gd, plotinfo, cdbox, boxLayer) {\n  var xa = plotinfo.xaxis;\n  var ya = plotinfo.yaxis;\n  Lib.makeTraceGroups(boxLayer, cdbox, 'trace boxes').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var cd0 = cd[0];\n    var t = cd0.t;\n    var trace = cd0.trace;\n    if (!plotinfo.isRangePlot) cd0.node3 = plotGroup;\n\n    // whisker width\n    t.wdPos = t.bdPos * trace.whiskerwidth;\n    if (trace.visible !== true || t.empty) {\n      plotGroup.remove();\n      return;\n    }\n    var posAxis, valAxis;\n    if (trace.orientation === 'h') {\n      posAxis = ya;\n      valAxis = xa;\n    } else {\n      posAxis = xa;\n      valAxis = ya;\n    }\n    plotBoxAndWhiskers(plotGroup, {\n      pos: posAxis,\n      val: valAxis\n    }, trace, t);\n    plotPoints(plotGroup, {\n      x: xa,\n      y: ya\n    }, trace, t);\n    plotBoxMean(plotGroup, {\n      pos: posAxis,\n      val: valAxis\n    }, trace, t);\n  });\n}\nfunction plotBoxAndWhiskers(sel, axes, trace, t) {\n  var posAxis = axes.pos;\n  var valAxis = axes.val;\n  var bPos = t.bPos;\n  var wdPos = t.wdPos || 0;\n  var bPosPxOffset = t.bPosPxOffset || 0;\n  var whiskerWidth = trace.whiskerwidth || 0;\n  var notched = trace.notched || false;\n  var nw = notched ? 1 - 2 * trace.notchwidth : 1;\n\n  // to support for one-sided box\n  var bdPos0;\n  var bdPos1;\n  if (Array.isArray(t.bdPos)) {\n    bdPos0 = t.bdPos[0];\n    bdPos1 = t.bdPos[1];\n  } else {\n    bdPos0 = t.bdPos;\n    bdPos1 = t.bdPos;\n  }\n  var paths = sel.selectAll('path.box').data(trace.type !== 'violin' || trace.box.visible ? Lib.identity : []);\n  paths.enter().append('path').style('vector-effect', 'non-scaling-stroke').attr('class', 'box');\n  paths.exit().remove();\n  paths.each(function (d) {\n    if (d.empty) return 'M0,0Z';\n    var pos = d.pos;\n    var posc = posAxis.c2p(pos + bPos, true) + bPosPxOffset;\n    var pos0 = posAxis.c2p(pos + bPos - bdPos0, true) + bPosPxOffset;\n    var pos1 = posAxis.c2p(pos + bPos + bdPos1, true) + bPosPxOffset;\n    var posw0 = posAxis.c2p(pos + bPos - wdPos, true) + bPosPxOffset;\n    var posw1 = posAxis.c2p(pos + bPos + wdPos, true) + bPosPxOffset;\n    var posm0 = posAxis.c2p(pos + bPos - bdPos0 * nw, true) + bPosPxOffset;\n    var posm1 = posAxis.c2p(pos + bPos + bdPos1 * nw, true) + bPosPxOffset;\n    var q1 = valAxis.c2p(d.q1, true);\n    var q3 = valAxis.c2p(d.q3, true);\n    // make sure median isn't identical to either of the\n    // quartiles, so we can see it\n    var m = Lib.constrain(valAxis.c2p(d.med, true), Math.min(q1, q3) + 1, Math.max(q1, q3) - 1);\n\n    // for compatibility with box, violin, and candlestick\n    // perhaps we should put this into cd0.t instead so it's more explicit,\n    // but what we have now is:\n    // - box always has d.lf, but boxpoints can be anything\n    // - violin has d.lf and should always use it (boxpoints is undefined)\n    // - candlestick has only min/max\n    var useExtremes = d.lf === undefined || trace.boxpoints === false;\n    var lf = valAxis.c2p(useExtremes ? d.min : d.lf, true);\n    var uf = valAxis.c2p(useExtremes ? d.max : d.uf, true);\n    var ln = valAxis.c2p(d.ln, true);\n    var un = valAxis.c2p(d.un, true);\n    if (trace.orientation === 'h') {\n      d3.select(this).attr('d', 'M' + m + ',' + posm0 + 'V' + posm1 +\n      // median line\n      'M' + q1 + ',' + pos0 + 'V' + pos1 + (\n      // left edge\n      notched ? 'H' + ln + 'L' + m + ',' + posm1 + 'L' + un + ',' + pos1 : '') +\n      // top notched edge\n      'H' + q3 +\n      // end of the top edge\n      'V' + pos0 + (\n      // right edge\n      notched ? 'H' + un + 'L' + m + ',' + posm0 + 'L' + ln + ',' + pos0 : '') +\n      // bottom notched edge\n      'Z' +\n      // end of the box\n      'M' + q1 + ',' + posc + 'H' + lf + 'M' + q3 + ',' + posc + 'H' + uf + (\n      // whiskers\n      whiskerWidth === 0 ? '' :\n      // whisker caps\n      'M' + lf + ',' + posw0 + 'V' + posw1 + 'M' + uf + ',' + posw0 + 'V' + posw1));\n    } else {\n      d3.select(this).attr('d', 'M' + posm0 + ',' + m + 'H' + posm1 +\n      // median line\n      'M' + pos0 + ',' + q1 + 'H' + pos1 + (\n      // top of the box\n      notched ? 'V' + ln + 'L' + posm1 + ',' + m + 'L' + pos1 + ',' + un : '') +\n      // notched right edge\n      'V' + q3 +\n      // end of the right edge\n      'H' + pos0 + (\n      // bottom of the box\n      notched ? 'V' + un + 'L' + posm0 + ',' + m + 'L' + pos0 + ',' + ln : '') +\n      // notched left edge\n      'Z' +\n      // end of the box\n      'M' + posc + ',' + q1 + 'V' + lf + 'M' + posc + ',' + q3 + 'V' + uf + (\n      // whiskers\n      whiskerWidth === 0 ? '' :\n      // whisker caps\n      'M' + posw0 + ',' + lf + 'H' + posw1 + 'M' + posw0 + ',' + uf + 'H' + posw1));\n    }\n  });\n}\nfunction plotPoints(sel, axes, trace, t) {\n  var xa = axes.x;\n  var ya = axes.y;\n  var bdPos = t.bdPos;\n  var bPos = t.bPos;\n\n  // to support violin points\n  var mode = trace.boxpoints || trace.points;\n\n  // repeatable pseudo-random number generator\n  Lib.seedPseudoRandom();\n\n  // since box plot points get an extra level of nesting, each\n  // box needs the trace styling info\n  var fn = function fn(d) {\n    d.forEach(function (v) {\n      v.t = t;\n      v.trace = trace;\n    });\n    return d;\n  };\n  var gPoints = sel.selectAll('g.points').data(mode ? fn : []);\n  gPoints.enter().append('g').attr('class', 'points');\n  gPoints.exit().remove();\n  var paths = gPoints.selectAll('path').data(function (d) {\n    var i;\n    var pts = d.pts2;\n\n    // normally use IQR, but if this is 0 or too small, use max-min\n    var typicalSpread = Math.max((d.max - d.min) / 10, d.q3 - d.q1);\n    var minSpread = typicalSpread * 1e-9;\n    var spreadLimit = typicalSpread * JITTERSPREAD;\n    var jitterFactors = [];\n    var maxJitterFactor = 0;\n    var newJitter;\n\n    // dynamic jitter\n    if (trace.jitter) {\n      if (typicalSpread === 0) {\n        // edge case of no spread at all: fall back to max jitter\n        maxJitterFactor = 1;\n        jitterFactors = new Array(pts.length);\n        for (i = 0; i < pts.length; i++) {\n          jitterFactors[i] = 1;\n        }\n      } else {\n        for (i = 0; i < pts.length; i++) {\n          var i0 = Math.max(0, i - JITTERCOUNT);\n          var pmin = pts[i0].v;\n          var i1 = Math.min(pts.length - 1, i + JITTERCOUNT);\n          var pmax = pts[i1].v;\n          if (mode !== 'all') {\n            if (pts[i].v < d.lf) pmax = Math.min(pmax, d.lf);else pmin = Math.max(pmin, d.uf);\n          }\n          var jitterFactor = Math.sqrt(spreadLimit * (i1 - i0) / (pmax - pmin + minSpread)) || 0;\n          jitterFactor = Lib.constrain(Math.abs(jitterFactor), 0, 1);\n          jitterFactors.push(jitterFactor);\n          maxJitterFactor = Math.max(jitterFactor, maxJitterFactor);\n        }\n      }\n      newJitter = trace.jitter * 2 / (maxJitterFactor || 1);\n    }\n\n    // fills in 'x' and 'y' in calcdata 'pts' item\n    for (i = 0; i < pts.length; i++) {\n      var pt = pts[i];\n      var v = pt.v;\n      var jitterOffset = trace.jitter ? newJitter * jitterFactors[i] * (Lib.pseudoRandom() - 0.5) : 0;\n      var posPx = d.pos + bPos + bdPos * (trace.pointpos + jitterOffset);\n      if (trace.orientation === 'h') {\n        pt.y = posPx;\n        pt.x = v;\n      } else {\n        pt.x = posPx;\n        pt.y = v;\n      }\n\n      // tag suspected outliers\n      if (mode === 'suspectedoutliers' && v < d.uo && v > d.lo) {\n        pt.so = true;\n      }\n    }\n    return pts;\n  });\n  paths.enter().append('path').classed('point', true);\n  paths.exit().remove();\n  paths.call(Drawing.translatePoints, xa, ya);\n}\nfunction plotBoxMean(sel, axes, trace, t) {\n  var posAxis = axes.pos;\n  var valAxis = axes.val;\n  var bPos = t.bPos;\n  var bPosPxOffset = t.bPosPxOffset || 0;\n\n  // to support violin mean lines\n  var mode = trace.boxmean || (trace.meanline || {}).visible;\n\n  // to support for one-sided box\n  var bdPos0;\n  var bdPos1;\n  if (Array.isArray(t.bdPos)) {\n    bdPos0 = t.bdPos[0];\n    bdPos1 = t.bdPos[1];\n  } else {\n    bdPos0 = t.bdPos;\n    bdPos1 = t.bdPos;\n  }\n  var paths = sel.selectAll('path.mean').data(trace.type === 'box' && trace.boxmean || trace.type === 'violin' && trace.box.visible && trace.meanline.visible ? Lib.identity : []);\n  paths.enter().append('path').attr('class', 'mean').style({\n    fill: 'none',\n    'vector-effect': 'non-scaling-stroke'\n  });\n  paths.exit().remove();\n  paths.each(function (d) {\n    var posc = posAxis.c2p(d.pos + bPos, true) + bPosPxOffset;\n    var pos0 = posAxis.c2p(d.pos + bPos - bdPos0, true) + bPosPxOffset;\n    var pos1 = posAxis.c2p(d.pos + bPos + bdPos1, true) + bPosPxOffset;\n    var m = valAxis.c2p(d.mean, true);\n    var sl = valAxis.c2p(d.mean - d.sd, true);\n    var sh = valAxis.c2p(d.mean + d.sd, true);\n    if (trace.orientation === 'h') {\n      d3.select(this).attr('d', 'M' + m + ',' + pos0 + 'V' + pos1 + (mode === 'sd' ? 'm0,0L' + sl + ',' + posc + 'L' + m + ',' + pos0 + 'L' + sh + ',' + posc + 'Z' : ''));\n    } else {\n      d3.select(this).attr('d', 'M' + pos0 + ',' + m + 'H' + pos1 + (mode === 'sd' ? 'm0,0L' + posc + ',' + sl + 'L' + pos0 + ',' + m + 'L' + posc + ',' + sh + 'Z' : ''));\n    }\n  });\n}\nmodule.exports = {\n  plot: plot,\n  plotBoxAndWhiskers: plotBoxAndWhiskers,\n  plotPoints: plotPoints,\n  plotBoxMean: plotBoxMean\n};","map":{"version":3,"names":["d3","require","Lib","Drawing","JITTERCOUNT","JITTERSPREAD","plot","gd","plotinfo","cdbox","boxLayer","xa","xaxis","ya","yaxis","makeTraceGroups","each","cd","plotGroup","select","cd0","t","trace","isRangePlot","node3","wdPos","bdPos","whiskerwidth","visible","empty","remove","posAxis","valAxis","orientation","plotBoxAndWhiskers","pos","val","plotPoints","x","y","plotBoxMean","sel","axes","bPos","bPosPxOffset","whiskerWidth","notched","nw","notchwidth","bdPos0","bdPos1","Array","isArray","paths","selectAll","data","type","box","identity","enter","append","style","attr","exit","d","posc","c2p","pos0","pos1","posw0","posw1","posm0","posm1","q1","q3","m","constrain","med","Math","min","max","useExtremes","lf","undefined","boxpoints","uf","ln","un","mode","points","seedPseudoRandom","fn","forEach","v","gPoints","i","pts","pts2","typicalSpread","minSpread","spreadLimit","jitterFactors","maxJitterFactor","newJitter","jitter","length","i0","pmin","i1","pmax","jitterFactor","sqrt","abs","push","pt","jitterOffset","pseudoRandom","posPx","pointpos","uo","lo","so","classed","call","translatePoints","boxmean","meanline","fill","mean","sl","sd","sh","module","exports"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/plotly.js/src/traces/box/plot.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar d3 = require('d3');\n\nvar Lib = require('../../lib');\nvar Drawing = require('../../components/drawing');\n\n// constants for dynamic jitter (ie less jitter for sparser points)\nvar JITTERCOUNT = 5; // points either side of this to include\nvar JITTERSPREAD = 0.01; // fraction of IQR to count as \"dense\"\n\nfunction plot(gd, plotinfo, cdbox, boxLayer) {\n    var xa = plotinfo.xaxis;\n    var ya = plotinfo.yaxis;\n\n    Lib.makeTraceGroups(boxLayer, cdbox, 'trace boxes').each(function(cd) {\n        var plotGroup = d3.select(this);\n        var cd0 = cd[0];\n        var t = cd0.t;\n        var trace = cd0.trace;\n        if(!plotinfo.isRangePlot) cd0.node3 = plotGroup;\n\n        // whisker width\n        t.wdPos = t.bdPos * trace.whiskerwidth;\n\n        if(trace.visible !== true || t.empty) {\n            plotGroup.remove();\n            return;\n        }\n\n        var posAxis, valAxis;\n\n        if(trace.orientation === 'h') {\n            posAxis = ya;\n            valAxis = xa;\n        } else {\n            posAxis = xa;\n            valAxis = ya;\n        }\n\n        plotBoxAndWhiskers(plotGroup, {pos: posAxis, val: valAxis}, trace, t);\n        plotPoints(plotGroup, {x: xa, y: ya}, trace, t);\n        plotBoxMean(plotGroup, {pos: posAxis, val: valAxis}, trace, t);\n    });\n}\n\nfunction plotBoxAndWhiskers(sel, axes, trace, t) {\n    var posAxis = axes.pos;\n    var valAxis = axes.val;\n    var bPos = t.bPos;\n    var wdPos = t.wdPos || 0;\n    var bPosPxOffset = t.bPosPxOffset || 0;\n    var whiskerWidth = trace.whiskerwidth || 0;\n    var notched = trace.notched || false;\n    var nw = notched ? 1 - 2 * trace.notchwidth : 1;\n\n    // to support for one-sided box\n    var bdPos0;\n    var bdPos1;\n    if(Array.isArray(t.bdPos)) {\n        bdPos0 = t.bdPos[0];\n        bdPos1 = t.bdPos[1];\n    } else {\n        bdPos0 = t.bdPos;\n        bdPos1 = t.bdPos;\n    }\n\n    var paths = sel.selectAll('path.box').data((\n        trace.type !== 'violin' ||\n        trace.box.visible\n    ) ? Lib.identity : []);\n\n    paths.enter().append('path')\n        .style('vector-effect', 'non-scaling-stroke')\n        .attr('class', 'box');\n\n    paths.exit().remove();\n\n    paths.each(function(d) {\n        if(d.empty) return 'M0,0Z';\n\n        var pos = d.pos;\n        var posc = posAxis.c2p(pos + bPos, true) + bPosPxOffset;\n        var pos0 = posAxis.c2p(pos + bPos - bdPos0, true) + bPosPxOffset;\n        var pos1 = posAxis.c2p(pos + bPos + bdPos1, true) + bPosPxOffset;\n        var posw0 = posAxis.c2p(pos + bPos - wdPos, true) + bPosPxOffset;\n        var posw1 = posAxis.c2p(pos + bPos + wdPos, true) + bPosPxOffset;\n        var posm0 = posAxis.c2p(pos + bPos - bdPos0 * nw, true) + bPosPxOffset;\n        var posm1 = posAxis.c2p(pos + bPos + bdPos1 * nw, true) + bPosPxOffset;\n        var q1 = valAxis.c2p(d.q1, true);\n        var q3 = valAxis.c2p(d.q3, true);\n        // make sure median isn't identical to either of the\n        // quartiles, so we can see it\n        var m = Lib.constrain(\n            valAxis.c2p(d.med, true),\n            Math.min(q1, q3) + 1, Math.max(q1, q3) - 1\n        );\n\n        // for compatibility with box, violin, and candlestick\n        // perhaps we should put this into cd0.t instead so it's more explicit,\n        // but what we have now is:\n        // - box always has d.lf, but boxpoints can be anything\n        // - violin has d.lf and should always use it (boxpoints is undefined)\n        // - candlestick has only min/max\n        var useExtremes = (d.lf === undefined) || (trace.boxpoints === false);\n        var lf = valAxis.c2p(useExtremes ? d.min : d.lf, true);\n        var uf = valAxis.c2p(useExtremes ? d.max : d.uf, true);\n        var ln = valAxis.c2p(d.ln, true);\n        var un = valAxis.c2p(d.un, true);\n\n        if(trace.orientation === 'h') {\n            d3.select(this).attr('d',\n                'M' + m + ',' + posm0 + 'V' + posm1 + // median line\n                'M' + q1 + ',' + pos0 + 'V' + pos1 + // left edge\n                (notched ? 'H' + ln + 'L' + m + ',' + posm1 + 'L' + un + ',' + pos1 : '') + // top notched edge\n                'H' + q3 + // end of the top edge\n                'V' + pos0 + // right edge\n                (notched ? 'H' + un + 'L' + m + ',' + posm0 + 'L' + ln + ',' + pos0 : '') + // bottom notched edge\n                'Z' + // end of the box\n                'M' + q1 + ',' + posc + 'H' + lf + 'M' + q3 + ',' + posc + 'H' + uf + // whiskers\n                ((whiskerWidth === 0) ? '' : // whisker caps\n                    'M' + lf + ',' + posw0 + 'V' + posw1 + 'M' + uf + ',' + posw0 + 'V' + posw1));\n        } else {\n            d3.select(this).attr('d',\n                'M' + posm0 + ',' + m + 'H' + posm1 + // median line\n                'M' + pos0 + ',' + q1 + 'H' + pos1 + // top of the box\n                (notched ? 'V' + ln + 'L' + posm1 + ',' + m + 'L' + pos1 + ',' + un : '') + // notched right edge\n                'V' + q3 + // end of the right edge\n                'H' + pos0 + // bottom of the box\n                (notched ? 'V' + un + 'L' + posm0 + ',' + m + 'L' + pos0 + ',' + ln : '') + // notched left edge\n                'Z' + // end of the box\n                'M' + posc + ',' + q1 + 'V' + lf + 'M' + posc + ',' + q3 + 'V' + uf + // whiskers\n                ((whiskerWidth === 0) ? '' : // whisker caps\n                    'M' + posw0 + ',' + lf + 'H' + posw1 + 'M' + posw0 + ',' + uf + 'H' + posw1));\n        }\n    });\n}\n\nfunction plotPoints(sel, axes, trace, t) {\n    var xa = axes.x;\n    var ya = axes.y;\n    var bdPos = t.bdPos;\n    var bPos = t.bPos;\n\n    // to support violin points\n    var mode = trace.boxpoints || trace.points;\n\n    // repeatable pseudo-random number generator\n    Lib.seedPseudoRandom();\n\n    // since box plot points get an extra level of nesting, each\n    // box needs the trace styling info\n    var fn = function(d) {\n        d.forEach(function(v) {\n            v.t = t;\n            v.trace = trace;\n        });\n        return d;\n    };\n\n    var gPoints = sel.selectAll('g.points')\n        .data(mode ? fn : []);\n\n    gPoints.enter().append('g')\n        .attr('class', 'points');\n\n    gPoints.exit().remove();\n\n    var paths = gPoints.selectAll('path')\n        .data(function(d) {\n            var i;\n            var pts = d.pts2;\n\n            // normally use IQR, but if this is 0 or too small, use max-min\n            var typicalSpread = Math.max((d.max - d.min) / 10, d.q3 - d.q1);\n            var minSpread = typicalSpread * 1e-9;\n            var spreadLimit = typicalSpread * JITTERSPREAD;\n            var jitterFactors = [];\n            var maxJitterFactor = 0;\n            var newJitter;\n\n            // dynamic jitter\n            if(trace.jitter) {\n                if(typicalSpread === 0) {\n                    // edge case of no spread at all: fall back to max jitter\n                    maxJitterFactor = 1;\n                    jitterFactors = new Array(pts.length);\n                    for(i = 0; i < pts.length; i++) {\n                        jitterFactors[i] = 1;\n                    }\n                } else {\n                    for(i = 0; i < pts.length; i++) {\n                        var i0 = Math.max(0, i - JITTERCOUNT);\n                        var pmin = pts[i0].v;\n                        var i1 = Math.min(pts.length - 1, i + JITTERCOUNT);\n                        var pmax = pts[i1].v;\n\n                        if(mode !== 'all') {\n                            if(pts[i].v < d.lf) pmax = Math.min(pmax, d.lf);\n                            else pmin = Math.max(pmin, d.uf);\n                        }\n\n                        var jitterFactor = Math.sqrt(spreadLimit * (i1 - i0) / (pmax - pmin + minSpread)) || 0;\n                        jitterFactor = Lib.constrain(Math.abs(jitterFactor), 0, 1);\n\n                        jitterFactors.push(jitterFactor);\n                        maxJitterFactor = Math.max(jitterFactor, maxJitterFactor);\n                    }\n                }\n                newJitter = trace.jitter * 2 / (maxJitterFactor || 1);\n            }\n\n            // fills in 'x' and 'y' in calcdata 'pts' item\n            for(i = 0; i < pts.length; i++) {\n                var pt = pts[i];\n                var v = pt.v;\n\n                var jitterOffset = trace.jitter ?\n                    (newJitter * jitterFactors[i] * (Lib.pseudoRandom() - 0.5)) :\n                    0;\n\n                var posPx = d.pos + bPos + bdPos * (trace.pointpos + jitterOffset);\n\n                if(trace.orientation === 'h') {\n                    pt.y = posPx;\n                    pt.x = v;\n                } else {\n                    pt.x = posPx;\n                    pt.y = v;\n                }\n\n                // tag suspected outliers\n                if(mode === 'suspectedoutliers' && v < d.uo && v > d.lo) {\n                    pt.so = true;\n                }\n            }\n\n            return pts;\n        });\n\n    paths.enter().append('path')\n        .classed('point', true);\n\n    paths.exit().remove();\n\n    paths.call(Drawing.translatePoints, xa, ya);\n}\n\nfunction plotBoxMean(sel, axes, trace, t) {\n    var posAxis = axes.pos;\n    var valAxis = axes.val;\n    var bPos = t.bPos;\n    var bPosPxOffset = t.bPosPxOffset || 0;\n\n    // to support violin mean lines\n    var mode = trace.boxmean || (trace.meanline || {}).visible;\n\n    // to support for one-sided box\n    var bdPos0;\n    var bdPos1;\n    if(Array.isArray(t.bdPos)) {\n        bdPos0 = t.bdPos[0];\n        bdPos1 = t.bdPos[1];\n    } else {\n        bdPos0 = t.bdPos;\n        bdPos1 = t.bdPos;\n    }\n\n    var paths = sel.selectAll('path.mean').data((\n        (trace.type === 'box' && trace.boxmean) ||\n        (trace.type === 'violin' && trace.box.visible && trace.meanline.visible)\n    ) ? Lib.identity : []);\n\n    paths.enter().append('path')\n        .attr('class', 'mean')\n        .style({\n            fill: 'none',\n            'vector-effect': 'non-scaling-stroke'\n        });\n\n    paths.exit().remove();\n\n    paths.each(function(d) {\n        var posc = posAxis.c2p(d.pos + bPos, true) + bPosPxOffset;\n        var pos0 = posAxis.c2p(d.pos + bPos - bdPos0, true) + bPosPxOffset;\n        var pos1 = posAxis.c2p(d.pos + bPos + bdPos1, true) + bPosPxOffset;\n        var m = valAxis.c2p(d.mean, true);\n        var sl = valAxis.c2p(d.mean - d.sd, true);\n        var sh = valAxis.c2p(d.mean + d.sd, true);\n\n        if(trace.orientation === 'h') {\n            d3.select(this).attr('d',\n                'M' + m + ',' + pos0 + 'V' + pos1 +\n                (mode === 'sd' ?\n                    'm0,0L' + sl + ',' + posc + 'L' + m + ',' + pos0 + 'L' + sh + ',' + posc + 'Z' :\n                    '')\n            );\n        } else {\n            d3.select(this).attr('d',\n                'M' + pos0 + ',' + m + 'H' + pos1 +\n                (mode === 'sd' ?\n                    'm0,0L' + posc + ',' + sl + 'L' + pos0 + ',' + m + 'L' + posc + ',' + sh + 'Z' :\n                    '')\n            );\n        }\n    });\n}\n\nmodule.exports = {\n    plot: plot,\n    plotBoxAndWhiskers: plotBoxAndWhiskers,\n    plotPoints: plotPoints,\n    plotBoxMean: plotBoxMean\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
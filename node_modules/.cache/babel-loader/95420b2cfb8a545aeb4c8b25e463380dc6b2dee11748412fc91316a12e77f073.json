{"ast":null,"code":"module.exports = vectorizeText;\nmodule.exports.processPixels = processPixels;\nvar surfaceNets = require('surface-nets');\nvar ndarray = require('ndarray');\nvar simplify = require('simplify-planar-graph');\nvar cleanPSLG = require('clean-pslg');\nvar cdt2d = require('cdt2d');\nvar toPolygonCrappy = require('planar-graph-to-polyline');\nvar TAG_bold = \"b\";\nvar CHR_bold = 'b|';\nvar TAG_italic = \"i\";\nvar CHR_italic = 'i|';\nvar TAG_super = \"sup\";\nvar CHR_super0 = '+';\nvar CHR_super = '+1';\nvar TAG_sub = \"sub\";\nvar CHR_sub0 = '-';\nvar CHR_sub = '-1';\nfunction parseTag(tag, TAG_CHR, str, map) {\n  var opnTag = \"<\" + tag + \">\";\n  var clsTag = \"</\" + tag + \">\";\n  var nOPN = opnTag.length;\n  var nCLS = clsTag.length;\n  var isRecursive = TAG_CHR[0] === CHR_super0 || TAG_CHR[0] === CHR_sub0;\n  var a = 0;\n  var b = -nCLS;\n  while (a > -1) {\n    a = str.indexOf(opnTag, a);\n    if (a === -1) break;\n    b = str.indexOf(clsTag, a + nOPN);\n    if (b === -1) break;\n    if (b <= a) break;\n    for (var i = a; i < b + nCLS; ++i) {\n      if (i < a + nOPN || i >= b) {\n        map[i] = null;\n        str = str.substr(0, i) + \" \" + str.substr(i + 1);\n      } else {\n        if (map[i] !== null) {\n          var pos = map[i].indexOf(TAG_CHR[0]);\n          if (pos === -1) {\n            map[i] += TAG_CHR;\n          } else {\n            // i.e. to handle multiple sub/super-scripts\n            if (isRecursive) {\n              // i.e to increase the sub/sup number\n              map[i] = map[i].substr(0, pos + 1) + (1 + parseInt(map[i][pos + 1])) + map[i].substr(pos + 2);\n            }\n          }\n        }\n      }\n    }\n    var start = a + nOPN;\n    var remainingStr = str.substr(start, b - start);\n    var c = remainingStr.indexOf(opnTag);\n    if (c !== -1) a = c;else a = b + nCLS;\n  }\n  return map;\n}\nfunction transformPositions(positions, options, size) {\n  var align = options.textAlign || \"start\";\n  var baseline = options.textBaseline || \"alphabetic\";\n  var lo = [1 << 30, 1 << 30];\n  var hi = [0, 0];\n  var n = positions.length;\n  for (var i = 0; i < n; ++i) {\n    var p = positions[i];\n    for (var j = 0; j < 2; ++j) {\n      lo[j] = Math.min(lo[j], p[j]) | 0;\n      hi[j] = Math.max(hi[j], p[j]) | 0;\n    }\n  }\n  var xShift = 0;\n  switch (align) {\n    case \"center\":\n      xShift = -0.5 * (lo[0] + hi[0]);\n      break;\n    case \"right\":\n    case \"end\":\n      xShift = -hi[0];\n      break;\n    case \"left\":\n    case \"start\":\n      xShift = -lo[0];\n      break;\n    default:\n      throw new Error(\"vectorize-text: Unrecognized textAlign: '\" + align + \"'\");\n  }\n  var yShift = 0;\n  switch (baseline) {\n    case \"hanging\":\n    case \"top\":\n      yShift = -lo[1];\n      break;\n    case \"middle\":\n      yShift = -0.5 * (lo[1] + hi[1]);\n      break;\n    case \"alphabetic\":\n    case \"ideographic\":\n      yShift = -3 * size;\n      break;\n    case \"bottom\":\n      yShift = -hi[1];\n      break;\n    default:\n      throw new Error(\"vectorize-text: Unrecoginized textBaseline: '\" + baseline + \"'\");\n  }\n  var scale = 1.0 / size;\n  if (\"lineHeight\" in options) {\n    scale *= +options.lineHeight;\n  } else if (\"width\" in options) {\n    scale = options.width / (hi[0] - lo[0]);\n  } else if (\"height\" in options) {\n    scale = options.height / (hi[1] - lo[1]);\n  }\n  return positions.map(function (p) {\n    return [scale * (p[0] + xShift), scale * (p[1] + yShift)];\n  });\n}\nfunction getPixels(canvas, context, rawString, fontSize, lineSpacing, styletags) {\n  rawString = rawString.replace(/\\n/g, ''); // don't accept \\n in the input\n\n  if (styletags.breaklines === true) {\n    rawString = rawString.replace(/\\<br\\>/g, '\\n'); // replace <br> tags with \\n in the string\n  } else {\n    rawString = rawString.replace(/\\<br\\>/g, ' '); // don't accept <br> tags in the input and replace with space in this case\n  }\n\n  var activeStyle = \"\";\n  var map = [];\n  for (j = 0; j < rawString.length; ++j) {\n    map[j] = activeStyle;\n  }\n  if (styletags.bolds === true) map = parseTag(TAG_bold, CHR_bold, rawString, map);\n  if (styletags.italics === true) map = parseTag(TAG_italic, CHR_italic, rawString, map);\n  if (styletags.superscripts === true) map = parseTag(TAG_super, CHR_super, rawString, map);\n  if (styletags.subscripts === true) map = parseTag(TAG_sub, CHR_sub, rawString, map);\n  var allStyles = [];\n  var plainText = \"\";\n  for (j = 0; j < rawString.length; ++j) {\n    if (map[j] !== null) {\n      plainText += rawString[j];\n      allStyles.push(map[j]);\n    }\n  }\n  var allTexts = plainText.split('\\n');\n  var numberOfLines = allTexts.length;\n  var lineHeight = Math.round(lineSpacing * fontSize);\n  var offsetX = fontSize;\n  var offsetY = fontSize * 2;\n  var maxWidth = 0;\n  var minHeight = numberOfLines * lineHeight + offsetY;\n  if (canvas.height < minHeight) {\n    canvas.height = minHeight;\n  }\n  context.fillStyle = \"#000\";\n  context.fillRect(0, 0, canvas.width, canvas.height);\n  context.fillStyle = \"#fff\";\n  var i, j, xPos, yPos, zPos;\n  var nDone = 0;\n  var buffer = \"\";\n  function writeBuffer() {\n    if (buffer !== \"\") {\n      var delta = context.measureText(buffer).width;\n      context.fillText(buffer, offsetX + xPos, offsetY + yPos);\n      xPos += delta;\n    }\n  }\n  function getTextFontSize() {\n    return \"\" + Math.round(zPos) + \"px \";\n  }\n  function changeStyle(oldStyle, newStyle) {\n    var ctxFont = \"\" + context.font;\n    if (styletags.subscripts === true) {\n      var oldIndex_Sub = oldStyle.indexOf(CHR_sub0);\n      var newIndex_Sub = newStyle.indexOf(CHR_sub0);\n      var oldSub = oldIndex_Sub > -1 ? parseInt(oldStyle[1 + oldIndex_Sub]) : 0;\n      var newSub = newIndex_Sub > -1 ? parseInt(newStyle[1 + newIndex_Sub]) : 0;\n      if (oldSub !== newSub) {\n        ctxFont = ctxFont.replace(getTextFontSize(), \"?px \");\n        zPos *= Math.pow(0.75, newSub - oldSub);\n        ctxFont = ctxFont.replace(\"?px \", getTextFontSize());\n      }\n      yPos += 0.25 * lineHeight * (newSub - oldSub);\n    }\n    if (styletags.superscripts === true) {\n      var oldIndex_Super = oldStyle.indexOf(CHR_super0);\n      var newIndex_Super = newStyle.indexOf(CHR_super0);\n      var oldSuper = oldIndex_Super > -1 ? parseInt(oldStyle[1 + oldIndex_Super]) : 0;\n      var newSuper = newIndex_Super > -1 ? parseInt(newStyle[1 + newIndex_Super]) : 0;\n      if (oldSuper !== newSuper) {\n        ctxFont = ctxFont.replace(getTextFontSize(), \"?px \");\n        zPos *= Math.pow(0.75, newSuper - oldSuper);\n        ctxFont = ctxFont.replace(\"?px \", getTextFontSize());\n      }\n      yPos -= 0.25 * lineHeight * (newSuper - oldSuper);\n    }\n    if (styletags.bolds === true) {\n      var wasBold = oldStyle.indexOf(CHR_bold) > -1;\n      var is_Bold = newStyle.indexOf(CHR_bold) > -1;\n      if (!wasBold && is_Bold) {\n        if (wasItalic) {\n          ctxFont = ctxFont.replace(\"italic \", \"italic bold \");\n        } else {\n          ctxFont = \"bold \" + ctxFont;\n        }\n      }\n      if (wasBold && !is_Bold) {\n        ctxFont = ctxFont.replace(\"bold \", '');\n      }\n    }\n    if (styletags.italics === true) {\n      var wasItalic = oldStyle.indexOf(CHR_italic) > -1;\n      var is_Italic = newStyle.indexOf(CHR_italic) > -1;\n      if (!wasItalic && is_Italic) {\n        ctxFont = \"italic \" + ctxFont;\n      }\n      if (wasItalic && !is_Italic) {\n        ctxFont = ctxFont.replace(\"italic \", '');\n      }\n    }\n    context.font = ctxFont;\n  }\n  for (i = 0; i < numberOfLines; ++i) {\n    var txt = allTexts[i] + '\\n';\n    xPos = 0;\n    yPos = i * lineHeight;\n    zPos = fontSize;\n    buffer = \"\";\n    for (j = 0; j < txt.length; ++j) {\n      var style = j + nDone < allStyles.length ? allStyles[j + nDone] : allStyles[allStyles.length - 1];\n      if (activeStyle === style) {\n        buffer += txt[j];\n      } else {\n        writeBuffer();\n        buffer = txt[j];\n        if (style !== undefined) {\n          changeStyle(activeStyle, style);\n          activeStyle = style;\n        }\n      }\n    }\n    writeBuffer();\n    nDone += txt.length;\n    var width = Math.round(xPos + 2 * offsetX) | 0;\n    if (maxWidth < width) maxWidth = width;\n  }\n\n  //Cut pixels from image\n  var xCut = maxWidth;\n  var yCut = offsetY + lineHeight * numberOfLines;\n  var pixels = ndarray(context.getImageData(0, 0, xCut, yCut).data, [yCut, xCut, 4]);\n  return pixels.pick(-1, -1, 0).transpose(1, 0);\n}\nfunction getContour(pixels, doSimplify) {\n  var contour = surfaceNets(pixels, 128);\n  if (doSimplify) {\n    return simplify(contour.cells, contour.positions, 0.25);\n  }\n  return {\n    edges: contour.cells,\n    positions: contour.positions\n  };\n}\nfunction processPixelsImpl(pixels, options, size, simplify) {\n  //Extract contour\n  var contour = getContour(pixels, simplify);\n\n  //Apply warp to positions\n  var positions = transformPositions(contour.positions, options, size);\n  var edges = contour.edges;\n  var flip = \"ccw\" === options.orientation;\n\n  //Clean up the PSLG, resolve self intersections, etc.\n  cleanPSLG(positions, edges);\n\n  //If triangulate flag passed, triangulate the result\n  if (options.polygons || options.polygon || options.polyline) {\n    var result = toPolygonCrappy(edges, positions);\n    var nresult = new Array(result.length);\n    for (var i = 0; i < result.length; ++i) {\n      var loops = result[i];\n      var nloops = new Array(loops.length);\n      for (var j = 0; j < loops.length; ++j) {\n        var loop = loops[j];\n        var nloop = new Array(loop.length);\n        for (var k = 0; k < loop.length; ++k) {\n          nloop[k] = positions[loop[k]].slice();\n        }\n        if (flip) {\n          nloop.reverse();\n        }\n        nloops[j] = nloop;\n      }\n      nresult[i] = nloops;\n    }\n    return nresult;\n  } else if (options.triangles || options.triangulate || options.triangle) {\n    return {\n      cells: cdt2d(positions, edges, {\n        delaunay: false,\n        exterior: false,\n        interior: true\n      }),\n      positions: positions\n    };\n  } else {\n    return {\n      edges: edges,\n      positions: positions\n    };\n  }\n}\nfunction processPixels(pixels, options, size) {\n  try {\n    return processPixelsImpl(pixels, options, size, true);\n  } catch (e) {}\n  try {\n    return processPixelsImpl(pixels, options, size, false);\n  } catch (e) {}\n  if (options.polygons || options.polyline || options.polygon) {\n    return [];\n  }\n  if (options.triangles || options.triangulate || options.triangle) {\n    return {\n      cells: [],\n      positions: []\n    };\n  }\n  return {\n    edges: [],\n    positions: []\n  };\n}\nfunction vectorizeText(str, canvas, context, options) {\n  var size = 64;\n  var lineSpacing = 1.25;\n  var styletags = {\n    breaklines: false,\n    bolds: false,\n    italics: false,\n    subscripts: false,\n    superscripts: false\n  };\n  if (options) {\n    if (options.size && options.size > 0) size = options.size;\n    if (options.lineSpacing && options.lineSpacing > 0) lineSpacing = options.lineSpacing;\n    if (options.styletags && options.styletags.breaklines) styletags.breaklines = options.styletags.breaklines ? true : false;\n    if (options.styletags && options.styletags.bolds) styletags.bolds = options.styletags.bolds ? true : false;\n    if (options.styletags && options.styletags.italics) styletags.italics = options.styletags.italics ? true : false;\n    if (options.styletags && options.styletags.subscripts) styletags.subscripts = options.styletags.subscripts ? true : false;\n    if (options.styletags && options.styletags.superscripts) styletags.superscripts = options.styletags.superscripts ? true : false;\n  }\n  context.font = [options.fontStyle, options.fontVariant, options.fontWeight, size + \"px\", options.font].filter(function (d) {\n    return d;\n  }).join(\" \");\n  context.textAlign = \"start\";\n  context.textBaseline = \"alphabetic\";\n  context.direction = \"ltr\";\n  var pixels = getPixels(canvas, context, str, size, lineSpacing, styletags);\n  return processPixels(pixels, options, size);\n}","map":{"version":3,"names":["module","exports","vectorizeText","processPixels","surfaceNets","require","ndarray","simplify","cleanPSLG","cdt2d","toPolygonCrappy","TAG_bold","CHR_bold","TAG_italic","CHR_italic","TAG_super","CHR_super0","CHR_super","TAG_sub","CHR_sub0","CHR_sub","parseTag","tag","TAG_CHR","str","map","opnTag","clsTag","nOPN","length","nCLS","isRecursive","a","b","indexOf","i","substr","pos","parseInt","start","remainingStr","c","transformPositions","positions","options","size","align","textAlign","baseline","textBaseline","lo","hi","n","p","j","Math","min","max","xShift","Error","yShift","scale","lineHeight","width","height","getPixels","canvas","context","rawString","fontSize","lineSpacing","styletags","replace","breaklines","activeStyle","bolds","italics","superscripts","subscripts","allStyles","plainText","push","allTexts","split","numberOfLines","round","offsetX","offsetY","maxWidth","minHeight","fillStyle","fillRect","xPos","yPos","zPos","nDone","buffer","writeBuffer","delta","measureText","fillText","getTextFontSize","changeStyle","oldStyle","newStyle","ctxFont","font","oldIndex_Sub","newIndex_Sub","oldSub","newSub","pow","oldIndex_Super","newIndex_Super","oldSuper","newSuper","wasBold","is_Bold","wasItalic","is_Italic","txt","style","undefined","xCut","yCut","pixels","getImageData","data","pick","transpose","getContour","doSimplify","contour","cells","edges","processPixelsImpl","flip","orientation","polygons","polygon","polyline","result","nresult","Array","loops","nloops","loop","nloop","k","slice","reverse","triangles","triangulate","triangle","delaunay","exterior","interior","e","fontStyle","fontVariant","fontWeight","filter","d","join","direction"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/vectorize-text/lib/vtext.js"],"sourcesContent":["module.exports = vectorizeText\nmodule.exports.processPixels = processPixels\n\nvar surfaceNets = require('surface-nets')\nvar ndarray = require('ndarray')\nvar simplify = require('simplify-planar-graph')\nvar cleanPSLG = require('clean-pslg')\nvar cdt2d = require('cdt2d')\nvar toPolygonCrappy = require('planar-graph-to-polyline')\n\nvar TAG_bold = \"b\"\nvar CHR_bold = 'b|'\n\nvar TAG_italic = \"i\"\nvar CHR_italic = 'i|'\n\nvar TAG_super = \"sup\"\nvar CHR_super0 = '+'\nvar CHR_super = '+1'\n\nvar TAG_sub = \"sub\"\nvar CHR_sub0 = '-'\nvar CHR_sub = '-1'\n\nfunction parseTag(tag, TAG_CHR, str, map) {\n\n  var opnTag =  \"<\"  + tag + \">\"\n  var clsTag =  \"</\" + tag + \">\"\n\n  var nOPN = opnTag.length\n  var nCLS = clsTag.length\n\n  var isRecursive = (TAG_CHR[0] === CHR_super0) ||\n                    (TAG_CHR[0] === CHR_sub0);\n\n  var a = 0\n  var b = -nCLS\n  while (a > -1) {\n    a = str.indexOf(opnTag, a)\n    if(a === -1) break\n\n    b = str.indexOf(clsTag, a + nOPN)\n    if(b === -1) break\n\n    if(b <= a) break\n\n    for(var i = a; i < b + nCLS; ++i){\n      if((i < a + nOPN) || (i >= b)) {\n        map[i] = null\n        str = str.substr(0, i) + \" \" + str.substr(i + 1)\n      } else {\n        if(map[i] !== null) {\n          var pos = map[i].indexOf(TAG_CHR[0])\n          if(pos === -1) {\n            map[i] += TAG_CHR\n          } else { // i.e. to handle multiple sub/super-scripts\n            if(isRecursive) {\n              // i.e to increase the sub/sup number\n              map[i] = map[i].substr(0, pos + 1) + (1 + parseInt(map[i][pos + 1])) + map[i].substr(pos + 2)\n            }\n          }\n        }\n      }\n    }\n\n    var start = a + nOPN\n    var remainingStr = str.substr(start, b - start)\n\n    var c = remainingStr.indexOf(opnTag)\n    if(c !== -1) a = c\n    else a = b + nCLS\n  }\n\n  return map\n}\n\nfunction transformPositions(positions, options, size) {\n  var align = options.textAlign || \"start\"\n  var baseline = options.textBaseline || \"alphabetic\"\n\n  var lo = [1<<30, 1<<30]\n  var hi = [0,0]\n  var n = positions.length\n  for(var i=0; i<n; ++i) {\n    var p = positions[i]\n    for(var j=0; j<2; ++j) {\n      lo[j] = Math.min(lo[j], p[j])|0\n      hi[j] = Math.max(hi[j], p[j])|0\n    }\n  }\n\n  var xShift = 0\n  switch(align) {\n    case \"center\":\n      xShift = -0.5 * (lo[0] + hi[0])\n    break\n\n    case \"right\":\n    case \"end\":\n      xShift = -hi[0]\n    break\n\n    case \"left\":\n    case \"start\":\n      xShift = -lo[0]\n    break\n\n    default:\n      throw new Error(\"vectorize-text: Unrecognized textAlign: '\" + align + \"'\")\n  }\n\n  var yShift = 0\n  switch(baseline) {\n    case \"hanging\":\n    case \"top\":\n      yShift = -lo[1]\n    break\n\n    case \"middle\":\n      yShift = -0.5 * (lo[1] + hi[1])\n    break\n\n    case \"alphabetic\":\n    case \"ideographic\":\n      yShift = -3 * size\n    break\n\n    case \"bottom\":\n      yShift = -hi[1]\n    break\n\n    default:\n      throw new Error(\"vectorize-text: Unrecoginized textBaseline: '\" + baseline + \"'\")\n  }\n\n  var scale = 1.0 / size\n  if(\"lineHeight\" in options) {\n    scale *= +options.lineHeight\n  } else if(\"width\" in options) {\n    scale = options.width / (hi[0] - lo[0])\n  } else if(\"height\" in options) {\n    scale = options.height / (hi[1] - lo[1])\n  }\n\n  return positions.map(function(p) {\n    return [ scale * (p[0] + xShift), scale * (p[1] + yShift) ]\n  })\n}\n\nfunction getPixels(canvas, context, rawString, fontSize, lineSpacing, styletags) {\n\n  rawString = rawString.replace(/\\n/g, '') // don't accept \\n in the input\n\n  if(styletags.breaklines === true) {\n    rawString = rawString.replace(/\\<br\\>/g, '\\n') // replace <br> tags with \\n in the string\n  } else {\n    rawString = rawString.replace(/\\<br\\>/g, ' ') // don't accept <br> tags in the input and replace with space in this case\n  }\n\n  var activeStyle = \"\"\n  var map = []\n  for(j = 0; j < rawString.length; ++j) {\n    map[j] = activeStyle\n  }\n\n  if(styletags.bolds === true) map = parseTag(TAG_bold, CHR_bold, rawString, map)\n  if(styletags.italics === true) map = parseTag(TAG_italic, CHR_italic, rawString, map)\n  if(styletags.superscripts === true) map = parseTag(TAG_super, CHR_super, rawString, map)\n  if(styletags.subscripts === true) map = parseTag(TAG_sub, CHR_sub, rawString, map)\n\n  var allStyles = []\n  var plainText = \"\"\n  for(j = 0; j < rawString.length; ++j) {\n    if(map[j] !== null) {\n      plainText += rawString[j]\n      allStyles.push(map[j])\n    }\n  }\n\n  var allTexts = plainText.split('\\n')\n\n  var numberOfLines = allTexts.length\n  var lineHeight = Math.round(lineSpacing * fontSize)\n  var offsetX = fontSize\n  var offsetY = fontSize * 2\n  var maxWidth = 0\n  var minHeight = numberOfLines * lineHeight + offsetY\n\n  if(canvas.height < minHeight) {\n    canvas.height = minHeight\n  }\n\n  context.fillStyle = \"#000\"\n  context.fillRect(0, 0, canvas.width, canvas.height)\n\n  context.fillStyle = \"#fff\"\n  var i, j, xPos, yPos, zPos\n  var nDone = 0\n\n  var buffer = \"\"\n  function writeBuffer() {\n    if(buffer !== \"\") {\n      var delta = context.measureText(buffer).width\n\n      context.fillText(buffer, offsetX + xPos, offsetY + yPos)\n      xPos += delta\n    }\n  }\n\n  function getTextFontSize() {\n    return \"\" + Math.round(zPos) + \"px \";\n  }\n\n  function changeStyle(oldStyle, newStyle) {\n    var ctxFont = \"\" + context.font;\n\n    if(styletags.subscripts === true) {\n      var oldIndex_Sub = oldStyle.indexOf(CHR_sub0);\n      var newIndex_Sub = newStyle.indexOf(CHR_sub0);\n\n      var oldSub = (oldIndex_Sub > -1) ? parseInt(oldStyle[1 + oldIndex_Sub]) : 0;\n      var newSub = (newIndex_Sub > -1) ? parseInt(newStyle[1 + newIndex_Sub]) : 0;\n\n      if(oldSub !== newSub) {\n        ctxFont = ctxFont.replace(getTextFontSize(), \"?px \")\n        zPos *= Math.pow(0.75, (newSub - oldSub))\n        ctxFont = ctxFont.replace(\"?px \", getTextFontSize())\n      }\n      yPos += 0.25 * lineHeight * (newSub - oldSub);\n    }\n\n    if(styletags.superscripts === true) {\n      var oldIndex_Super = oldStyle.indexOf(CHR_super0);\n      var newIndex_Super = newStyle.indexOf(CHR_super0);\n\n      var oldSuper = (oldIndex_Super > -1) ? parseInt(oldStyle[1 + oldIndex_Super]) : 0;\n      var newSuper = (newIndex_Super > -1) ? parseInt(newStyle[1 + newIndex_Super]) : 0;\n\n      if(oldSuper !== newSuper) {\n        ctxFont = ctxFont.replace(getTextFontSize(), \"?px \")\n        zPos *= Math.pow(0.75, (newSuper - oldSuper))\n        ctxFont = ctxFont.replace(\"?px \", getTextFontSize())\n      }\n      yPos -= 0.25 * lineHeight * (newSuper - oldSuper);\n    }\n\n    if(styletags.bolds === true) {\n      var wasBold = (oldStyle.indexOf(CHR_bold) > -1)\n      var is_Bold = (newStyle.indexOf(CHR_bold) > -1)\n\n      if(!wasBold && is_Bold) {\n        if(wasItalic) {\n          ctxFont = ctxFont.replace(\"italic \", \"italic bold \")\n        } else {\n          ctxFont = \"bold \" + ctxFont\n        }\n      }\n      if(wasBold && !is_Bold) {\n        ctxFont = ctxFont.replace(\"bold \", '')\n      }\n    }\n\n    if(styletags.italics === true) {\n      var wasItalic = (oldStyle.indexOf(CHR_italic) > -1)\n      var is_Italic = (newStyle.indexOf(CHR_italic) > -1)\n\n      if(!wasItalic && is_Italic) {\n        ctxFont = \"italic \" + ctxFont\n      }\n      if(wasItalic && !is_Italic) {\n        ctxFont = ctxFont.replace(\"italic \", '')\n      }\n    }\n    context.font = ctxFont\n  }\n\n  for(i = 0; i < numberOfLines; ++i) {\n    var txt = allTexts[i] + '\\n'\n    xPos = 0\n    yPos = i * lineHeight\n    zPos = fontSize\n\n    buffer = \"\"\n    \n    for(j = 0; j < txt.length; ++j) {\n      var style = (j + nDone < allStyles.length) ? allStyles[j + nDone] : allStyles[allStyles.length - 1]\n      if(activeStyle === style) {\n        buffer += txt[j]\n      } else {\n        writeBuffer()\n        buffer = txt[j]\n\n        if(style !== undefined) {\n          changeStyle(activeStyle, style)\n          activeStyle = style\n        }\n      }\n    }\n    writeBuffer()\n\n    nDone += txt.length\n\n    var width = Math.round(xPos + 2 * offsetX) | 0\n    if(maxWidth < width) maxWidth = width\n  }\n\n  //Cut pixels from image\n  var xCut = maxWidth\n  var yCut = offsetY + lineHeight * numberOfLines\n  var pixels = ndarray(context.getImageData(0, 0, xCut, yCut).data, [yCut, xCut, 4])\n  return pixels.pick(-1, -1, 0).transpose(1, 0)\n}\n\nfunction getContour(pixels, doSimplify) {\n  var contour = surfaceNets(pixels, 128)\n  if(doSimplify) {\n    return simplify(contour.cells, contour.positions, 0.25)\n  }\n  return {\n    edges: contour.cells,\n    positions: contour.positions\n  }\n}\n\nfunction processPixelsImpl(pixels, options, size, simplify) {\n  //Extract contour\n  var contour = getContour(pixels, simplify)\n\n  //Apply warp to positions\n  var positions = transformPositions(contour.positions, options, size)\n  var edges     = contour.edges\n  var flip = \"ccw\" === options.orientation\n\n  //Clean up the PSLG, resolve self intersections, etc.\n  cleanPSLG(positions, edges)\n\n  //If triangulate flag passed, triangulate the result\n  if(options.polygons || options.polygon || options.polyline) {\n    var result = toPolygonCrappy(edges, positions)\n    var nresult = new Array(result.length)\n    for(var i=0; i<result.length; ++i) {\n      var loops = result[i]\n      var nloops = new Array(loops.length)\n      for(var j=0; j<loops.length; ++j) {\n        var loop = loops[j]\n        var nloop = new Array(loop.length)\n        for(var k=0; k<loop.length; ++k) {\n          nloop[k] = positions[loop[k]].slice()\n        }\n        if(flip) {\n          nloop.reverse()\n        }\n        nloops[j] = nloop\n      }\n      nresult[i] = nloops\n    }\n    return nresult\n  } else if(options.triangles || options.triangulate || options.triangle) {\n    return {\n      cells: cdt2d(positions, edges, {\n        delaunay: false,\n        exterior: false,\n        interior: true\n      }),\n      positions: positions\n    }\n  } else {\n    return {\n      edges:     edges,\n      positions: positions\n    }\n  }\n}\n\nfunction processPixels(pixels, options, size) {\n  try {\n    return processPixelsImpl(pixels, options, size, true)\n  } catch(e) {}\n  try {\n    return processPixelsImpl(pixels, options, size, false)\n  } catch(e) {}\n  if(options.polygons || options.polyline || options.polygon) {\n    return []\n  }\n  if(options.triangles || options.triangulate || options.triangle) {\n    return {\n      cells: [],\n      positions: []\n    }\n  }\n  return {\n    edges: [],\n    positions: []\n  }\n}\n\nfunction vectorizeText(str, canvas, context, options) {\n  var size = 64\n  var lineSpacing = 1.25\n  var styletags = {\n    breaklines: false,\n    bolds: false,\n    italics: false,\n    subscripts: false,\n    superscripts: false\n  }\n\n  if(options) {\n\n    if(options.size &&\n       options.size > 0) size =\n       options.size\n\n    if(options.lineSpacing &&\n       options.lineSpacing > 0) lineSpacing =\n       options.lineSpacing\n\n    if(options.styletags &&\n       options.styletags.breaklines) styletags.breaklines =\n       options.styletags.breaklines ? true : false\n\n    if(options.styletags &&\n       options.styletags.bolds) styletags.bolds =\n       options.styletags.bolds ? true : false\n\n    if(options.styletags &&\n       options.styletags.italics) styletags.italics =\n       options.styletags.italics ? true : false\n\n    if(options.styletags &&\n       options.styletags.subscripts) styletags.subscripts =\n       options.styletags.subscripts ? true : false\n\n    if(options.styletags &&\n       options.styletags.superscripts) styletags.superscripts =\n       options.styletags.superscripts ? true : false\n  }\n\n  context.font = [\n    options.fontStyle,\n    options.fontVariant,\n    options.fontWeight,\n    size + \"px\",\n    options.font\n  ].filter(function(d) {return d}).join(\" \")\n  context.textAlign = \"start\"\n  context.textBaseline = \"alphabetic\"\n  context.direction = \"ltr\"\n\n  var pixels = getPixels(canvas, context, str, size, lineSpacing, styletags)\n\n  return processPixels(pixels, options, size)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorMix = require('tinycolor2').mix;\nvar lightFraction = require('../../components/color/attributes').lightFraction;\nvar Lib = require('../../lib');\n\n/**\n * @param {object} opts :\n *   - dfltColor {string} : default axis color\n *   - bgColor {string} : combined subplot bg color\n *   - blend {number, optional} : blend percentage (to compute dflt grid color)\n *   - showLine {boolean} : show line by default\n *   - showGrid {boolean} : show grid by default\n *   - noZeroLine {boolean} : don't coerce zeroline* attributes\n *   - attributes {object} : attribute object associated with input containers\n */\nmodule.exports = function handleLineGridDefaults(containerIn, containerOut, coerce, opts) {\n  opts = opts || {};\n  var dfltColor = opts.dfltColor;\n  function coerce2(attr, dflt) {\n    return Lib.coerce2(containerIn, containerOut, opts.attributes, attr, dflt);\n  }\n  var lineColor = coerce2('linecolor', dfltColor);\n  var lineWidth = coerce2('linewidth');\n  var showLine = coerce('showline', opts.showLine || !!lineColor || !!lineWidth);\n  if (!showLine) {\n    delete containerOut.linecolor;\n    delete containerOut.linewidth;\n  }\n  var gridColorDflt = colorMix(dfltColor, opts.bgColor, opts.blend || lightFraction).toRgbString();\n  var gridColor = coerce2('gridcolor', gridColorDflt);\n  var gridWidth = coerce2('gridwidth');\n  var showGridLines = coerce('showgrid', opts.showGrid || !!gridColor || !!gridWidth);\n  if (!showGridLines) {\n    delete containerOut.gridcolor;\n    delete containerOut.gridwidth;\n  }\n  if (!opts.noZeroLine) {\n    var zeroLineColor = coerce2('zerolinecolor', dfltColor);\n    var zeroLineWidth = coerce2('zerolinewidth');\n    var showZeroLine = coerce('zeroline', opts.showGrid || !!zeroLineColor || !!zeroLineWidth);\n    if (!showZeroLine) {\n      delete containerOut.zerolinecolor;\n      delete containerOut.zerolinewidth;\n    }\n  }\n};","map":{"version":3,"names":["colorMix","require","mix","lightFraction","Lib","module","exports","handleLineGridDefaults","containerIn","containerOut","coerce","opts","dfltColor","coerce2","attr","dflt","attributes","lineColor","lineWidth","showLine","linecolor","linewidth","gridColorDflt","bgColor","blend","toRgbString","gridColor","gridWidth","showGridLines","showGrid","gridcolor","gridwidth","noZeroLine","zeroLineColor","zeroLineWidth","showZeroLine","zerolinecolor","zerolinewidth"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/plots/cartesian/line_grid_defaults.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\nvar colorMix = require('tinycolor2').mix;\nvar lightFraction = require('../../components/color/attributes').lightFraction;\nvar Lib = require('../../lib');\n\n/**\n * @param {object} opts :\n *   - dfltColor {string} : default axis color\n *   - bgColor {string} : combined subplot bg color\n *   - blend {number, optional} : blend percentage (to compute dflt grid color)\n *   - showLine {boolean} : show line by default\n *   - showGrid {boolean} : show grid by default\n *   - noZeroLine {boolean} : don't coerce zeroline* attributes\n *   - attributes {object} : attribute object associated with input containers\n */\nmodule.exports = function handleLineGridDefaults(containerIn, containerOut, coerce, opts) {\n    opts = opts || {};\n\n    var dfltColor = opts.dfltColor;\n\n    function coerce2(attr, dflt) {\n        return Lib.coerce2(containerIn, containerOut, opts.attributes, attr, dflt);\n    }\n\n    var lineColor = coerce2('linecolor', dfltColor);\n    var lineWidth = coerce2('linewidth');\n    var showLine = coerce('showline', opts.showLine || !!lineColor || !!lineWidth);\n\n    if(!showLine) {\n        delete containerOut.linecolor;\n        delete containerOut.linewidth;\n    }\n\n    var gridColorDflt = colorMix(dfltColor, opts.bgColor, opts.blend || lightFraction).toRgbString();\n    var gridColor = coerce2('gridcolor', gridColorDflt);\n    var gridWidth = coerce2('gridwidth');\n    var showGridLines = coerce('showgrid', opts.showGrid || !!gridColor || !!gridWidth);\n\n    if(!showGridLines) {\n        delete containerOut.gridcolor;\n        delete containerOut.gridwidth;\n    }\n\n    if(!opts.noZeroLine) {\n        var zeroLineColor = coerce2('zerolinecolor', dfltColor);\n        var zeroLineWidth = coerce2('zerolinewidth');\n        var showZeroLine = coerce('zeroline', opts.showGrid || !!zeroLineColor || !!zeroLineWidth);\n\n        if(!showZeroLine) {\n            delete containerOut.zerolinecolor;\n            delete containerOut.zerolinewidth;\n        }\n    }\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC,CAACC,GAAG;AACxC,IAAIC,aAAa,GAAGF,OAAO,CAAC,mCAAmC,CAAC,CAACE,aAAa;AAC9E,IAAIC,GAAG,GAAGH,OAAO,CAAC,WAAW,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,MAAM,CAACC,OAAO,GAAG,SAASC,sBAAsB,CAACC,WAAW,EAAEC,YAAY,EAAEC,MAAM,EAAEC,IAAI,EAAE;EACtFA,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;EAEjB,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAAS;EAE9B,SAASC,OAAO,CAACC,IAAI,EAAEC,IAAI,EAAE;IACzB,OAAOX,GAAG,CAACS,OAAO,CAACL,WAAW,EAAEC,YAAY,EAAEE,IAAI,CAACK,UAAU,EAAEF,IAAI,EAAEC,IAAI,CAAC;EAC9E;EAEA,IAAIE,SAAS,GAAGJ,OAAO,CAAC,WAAW,EAAED,SAAS,CAAC;EAC/C,IAAIM,SAAS,GAAGL,OAAO,CAAC,WAAW,CAAC;EACpC,IAAIM,QAAQ,GAAGT,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACQ,QAAQ,IAAI,CAAC,CAACF,SAAS,IAAI,CAAC,CAACC,SAAS,CAAC;EAE9E,IAAG,CAACC,QAAQ,EAAE;IACV,OAAOV,YAAY,CAACW,SAAS;IAC7B,OAAOX,YAAY,CAACY,SAAS;EACjC;EAEA,IAAIC,aAAa,GAAGtB,QAAQ,CAACY,SAAS,EAAED,IAAI,CAACY,OAAO,EAAEZ,IAAI,CAACa,KAAK,IAAIrB,aAAa,CAAC,CAACsB,WAAW,EAAE;EAChG,IAAIC,SAAS,GAAGb,OAAO,CAAC,WAAW,EAAES,aAAa,CAAC;EACnD,IAAIK,SAAS,GAAGd,OAAO,CAAC,WAAW,CAAC;EACpC,IAAIe,aAAa,GAAGlB,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACkB,QAAQ,IAAI,CAAC,CAACH,SAAS,IAAI,CAAC,CAACC,SAAS,CAAC;EAEnF,IAAG,CAACC,aAAa,EAAE;IACf,OAAOnB,YAAY,CAACqB,SAAS;IAC7B,OAAOrB,YAAY,CAACsB,SAAS;EACjC;EAEA,IAAG,CAACpB,IAAI,CAACqB,UAAU,EAAE;IACjB,IAAIC,aAAa,GAAGpB,OAAO,CAAC,eAAe,EAAED,SAAS,CAAC;IACvD,IAAIsB,aAAa,GAAGrB,OAAO,CAAC,eAAe,CAAC;IAC5C,IAAIsB,YAAY,GAAGzB,MAAM,CAAC,UAAU,EAAEC,IAAI,CAACkB,QAAQ,IAAI,CAAC,CAACI,aAAa,IAAI,CAAC,CAACC,aAAa,CAAC;IAE1F,IAAG,CAACC,YAAY,EAAE;MACd,OAAO1B,YAAY,CAAC2B,aAAa;MACjC,OAAO3B,YAAY,CAAC4B,aAAa;IACrC;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n'use strict';\n\n/**\n * Histogram has its own attribute, defaults and calc steps,\n * but uses bar's plot to display\n * and bar's crossTraceCalc (formerly known as setPositions) for stacking and grouping\n */\n\n/**\n * histogram errorBarsOK is debatable, but it's put in for backward compat.\n * there are use cases for it - sqrt for a simple histogram works right now,\n * constant and % work but they're not so meaningful. I guess it could be cool\n * to allow quadrature combination of errors in summed histograms...\n */\nvar Histogram = {};\nHistogram.attributes = require('./attributes');\nHistogram.layoutAttributes = require('../bar/layout_attributes');\nHistogram.supplyDefaults = require('./defaults');\nHistogram.crossTraceDefaults = require('./cross_trace_defaults');\nHistogram.supplyLayoutDefaults = require('../bar/layout_defaults');\nHistogram.calc = require('./calc');\nHistogram.crossTraceCalc = require('../bar/cross_trace_calc').crossTraceCalc;\nHistogram.plot = require('../bar/plot');\nHistogram.layerName = 'barlayer';\nHistogram.style = require('../bar/style').style;\nHistogram.styleOnSelect = require('../bar/style').styleOnSelect;\nHistogram.colorbar = require('../scatter/marker_colorbar');\nHistogram.hoverPoints = require('./hover');\nHistogram.selectPoints = require('../bar/select');\nHistogram.eventData = require('./event_data');\nHistogram.moduleType = 'trace';\nHistogram.name = 'histogram';\nHistogram.basePlotModule = require('../../plots/cartesian');\nHistogram.categories = ['cartesian', 'svg', 'bar', 'histogram', 'oriented', 'errorBarsOK', 'showLegend'];\nHistogram.meta = {\n  description: ['The sample data from which statistics are computed is set in `x`', 'for vertically spanning histograms and', 'in `y` for horizontally spanning histograms.', 'Binning options are set `xbins` and `ybins` respectively', 'if no aggregation data is provided.'].join(' ')\n};\nmodule.exports = Histogram;","map":{"version":3,"names":["Histogram","attributes","require","layoutAttributes","supplyDefaults","crossTraceDefaults","supplyLayoutDefaults","calc","crossTraceCalc","plot","layerName","style","styleOnSelect","colorbar","hoverPoints","selectPoints","eventData","moduleType","name","basePlotModule","categories","meta","description","join","module","exports"],"sources":["/home/yasmin/√Årea de Trabalho/Frontend/node_modules/plotly.js/src/traces/histogram/index.js"],"sourcesContent":["/**\n* Copyright 2012-2019, Plotly, Inc.\n* All rights reserved.\n*\n* This source code is licensed under the MIT license found in the\n* LICENSE file in the root directory of this source tree.\n*/\n\n\n'use strict';\n\n/**\n * Histogram has its own attribute, defaults and calc steps,\n * but uses bar's plot to display\n * and bar's crossTraceCalc (formerly known as setPositions) for stacking and grouping\n */\n\n/**\n * histogram errorBarsOK is debatable, but it's put in for backward compat.\n * there are use cases for it - sqrt for a simple histogram works right now,\n * constant and % work but they're not so meaningful. I guess it could be cool\n * to allow quadrature combination of errors in summed histograms...\n */\n\n\nvar Histogram = {};\n\nHistogram.attributes = require('./attributes');\nHistogram.layoutAttributes = require('../bar/layout_attributes');\nHistogram.supplyDefaults = require('./defaults');\nHistogram.crossTraceDefaults = require('./cross_trace_defaults');\nHistogram.supplyLayoutDefaults = require('../bar/layout_defaults');\nHistogram.calc = require('./calc');\nHistogram.crossTraceCalc = require('../bar/cross_trace_calc').crossTraceCalc;\nHistogram.plot = require('../bar/plot');\nHistogram.layerName = 'barlayer';\nHistogram.style = require('../bar/style').style;\nHistogram.styleOnSelect = require('../bar/style').styleOnSelect;\nHistogram.colorbar = require('../scatter/marker_colorbar');\nHistogram.hoverPoints = require('./hover');\nHistogram.selectPoints = require('../bar/select');\nHistogram.eventData = require('./event_data');\n\nHistogram.moduleType = 'trace';\nHistogram.name = 'histogram';\nHistogram.basePlotModule = require('../../plots/cartesian');\nHistogram.categories = ['cartesian', 'svg', 'bar', 'histogram', 'oriented', 'errorBarsOK', 'showLegend'];\nHistogram.meta = {\n    description: [\n        'The sample data from which statistics are computed is set in `x`',\n        'for vertically spanning histograms and',\n        'in `y` for horizontally spanning histograms.',\n        'Binning options are set `xbins` and `ybins` respectively',\n        'if no aggregation data is provided.'\n    ].join(' ')\n};\n\nmodule.exports = Histogram;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,IAAIA,SAAS,GAAG,CAAC,CAAC;AAElBA,SAAS,CAACC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;AAC9CF,SAAS,CAACG,gBAAgB,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAChEF,SAAS,CAACI,cAAc,GAAGF,OAAO,CAAC,YAAY,CAAC;AAChDF,SAAS,CAACK,kBAAkB,GAAGH,OAAO,CAAC,wBAAwB,CAAC;AAChEF,SAAS,CAACM,oBAAoB,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AAClEF,SAAS,CAACO,IAAI,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAClCF,SAAS,CAACQ,cAAc,GAAGN,OAAO,CAAC,yBAAyB,CAAC,CAACM,cAAc;AAC5ER,SAAS,CAACS,IAAI,GAAGP,OAAO,CAAC,aAAa,CAAC;AACvCF,SAAS,CAACU,SAAS,GAAG,UAAU;AAChCV,SAAS,CAACW,KAAK,GAAGT,OAAO,CAAC,cAAc,CAAC,CAACS,KAAK;AAC/CX,SAAS,CAACY,aAAa,GAAGV,OAAO,CAAC,cAAc,CAAC,CAACU,aAAa;AAC/DZ,SAAS,CAACa,QAAQ,GAAGX,OAAO,CAAC,4BAA4B,CAAC;AAC1DF,SAAS,CAACc,WAAW,GAAGZ,OAAO,CAAC,SAAS,CAAC;AAC1CF,SAAS,CAACe,YAAY,GAAGb,OAAO,CAAC,eAAe,CAAC;AACjDF,SAAS,CAACgB,SAAS,GAAGd,OAAO,CAAC,cAAc,CAAC;AAE7CF,SAAS,CAACiB,UAAU,GAAG,OAAO;AAC9BjB,SAAS,CAACkB,IAAI,GAAG,WAAW;AAC5BlB,SAAS,CAACmB,cAAc,GAAGjB,OAAO,CAAC,uBAAuB,CAAC;AAC3DF,SAAS,CAACoB,UAAU,GAAG,CAAC,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,aAAa,EAAE,YAAY,CAAC;AACxGpB,SAAS,CAACqB,IAAI,GAAG;EACbC,WAAW,EAAE,CACT,kEAAkE,EAClE,wCAAwC,EACxC,8CAA8C,EAC9C,0DAA0D,EAC1D,qCAAqC,CACxC,CAACC,IAAI,CAAC,GAAG;AACd,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGzB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}
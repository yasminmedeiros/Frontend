{"ast":null,"code":"var hasTypedArrays = false;\nif (typeof Float64Array !== \"undefined\") {\n  var DOUBLE_VIEW = new Float64Array(1),\n    UINT_VIEW = new Uint32Array(DOUBLE_VIEW.buffer);\n  DOUBLE_VIEW[0] = 1.0;\n  hasTypedArrays = true;\n  if (UINT_VIEW[1] === 0x3ff00000) {\n    var toDoubleLE = function toDoubleLE(lo, hi) {\n      UINT_VIEW[0] = lo;\n      UINT_VIEW[1] = hi;\n      return DOUBLE_VIEW[0];\n    };\n    var lowUintLE = function lowUintLE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[0];\n    };\n    var highUintLE = function highUintLE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[1];\n    };\n    //Use little endian\n    module.exports = function doubleBitsLE(n) {\n      DOUBLE_VIEW[0] = n;\n      return [UINT_VIEW[0], UINT_VIEW[1]];\n    };\n    module.exports.pack = toDoubleLE;\n    module.exports.lo = lowUintLE;\n    module.exports.hi = highUintLE;\n  } else if (UINT_VIEW[0] === 0x3ff00000) {\n    var toDoubleBE = function toDoubleBE(lo, hi) {\n      UINT_VIEW[1] = lo;\n      UINT_VIEW[0] = hi;\n      return DOUBLE_VIEW[0];\n    };\n    var lowUintBE = function lowUintBE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[1];\n    };\n    var highUintBE = function highUintBE(n) {\n      DOUBLE_VIEW[0] = n;\n      return UINT_VIEW[0];\n    };\n    //Use big endian\n    module.exports = function doubleBitsBE(n) {\n      DOUBLE_VIEW[0] = n;\n      return [UINT_VIEW[1], UINT_VIEW[0]];\n    };\n    module.exports.pack = toDoubleBE;\n    module.exports.lo = lowUintBE;\n    module.exports.hi = highUintBE;\n  } else {\n    hasTypedArrays = false;\n  }\n}\nif (!hasTypedArrays) {\n  var toDouble = function toDouble(lo, hi) {\n    buffer.writeUInt32LE(lo, 0, true);\n    buffer.writeUInt32LE(hi, 4, true);\n    return buffer.readDoubleLE(0, true);\n  };\n  var lowUint = function lowUint(n) {\n    buffer.writeDoubleLE(n, 0, true);\n    return buffer.readUInt32LE(0, true);\n  };\n  var highUint = function highUint(n) {\n    buffer.writeDoubleLE(n, 0, true);\n    return buffer.readUInt32LE(4, true);\n  };\n  var buffer = new Buffer(8);\n  module.exports = function doubleBits(n) {\n    buffer.writeDoubleLE(n, 0, true);\n    return [buffer.readUInt32LE(0, true), buffer.readUInt32LE(4, true)];\n  };\n  module.exports.pack = toDouble;\n  module.exports.lo = lowUint;\n  module.exports.hi = highUint;\n}\nmodule.exports.sign = function (n) {\n  return module.exports.hi(n) >>> 31;\n};\nmodule.exports.exponent = function (n) {\n  var b = module.exports.hi(n);\n  return (b << 1 >>> 21) - 1023;\n};\nmodule.exports.fraction = function (n) {\n  var lo = module.exports.lo(n);\n  var hi = module.exports.hi(n);\n  var b = hi & (1 << 20) - 1;\n  if (hi & 0x7ff00000) {\n    b += 1 << 20;\n  }\n  return [lo, b];\n};\nmodule.exports.denormalized = function (n) {\n  var hi = module.exports.hi(n);\n  return !(hi & 0x7ff00000);\n};","map":{"version":3,"names":["hasTypedArrays","Float64Array","DOUBLE_VIEW","UINT_VIEW","Uint32Array","buffer","toDoubleLE","lo","hi","lowUintLE","n","highUintLE","module","exports","doubleBitsLE","pack","toDoubleBE","lowUintBE","highUintBE","doubleBitsBE","toDouble","writeUInt32LE","readDoubleLE","lowUint","writeDoubleLE","readUInt32LE","highUint","Buffer","doubleBits","sign","exponent","b","fraction","denormalized"],"sources":["/home/yasmin/Área de Trabalho/Frontend/node_modules/double-bits/double.js"],"sourcesContent":["var hasTypedArrays = false\nif(typeof Float64Array !== \"undefined\") {\n  var DOUBLE_VIEW = new Float64Array(1)\n    , UINT_VIEW   = new Uint32Array(DOUBLE_VIEW.buffer)\n  DOUBLE_VIEW[0] = 1.0\n  hasTypedArrays = true\n  if(UINT_VIEW[1] === 0x3ff00000) {\n    //Use little endian\n    module.exports = function doubleBitsLE(n) {\n      DOUBLE_VIEW[0] = n\n      return [ UINT_VIEW[0], UINT_VIEW[1] ]\n    }\n    function toDoubleLE(lo, hi) {\n      UINT_VIEW[0] = lo\n      UINT_VIEW[1] = hi\n      return DOUBLE_VIEW[0]\n    }\n    module.exports.pack = toDoubleLE\n    function lowUintLE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[0]\n    }\n    module.exports.lo = lowUintLE\n    function highUintLE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[1]\n    }\n    module.exports.hi = highUintLE\n  } else if(UINT_VIEW[0] === 0x3ff00000) {\n    //Use big endian\n    module.exports = function doubleBitsBE(n) {\n      DOUBLE_VIEW[0] = n\n      return [ UINT_VIEW[1], UINT_VIEW[0] ]\n    }\n    function toDoubleBE(lo, hi) {\n      UINT_VIEW[1] = lo\n      UINT_VIEW[0] = hi\n      return DOUBLE_VIEW[0]\n    }\n    module.exports.pack = toDoubleBE\n    function lowUintBE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[1]\n    }\n    module.exports.lo = lowUintBE\n    function highUintBE(n) {\n      DOUBLE_VIEW[0] = n\n      return UINT_VIEW[0]\n    }\n    module.exports.hi = highUintBE\n  } else {\n    hasTypedArrays = false\n  }\n}\nif(!hasTypedArrays) {\n  var buffer = new Buffer(8)\n  module.exports = function doubleBits(n) {\n    buffer.writeDoubleLE(n, 0, true)\n    return [ buffer.readUInt32LE(0, true), buffer.readUInt32LE(4, true) ]\n  }\n  function toDouble(lo, hi) {\n    buffer.writeUInt32LE(lo, 0, true)\n    buffer.writeUInt32LE(hi, 4, true)\n    return buffer.readDoubleLE(0, true)\n  }\n  module.exports.pack = toDouble  \n  function lowUint(n) {\n    buffer.writeDoubleLE(n, 0, true)\n    return buffer.readUInt32LE(0, true)\n  }\n  module.exports.lo = lowUint\n  function highUint(n) {\n    buffer.writeDoubleLE(n, 0, true)\n    return buffer.readUInt32LE(4, true)\n  }\n  module.exports.hi = highUint\n}\n\nmodule.exports.sign = function(n) {\n  return module.exports.hi(n) >>> 31\n}\n\nmodule.exports.exponent = function(n) {\n  var b = module.exports.hi(n)\n  return ((b<<1) >>> 21) - 1023\n}\n\nmodule.exports.fraction = function(n) {\n  var lo = module.exports.lo(n)\n  var hi = module.exports.hi(n)\n  var b = hi & ((1<<20) - 1)\n  if(hi & 0x7ff00000) {\n    b += (1<<20)\n  }\n  return [lo, b]\n}\n\nmodule.exports.denormalized = function(n) {\n  var hi = module.exports.hi(n)\n  return !(hi & 0x7ff00000)\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}